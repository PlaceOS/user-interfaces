{"version":3,"file":"main.js","mappings":"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AI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKpL,EAAUmL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAGnL,EAAUwL,GAAG,EAAExL,EAAU0L,GAAG,EAAE1L,EAAUyL,GAAG,GAAGzL,EAAU2L,GAAG,qFCA5vW3nF,UAAU,CACnBy1D,OAAS,EACT6zB,IAAO,UACPxK,KAAQ,UACRyK,SAAY,KACZrzB,IAAO,KACP2oB,OAAU,KACV2K,OAAU,UACVC,aAAgB,KAChBC,QAAW,SACX/K,KAAQ,+NCXZ,IAAAj+E,EAAAxC,EAAA,OAEA8oC,EAAA9oC,EAAA,UACAA,EAAA,4BAEA8B,gBAG2B,eAAAC,EAAdsxE,EAAc,SAAAzpC,GAAA7mC,EAAAswE,EAAAzpC,GAAA,IAOtB6hD,EAPsBxoF,EAAAC,EAAAmwE,GAIvB,SAAAA,EAAoBlwE,GAA0B,IAAAI,EAAArB,SAAAC,KAAAkxE,IAC1C9vE,EAAAN,EAAAO,KAAArB,OADgBgB,YAEhBI,EAAKmoF,OAAOnoF,CAChB,CAACtB,SAAAoxE,EAAA,EAAA3vE,IAAA,OAAAC,OAAA8nF,EAAA7nF,EAAAC,IAAAC,KAEO,SAAAC,IAAA,IAAAsX,EAAA4gE,EAAAloD,EAAA7sB,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QACE8W,EAASlZ,KAAKgB,UAAUuE,IAAI,wBAExBu0E,KAASz5E,EAAAwxB,WAAU3Y,EAAQ,aAEvB0Y,EAAUkoD,EAAOloD,QAAQ,WAC/B5xB,KAAK4S,aAAa,UAAWgf,EAAQS,QACrCryB,KAAK4S,aACD,gBACAgf,EAAQG,SAASjf,UAAU,SAAC6pB,GACxBA,EACM53B,EAAKykF,qBACLzkF,EAAK0kF,oBACf,KAGX,wBAAAvnF,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACJ,SAAAupF,IAAA,OAAAD,EAAA1kF,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,qBAAAC,MAEO,WACJxB,KAAKypF,qBACLzpF,KAAK0pF,QAAU1yC,SAASC,cAAc,UACtC,IAAMzpC,EAAMxN,KAAKgB,UAAUuE,IAAI,kBAC/BvF,KAAK0pF,QAAQlS,IAAMhqE,GAAG,qBACtBwpC,SAAS6oC,KAAKxoC,YAAYr3C,KAAK0pF,QACnC,GAAC,CAAAnoF,IAAA,qBAAAC,MAEO,WACAxB,KAAK0pF,UACL1pF,KAAK0pF,QAAQjS,WAAW//B,YAAY13C,KAAK0pF,gBAClC1pF,KAAK0pF,QACZ1pF,KAAK0pF,QAAU,KAEvB,KAACxY,CAAA,CA1CsB,CAAQvqC,EAAAv+B,cAAYxI,SAAlCsxE,0CAAa7oE,EAAAgV,mBAAA9U,EAAAC,iBAAA,qDAAb0oE,EAAa5zD,QAAb4zD,EAAa3zD,UAAAC,WAFV,SAEH0zD,CAAc,sFCT3B16C,EAAAC,aAAA54B,EAAA,OAAA8B,GAEA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GAEA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,wNC/BA,IAAAW,EAAAzC,EAAA,OACAK,EAAAL,EAAA,iJAYYwK,EAAA8E,yBAAA,UAAA9E,CAIC,UAJDA,CAIC,gBAIiCA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,wBAAA/E,GAExCA,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,MAA0CvlB,EAAA+E,yBAC1C/E,EAAA8E,yBAAA,yBAEI9E,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAA6U,GAAA,IAAAtU,EAAAlJ,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAAG,EAAAo4E,YAAA54E,GAAmB,GACvC1I,EAAA+E,wBAAA/E,6CAFGA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAsB,EAAAy3E,yEAmBRvhF,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,MAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,WAAA9E,CAA8C,aACpBA,EAAAgF,iBAAA,OAAChF,EAAA+E,yBACvB/E,EAAA8E,yBAAA,kBAAA9E,CAKC,cAKOA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAC,GAAA,IAAAC,EAAA7I,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAAF,EAAA24E,aAAa,YAAW94E,GAAS,GAJtD1I,EAAA+E,wBAAA/E,GAOJA,EAAA8E,yBAAA,YAAuB9E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBACxB/E,EAAA8E,yBAAA,cAGI9E,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,GAERA,EAAAoZ,4EAlBYpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,SAAAxI,CAAU,SAAVA,CAAU,UAONA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA+E,EAAAk0E,WAQJzhF,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAAk0E,UAAA,QAhExBnqF,gCA8E2C,eAAAC,EAA9BmqF,EAA8B,SAAAppF,GAAAC,EAAAmpF,EAAAppF,GAAA,IAAAG,EAAAC,EAAAgpF,GA0BvC,SAAAA,EACuC9uC,EAC3Bj6C,GAA0B,IAAAI,EAAArB,SAAAC,KAAA+pF,IAElC3oF,EAAAN,EAAAO,KAAArB,OAHmCi7C,QAC3B75C,EAAAJ,YAXII,EAAAyoF,aAAe,SAACvyD,EAAGjU,GAAC,OAChCjiB,EAAKqC,QACD,gBACA,kBAAMrC,EAAKJ,UAAU84B,gBAAgBxC,EAAGjU,EAAE,EAC1C,IACH,EAEWjiB,EAAAuG,MAAQ,eAAAqiF,EAAA,OAAgB,QAAhBA,EAAM5oF,EAAK65C,aAAK,IAAA+uC,OAAA,EAAVA,EAAYriF,OAAO,EAACvG,CAOlD,CAACtB,SAAAiqF,EAAA,EAAAxoF,IAAA,YAAAgE,IA9BD,WACI,MAAuC,SAAhCvF,KAAKgB,UAAUuE,IAAI,QAC9B,GAAC,CAAAhE,IAAA,uBAAAgE,IAED,WACI,QAASvF,KAAKgB,UAAUuE,IAAI,wBAChC,GAAC,CAAAhE,IAAA,aAAAgE,IAED,WACI,QAASvF,KAAKgB,UAAUuE,IAAI,aAChC,GAAC,CAAAhE,IAAA,YAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,cAAgB,EAC9C,GAAC,CAAAhE,IAAA,cAAAC,MAkBM,SAAYm7B,GACf,IAAMojD,EAAQ//E,KAAKgB,UAAUuE,IAAI,SAC7Bo3B,GAAmB,SAAVojD,EAAkB//E,KAAKgB,UAAUy+E,SAAS,SAC7C9iD,GAAmB,SAAVojD,GAAkB//E,KAAKgB,UAAUy+E,SAAS,QACjE,KAACsK,CAAA,CArCsC,CAAQzpF,EAAA8H,cAAYxI,SAAlDmqF,0CAA6B1hF,EAAAC,4BA2B1BpK,EAAA+rF,mBAAiB5hF,EAAAC,4BAAAC,EAAAC,iBAAA,kDA3BpBuhF,EAA6BhhF,UAAA,4BAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,qNAtEPsiB,UAAAC,MAAAC,EAAA,yZA2BcF,UAAAG,MAAAD,EAAA,kJAfAF,UAAAI,MAAAF,EAAA,wIAsBmBF,UAAAM,MAAAJ,EAAA,0ZAvC5DrnB,EAAA8E,yBAAA,UAAA9E,CAEC,WACgDA,EAAAuI,qBAAA,0BAAStH,EAAA3B,OAAO,GACzDU,EAAA8E,yBAAA,gBAA2B9E,EAAAgF,iBAAA,gBAAUhF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,KAA0CvlB,EAAA+E,wBAAA/E,GAE9CA,EAAA0J,qBAAA,EAAAm4E,EAAA,aAgBA7hF,EAAA8E,yBAAA,UAAA9E,CAGC,UAHDA,CAGC,gBAIiCA,EAAAgF,iBAAA,mBAAYhF,EAAA+E,wBAAA/E,GAE1CA,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,OAA0DvlB,EAAA+E,yBAC1D/E,EAAA8E,yBAAA,0BAEI9E,EAAAuI,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAAugF,aAAa,aAAY94E,EAAS,GACtD1I,EAAA+E,wBAAA/E,GAELA,EAAA0J,qBAAA,GAAAo4E,EAAA,wBA2BJ9hF,EAAA+E,gCAxDS/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA8gF,sBAyBG/hF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA4/C,YAIO7gD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA4/C,6VAqCd6gC,CAA8B,kOChE/B1hF,EAAA8E,yBAAA,QAAA9E,CAAiE,cAEzDA,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,2CAHCA,EAAAgiF,qBAAA,gBAAAl4E,EAAAwqB,OAEGt0B,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,gBAAA4E,EAAAwqB,MAAA,2CAGRt0B,EAAA8E,yBAAA,WACI9E,EAAAkB,oBAAA,mBACJlB,EAAA+E,gCADiB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,4BArB7BlR,sBAiDgC,eAAAC,EAAnB0qF,EAAmBxqF,EAjDhC,SAAAwqF,IAAAvqF,EAAAC,KAAAsqF,GAqDoBtqF,KAAAuqF,UAAoB,iBAQpBvqF,KAAA28B,MAAkC,KACrD/8B,SAbY0qF,yCAAmB,kDAAnBA,EAAmBvhF,UAAA,kBAAAwW,OAAA,CAAAgP,KAAA,OAAAg8D,UAAA,YAAApjE,QAAA,UAAAlE,QAAA,UAAA6V,SAAA,WAAA6D,MAAA,SAAA6tD,mBAAA/4E,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,gMAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCA9CxBhB,EAAA8E,yBAAA,aAAA9E,CAOC,gBAEOA,EAAAgF,iBAAA,GACAhF,EAAAoiF,uBAAA,GACJpiF,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAA24E,EAAA,YAAAriF,CAIM,EAAAsiF,EAAA,aAIVtiF,EAAA+E,gCAhBI/E,EAAAoX,sBAAA,sBAAAnW,EAAAqzB,OACAt0B,EAAAwI,qBAAA,WAAAvH,EAAA2Z,SAAA3Z,EAAAwvB,UAGezwB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAvH,EAAAihF,UAAAliF,CAAuB,OAAAiB,EAAAilB,MAClClmB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,EAAA6d,QAAA,KAGoC9e,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,SAAA3Z,EAAAqzB,OAKZt0B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA2Z,qdA6B3BqnE,CAAmB,qOCpDhC,IAAAzgF,EAAAhM,EAAA,OACA+P,EAAA/P,EAAA,OACAyC,EAAAzC,EAAA,sJA4CYwK,EAAA8E,yBAAA,aAAA9E,CAA+C,cACjCA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,iEAMnBA,EAAA8E,yBAAA,UAAA9E,CAGC,oBAGOA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAyb,GAAA,IAAA/a,EAAArJ,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAAM,EAAAk5E,iBAAA75E,GAAwB,GAEzC1I,EAAAgF,iBAAA,gCACJhF,EAAA+E,wBAAA/E,6CAJIA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA+E,EAAAiuD,yCAmGYx7D,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAAg6E,EAAAz3E,IAEA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAs9E,EAAAv3E,KAAA,mEApBhBjL,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,YAGAlB,EAAA8E,yBAAA,sBAAA9E,CAGC,mBAGOA,EAAAuI,qBAAA,yBAAAG,GAAA,IAAA4M,EAAAtV,EAAA2I,wBAAAmd,GAAA,OAAA9lB,EAAA+I,sBAAAuM,EAAAC,UAAkB,GAAC7M,EAAA,GAGnB1I,EAAA0J,qBAAA,EAAA+4E,EAAA,qBAMJziF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,sBAAA9E,CAGC,cAKOA,EAAAuI,qBAAA,yBAAAG,GAAA,IAAA4M,EAAAtV,EAAA2I,wBAAAmd,GAAA,OAAA9lB,EAAA+I,sBAAAuM,EAAAC,UAAkB,GAAC7M,EAAA,GAJvB1I,EAAA+E,yBAOA/E,EAAA8E,yBAAA,eAAW9E,EAAAgF,iBAAA,4BAAsBhF,EAAA+E,wBAAA/E,GAErCA,EAAA8E,yBAAA,eAAuB9E,EAAAuI,qBAAA,uBAAAm6E,EAAA1iF,EAAA2I,wBAAAmd,GAAA8nC,MAAA+0B,EAAA3iF,EAAA8I,0BAAAyM,UAAA,OAASvV,EAAA+I,sBAAA45E,EAAAxtD,MAAA0R,OAAA67C,EAAoB,GAAE,GAClD1iF,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,aAAMhF,EAAA+E,wBAAA/E,8DAzBZA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAo6E,EAAA,IAIqB5iF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAqP,EAAAgrE,YAerB7iF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAo6E,EAAA,kEArGpB5iF,EAAA8E,yBAAA,WAAA9E,CAGC,WAHDA,CAGC,sBAHDA,CAGC,cAUeA,EAAAuI,qBAAA,yBAAAG,GAAA,IAAA4M,EAAAtV,EAAA2I,wBAAAoP,GAAA,OAAa/X,EAAA+I,sBAAbuM,EAAAC,UAAatK,KAAAvC,EACnC,GALkB1I,EAAA+E,yBAOA/E,EAAA8E,yBAAA,eAAW9E,EAAAgF,iBAAA,8BAAwBhF,EAAA+E,wBAAA/E,GAEvCA,EAAA8E,yBAAA,cAAA9E,CAAkD,cACpCA,EAAAgF,iBAAA,eAAShF,EAAA+E,wBAAA/E,GAEvBA,EAAA8E,yBAAA,qBAAA9E,CAA0B,gBAGlBA,EAAAuI,qBAAA,uBAAAo6E,EAAA3iF,EAAA2I,wBAAAoP,GAAAxC,UAAAnG,EAAApP,EAAA8I,0BACqC65E,SAAAxtD,MAAApH,KAAA,CAC9D,GAAI,KAAI/tB,EAAA+I,sBAAAqG,EAAA0zE,WAAAH,EAAA53E,GAAA,GAEiB/K,EAAA8E,yBAAA,YAAA9E,CAAyC,kBACVA,EAAAgF,iBAAA,UAAGhF,EAAA+E,yBAC9B/E,EAAA8E,yBAAA,UAAK9E,EAAAgF,iBAAA,eAAQhF,EAAA+E,wBAAA/E,KAGrBA,EAAA8E,yBAAA,gBAEI9E,EAAAuI,qBAAA,uBAAAo6E,EAAA3iF,EAAA2I,wBAAAoP,GAAAxC,UAAAmD,EAAA1Y,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAA2P,EAAAoqE,WAAApqE,EAAAoqE,aAAAH,EAAA53E,GAAA43E,EAAA53E,GAG5B,GAAE,GAC0B/K,EAAA8E,yBAAA,YAAA9E,CAAyC,kBACVA,EAAAgF,iBAAA,IAIzBhF,EAAA+E,yBACF/E,EAAA8E,yBAAA,UACI9E,EAAAgF,iBAAA,IAIJhF,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,gBAAsB9E,EAAAuI,qBAAA,uBAAAm5D,EAAA1hE,EAAA2I,wBAAAoP,GAAA61C,MAAAj1C,EAAA3Y,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA4P,EAAAoqE,SAAAl8C,OAAA66B,EAAmB,GAAE,GAChD1hE,EAAA8E,yBAAA,YAAA9E,CAAoD,kBACrBA,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBACjC/E,EAAA8E,yBAAA,UAAK9E,EAAAgF,iBAAA,qBAAchF,EAAA+E,wBAAA/E,SAKnCA,EAAA8E,yBAAA,aAQI9E,EAAA0J,qBAAA,GAAAs5E,EAAA,eAyCJhjF,EAAA+E,wBAAA/E,yFAjGYA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAm6E,EAAA13E,MAKejL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,oBAAAgB,GAsBgBxJ,EAAAiF,oBAAA,IAAAjF,EAAA4L,4BAAA1C,EAAA45E,aAAAH,EAAA53E,GAAA,6BAMvB/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAgE,EAAA45E,aAAAH,EAAA53E,GAAA,yBAkBhB/K,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,UAAA52C,EAAA45E,aAAAH,EAAA53E,GAAA,EAAA43E,EAAAxtD,MAAAv4B,OAAA,SAOqBoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAm6E,EAAAxtD,QA3H5B79B,aAAyB,CAClC,CAAEyT,GAAI,aAAcE,KAAM,qBAC1B,CAAEF,GAAI,cAAeE,KAAM,sBAC3B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,YAAaE,KAAM,2BACzB,CAAEF,GAAI,eAAgBE,KAAM,+BAC5B,CAAEF,GAAI,eAAgBE,KAAM,gBAC5B,CAAEF,GAAI,SAAUE,KAAM,mBAa1B3T,uCAgKkD,eAAAC,EAArC2oE,EAAqC,SAAA5nE,GAAAC,EAAA2nE,EAAA5nE,GAAA,IAAAG,EAAAC,EAAAwnE,GAsB9C,SAAAA,EACqCttB,GAAsC,IAAA75C,EAAArB,SAAAC,KAAAuoE,IAEvEnnE,EAAAN,EAAAO,KAAArB,OAFiCi7C,QArBpB75C,EAAA2sB,MAAQ,IAAIlkB,EAAAuV,aAEtBhe,EAAA6hB,SAAU,EAGV7hB,EAAAyiE,cAAgBziE,EAAK65C,MAAM4oB,cAClBziE,EAAAsvC,cAAgBtvC,EAAK65C,MAAMvK,eAAiB,WAI5CtvC,EAAA8pF,WAAkCvrF,EAAA2rF,WAc9ClqF,EAAKgqF,UAAYnwC,EAAMktB,QAAU,IAAIxsD,IAAI,SAACJ,GACtCA,SAAIiiB,MAAQjiB,EAAIiiB,MAAM7hB,IAAI,SAACsW,GAAC,MAAK,CAC7BA,EAAE,GACF5tB,KAAKC,UAAU2tB,EAAE,IACpB,GACM1W,CACX,GAAGna,CACP,CAACtB,SAAAyoE,EAAA,EAAAhnE,IAAA,SAAAgE,IAnBD,WACI,MAAO,WAAa4jC,KAAKC,MAAsB,SAAhBD,KAAKgpC,SACxC,GAAC,CAAA5wE,IAAA,iBAAAgE,IAED,WACI,QAASvF,KAAKi7C,MAAMutB,SACxB,GAAC,CAAAjnE,IAAA,mBAAAC,MAeM,SAAiBA,GAAc,IAAAuD,EAAA/E,KAClCA,KAAKyD,QACD,aACA,kBAAOsB,EAAKk2C,MAAMutB,UAAYzjE,EAAKk2C,MAAMutB,UAAUhnE,GAAS,EAAE,EAC9D,IAER,GAAC,CAAAD,IAAA,cAAAC,MAEM,WACHxB,KAAKijB,SAAU,EACf,IAAMmoE,EAAWprF,KAAKorF,SAASzvE,IAAI,SAACJ,GAChC,OAAAwT,IAAA,GACOxT,GAAG,IACNiiB,MAAOjiB,EAAIiiB,MAAM7hB,IAAI,SAACsW,GAClB,IAAIzwB,EAAQywB,EAAE,GACd,IACIzwB,EAAQ6C,KAAK0xB,MAAM9D,EAAE,UACb,CACZ,MAAO,CAACA,EAAE,GAAIzwB,EAClB,IAER,GACAxB,KAAK+tB,MAAMzO,KAAK,CAAEkP,OAAQ,OAAQ0kB,SAAUk4C,GAChD,KAAC7iB,CAAA,CA1D6C,CAAQjoE,EAAA8H,cAAYxI,SAAzD2oE,0CAAoClgE,EAAAC,4BAuBjCsF,EAAAivB,iBAAe,kDAvBlB0rC,EAAoCx/D,UAAA,qCAAAyW,QAAA,CAAAuO,MAAA,SAAA/kB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,m/CAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA7JzChB,EAAA8E,yBAAA,WAAA9E,CAAQ,QACAA,EAAAgF,iBAAA,GAAsChF,EAAA+E,yBAC1C/E,EAAA0J,qBAAA,EAAAw5E,EAAA,gBAGJljF,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAGI9E,EAAA0J,qBAAA,EAAAy5E,EAAA,aAWAnjF,EAAA8E,yBAAA,cAII9E,EAAAuI,qBAAA,0BAAStH,EAAA8hF,SAAAh1D,KAAA,CAAAhjB,GAAA9J,EAAAmiF,OAAAjuD,MAAA,IAAwC,GAEjDn1B,EAAAgF,iBAAA,mBACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAA25E,EAAA,cAgHJrjF,EAAA+E,yBACA/E,EAAA8E,yBAAA,aAAA9E,CAEC,eACsCA,EAAAuI,qBAAA,0BAAStH,EAAA6rD,aAAa,GACrD9sD,EAAAgF,iBAAA,qBACJhF,EAAA+E,wBAAA/E,UAjJIA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,QAAAjE,EAAAonC,cAAA,kBAC2BroC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,SAS1B5a,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAqiF,gBAkBetjF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA8hF,ybAgInB7iB,CAAqC,kOCzMlD1qE,EAAA,WAOAyC,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,kBAEM+tF,EAAc,IAAI5kE,IAExBrnB,8BAGyC,eAAAC,EAA5BisF,EAA4B,SAAAlrF,GAAAC,EAAAirF,EAAAlrF,GAAA,IASpCmrF,EAToChrF,EAAAC,EAAA8qF,GAGrC,SAAAA,EAAoBE,GAAuC,IAAA3qF,EAAArB,SAAAC,KAAA6rF,IACvDzqF,EAAAN,EAAAO,KAAArB,OADgB+rF,YAAuC3qF,CAE3D,CAACtB,SAAA+rF,EAAA,EAAAtqF,IAAA,cAAAC,MAEM,SAAY63B,GACXA,EAAQ2yD,QAAUhsF,KAAKgsF,QAAQhsF,KAAKisF,YAC5C,GAAC,CAAA1qF,IAAA,aAAAC,OAAAsqF,EAAArqF,EAAAC,IAAAC,KAEO,SAAAC,IAAA,IAAAG,EAAAmqF,EAAA1+E,EAAAzI,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACCpC,KAAK+rF,YAAa,EAAC1rF,EAAA8rF,aAAW,CAAAjqF,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SACxBvD,KAAKyD,QAAQ,OAAQ,kBAAMsB,EAAKknF,YAAY,EAAE,MAAI,UAGxDjsF,KAAKgsF,OAAOnmF,SAAS,0BAAyB,CAAA3D,EAAAE,KAAA,QAC/C,OAAApC,KAAK+rF,UAAUK,cAAc5U,IAAMx3E,KAAKgsF,OAAO9pF,EAAAqB,OAAA,qBAI/CqoF,EAAYvjD,IAAIroC,KAAKgsF,QAAO,CAAA9pF,EAAAE,KAAA,QAC5B,OAAApC,KAAK+rF,UAAUK,cAAc5U,IAAMoU,EAAYrmF,IAAIvF,KAAKgsF,QAAQ9pF,EAAAqB,OAAA,iBAG9DxB,YAAM1B,EAAAiD,SACZ0zC,SAASq1C,OAAM,GAAAroF,OACH,cAARjC,EACM,WAAao3C,sBAAmB94C,EAAAisF,WAChC,gBAAkBnzC,mBAAmBp3C,GAC/C,2CAAAiC,OAC0B,WAAtB2B,SAAS80E,SAAwB,UAAY,IAC9Cv4E,EAAAE,KAAA,GACoBmqF,MAAMvsF,KAAKgsF,QAAO,QAAnCE,SAAQhqF,EAAA4B,KAAA5B,EAAAE,KAAA,GACK8pF,EAASjI,OAAM,QAC5Bz2E,EAAMg/E,IAAIC,gBADNvqF,EAAA4B,MAEV8nF,EAAYrwE,IAAIvb,KAAKgsF,OAAQx+E,GAC7BxN,KAAK+rF,UAAUK,cAAc5U,IAAMhqE,EAAI,yBAAAtL,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAC1C,SAAAisF,IAAA,OAAAH,EAAAlnF,MAAA5E,KAAA6E,UAAA,MAAAgnF,CAAA,CAtCoC,CAAQvrF,EAAA8H,cAAYxI,SAAhDisF,0CAA2BxjF,EAAAC,4BAAAD,EAAAqkF,YAAA,kDAA3Bb,EAA2B9iF,UAAA,oBAAAwW,OAAA,CAAAysE,OAAA,UAAAhjF,SAAA,CAAAX,EAAAY,qCAAAZ,EAAA+xB,kCAA3ByxD,CAA4B,oLCdzChuF,EAAA,WACAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,6BAEA8B,uBAGiC,eAAAC,EAApB+sF,EAAoB,WAC7B,SAAAA,EAAoBv8E,GAAerQ,EAAAC,KAAA2sF,GAAf3sF,KAAAoQ,SAAkB,CAACtQ,SAAA6sF,EAAA,EAAAprF,IAAA,cAAAC,OAAAiwE,EAAAhwE,EAAAC,IAAAC,KAEhC,SAAAC,EACHQ,EACAu6B,GAA2B,OAAAj7B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAqB,OAAA,SAEpBvD,KAAK4sF,aAAW,wBAAA1qF,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAC1B,SAAAnB,EAAAme,EAAAsZ,GAAA,OAAAm7C,EAAA7sE,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,UAAAC,MAAA,eAAAmwE,EAAAlwE,EAAAC,IAAAC,KAEM,SAAAwD,EACH6yE,EACA6U,GAAuB,OAAAnrF,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAA9B,OAAA,SAEhBvD,KAAK4sF,aAAW,wBAAAvnF,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IAC1B,gBAAAjB,EAAAwnC,EAAAC,GAAA,OAAAmrC,EAAA/sE,MAAA5E,KAAA6E,UAAA,EAPA,IAOA,CAAAtD,IAAA,YAAAC,MAAA,eAAAsrF,EAAArrF,EAAAC,IAAAC,KAEO,SAAAsE,IAAA,IAAA0mB,EAAAklD,EAAA,OAAAnwE,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,KACE/B,EAAA0sF,eACDhqF,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACnBC,YAAW,OAAAkD,SAAAhE,KAAA,EACG9B,EAAAiG,aAAaxD,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OAA7DypB,OACAklD,GADAllD,EAAIvmB,EAAAtC,OACmB6oB,EAAKoU,OAAOl7B,SAAS,mBAE9C7F,KAAKoQ,QAAQK,SAAS,CAAC,kBAC1BrK,EAAA7C,OAAA,SACMsuE,GAAY,wBAAAzrE,EAAA1B,OAAA,EAAAuB,EAAAjG,KAAA,IACtB,gBAAA4sF,IAAA,OAAAE,EAAAloF,MAAA5E,KAAA6E,UAAA,EAZA,MAYA8nF,EA1BsC,IAAAlb,CA0BtC,CA3B4B,GA2B5B7xE,SA3BQ+sF,0CAAoBtkF,EAAAgV,mBAAA9U,EAAA0E,QAAA,qDAApB0/E,EAAoBrvE,QAApBqvE,EAAoBpvE,UAAAC,WAFjB,SAEHmvE,CAAoB,yMCRjC9uF,EAAA,WAQAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,6BAIsB0zE,EAAkBzxE,EAAA,SAAAyxE,IAAAxxE,EAAAC,KAAAuxE,EAAA,GAAxC5xE,qBAAA4xE,EAIA5xE,sBAGgC,eAAAC,EAAnBd,EAAmB,WAC5B,SAAAA,EACYsR,EACY48E,GAA2BjtF,EAAAC,KAAAlB,GADvCkB,KAAAoQ,UACYpQ,KAAAgtF,SACrB,CAACltF,SAAAhB,EAAA,EAAAyC,IAAA,cAAAC,OAAAiwE,EAAAhwE,EAAAC,IAAAC,KAEG,SAAAC,EACHQ,EACAu6B,GAA2B,OAAAj7B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAqB,OAAA,SAEpBvD,KAAK4sF,aAAW,wBAAA1qF,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAC1B,SAAAnB,EAAAme,EAAAsZ,GAAA,OAAAm7C,EAAA7sE,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,UAAAC,MAAA,eAAAmwE,EAAAlwE,EAAAC,IAAAC,KAEM,SAAAwD,EACH6yE,EACA6U,GAAuB,OAAAnrF,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAA9B,OAAA,SAEhBvD,KAAK4sF,aAAW,wBAAAvnF,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IAC1B,gBAAAjB,EAAAwnC,EAAAC,GAAA,OAAAmrC,EAAA/sE,MAAA5E,KAAA6E,UAAA,EAPA,IAOA,CAAAtD,IAAA,YAAAC,MAAA,eAAAsrF,EAAArrF,EAAAC,IAAAC,KAEO,SAAAsE,IAAA,IAAAgnF,EAAAtgE,EAAAklD,EAAA,OAAAnwE,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,KACE/B,EAAA0sF,eACDhqF,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACnBC,YAAW,OAAAkD,SAAAhE,KAAA,EACc9B,EAAAiG,aACzBxD,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,QAAOA,CAAC,IACrBC,YAAW,OAFVypB,OAGAklD,MAHAllD,EAAIvmB,EAAAtC,OAKQ,QAAbmpF,EAACjtF,KAAKgtF,eAAO,IAAAC,GAAZA,EAAcp1D,QAASlL,EAAKoU,OAAOl7B,SAAS7F,KAAKgtF,QAAQn1D,UAG3D73B,KAAKoQ,QAAQK,SAAS,CAAC,kBAC1BrK,EAAA7C,OAAA,WACQsuE,GAAY,wBAAAzrE,EAAA1B,OAAA,EAAAuB,EAAAjG,KAAA,IACxB,gBAAA4sF,IAAA,OAAAE,EAAAloF,MAAA5E,KAAA6E,UAAA,EAjBA,MAiBA/F,EA/BG,IAAA2yE,CA+BH,CAnC2B,GAmC3B7xE,SAnCQd,0CAAmBuJ,EAAAgV,mBAAA9U,EAAA0E,QAAA5E,EAAAgV,mBAAAk0D,EAAA,wDAAnBzyE,EAAmBwe,QAAnBxe,EAAmBye,UAAAC,WAFhB,SAEH1e,CAAmB,qNCtBhC,IAAA+K,EAAAhM,EAAA,OACAyC,EAAAzC,EAAA,OAEAqvF,GADArvF,EAAA,MACAA,EAAA,QACAuC,EAAAvC,EAAA,OACA+P,EAAA/P,EAAA,2JAwCwBwK,EAAA8E,yBAAA,WAGI9E,EAAAuI,qBAAA,uBAAAu8E,EAAA9kF,EAAA2I,wBAAAysC,GAAA7/B,UAAAnH,EAAApO,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAAqF,EAAA22E,WAAAD,EAAA/5E,IAAoB,GAE7B/K,EAAA8E,yBAAA,QACI9E,EAAAkB,oBAAA,qBAIJlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,QAAI9E,EAAAgF,iBAAA,GAAsChF,EAAA+E,yBAC1C/E,EAAA8E,yBAAA,UAAA9E,CAAwB,YAUhBA,EAAAgF,iBAAA,GAKJhF,EAAA+E,wBAAA/E,8DAnBIA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAa,EAAAwN,SAAArZ,SAAAsnF,EAAA/5E,KAGJ/K,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAk5E,EAAA73E,cAAA63E,EAAA75E,MAIIjL,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,qBAAA/N,EAAAktB,gBAAAltB,EAAAktB,eAAA/4B,SAAAsnF,EAAA/5E,KAAA/K,CAEC,iBAAAqJ,EAAAktB,eAAA,KAAAltB,EAAAktB,eAAA/4B,SAAAsnF,EAAA/5E,KAKD/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,UAAAmE,EAAAktB,gBAAAltB,EAAAktB,eAAA/4B,SAAAsnF,EAAA/5E,IAAA,wFAlDxB/K,EAAA8E,yBAAA,WAAA9E,CAGC,YAHDA,CAGC,YAHDA,CAGC,OAHDA,CAGC,WAIgCA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA0sC,GAAA,IAAAh8B,EAAArZ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAsQ,EAAA0rE,WAAW,KAAI,GACrC/kF,EAAAkB,oBAAA,iFAYJlB,EAAA+E,yBACA/E,EAAAkB,oBAAA,QACAlB,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,mCACJhF,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,GAAAs7E,EAAA,4CA8BJhlF,EAAA+E,wBAAA/E,qDAhDgBA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,kBAAAwQ,EAAAhZ,EAAAsN,sBAAA,IAAAxD,EAAAm7E,QAAA,KAAAjsE,EAAApc,UAAAkN,EAAA+M,SAAAja,OAAAoD,CAGC,gBAAA8J,EAAA+M,SAAAja,OAAA,WAAAqZ,EAAAjW,EAAAsN,sBAAA,IAAAxD,EAAAm7E,QAAA,KAAAhvE,EAAArZ,UAAAkN,EAAA+M,SAAAja,QAULoD,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAAuI,EAAAzN,EAAAsN,sBAAA,KAAAxD,EAAAm7E,QAAA,KAAAx3E,EAAA7Q,OAAA,aAMcoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,MAAAxD,EAAAm7E,+BA4ClCjlF,EAAA8E,yBAAA,aAGI9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,kCAA4BhF,EAAA+E,wBAAA/E,IAvF/C1I,oCAmG8C,eAAAC,EAAjC2tF,EAAiC,WAQ1C,SAAAA,EACqCtyC,EACzBh6C,GAAyBlB,EAAAC,KAAAutF,GADAvtF,KAAAi7C,QACzBj7C,KAAAiB,OATKjB,KAAAwtF,OAAS,IAAI3jF,EAAAuV,aACvBpf,KAAAijB,SAAU,EACVjjB,KAAAkf,SAAqB,GACZlf,KAAAstF,SAAQJ,EAAAx7D,sBAAqB1xB,KAAKiB,KAAK4U,SAASzC,IAChDpT,KAAA2S,KAAe3S,KAAKi7C,MAAMtoC,KACnC3S,KAAA4+B,eAA2B5+B,KAAKi7C,MAAMrc,cAK1C,CAAC9+B,SAAAytF,EAAA,EAAAhsF,IAAA,aAAAC,OAAAisF,EAAAhsF,EAAAC,IAAAC,KAEG,SAAAC,EAAiBwR,GAAU,IAAAk6E,EAAA,OAAA5rF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB,MAAPgR,EAAU,CAAAlR,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACUpC,KAAKstF,MAAMvqF,QAAK3C,EAAA2b,MAAK,IAAI7Y,YAAW,OAEpDlD,KAAKkf,SADLlf,KAAKkf,SAASja,UADZqoF,EAAKprF,EAAA4B,MACwBmB,OACfqoF,EAAM3xE,IAAI,SAAC1Y,GAAC,OAAKA,EAAEmQ,EAAE,GACpB,GAAGlR,EAAAE,KAAA,eAGpBpC,KAAKkf,SADLlf,KAAKkf,SAASrZ,SAASuN,GACPpT,KAAKkf,SAASrD,OAAO,SAAC5Y,GAAC,OAAKA,IAAMmQ,CAAE,GACtC,GAAApP,OAAA+e,EAAO/iB,KAAKkf,UAAQ,CAAE9L,IAAI,wBAAAlR,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAEnD,SAAAotF,EAAApwE,GAAA,OAAAywE,EAAA7oF,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,iBAAAC,MAAA,eAAAksF,EAAAjsF,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,IAAA4N,EAAA3R,EAAApB,KAAA,OAAA0B,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACHpC,KAAKijB,SAAU,EAETlQ,EADgB/S,KAAK4+B,eACA/iB,OAAO,SAAC5Y,GAAC,OAAM7B,EAAK8d,SAASrZ,SAAS5C,EAAE,GACnEjD,KAAK4+B,eAAiB7rB,EACtB/S,KAAKwtF,OAAOprF,KAAK2Q,GAAM,wBAAA1N,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IAC1B,gBAAA2tF,IAAA,OAAAD,EAAA9oF,MAAA5E,KAAA6E,UAAA,EARA,IAQA,CAAAtD,IAAA,kBAAAC,MAAA,eAAAosF,EAAAnsF,EAAAC,IAAAC,KAEM,SAAAsE,IAAA,IAAA8M,EAAA,OAAArR,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OACHpC,KAAKijB,SAAU,EAETlQ,KAAOzS,EAAA6sC,QADSntC,KAAK4+B,eACO56B,OAAOhE,KAAKkf,WAC9Clf,KAAK4+B,eAAiB7rB,EACtB/S,KAAKwtF,OAAOprF,KAAK2Q,GAAM,wBAAA3M,EAAA1B,OAAA,EAAAuB,EAAAjG,KAAA,IAC1B,gBAAA6tF,IAAA,OAAAD,EAAAhpF,MAAA5E,KAAA6E,UAAA,EARA,MAQA0oF,EA7BG,IAAAE,CA6BH,CAxCyC,GAwCzC7tF,SAxCQ2tF,0CAAiCllF,EAAAC,4BAS9BsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAAG,qBAAA,kDATlB6kF,EAAiCxkF,UAAA,iCAAAyW,QAAA,CAAAguE,OAAA,UAAAtkF,MAAA,GAAAC,KAAA,EAAA+D,OAAA,4zBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAhGtChB,EAAA8E,yBAAA,QAAA9E,CAAK,aAALA,CAAK,UAEmBA,EAAAgF,iBAAA,GAAqChF,EAAA+E,yBACrD/E,EAAA8E,yBAAA,aAAA9E,CAA8B,cAChBA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA0J,qBAAA,EAAA+7E,EAAA,gBA6DAzlF,EAAA8E,yBAAA,aAAA9E,CAEC,cACyBA,EAAAuI,qBAAA,0BAAStH,EAAAqkF,gBAAgB,GAC3CtlF,EAAAgF,iBAAA,wBACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAAsB9E,EAAAuI,qBAAA,0BAAStH,EAAAukF,iBAAiB,GAC5CxlF,EAAAgF,iBAAA,yBACJhF,EAAA+E,wBAAA/E,KAGRA,EAAA0J,qBAAA,GAAAg8E,EAAA,yBAAA1lF,EAAAqd,0EA7EwBrd,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,OAAAjE,EAAAqJ,KAAA,2BAOftK,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,QAAA5a,CAAgB,WAAAuf,iRAuFpB2lE,CAAiC,iLC1G9C,IAAA1jF,EAAAhM,EAAA,OAYAwC,EAAAxC,EAAA,OAEAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,kBAEA8B,mBAII,eAAAC,EADSouF,EACT,SAAArtF,GAAAC,EAAAotF,EAAArtF,GAAA,IAAAG,EAAAC,EAAAitF,GA4BA,SAAAA,EACYC,EACAC,GAAoB,IAAA9sF,EAAArB,SAAAC,KAAAguF,IAE5B5sF,EAAAN,EAAAO,KAAArB,OAHQiuF,WACA7sF,EAAA8sF,YA1BI9sF,EAAA+sF,IAAc,GAEd/sF,EAAAozB,IAAc,GAEdpzB,EAAA60D,MAAQ,EAER70D,EAAAixB,KAAe,GAEfjxB,EAAAyyE,KAAe,GAEfzyE,EAAAkrE,MAAgB,IAEPlrE,EAAAgtF,SAAmB,GAE5BhtF,EAAA+mC,OAAgB,KAChB/mC,EAAA68B,QAAkB,EAElB78B,EAAAitF,MAAkB,KAEjBjtF,EAAAktF,YAAc,IAAIzkF,EAAAuV,aAE3Bhe,EAAAmtF,UAAW,EACXntF,EAAAotF,WAAuB,KAAKptF,CAOpC,CAACtB,SAAAkuF,EAAA,EAAAzsF,IAAA,WAAAC,MAEM,WAAQ,IAAA0E,EAAAnB,EAAA/E,KACE,QAAbkG,KAAA7F,EAAA0sF,sBAAa,IAAA7mF,GAAbA,EACMnD,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACpB6P,UAAU,SAAC7P,GAAC,OAAK8B,EAAK0pF,cAAc,EAC7C,GAAC,CAAAltF,IAAA,cAAAC,MAEM,SAAY63B,GAAsB,IAAAlzB,EAAAnG,MACjCq5B,EAAQ80D,KAAO90D,EAAQ7E,KAAO6E,EAAQhH,OACtCryB,KAAKyuF,eAGLp1D,EAAQg1D,OACRruF,KAAKwuF,aAAexuF,KAAKquF,OACX,MAAdruF,KAAKquF,QAELruF,KAAKwuF,WAAaxuF,KAAKquF,MACvBruF,KAAKy0B,WAEL4E,EAAQ+0D,UAAYpuF,KAAKouF,UACzBpuF,KAAK4S,aACD,WACA5S,KAAKkuF,UAAUn8D,OACX/xB,KAAKiuF,SAAS7B,cACdpsF,KAAKouF,SACL,kBAAMjoF,EAAKsuB,SAAS,GAIpC,GAEA,CAAAlzB,IAAA,eAAAC,MACQ,WAAY,IAAAuF,EAAA/G,MAChB,EACIK,EAAA8rF,cACAnsF,KAAKqyB,MACLryB,KAAKmuF,KACLnuF,KAAKw0B,MACJx0B,KAAKuuF,UAENvuF,KAAKyD,QACD,OACA,WACI,IACMmuB,GADAkoD,EAASz5E,EAAAwxB,WAAU9qB,EAAKonF,IAAKpnF,EAAKytB,IAAKztB,EAAKkvD,OAC3BrkC,QAAQ7qB,EAAKsrB,MACpCtrB,EAAKwnF,UAAW,EAChBxnF,EAAK6L,aAAa,UAAWgf,EAAQS,QACrCtrB,EAAK6L,aACD,aACAgf,EACKG,SACAhvB,QAAK3C,EAAAyb,QAAO,SAAC5Y,GAAC,OAAU,MAALA,CAAS,IAC5B6P,UAAU,SAACtR,GACRirE,WAAW,WACP1lE,EAAKwnF,UAAW,EAChBxnF,EAAKhD,aAAa,UACdgD,EAAKk3B,SACTl3B,EAAKsnF,MAAQ7sF,EACbuF,EAAKynF,WAAaznF,EAAKsnF,MACvBtnF,EAAKunF,YAAYhvE,KAAKvY,EAAKsnF,OAC/B,EAAG,GACP,IAERtnF,EAAKtD,QAAQ,QAAS,kBAAOsD,EAAKwnF,UAAW,CAAK,EAAG,IACzD,EACA,GAGZ,GAEA,CAAAhtF,IAAA,UAAAC,MACQ,WAAO,IAAAixC,EAAAzyC,MACX,EACIK,EAAA8rF,cACAnsF,KAAK6zE,MACL7zE,KAAKmuF,KACLnuF,KAAKw0B,MACJx0B,KAAKgsE,QAAQv3C,SAEdz0B,KAAKyD,QACD,UACA,WACI,IAAMq2E,KAASz5E,EAAAwxB,WAAU4gB,EAAK07C,IAAK17C,EAAKje,IAAKie,EAAKwjB,OAC9C9tB,EAASsK,EAAKtK,OACdsK,EAAKpgB,OAAM8V,EAASsK,EAAKtK,QAAU,CAACsK,EAAK47C,QAC7CvU,EAAOrlD,QAAQge,EAAKohC,KAAM1rC,GAAU,IAAI82B,KAAK,SAAC53D,GAErCorC,EAAKpgB,OACNogB,EAAK47C,MAAQhnF,EACborC,EAAK+7C,WAAa/7C,EAAK47C,MACvB57C,EAAK67C,YAAYhvE,KAAKmzB,EAAK47C,OAEnC,EACJ,EACAruF,KAAKssE,MAGjB,KAAC0hB,CAAA,CAnID,CAAQ1tF,EAAA8H,cAAYxI,SADXouF,0CAAgB3lF,EAAAC,4BAAAD,EAAAqkF,YAAArkF,EAAAC,4BAAAD,EAAAqmF,WAAA,kDAAhBV,EAAgBjlF,UAAA,gDAAAwW,OAAA,CAAA4uE,IAAA,MAAA35D,IAAA,MAAAyhC,MAAA,QAAA5jC,KAAA,OAAAwhD,KAAA,OAAAvH,MAAA,QAAA8hB,SAAA,uBAAAjmD,OAAA,SAAAlK,OAAA,SAAAowD,MAAA,SAAA7uE,QAAA,CAAA8uE,YAAA,eAAAtlF,SAAA,CAAAX,EAAAY,qCAAAZ,EAAA+xB,kCAAhB4zD,CACT,uKCpBJ,IAAA9vF,EAAAL,EAAA,UACAA,EAAA,mIAyBgBwK,EAAA8E,yBAAA,wBAGI9E,EAAAuI,qBAAA,uBAAA+9E,EAAAtmF,EAAA2I,wBAAA6U,GAAAjI,UAAArM,EAAAlJ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAG,EAAAkE,YAAAk5E,GAAgB,GAEzBtmF,EAAAgF,iBAAA,GACJhF,EAAA+E,mDAJI/E,EAAAwI,qBAAA,QAAA89E,EAAAv7E,IAGA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAohF,EAAAr5E,cAAAq5E,EAAAr7E,KAAA,MA5BpB3T,0BAmCoC,eAAAC,EAAvBgvF,EAAuB9uF,EAYhC,SAAA8uF,EACuC3zC,EAC3Bh6C,GAAyB,IAAAG,EAAApB,KAAAD,EAAAC,KAAA4uF,GADE5uF,KAAAi7C,QAC3Bj7C,KAAAiB,OAbIjB,KAAA+V,UAAY/V,KAAKiB,KAAKs+C,iBACtBv/C,KAAA6V,SAAW7V,KAAKiB,KAAKiX,gBAErBlY,KAAAyV,YAAc,SAACkJ,GAAK,IAAAqrE,EAChC5oF,EAAKH,KAAK4U,SAAW8I,EACrBvd,EAAKH,KAAK6X,aAAa6F,EAAEvL,IACf,QAAV42E,EAAA5oF,EAAK65C,aAAK,IAAA+uC,GAAVA,EAAYriF,OAChB,EAEgB3H,KAAA2H,MAAQ,eAAAknF,EAAA,OAAgB,QAAhBA,EAAMztF,EAAK65C,aAAK,IAAA4zC,OAAA,EAAVA,EAAYlnF,OAAO,CAK9C,GAAC/H,SAfKgvF,0CAAuBvmF,EAAAC,4BAapBpK,EAAA+rF,mBAAiB5hF,EAAAC,4BAAAC,EAAAG,qBAAA,kDAbpBkmF,EAAuB7lF,UAAA,sBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,2QAnBuBsiB,UAAAC,MAAAC,EAAA,qQAbnDrnB,EAAA8E,yBAAA,WAEI9E,EAAAuI,qBAAA,0BAAStH,EAAA3B,OAAO,GAEhBU,EAAA8E,yBAAA,UAAA9E,CAAyC,gBACVA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,+DAIJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,KAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,uDAII9E,EAAA0J,qBAAA,GAAA+8E,EAAA,yDAOJzmF,EAAA+E,wBAAA/E,UApBQA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,YAAA8T,EAAAhZ,EAAAsN,sBAAA,IAAArM,EAAAuM,WAAA,KAAAwL,EAAA/L,gBAAA,OAAA+L,EAAAhZ,EAAAsN,sBAAA,IAAArM,EAAAuM,WAAA,KAAAwL,EAAA/N,MAAA,KAUJjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,iBAAAyN,EAAAjW,EAAAsN,sBAAA,KAAArM,EAAAuM,WAAA,KAAAyI,EAAAlL,IAIoB/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,KAAArM,EAAAyM,kIAWvB64E,CAAuB,sICtCpC/wF,EAAA,+BAEA8B,eAGyB,eAAAC,EAAZmvF,EAAY,WACrB,SAAAA,EAAoB9tF,GAAyBlB,EAAAC,KAAA+uF,GAAzB/uF,KAAAiB,MAA4B,CAACnB,SAAAivF,EAAA,EAAAxtF,IAAA,YAAAC,MAE1C,SAAU4R,GACb,OAAOpT,KAAKiB,KAAK8U,UAAUqZ,KAAK,SAACvW,GAAG,OAChCzF,aAAckuB,MAAQluB,EAAGvN,SAASgT,EAAIzF,IAAMyF,EAAIzF,KAAOA,CAAE,EAEjE,KAAC27E,CAAA,CAPoB,GAOpBnvF,SAPQmvF,0CAAY1mF,EAAAC,4BAAAC,EAAAG,oBAAA,kEAAZqmF,EAAYh3D,MAAA,IAAZg3D,CAAY,kJCLzB,IAAAnhF,EAAA/P,EAAA,OAEAmxF,EAAAnxF,EAAA,uFAeQwK,EAAAkB,oBAAA,iFAGIlB,EAAAwI,qBAAA,YAAAxI,EAAA8L,sBAAA,IAAAhC,EAAA88E,UAAA,QAAA5mF,EAAA6mF,iDAGA7mF,EAAA8E,yBAAA,UAAA9E,CAAiE,gBAClCA,EAAAgF,iBAAA,WAAKhF,EAAA+E,yBAChC/E,EAAA8E,yBAAA,WAAkB9E,EAAAgF,iBAAA,kBAAYhF,EAAA+E,wBAAA/E,IAjB9C1I,0BAuBoC,eAAAC,EAAvBuvF,EAAuB,WAIhC,SAAAA,EAA6Cl0C,GAAyBl7C,EAAAC,KAAAmvF,GAAzBnvF,KAAAi7C,OAA4B,CAEzEn7C,SAAAqvF,EAAA,EAAA5tF,IAAA,YAAAgE,IACA,WACI,SAAOypF,EAAAI,QAAOpvF,KAAKi7C,MAAMg0C,WAAa,GAC1C,KAACE,CAAA,CAT+B,GAS/BvvF,SATQuvF,0CAAuB9mF,EAAAC,4BAIZsF,EAAAivB,iBAAe,kDAJ1BsyD,EAAuBpmF,UAAA,sBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,+VAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IApB5BhB,EAAA8E,yBAAA,WAAA9E,CAAQ,UACiBA,EAAAgF,iBAAA,eAAShF,EAAA+E,yBAC9B/E,EAAA8E,yBAAA,aAAA9E,CAA8B,cAChBA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA0J,qBAAA,EAAAs9E,EAAA,aAAAhnF,CAIQ,EAAAinF,EAAA,yBAAAjnF,EAAAqd,yEAFHrd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA2lF,UAAA5mF,CAAiB,WAAAuf,0FAYjBunE,CAAuB,8KChCpCtxF,EAAA,WACAyC,EAAAzC,EAAA,OAGAuC,GAFAvC,EAAA,OAEAA,EAAA,gKAoCoBwK,EAAA8E,yBAAA,YAII9E,EAAAgF,iBAAA,iCACJhF,EAAA+E,kEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAAsN,sBAAA,IAAAjE,EAAA69E,MAAA,4BAaIlnF,EAAA8E,yBAAA,YAII9E,EAAAgF,iBAAA,iBACJhF,EAAA+E,uFAhBR/E,EAAA8E,yBAAA,YAOI9E,EAAAuI,qBAAA,uBAAA4+E,EAAAnnF,EAAA2I,wBAAAqqB,GAAAzd,UAAAmC,EAAA1X,EAAA8I,wBAAA,UAAA9I,EAAA+I,sBAAA2O,EAAA0vE,UAAAD,EAAAp8E,KAAA2M,EAAA0vE,UAAAD,EAAAp8E,IAAA,iCAGA/K,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,EAAA29E,EAAA,cAMArnF,EAAA8E,yBAAA,YAGI9E,EAAAgF,iBAAA,oCACJhF,EAAA+E,wBAAA/E,GAEJA,EAAAkB,oBAAA,6CAKJlB,EAAA+E,kFAzBI/E,EAAAoX,sBAAA,OAAA+vE,EAAAz+C,UAAA7/B,EAAAyb,KAAAvZ,GAAA/K,CAA0C,OAAAmnF,EAAAz+C,UAAA7/B,EAAAyb,KAAAvZ,GAA1C/K,CAA0C,aAAAmnF,EAAAz+C,UAAA7/B,EAAAyb,KAAAvZ,GAA1C/K,CAA0C,YAAAmnF,EAAAz+C,UAAA7/B,EAAAyb,KAAAvZ,GAA1C/K,CAA0C,iBAAAA,EAAAsN,sBAAA,KAAAzE,EAAAy+E,UAUjCtnF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA2+E,EAAAz+C,UAAA7/B,EAAAyb,KAAAvZ,IAOD/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAAsN,sBAAA,KAAA65E,EAAAlS,UAAApsE,EAAAoyE,QAAA,KAMJj7E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAxI,EAAAsN,sBAAA,KAAA65E,EAAAroE,SAAA9e,EAAA6mF,oDAoBI7mF,EAAAkB,oBAAA,oHAGIlB,EAAAwI,qBAAA,YAAAxI,EAAAsN,sBAAA,IAAAtN,EAAAsN,sBAAA,IAAAoI,EAAA0mE,UAAAt9D,SAAA9e,EAAA6mF,wFApBhB7mF,EAAA8E,yBAAA,WAAA9E,CAA0C,eAGlCA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAmd,GAAA,IAAAhY,EAAA9N,EAAA8I,wBAAA,UAAA9I,EAAA+I,sBAAA+E,EAAAy5E,WAAAz5E,EAAAy5E,UAAA,GAEAvnF,EAAA8E,yBAAA,WAAA9E,CAA0C,iBACXA,EAAAgF,iBAAA,UAAIhF,EAAA+E,yBAC/B/E,EAAA8E,yBAAA,UACI9E,EAAAgF,iBAAA,iCACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAGI9E,EAAAkB,oBAAA,YAGAlB,EAAA0J,qBAAA,GAAA89E,EAAA,cAOJxnF,EAAA+E,wBAAA/E,gDAhBQA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAAsN,sBAAA,IAAAc,EAAAguE,UAAAqL,SAAA,KAWCznF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA4F,EAAAm5E,kCASrBvnF,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,WAAAlB,CAEO,WAFPA,CAEO,YAOPA,EAAA8E,yBAAA,aAAsB9E,EAAAgF,iBAAA,0BAAoBhF,EAAA+E,wBAAA/E,iEAlGlDA,EAAA8E,yBAAA,UAAA9E,CAGC,UAHDA,CAGC,UAIwBA,EAAAgF,iBAAA,uBAAiBhF,EAAA+E,yBAClC/E,EAAA8E,yBAAA,cAAuB9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAi7C,GAAA,IAAA7tC,EAAA/V,EAAA8I,wBAAA,UAAA9I,EAAA+I,sBAAAgN,EAAA2xE,MAAgB,EAAK,GACxC1nF,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA8E,yBAAA,YAAA9E,CAAgD,WAAhDA,CAAgD,kBAIbA,EAAAgF,iBAAA,YAAKhF,EAAA+E,yBAChC/E,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,IAAoBhF,EAAAkB,oBAAA,SACpBlB,EAAAgF,iBAAA,0CACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,GAAAi+E,EAAA,6CAMA3nF,EAAA0J,qBAAA,GAAAk+E,EAAA,8CA6BA5nF,EAAA0J,qBAAA,GAAAm+E,EAAA,8CA2BJ7nF,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAAo+E,EAAA,6CAeA9nF,EAAA8E,yBAAA,YAAA9E,CAEC,kBAKOA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAi7C,GAAA,IAAAE,EAAA9jD,EAAA8I,wBAAA,UAAA9I,EAAA+I,sBAAA+6C,EAAApS,QAAAhpC,EAAA,EAAA1I,CAAqB,yBAAAA,EAAA2I,wBAAAi7C,GAAA,IAAA90C,EAAA9O,EAAA8I,wBAAA,UACN9I,EAAA+I,sBAAA+F,EAAAi5E,cAAa,GALhC/nF,EAAA+E,yBAOA/E,EAAA8E,yBAAA,gBAII9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAi7C,GAAA,IAAA10C,EAAAlP,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAAmG,EAAA64E,cAAa,GAEtB/nF,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,WAAIhF,EAAA+E,wBAAA/E,kDAlGVA,EAAAiF,oBAAA,IAAAjF,EAAAkF,6BAAA,OAAAqI,EAAA+W,KAAArZ,KAAA,MAMHjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAAsN,sBAAA,KAAAC,EAAA25E,OAMmBlnF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,KAAAC,EAAAy6E,WA2BNhoF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAAsN,sBAAA,MAAAC,EAAA6uE,WA8BjBp8E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAAsN,sBAAA,MAAAC,EAAA+5E,UAoBGtnF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA+E,EAAAmkC,SAMA1xC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAA+E,EAAAmkC,uEA1HhB1xC,EAAA8E,yBAAA,UAAA9E,CAA4D,cAKpDA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAuzC,GAAA,IAAA9sC,EAAApP,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAqG,EAAA64E,aAAY,GAErBjoF,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,UAAIhF,EAAA+E,wBAAA/E,GAElBA,EAAA0J,qBAAA,EAAAw+E,EAAA,eAwHJloF,EAAA+E,mEAtHS/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA49E,OAdjBpwF,gBAqJ2B,eAAAC,EAAd4wF,EAAc,SAAA7vF,GAAAC,EAAA4vF,EAAA7vF,GAAA,IAAAG,EAAAC,EAAAyvF,GA0BvB,SAAAA,EACYxvF,EACAyvF,GAAkB,IAAArvF,EAAArB,SAAAC,KAAAwwF,IAE1BpvF,EAAAN,EAAAO,KAAArB,OAHQgB,YACAI,EAAAqvF,QA3BLrvF,EAAA2uF,MAAO,EACP3uF,EAAAwuF,WAAY,EACZxuF,EAAA24C,QAAU,GAEV34C,EAAAquF,UAAqC,GACrCruF,EAAAkiF,OAAS,EAEAliF,EAAAmuF,KAAOnuF,EAAKqvF,MAAMC,UAClBtvF,EAAAivF,SAAWjvF,EAAKqvF,MAAMJ,SACtBjvF,EAAAqjF,SAAWrjF,EAAKqvF,MAAMhM,SACtBrjF,EAAAuuF,QAAUvuF,EAAKqvF,MAAMJ,SAASttF,QAC1C3C,EAAAub,KAAI,SAAC1Y,GAAC,IAAAiD,EAAAyqF,EAAA,OAAkB,IAAb1tF,EAAEgC,SAA+B,QAAfiB,EAAAjD,EAAEA,EAAEgC,OAAS,UAAE,IAAAiB,OAAA,EAAfA,EAAiB6qC,YAAqB,QAAd4/C,EAAKvvF,EAAKurB,YAAI,IAAAgkE,OAAA,EAATA,EAAWv9E,GAAE,IACzEhS,CAkBF,CAACtB,SAAA0wF,EAAA,EAAAjvF,IAAA,WAAAgE,IAhBD,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,mBAC9B,GAAC,CAAAhE,IAAA,aAAAC,MAKM,WACHxB,KAAK+vF,MAAQ/vF,KAAK+vF,IACtB,GAAC,CAAAxuF,IAAA,WAAAC,MASM,WAAQ,IAAAuD,EAAA/E,KACXA,KAAK4S,aACD,eACAtS,EAAAiG,aAAauM,UAAU,SAAC6Z,GAAI,OAAM5nB,EAAK4nB,KAAOA,CAAI,IAEtD3sB,KAAK4S,aACD,OACA5S,KAAKuvF,KAAKz8E,UAAU,kBAAM/N,EAAK6rF,eAAe,IAAI,IAEtD5wF,KAAK4S,aACD,WACA5S,KAAKqwF,SAASv9E,UAAU,kBAAM/N,EAAK6rF,gBAAgB,IAEvD5wF,KAAK4S,aACD,WACA5S,KAAKykF,SAAS3xE,UAAU,SAACmf,GAAC,OACtBA,EAAIltB,EAAK6rF,iBAAoB7rF,EAAK6qF,WAAY,CAAM,IAG5D5vF,KAAKg2B,SACD,SACA,kBAAOjxB,EAAKu+E,OAASv+E,EAAKu+E,OAAS,EAAI,CAAC,EACxC,IAER,GAAC,CAAA/hF,IAAA,cAAAC,MAEM,WAAW,IAAA2E,EAAAnG,KACd,GAAKA,KAAK+5C,QACV,KAAK/5C,KAAKywF,MAAMI,UACZ,OAAA7wF,KAAKywF,MAAMK,YACJ9wF,KAAKyD,QAAQ,OAAQ,kBAAM0C,EAAKiqF,aAAa,EAAE,KAE1DpwF,KAAKywF,MAAML,YAAYpwF,KAAK+5C,SAC5B/5C,KAAK+5C,QAAU,GACf0yB,WAAW,kBAAMtmE,EAAK4qF,UAAU3E,cAAcllE,OAAO,EAAE,IAAG,CAC9D,GAAC,CAAA3lB,IAAA,iBAAAC,MAEM,WAA0B,IAAAuF,EAAA/G,KAC7BA,KAAKyD,QACD,SACA,WAAK,IAAAutF,EACqB,QAAtBA,EAAIjqF,EAAKkqF,qBAAa,IAAAD,GAAlBA,EAAoB5E,gBACpBrlF,EAAKkqF,cAAc7E,cAAc8E,UAC7BnqF,EAAKkqF,cAAc7E,cAAc+E,aAE7C,EARmBtsF,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,IAW9B,KAAC2rF,CAAA,CAjFsB,CAAQlwF,EAAA8H,cAAYxI,SAAlC4wF,0CAAanoF,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAA2oF,aAAA,kDAAbZ,EAAaznF,UAAA,kBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,86FAlJlBhB,EAAA0J,qBAAA,EAAAu/E,EAAA,kBAA4CjpF,EAAAwI,qBAAA,OAAAvH,EAAAioF,saAkJvCf,CAAc,kNC1J3B,IAAAlwF,EAAAzC,EAAA,OAEAwC,GADAxC,EAAA,MACAA,EAAA,QACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OACA2zF,EAAA3zF,EAAA,OAEAuxF,EAAAvxF,EAAA,4BAYA8B,cAGyB,eAAAC,EAAZwxF,EAAY,SAAAzwF,GAAAC,EAAAwwF,EAAAzwF,GAAA,IAAAG,EAAAC,EAAAqwF,GAoErB,SAAAA,EAAoBnwF,GAAyB,IAAAG,EAAArB,SAAAC,KAAAoxF,IACzChwF,EAAAN,EAAAO,KAAArB,OADgBiB,OAnEZG,EAAAqwF,eAAiB,IAAI93E,EAAAqB,gBAA+B,IACpD5Z,EAAAswF,kBAAoB,IAAI/3E,EAAAqB,gBAAoC,MAC5D5Z,EAAAuwF,aAAevwF,EAAKH,KAAKiX,gBAAgBnV,QAC7C3C,EAAAyb,QAAO,SAAC8C,GAAC,QAAOA,CAAC,MACjBve,EAAAub,KAAI,SAAC1Y,GAAC,OAAK7B,EAAKH,KAAK2wB,QAAQ,YAAY,IAErCxwB,EAAAwwF,SAAW,GAEZxwF,EAAAsvF,UAAgCtvF,EAAKuwF,aAAa5uF,QACrD3C,EAAAyb,QAAO,SAAC5Y,GAAC,QAAOA,CAAC,MACjB7C,EAAAqxB,WAAU,SAACre,GACP,IACMwe,GADA4C,EAAMn0B,EAAAwxB,WAAUze,EAAI,OACNwe,QAAQ,aAC5BxwB,SAAKwR,aAAY,wBAA0Bgf,EAAQS,QAC5CT,EAAQG,QACnB,IAAC,EACD3xB,EAAAmyB,aAAY,IAERnxB,EAAAygD,QAAU,IAAIloC,EAAAqB,gBAAgB,GAE9B5Z,EAAAywF,cAAal4E,EAAA+I,eAAc,CAACthB,EAAKuwF,aAAcvwF,EAAKygD,UAAU9+C,QAClE3C,EAAAqxB,WAAU,SAAAvrB,GAAS,IAAPkN,EAAOwP,EAAA1c,EAAA,GAAL,GACJsH,EAAG,KAAAxJ,OAAQ2B,SAASC,OAAO83B,QAC7B,OACA,IACH,gCAAA15B,OAA+Bm1C,mBAC5B/lC,GACH,kBAAApP,OAAiBm1C,sBAAmB94C,EAAAiD,WAAQU,OACzC5C,EAAKwwF,SACC,WAAaz4C,mBAAmB/3C,EAAKwwF,UACrC,IAEVxwF,SAAK0wF,WAAUN,EAAAO,WAAe,CAC1BvkF,MACAwkF,WAAY,SAACtvF,GAAI,MACG,iBAATA,EAAoB2B,KAAKC,UAAU5B,GAAQA,CAAI,EAC1DuvF,aAAc,SAACvvF,GACX,IAAIwvF,EAAexvF,EAAKA,KACxB,IAEIwvF,EADY7tF,KAAK0xB,MAAMrzB,EAAKA,aAKhC,OAAOwvF,CACX,IAEJ9wF,EAAKwR,aACD,UACAxR,EAAK0wF,QAAQh/E,UACT,SAAC7P,GAAC,OAAK7B,EAAK+wF,WAAWlvF,EAAE,EACzB,SAACuhB,GAAC,OAAKpjB,EAAKgxF,UAAU,EACtB,kBAAMhxF,EAAKgxF,UAAU,IAGtBhxF,EAAK0wF,OAChB,IAAC,EACD1xF,EAAAmyB,aAAY,IAGAnxB,EAAAivF,SAAWjvF,EAAKqwF,eAAet2E,eAC/B/Z,EAAAqjF,SAAWrjF,EAAKswF,kBAAkBv2E,eAAe/Z,CAQjE,CAACtB,SAAAsxF,EAAA,EAAA7vF,IAAA,YAAAgE,IAND,WACI,QAASvF,KAAK8xF,OAClB,GAAC,CAAAvwF,IAAA,YAAAC,MAMM,WAAS,IAAAuD,EAAA/E,KACZ,IAAIA,KAAK8xF,QACT,OAAA9xF,KAAK6hD,QAAQz/C,KAAKgY,KAAK8W,QAAK,EAC5B5wB,EAAAsC,KAAI,OAAQ,6BACZ5C,KAAK4S,aAAa,OAAQ5S,KAAK6xF,WAAW/+E,aACnC,kBAAM/N,EAAKstF,SAAS,CAC/B,GAAC,CAAA9wF,IAAA,UAAAC,MAEM,WAAO,IAAA8wF,GACV,EAAAhyF,EAAAsC,KAAI,OAAQ,6BACA,QAAZ0vF,EAAAtyF,KAAK8xF,eAAO,IAAAQ,GAAZA,EAAcxN,WACd9kF,KAAKoyF,UACT,GAAC,CAAA7wF,IAAA,cAAAC,MAEM,SAAYu4C,GAAe,IAAAw4C,EACzBx4C,IACL/5C,KAAKmyF,WAAW,CAAEK,QAAS,GAAIz4C,UAAShJ,WAASzwC,EAAAmG,eAAc2M,KACnD,QAAZm/E,EAAAvyF,KAAK8xF,eAAO,IAAAS,GAAZA,EAAcnwF,KAAK23C,GACvB,GAAC,CAAAx4C,IAAA,iBAAAC,MAEO,WAAgC,IAAA2E,EAAAnG,KAAjBssE,EAAKznE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,KAC3B7E,KAAKyD,QACD,SACA,WACI,IAAMgvF,EAAWtsF,EAAKsrF,eAAe74E,WACrC,GACI65E,EAASxtF,OAAS,GACwB,cAA1CwtF,EAASA,EAASxtF,OAAS,GAAG8rC,QAE9B,OAAO5qC,EAAKusF,eAAepmB,GAE/BnmE,EAAKksF,SACT,EACA/lB,EAER,GAAC,CAAA/qE,IAAA,WAAAC,MAEO,WACJxB,KAAK8xF,QAAU,KACf9xF,KAAKwxB,UAAU,OACnB,GAAC,CAAAjwB,IAAA,aAAAC,MAEO,SAAWkxE,GACXA,EAAI8f,UAASxyF,KAAK4xF,SAAWlf,EAAI8f,SACpB,aAAb9f,EAAI//D,KACJ3S,KAAK0xF,kBAAkBtvF,KAAK,CACxBgR,GAAE,OAAApP,UAAS1D,EAAA8mD,cAAa,IACxBorC,QAAS9f,EAAI8f,QACbz4C,QAAS24B,EAAI34B,QACb5yB,QAASioE,EAAOr5D,MAAM28C,EAAI34B,SAC1BhJ,QAAS2hC,EAAI3hC,SAAW,YACxB++C,SAAUpd,EAAGod,SACbxS,UAAWljE,KAAK8W,SAGpBlxB,KAAKyxF,eAAervF,KAAI,GAAA4B,OAAA+e,EACjB/iB,KAAKyxF,eAAe74E,YAAU,CACjC,CACIxF,GAAE,OAAApP,UAAS1D,EAAA8mD,cAAa,IACxBorC,QAAS9f,EAAI8f,QACbz4C,QAAS24B,EAAI34B,QACb5yB,QAASioE,EAAOr5D,MAAM28C,EAAI34B,SAC1BhJ,QAAS2hC,EAAI3hC,SAAW,YACxBusC,UAAWljE,KAAK8W,UAGP,aAAbwhD,EAAI//D,MACJ3S,KAAK0xF,kBAAkBtvF,KAAK,OAGpCpC,KAAK0yF,gBACT,KAACtB,CAAA,CA/IoB,CAAQ9wF,EAAA8H,cAAYxI,SAAhCwxF,0CAAW/oF,EAAAgV,mBAAA9U,EAAAG,qBAAA,qDAAX0oF,EAAW9zE,QAAX8zE,EAAW7zE,UAAAC,WAFR,SAEH4zE,CAAY,2ICvBzBvzF,EAAA,WACAyC,EAAAzC,EAAA,OACA2L,EAAA3L,EAAA,OACA+P,EAAA/P,EAAA,OACAoQ,EAAApQ,EAAA,OACAgQ,EAAAhQ,EAAA,OACA+M,EAAA/M,EAAA,OACA4P,EAAA5P,EAAA,OACA8P,EAAA9P,EAAA,OACAiQ,EAAAjQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACA80F,EAAA90F,EAAA,MACA6M,EAAA7M,EAAA,OACA+0F,EAAA/0F,EAAA,OACAg1F,EAAAh1F,EAAA,OACAi1F,EAAAj1F,EAAA,OACAuQ,EAAAvQ,EAAA,OACAqQ,EAAArQ,EAAA,OACAwQ,EAAAxQ,EAAA,OACA4Q,EAAA5Q,EAAA,OACAk1F,EAAAl1F,EAAA,OACAsb,EAAAtb,EAAA,OAEA6L,EAAA7L,EAAA,OACAm1F,EAAAn1F,EAAA,OAIAo1F,GAFAp1F,EAAA,OACAA,EAAA,OACAA,EAAA,QAEAq1F,GADAr1F,EAAA,OACAA,EAAA,QAGAs1F,GADAt1F,EAAA,OACAA,EAAA,QAQAu1F,GAJAv1F,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,QACAw1F,EAAAx1F,EAAA,OAEAy1F,GADAz1F,EAAA,OACAA,EAAA,QAGA01F,GAFA11F,EAAA,OACAA,EAAA,OACAA,EAAA,QAGA8rC,GAFA9rC,EAAA,OACAA,EAAA,OACAA,EAAA,QACA21F,EAAA31F,EAAA,OAGA41F,GAFA51F,EAAA,MACAA,EAAA,OACAA,EAAA,QACA61F,GAAA71F,EAAA,OAKA81F,GAJA91F,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,QAMA+1F,IALA/1F,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,YACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,iHAEMg2F,GAAqB,CACvBpmF,EAAA+B,sBACAvB,EAAA0B,cACA9B,EAAAsB,mBACAvE,EAAAgB,gBACAlB,EAAAgF,gBACAjC,EAAA+B,sBACA5E,EAAAgB,gBACAgC,EAAAsB,gBACAvB,EAAAsB,oBACAnB,EAAAuB,eACAsjF,EAAAmB,gBACA/lF,EAAAuB,yBACAtB,EAAAyB,eACAmjF,EAAAmB,mBACAlB,EAAAmB,eACAlB,EAAAmB,aACAV,EAAAW,cACAR,GAAAS,gBACA/lF,EAAA4B,iBACA9B,EAAA0B,kBACAvB,EAAA4B,eACAxB,EAAAyB,gBACA6iF,EAAAqB,qBACAj7E,EAAAO,uBAoDJ/Z,mBAa6B,eAAAC,GAAhBmP,GAAgBjP,EAAA,SAAAiP,KAAAhP,EAAAC,KAAA+O,GAAA,GAAAnP,UAAhBmP,6CAAgB,mDAAhBA,2DAHE,CAAC,CAAEzC,QAAS6mF,EAAA7iC,iBAAkB+jC,SAAU,KAAKlpF,QAAA,CAPpD7K,EAAAgZ,aACA9P,EAAAiC,YACAjC,EAAAwC,oBACAtC,EAAA8B,iBACAwnF,EAAA7mF,gBAAgBoN,WACbs6E,GAnFPpmF,EAAA+B,sBACAvB,EAAA0B,cACA9B,EAAAsB,mBACAvE,EAAAgB,gBACAlB,EAAAgF,gBACAjC,EAAA+B,sBACA5E,EAAAgB,gBACAgC,EAAAsB,gBACAvB,EAAAsB,oBACAnB,EAAAuB,eACAsjF,EAAAmB,gBACA/lF,EAAAuB,yBACAtB,EAAAyB,eACAmjF,EAAAmB,mBACAlB,EAAAmB,eACAlB,EAAAmB,aACAV,EAAAW,cACAR,GAAAS,gBACA/lF,EAAA4B,iBACA9B,EAAA0B,kBACAvB,EAAA4B,eACAxB,EAAAyB,gBACA6iF,EAAAqB,qBACAj7E,EAAAO,sBA+DwDs5E,EAAA7mF,mBAE/C4C,EAAgB,qCA1DzBmkF,EAAAoB,oBAAmB,kBAAA7rF,GAAA8rF,KA2C4BX,GAAA/H,4BAA2B,oBApB1EuH,EAAAoB,SAAQ,oCATR7qD,EAAA+B,wBAAuB,kBAAAjjC,GAAA8rF,KAAA5rF,GAAA8rF,UAAA5rF,GAAA6rF,eAAA3vE,GAAA4vE,mBAhBvB1B,EAAA2B,cAKAzB,EAAA0B,wBAAuB,uCAYvBrB,EAAAsB,uBAAsB,kBAAArsF,GAAAssF,QAAAtsF,GAAA8rF,KAAA5rF,GAAA8rF,UAjBtBxB,EAAA2B,cA6C+ChB,GAAA/H,4BAA2B,uCA1B1E4H,EAAAuB,sBAAqB,kBAAAvsF,GAAAssF,QAAAtsF,GAAA8rF,KAAA9rF,GAAAwsF,SAAAxsF,GAAAysF,aAAAzsF,GAAA0sF,gBAAAnwE,GAAAowE,qBAAApwE,GAAAqwE,gBAAArwE,GAAAswE,QAAApwE,GAAAqwE,0BAAArwE,GAAAswE,gBAAAtwE,GAAAuwE,yBAPrBnC,EAAAoC,uBAAsB,oBAAAjtF,GAAAktF,UAAAltF,GAAAmtF,SActBvC,EAAAwC,aAAY,oCAMZlC,EAAAmC,sBAAqB,kBAAArtF,GAAA8rF,KAAA5rF,GAAA8rF,UAAArvE,GAAA2wE,WAhCrB9C,EAAA2B,cAEA1B,EAAAoB,oBAUAhB,EAAAoC,uBAAsB,oBAAAjtF,GAAAktF,UAAAltF,GAAAmtF,SAAArtF,GAAAytF,cAAA,kKCtH1B,IAAAnsF,EAAAhM,EAAA,OACA+P,EAAA/P,EAAA,kGA8BQwK,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,eAAAlB,CAAoD,SAMxDA,EAAA+E,iEANc/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAAoc,MAINlmB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAsB,EAAAgV,QAAA9e,EAAA6mF,wFAGR7mF,EAAA8E,yBAAA,aAAA9E,CAGC,cAEOA,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,cAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAC,GAAA,IAAAC,EAAA7I,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAF,EAAA+kF,YAAW,GAEpB5tF,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,6CAVIA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAAsgF,YAAA,KASA7tF,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAAugF,aAAA,+BAIJ9tF,EAAA8E,yBAAA,WAAA9E,CAAc,YAINA,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,GAAahF,EAAA+E,wBAAA/E,6CAAbA,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA1C,EAAA0R,UA/CVtjB,mBAAmB,CAC5BwH,OAAQ,OACRC,MAAO,OACPwkC,UAAW,oBACXD,SAAU,qBAGdhsC,wBA+CkC,eAAAC,EAArByyE,EAAqB,WAuB9B,SAAAA,EACYpvB,EACyBhI,GAAuB,IAAA75C,EAAApB,KAAAD,EAAAC,KAAAqyE,GADhDryE,KAAAijD,cACyBjjD,KAAAi7C,QArBpBj7C,KAAA+tB,MAAQ,IAAIlkB,EAAAuV,aAEbpf,KAAAsB,MAAgBtB,KAAKi7C,MAAM35C,OAAS,UAEpCtB,KAAAmnB,QAAkBnnB,KAAKi7C,MAAM9zB,SAAW,gBAExCnnB,KAAAm2F,aAAuBn2F,KAAKi7C,MAAMk7C,cAAgB,SAElDn2F,KAAAk2F,YAAsBl2F,KAAKi7C,MAAMi7C,aAAe,SAEhDl2F,KAAAuuB,KAAwBvuB,KAAKi7C,MAAM1sB,MAAQ,CACvDq5C,MAAO,iBACPzgD,QAAS,QAGGnnB,KAAAo2F,aAAe,kBAAOh1F,EAAK6hD,YAAYmzC,cAAe,CAAI,EAE1Dp2F,KAAAq2F,YAAc,kBAAOj1F,EAAK6hD,YAAYmzC,cAAe,CAAK,CAKvE,CAEHt2F,SAAAuyE,EAAA,EAAA9wE,IAAA,YAAAC,MACO,WACHxB,KAAK+tB,MAAMzO,KAAK,CAAEkP,OAAQ,QAC9B,KAAC6jD,CAAA,CA/B6B,GA+B7BzyE,SA/BQyyE,0CAAqBhqE,EAAAC,4BAAAC,EAAA26C,cAAA76C,EAAAC,4BAyBlBsF,EAAAivB,iBAAe,kDAzBlBw1C,EAAqBtpE,UAAA,oBAAAyW,QAAA,CAAAuO,MAAA,SAAA7kB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,mmBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA5C1BhB,EAAA8E,yBAAA,WAAA9E,CAAQ,QACAA,EAAAgF,iBAAA,GAAWhF,EAAA+E,wBAAA/E,GAEnBA,EAAA0J,qBAAA,EAAAukF,EAAA,aAAAjuF,CAUO,EAAAkuF,EAAA,eAVPluF,CAUO,EAAAmuF,EAAA,yBAAAnuF,EAAAqd,yEAZCrd,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,EAAAhI,OAGH+G,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,QAAA5a,CAAgB,WAAAwd,GAYhBxd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,qGA4BAovD,CAAqB,qLCxElC,IAAAxoE,EAAAhM,EAAA,OAWA+0F,EAAA/0F,EAAA,OACA01F,EAAA11F,EAAA,OACAg1F,EAAAh1F,EAAA,OACAyC,EAAAzC,EAAA,OACA8b,EAAA9b,EAAA,uFAYoBwK,EAAA8E,yBAAA,YAQI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,uHANI/E,EAAA8/C,sBAAA,SAAAr2C,EAAA2kF,YAAAC,IAAA,UAAAruF,CAA8C,gBAAAyJ,EAAA2kF,YAAAC,GAAA,QAK9CruF,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAuE,EAAA6kF,eAAAD,IAAAE,EAAA,4BAeUvuF,EAAA8E,yBAAA,aAOE9E,EAAAgF,iBAAA,WACJhF,EAAA+E,mDAXJ/E,EAAAiZ,kCAAA,GAEKjZ,EAAAgF,iBAAA,GACChF,EAAA0J,qBAAA,EAAA8kF,EAAA,eAQKxuF,EAAAoZ,6HATNpZ,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA6iF,EAAAF,IAEIvuF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAimF,EAAAF,IAAA,KAAAE,EAAAF,0BAULvuF,EAAAs9C,6BAAA,gGAAAt9C,EAAA0J,qBAAA,EAAAglF,EAAA,6JACK1uF,EAAAwI,qBAAA,mBAAAuN,EAAAhV,SAAAwtF,GAAAvuF,CAGP,0BAAAA,EAAA2uF,0BAAA,EAAAvlF,EAAAilF,EAAAI,EAAAF,GAAAE,EAAAF,EAAAx4E,EAAAu4E,eAAAD,IAAAE,8BArBNvuF,EAAAiZ,kCAAA,GAGIjZ,EAAA0J,qBAAA,EAAAklF,EAAA,sBAAA5uF,CAYC,EAAA6uF,EAAA,0BAAA7uF,EAAAqd,kCAeLrd,EAAAoZ,gJA1BSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAoF,EAAA7M,SAAAwtF,GAAAvuF,CAAyB,WAAA4jD,6BA4B9B5jD,EAAA8E,yBAAA,YAAgC9E,EAAAgF,iBAAA,GAAahF,EAAA+E,uEAAb/E,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAkjF,EAAA,6BAvCxC9uF,EAAA8E,yBAAA,YAOI9E,EAAA0J,qBAAA,EAAAqlF,EAAA,sBAAA/uF,CA8Be,EAAAgvF,EAAA,0BAAAhvF,EAAAqd,kCAInBrd,EAAA+E,oJAtCI/E,EAAA8/C,sBAAA,SAAAzmC,EAAA+0E,YAAAC,IAAA,UAAAruF,CAA8C,gBAAAqZ,EAAA+0E,YAAAC,GAAA,QAKzCruF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,kBAAA+lF,EAAAvuF,CAA2B,WAAAyV,6BApB5CzV,EAAAiZ,kCAAA,EAAAjZ,CAA4D,KAEpDA,EAAA0J,qBAAA,EAAAulF,EAAA,YAAAjvF,CASM,EAAAkvF,EAAA,aA2CVlvF,EAAAoZ,iCAAApZ,2BArDcA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAAA+lF,yBAwDlBvuF,EAAAkB,oBAAA,oFAIAlB,EAAA8E,yBAAA,gBAGI9E,EAAAuI,qBAAA,uBAAA4mF,EAAAnvF,EAAA2I,wBAAAqsD,GAAAz/C,UAAAinC,EAAAx8C,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAyzC,EAAA4yC,YAAAn4E,KAAAk4E,GAAqB,GAEjCnvF,EAAA+E,mDAEG/E,EAAA8E,yBAAA,UACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAmE,EAAAgmF,OAAA,2BA7EpB/3F,uBAqGI,eAAAC,EADS+3F,EACT,SAAAh3F,GAAAC,EAAA+2F,EAAAh3F,GAAA,IAAAG,EAAAC,EAAA42F,GArGJ,SAAAA,IAAA,IAAAv2F,EAAArB,SAAAC,KAAA23F,+BA2GoBC,YAAa,EAEbx2F,EAAAy2F,UAAY,EAQZz2F,EAAAq1F,YAAwB,GAIxBr1F,EAAAgI,SAA6C,GAI5ChI,EAAAq2F,YAAc,IAAI5tF,EAAAuV,aAEnBhe,EAAA02F,YAAqC,IAAIjF,EAAAkF,mBACrD,IACF32F,EA4DLtB,SAAA63F,EAAA,EAAAp2F,IAAA,kBAAAC,MAvDU,WACHxB,KAAK83F,YAAYj7E,KAAO7c,KAAKg4F,MAC7Bh4F,KAAK83F,YAAYG,UAAYj4F,KAAK43F,WAAa53F,KAAKk4F,WAAa,KACjEl4F,KAAK83F,YAAYK,gBAAkB,SAAClmE,EAAQjJ,GACxC,QAAWznB,KAAO0wB,EAAG,CACjB,GACsB,iBAAXA,EAAE1wB,IACT0wB,EAAE1wB,GAAKqxB,cAAc/sB,SAASmjB,EAAE4J,eAEhC,OAAO,EACJ,GAAIX,EAAE1wB,KAASynB,EAClB,OAAO,EAGf,OAAO,CACX,CACJ,GAAC,CAAAznB,IAAA,cAAAC,MAEM,SAAY63B,GAAsB,IAiCnC++D,EAjCmCrzF,EAAA/E,KACjCq5B,EAAQg/D,YAAcr4F,KAAKq4F,aACvBr4F,KAAKq4F,sBAAsB1+E,EAAAoqE,WAC3B/jF,KAAK4S,aACD,OACA5S,KAAKq4F,WAAWvlF,UACZ,SAACpQ,GAAI,OAAMqC,EAAK+yF,YAAYp1F,KAAOA,CAAI,IAI/C1C,KAAK83F,YAAYp1F,KAAO1C,KAAKq4F,YAGjCh/D,EAAQu+D,aACR53F,KAAK83F,YAAYG,UAAYj4F,KAAK43F,WAC5B53F,KAAKk4F,WACL,MAEN7+D,EAAQxd,SACR7b,KAAK83F,YAAYj8E,QAAU7b,KAAK6b,QAAU,IAAI25B,OAAO5iB,eAErDyG,EAAQmvB,SAAWxoD,KAAKwoD,UACxBxoD,KAAK22F,eAAiB32F,KAAKwoD,QAAQ7sC,IAC/B,SAAC1Y,EAAGivC,GAAG,OACFntC,EAAK4xF,gBAAkB,IAAIzkD,IAAQjvC,EAAE2D,MAAM,KAAK8N,KAAK,IAAI,IAGjE1U,KAAKy2F,cACNz2F,KAAKy2F,YAAc,IAGnBp9D,EAAQi/D,YACRt4F,KAAKs4F,aAAej/D,EAAQi/D,WAAWC,gBAExB,QAAfH,EAAAp4F,KAAKk4F,kBAAU,IAAAE,GAAfA,EAAiBI,YAEzB,KAACb,CAAA,CAvFD,CAAQr3F,EAAA8H,cAAYxI,SADX+3F,qGAAoBl7D,GAApBk7D,EAAoB,qDAApBA,EAAoB5uF,UAAA,mBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,4BA+BlBupF,EAAA6F,aAAY,2BACZlF,EAAAmF,QAAO,wyDAjIdrwF,EAAA8E,yBAAA,iBAKI9E,EAAA0J,qBAAA,EAAA4mF,EAAA,qBAAAtwF,CAuDe,EAAAuwF,EAAA,uBAvDfvwF,CAuDe,EAAAwwF,EAAA,gBAvDfxwF,CAuDe,EAAAywF,EAAA,qBAiBnBzwF,EAAA+E,yBACA/E,EAAA8E,yBAAA,WACI9E,EAAAkB,oBAAA,qBAMJlB,EAAA+E,gCApFI/E,EAAAwI,qBAAA,aAAAvH,EAAAwuF,aAIiCzvF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAk/C,SA2D5BngD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,kBAAAvH,EAAAk/C,SAMoBngD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAAvH,EAAAk/C,SAQjBngD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAsuF,YAEJvvF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAAAvH,EAAAuuF,UAAAxvF,CAAsB,kBAAtBA,CAAsB,gbAiBzBsvF,CACT,iPCtHJ95F,EAAA,WACAi1F,EAAAj1F,EAAA,OACAgM,EAAAhM,EAAA,OAcAyC,EAAAzC,EAAA,0GAoBoBwK,EAAAs9C,6BAAA,4BADJt9C,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAAgnF,EAAA,sBAGJ1wF,EAAAoZ,2EAFSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,oBAAA+E,EAAAuR,QAAA9e,CAA4B,4BAAAuN,EAAAojF,oCAGrC3wF,EAAAiZ,kCAAA,GACIjZ,EAAAkB,oBAAA,4CACJlB,EAAAoZ,2EADSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAxI,EAAAsN,sBAAA,IAAApE,EAAA4V,SAAA9e,EAAA6mF,gDAGL7mF,EAAAs9C,6BAAA,4BADJt9C,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAAknF,EAAA,sBAGJ5wF,EAAAoZ,2EAFSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAAa,EAAAyV,QAAA9e,CAA2B,0BAAAqJ,EAAAhP,gCAXxC2F,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAmnF,EAAA,qBAAA7wF,CAIe,EAAA8wF,EAAA,qBAJf9wF,CAIe,EAAA+wF,EAAA,sBASnB/wF,EAAA+E,iEAdkD/E,EAAAwI,qBAAA,WAAAsB,EAAAQ,MAC/BtK,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,4BAKAxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,oCArBlBo5E,EAAiB,eAAArqF,EAAjBqqF,EAAiBnqF,EAG1B,SAAAmqF,EAAYvxE,GAAC3Y,EAAAC,KAAAiqF,GACTjqF,KAAK0C,KAAOgW,EAAEhW,KACd1C,KAAK2H,MAAQ+Q,EAAE/Q,OAAU,kBAAM,IAAI,CACvC,GAAC/H,SANQqqF,8GAAiB3sE,QAAjB2sE,EAAiB1sE,YAAjB0sE,CAAiB,IAD9BtqF,oBAAAsqF,EAUAtqF,yBAyBI,eAAA05F,EADS3D,EACT,SAAA/0F,GAAAC,EAAA80F,EAAA/0F,GAAA,IAAAG,EAAAC,EAAA20F,GAiCA,SAAAA,EACYzH,EACAqL,EACAC,GAAmB,IAAAn4F,EAAArB,SAAAC,KAAA01F,IAE3Bt0F,EAAAN,EAAAO,KAAArB,OAJQiuF,WACA7sF,EAAAk4F,WACAl4F,EAAAm4F,YAxBIn4F,EAAAo4F,UAAW,EAEXp4F,EAAAq4F,OAAQ,EAERr4F,EAAAkrE,MAAQ,EAEjBlrE,EAAAuR,KAA0C,WAIzCvR,EAAAs4F,aAA2B,KAIIt4F,EAAAu4F,QAAU,kBAAMv4F,EAAKwT,MAAM,EACxBxT,EAAAw4F,QAAU,kBAAMx4F,EAAKwT,MAAM,EACzBxT,EAAAy4F,QAAU,kBAClDz4F,EAAKq4F,MAAQr4F,EAAKwT,OAAS,EAAE,EACWxT,EAAA04F,QAAU,kBAClD14F,EAAKq4F,MAAQr4F,EAAKuG,QAAU,EAAE,EAACvG,CAQnC,CAACtB,SAAA41F,EAAA,EAAAn0F,IAAA,cAAAC,MAEM,SAAY63B,GACfr5B,KAAK+5F,kBAED/5F,KAAK05F,eACJrgE,EAAQ2gE,OAAS3gE,EAAQ4gE,OAAS5gE,EAAQlS,UAE3CnnB,KAAK4U,MAEb,GAAC,CAAArT,IAAA,cAAAC,MAEM,WACH04F,EAAAC,EAAAzE,EAAAvN,WAAA,cAAAnoF,MAAAqB,KAAArB,MACAA,KAAK2H,OACT,GAAC,CAAApG,IAAA,OAAAC,MAEM,WAAI,IAAAuD,EAAA/E,KACFA,KAAKmnB,SACVnnB,KAAKyD,QACD,OACA,WACQsB,EAAK00F,OAAS10F,EAAKunE,OACnBvnE,EAAKtB,QAAQ,UAAW,kBAAMsB,EAAK4C,OAAO,EAAE5C,EAAKunE,OAErDvnE,EAAKq1F,cACDr1F,EAAK20F,cAAc30F,EAAK4C,QACvB5C,EAAKs1F,UACEt1F,EAAKkpF,SAAS7B,cAAckO,wBAGxCv1F,EAAK20F,aAAe30F,EAAKu0F,SAASiB,OAAO,CACrCC,cAAez1F,EAAKy0F,SACpBiB,iBAAkB11F,EAAKu0F,SAClBniD,WACAujD,oBAAoB31F,EAAKkpF,UACzB0M,cAAc,CACX,CACIC,QAAS71F,EAAKi1F,OATZ,MAUFa,SACoB,QAAf91F,EAAKk1F,MACA,SACc,UAAdl1F,EAAKk1F,MACL,MACAl1F,EAAKk1F,QAdb,MAeFa,SAAU/1F,EAAKi1F,OAhBb,MAiBFe,SAAUh2F,EAAKk1F,OAhBb,WAoBlBl1F,EAAK20F,aAAasB,OAAOj2F,EAAKs1F,SAC1Bt1F,EAAKy0F,UACLz0F,EAAK6N,aACD,WACA7N,EAAK20F,aACAuB,gBACAnoF,UAAU,kBAAM/N,EAAK4C,OAAO,IAG7C,EACA,GAER,GAAC,CAAApG,IAAA,QAAAC,MAEM,WACHxB,KAAK+D,aAAa,QACd/D,KAAK05F,eACL15F,KAAK05F,aAAawB,UAClBl7F,KAAK05F,aAAe,KAE5B,GAAC,CAAAn4F,IAAA,cAAAC,MAEO,WACJxB,KAAK2S,KACuB,iBAAjB3S,KAAKmnB,QACN,OACAnnB,KAAKmnB,mBAAmBtd,EAAAsxF,YACxB,WACA,WACd,GAAC,CAAA55F,IAAA,kBAAAC,MAEO,WAAe,IAAA2E,EAAAnG,KACnBA,KAAKg5F,SAAWnvF,EAAAuxF,SAASb,OAAO,CAC5Bc,UAAW,CACP,CACI/uF,QAAS29E,EACToK,SAAU,CAAE3xF,KAAM1C,KAAK0C,KAAMiF,MAAO,kBAAMxB,EAAKwB,OAAO,KAG9DizD,OAAQ56D,KAAKu5F,WAErB,KAAC7D,CAAA,CAlID,CAAQp1F,EAAA8H,cAAYixF,SADX3D,0CAAsBrtF,EAAAC,4BAAAD,EAAAqkF,YAAArkF,EAAAC,4BAAAC,EAAA+yF,SAAAjzF,EAAAC,4BAAAD,EAAA+yF,UAAA,kDAAtB1F,EAAsB3sF,UAAA,0BAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,2BAyBpBypF,EAAAyI,UAAS,uKAzBXjyF,EAAAqwF,SAAS,gCAATrwF,EAAAswF,SAAS,kCAATtwF,EAAAuwF,SAAS,kCAATvwF,EAAAwwF,SAAS,qkBArBdzxF,EAAAoiF,uBAAA,GAEApiF,EAAA0J,qBAAA,EAAAypF,EAAA,oLAmBK9F,CACT,uICpDJ,IAAAjlE,EAAA5yB,EAAA,kBAEA8B,eAGyB,eAAAC,EAAZ67F,EAAY,oBAAAA,IAAA17F,EAAAC,KAAAy7F,EAAA,CAAA37F,SAAA27F,EAAA,EAAAl6F,IAAA,YAAAC,MACd,SAAUmQ,GACb,IAAMuf,EAAM9W,KAAK8W,MACbwqE,KAAOjrE,EAAAwkB,qBAAoB/jB,EAAKvf,GAC9BgqF,EAAYD,EAAO,EAEzB,IADAA,EAAOvyD,KAAK6L,IAAI0mD,IACL,EAEP,OAAOC,EAAY,OAAS,MACzB,GAAa,IAATD,EAEP,OAAOC,EAAY,WAAa,QAC7B,GAAID,EAAO,GAEd,OAAOC,EAAS,MAAA33F,OAAS03F,EAAI,WAAA13F,OAAY03F,EAAI,QAC1C,GAAIA,EAAO,KAAS,CAEvB,IAAMxyD,EAAQC,KAAKC,MAAMsyD,EAAO,IAChC,OAAOC,EAAS,MAAA33F,OACJklC,EAAK,SAAAllC,OAAkB,IAAVklC,EAAc,GAAK,MAAG,EACzCzY,EAAAiY,QAAO/2B,EAAM,eACZ+pF,EAAO,OAEDvyD,KAAKC,MAAMsyD,EAAQ,OACzBC,EACDlrE,EAAAiY,QAAO/2B,EADNgqF,EACY,cACA,WACZD,EAAO,QAEDvyD,KAAKC,MAAMsyD,EAAQ,OACzBC,EACDlrE,EAAAiY,QAAO/2B,EADNgqF,EACY,cACA,eAEhB,UACX,KAACF,CAAA,CAnCoB,GAmCpB77F,SAnCQ67F,yCAAY,8DAAZA,EAAY1jE,MAAA,IAAZ0jE,CAAY,4NCLzB,IAAA9hF,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAGA8oC,GADA9oC,EAAA,OACAA,EAAA,QAKA+9F,GAJA/9F,EAAA,OAIAA,EAAA,kEAuE4BwK,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,2CAKK9E,EAAAgF,iBAAA,GAAShF,EAAA+E,yBAElB/E,EAAAoZ,oFALQpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAAsN,sBAAA,IAAAkmF,GAAAxzF,EAAAksC,yBAGClsC,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA4nF,6BAGTxzF,EAAAiZ,kCAAA,GACIjZ,EAAAgF,iBAAA,QAAChF,EAAA8E,yBAAA,aASI9E,EAAAgF,iBAAA,YAAMhF,EAAA+E,yBACV/E,EAAAgF,iBAAA,QACLhF,EAAAoZ,mHANQpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAqP,EAAA47E,aAAAzzF,CAAwB,OAAAwzF,EAAxBxzF,CAAwB,WAAxBA,CAAwB,yCAOhCA,EAAAiZ,kCAAA,GAA+BjZ,EAAAgF,iBAAA,GAE7BhF,EAAAoZ,oFAF6BpZ,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA4nF,6BA5BvCxzF,EAAA8E,yBAAA,YAKI9E,EAAAiZ,kCAAA,MACIjZ,EAAA0J,qBAAA,EAAAgqF,EAAA,sBAAA1zF,CAQe,EAAA2zF,EAAA,sBARf3zF,CAQe,EAAA4zF,EAAA,uBAiBnB5zF,EAAAoZ,kCACJpZ,EAAA+E,gFA7BI/E,EAAA+rD,sBAAA,YAAA39C,EAAA9D,KAAAkpF,IAEcxzF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAAA4F,EAAA9D,KAAAkpF,IACKxzF,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,uBASAxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mDA7C3BxI,EAAA8E,yBAAA,UAAA9E,CAMC,YAIOA,EAAAgF,iBAAA,gCACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,SAOI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,SAOI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAAmqF,EAAA,cAiCJ7zF,EAAA+E,gFArDQ/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAAgoF,EAAA7e,UAAA,uBAGAj1E,EAAAiF,oBAAA,GAAAjF,EAAAgiF,qBAAA,yBAAAz0E,EAAAs9D,OAAAipB,EAAAxpF,MAAA,sBAMAtK,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4uF,EAAAxpF,KAAA,KAGAtK,EAAAiF,oBAAA,GAAAjF,EAAAgiF,qBAAA,0BAAAz0E,EAAAs9D,OAAAipB,EAAA9e,SAAA,uCAMAh1E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4uF,EAAA9e,QAAA,KAIgBh1E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAsrF,EAAAz5F,gCA6CpB2F,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,iCACJhF,EAAA+E,oEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,YAAA8T,EAAAhZ,EAAAsN,sBAAA,IAAAjE,EAAA0qF,gBAAA,KAAA/6E,EAAApc,SAAA,0EAtFhBoD,EAAA8E,yBAAA,UAAA9E,CAGC,mCAKOA,EAAA0J,qBAAA,EAAAsqF,EAAA,4CAgEJh0F,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,CAEC,eAKOA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAmd,GAAA,IAAAhY,EAAA9N,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAA+E,EAAA0F,OAAAzZ,KAAA2O,GAAmB,iCAJxC1I,EAAA+E,yBAQA/E,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAuqF,EAAA,6CAGAj0F,EAAAgF,iBAAA,mCACJhF,EAAA+E,wBAAA/E,mDA9EyCA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,kBAAAxI,EAAAsN,sBAAA,IAAAxD,EAAAiqF,eAAA/zF,CAEnD,uBAAA8J,EAAAoa,WAkEclkB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAxD,EAAA0J,SAMyBxT,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAuB,EAAA/J,EAAAsN,sBAAA,KAAAxD,EAAA0J,SAAA,KAAAzJ,EAAAnN,QAGzBoD,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAAya,EAAA3f,EAAAsN,sBAAA,MAAAxD,EAAAoqF,OAAA,KAAAv0E,EAAA/iB,OAAA,MAjHpB,IAAMu3F,EAAY,CACdn6F,QAAS,mBACTo6F,QAAS,gBACTC,IAAK,mBAEL95F,IAAG,iBACHN,KAAI,UACJ43E,KAAI,mBACJnH,MAAK,iBACLhtE,MAAK,eAGH42F,EAAa,CACf,OACA,UACA,QACA,SACA,OACA,MACA,QAGJh9F,wBAkGmC,eAAAC,EAAtBo1F,EAAsB,SAAAvtD,GAAA7mC,EAAAo0F,EAAAvtD,GAAA,IAAA3mC,EAAAC,EAAAi0F,GAoB/B,SAAAA,EACY4H,EACAC,GAAuB,IAAAz7F,EAAArB,SAAAC,KAAAg1F,IAE/B5zF,EAAAN,EAAAO,KAAArB,OAHQ48F,QACAx7F,EAAAy7F,UArBIz7F,EAAA2uF,MAAO,EACP3uF,EAAA8xE,OAASspB,EACTp7F,EAAA06F,aAAeF,EAAAkB,qBACf17F,EAAAya,OAAS,IAAIlC,EAAAqB,gBAAwB,IACrC5Z,EAAAm7F,KAAO,IAAI5iF,EAAAqB,gBAA+B,IAC1C5Z,EAAAg7F,iBAAgBziF,EAAA+I,eAAc,CAC1CthB,EAAKya,OACLza,EAAKm7F,OACNx5F,QACC3C,EAAAub,KAAI,SAAAzV,GAAA,IAAA6B,EAAA6a,EAAA1c,EAAA,GAAE8iB,EAACjhB,EAAA,GAAM,OAAAA,EAAA,GACJ8T,OACD,SAAC5Y,GAAC,OACEA,EAAE0P,KAAKigB,cAAc/sB,SAASmjB,EAAE4J,gBAChC3vB,EAAEo6E,QAAQzqD,cAAc/sB,SAASmjB,EAAE4J,gBACnC,GAAA5uB,OAAGf,EAAEP,MAAOkwB,cAAc/sB,SAASmjB,EAAE4J,cAAc,EAC1D,IAEPxxB,CAOF,CAACtB,SAAAk1F,EAAA,EAAAzzF,IAAA,WAAAC,MAEM,WAAQ,IAAAuD,EAAA/E,KACXA,KAAK4S,aACD,OACA5S,KAAK48F,MAAMp6F,QAAQsQ,UAAU,SAACib,GAAK,OAC/BhpB,EAAKw3F,KAAKn6F,KAAI,GAAA4B,OAAA+e,EAAKhe,EAAKw3F,KAAK3jF,YAAU,CAAEmV,IAAO,IAGxD/tB,KAAK4S,aACD,SACA5S,KAAK68F,QAAQ9qE,OACT,CAAC,UAAW,aACZ,kBAAOhtB,EAAKgrF,MAAQhrF,EAAKgrF,IAAI,GAGzC,GAAC,CAAAxuF,IAAA,OAAAC,MAEM,SAAKsa,GACR,MACoB,iBAATA,GACP6gF,EAAWvtE,KAAK,SAACH,GAAK,OAAKnT,EAAKyhE,WAAWtuD,EAAM,GAE1C,OACAnT,aAAgB2N,OAChB,SAEJ,QACX,GAAC,CAAAloB,IAAA,YAAAC,MAEM,SAAUyB,EAAW6Y,GACxB,OAAOA,GAAMwhE,SACjB,KAAC0X,CAAA,CAzD8B,CAAQruD,EAAAv+B,cAAYxI,SAA1Co1F,0CAAqB3sF,EAAAC,4BAAAC,EAAA4zE,sBAAA9zE,EAAAC,4BAAAG,EAAAsoE,gBAAA,kDAArBikB,EAAqBjsF,UAAA,oBAAAwW,OAAA,CAAAwwE,KAAA,QAAA/mF,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,45CAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GA/F1BhB,EAAA0J,qBAAA,EAAAgrF,EAAA,oBAEK10F,EAAAwI,qBAAA,OAAAvH,EAAAymF,SA6FAiF,CAAsB,sICnInC,IAAAvkE,EAAA5yB,EAAA,kBAEA8B,eAGyB,eAAAC,EAAZo9F,EAAY,oBAAAA,IAAAj9F,EAAAC,KAAAg9F,EAAA,CAAAl9F,SAAAk9F,EAAA,EAAAz7F,IAAA,YAAAC,eAOJyD,GAAwC,IAAxBg4F,EAAAp4F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACzB+M,KAAW6e,EAAAwY,gBAAe,CAAEC,MAAOC,KAAKC,MAAMnkC,EAAS,IAAKokC,QAASpkC,EAAS,KAClF,OAAIg4F,IACArrF,EAAWA,EAAS8rB,QAAQ,OAAQ,KAAKA,QAAQ,SAAU,KAAKA,QAAQ,MAAO,KAE5E9rB,CACX,KAACorF,CAAA,CAboB,GAapBp9F,SAbQo9F,yCAAY,8DAAZA,EAAYjlE,MAAA,IAAZilE,CAAY,kJCJzBr9F,YAGsB,eAAAC,EAATs9F,EAAS,oBAAAA,IAAAn9F,EAAAC,KAAAk9F,EAAA,CAAAp9F,SAAAo9F,EAAA,EAAA37F,IAAA,YAAAC,eAODA,GACb,OAAOA,EAAM27F,QADet4F,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,EAEjD,KAACq4F,CAAA,CATiB,GASjBt9F,SATQs9F,yCAAS,6DAATA,EAASnlE,MAAA,IAATmlE,CAAS,gJCJtBr/F,EAAA,oHAWQwK,EAAA8E,yBAAA,UAAA9E,CASC,WACuBA,EAAAgF,iBAAA,GAAqBhF,EAAA+E,yBACzC/E,EAAA8E,yBAAA,cAAa9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA4W,GAAA,IAAAhS,EAAAvN,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAwE,EAAAjO,QAAO,GACzBU,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,+CAVnBA,EAAAoX,sBAAA,mBAAAtN,EAAA2uE,OAAAnuE,OAAAR,EAAA2uE,OAAAnuE,KAAAtK,CAAwD,2BAAA8J,EAAA2uE,OAAAnuE,OAAAR,EAAA2uE,OAAAnuE,KAAxDtK,CAAwD,sBAAA8J,EAAA2uE,OAAAnuE,KAAxDtK,CAAwD,8BAAA8J,EAAA2uE,OAAAnuE,KAAxDtK,CAAwD,qBAAA8J,EAAA2uE,OAAAnuE,KAAxDtK,CAAwD,6BAAA8J,EAAA2uE,OAAAnuE,MAQpCtK,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA,MAAA9B,EAAA2uE,OAAA,KAAA3uE,EAAA2uE,OAAA35D,UAbhCxnB,wBA4BkC,eAAAC,EAArBw9F,EAAqB,WAY9B,SAAAA,EAAoBp8F,GAA0BjB,EAAAC,KAAAo9F,GAA1Bp9F,KAAAgB,WAA6B,CAAClB,SAAAs9F,EAAA,EAAA77F,IAAA,aAAAgE,IAXlD,WAAqB,IAAA83F,EACjB,QACgB,QAAZA,EAACr9F,KAAK8gF,cAAM,IAAAuc,GAAXA,EAAal2E,UACd2zD,aAAajzE,QAAQ,uBAAyB7H,KAAK8gF,OAAO1tE,EAElE,GAAC,CAAA7R,IAAA,SAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,qBAC9B,GAAC,CAAAhE,IAAA,QAAAC,MAIM,WAAK,IAAA87F,EACRxiB,aAAa52E,QAAQ,qBAAgC,QAAXo5F,EAAAt9F,KAAK8gF,cAAM,IAAAwc,OAAA,EAAXA,EAAalqF,KAAM,GACjE,KAACgqF,CAAA,CAhB6B,GAgB7Bx9F,SAhBQw9F,0CAAqB/0F,EAAAC,4BAAAC,EAAAC,iBAAA,kDAArB40F,EAAqBr0F,UAAA,oBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,oPAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAzB1BhB,EAAA0J,qBAAA,EAAAwrF,EAAA,mBAQKl1F,EAAAwI,qBAAA,QAAAvH,EAAAk0F,2LAiBAJ,CAAqB,6NCpClC,IAAAh9F,EAAAvC,EAAA,OACAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,UAEAA,EAAA,mFAKQwK,EAAA8E,yBAAA,WAII9E,EAAAgF,iBAAA,6DACJhF,EAAA+E,gDACA/E,EAAA8E,yBAAA,WAKI9E,EAAAkB,oBAAA,mBACJlB,EAAA+E,gCADiB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBAdzBlR,yBA8BoC,eAAAC,EAAvB69F,EAAuB,SAAA98F,GAAAC,EAAA68F,EAAA98F,GAAA,IAK/BE,EAL+BC,EAAAC,EAAA08F,GAOhC,SAAAA,EACYx8F,EACAD,GAA0B,IAAAI,EAAArB,SAAAC,KAAAy9F,IAElCr8F,EAAAN,EAAAO,KAAArB,OAHQiB,OACAG,EAAAJ,YAA0BI,CAGtC,CAACtB,SAAA29F,EAAA,EAAAl8F,IAAA,SAAAgE,IATD,WACI,SAAOlF,EAAAq9F,WACX,GAAC,CAAAn8F,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KASM,SAAAC,IAAA,IAAAmD,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAApC,KAAKijB,SAAU,EAAK/gB,EAAAE,KAAA,EACdpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAAAhB,SAAAE,KAAA,EACvDpC,KAAKgB,UAAU8B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAClElD,KAAKg2B,SACD,YACA,aACQ,EAAC31B,EAAA8rF,gBAAe,EAAC9rF,EAAAiD,WACrByB,EAAKke,SAAU,EACfle,EAAKmxB,cAAc,aACvB,EACA,KACF,wBAAAh0B,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACL,SAAA2E,IAAA,OAAA9D,EAAA+D,MAAA5E,KAAA6E,UAAA,MAAA44F,CAAA,CA3B+B,CAAQn9F,EAAA8H,cAAYxI,SAA3C69F,0CAAsBp1F,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAtBi1F,EAAsB10F,UAAA,qBAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,ieAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GA3B3BhB,EAAA0J,qBAAA,EAAA4rF,EAAA,YAAAt1F,CAKM,EAAAu1F,EAAA,mBAJDv1F,EAAAwI,qBAAA,QAAAvH,EAAAu0F,QAMAx1F,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA2Z,ulCAoBAw6E,CAAuB,oKCpCpC5/F,EAAA,WACAK,EAAAL,EAAA,uFAaYwK,EAAA8E,yBAAA,QAAA9E,CAQC,UARDA,CAQC,WAKWA,EAAAkB,oBAAA,gBACJlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAAoB9E,EAAAgF,iBAAA,GAAehF,EAAA+E,wBAAA/E,6BARvCA,EAAAwI,qBAAA,OAAAitF,EAAA5c,KAAA74E,EAAAksC,yBAMkClsC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAitF,EAAAvvE,MAEVlmB,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA6pF,EAAAxqF,OA1BxC3T,uBAyCiC,eAAAC,EAApBm+F,EAAoB,WAU7B,SAAAA,EACuC9iD,EAC3Bj6C,GAA0B,IAAAI,EAAApB,KAAAD,EAAAC,KAAA+9F,GADC/9F,KAAAi7C,QAC3Bj7C,KAAAgB,YANIhB,KAAA2H,MAAQ,WAAK,IAAAqiF,EACf,QAAVA,EAAA5oF,EAAK65C,aAAK,IAAA+uC,GAAVA,EAAYriF,OAChB,CAKG,CAAC7H,SAAAi+F,EAAA,EAAAx8F,IAAA,QAAAgE,eAVA,OAAOvF,KAAKgB,UAAUuE,IAAI,aAAe,EAC7C,KAACw4F,CAAA,CAJ4B,GAI5Bn+F,SAJQm+F,0CAAoB11F,EAAAC,4BAWjBpK,EAAA+rF,mBAAiB5hF,EAAAC,4BAAAC,EAAAC,iBAAA,kDAXpBu1F,EAAoBh1F,UAAA,mBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,2OAhCEsiB,UAAAC,MAAAC,EAAA,gjBAN3BrnB,EAAA8E,yBAAA,WAEI9E,EAAAuI,qBAAA,0BAAStH,EAAA3B,OAAO,GAEhBU,EAAA8E,yBAAA,UAAA9E,CAAsD,gBACvBA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,KAAiCvlB,EAAA+E,wBAAA/E,GAErCA,EAAA0J,qBAAA,EAAAisF,EAAA,WAkBJ31F,EAAA+E,gCAfyB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA23E,uRA2BpB8c,CAAoB,sMCtCrB11F,EAAA8E,yBAAA,OAII9E,EAAAgF,iBAAA,GACAhF,EAAAoiF,uBAAA,GACJpiF,EAAA+E,iEAJI/E,EAAAgiF,sBAAA,MAAAl4E,EAAAoc,KAAA,KAAApc,EAAAoc,KAAAq5C,QAAAz1D,EAAAo4E,WAEAliF,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,UAAA4E,EAAAoc,KAAA,KAAApc,EAAAoc,KAAApH,QAAA,+BAGJ9e,EAAAkB,oBAAA,gFAGIlB,EAAAwI,qBAAA,MAAAxI,EAAA8L,sBAAA,IAAAyB,EAAA2Y,KAAAipD,IAAA,YAAAnvE,EAAAksC,sCAdhB50C,gBA0B0B,eAAAC,EAAbg1F,EAAa90F,EA1B1B,SAAA80F,IAAA70F,EAAAC,KAAA40F,GA2BoB50F,KAAAuqF,UAAoB,mBAGvC3qF,SAJYg1F,yCAAa,kDAAbA,EAAa7rF,UAAA,wBAAAwW,OAAA,CAAAgrE,UAAA,YAAAh8D,KAAA,QAAAi8D,mBAAA/4E,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,yKAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCAvBlBhB,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAksF,EAAA,UAAA51F,CAMI,EAAA61F,EAAA,aAMR71F,EAAA+E,gCAXS/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAAilB,MAAA,QAAAjlB,EAAAilB,KAAA5b,MAQAtK,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAilB,MAAA,QAAAjlB,EAAAilB,KAAA5b,gKAaJiiF,CAAa,wLCjBVvsF,EAAAkB,oBAAA,4DAIIlB,EAAAwI,qBAAA,SAAAstF,EAAA3wF,KAAA2wF,6BAVR91F,EAAA8E,yBAAA,WAMI9E,EAAA0J,qBAAA,EAAAqsF,EAAA,aAMJ/1F,EAAA+E,+EARI/E,EAAA8/C,sBAAA,+BAAAh2C,EAAAmxE,OAAA,MAKKj7E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAstF,0BAIT91F,EAAA8E,yBAAA,UAAA9E,CAGC,iBAC8BA,EAAAgF,iBAAA,yBAAmBhF,EAAA+E,yBAC9C/E,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,eAAShF,EAAA+E,wBAAA/E,iEAEhBA,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAA8O,EAAAojE,OAAApjE,EAAAojE,OAA2B,EAAC,GAE5Bj7E,EAAA8E,yBAAA,iBAA2B9E,EAAAgF,iBAAA,kBAAYhF,EAAA+E,wBAAA/E,6CAHvCA,EAAAwI,qBAAA,eAAAU,EAAA+xE,sEAKJj7E,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAqqB,GAAA,IAAAtb,EAAA1X,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAA2O,EAAAujE,OAAAvjE,EAAAujE,OAA2B,EAAC,GAE5Bj7E,EAAA8E,yBAAA,iBAA2B9E,EAAAgF,iBAAA,mBAAahF,EAAA+E,wBAAA/E,6CAHxCA,EAAAwI,qBAAA,WAAAa,EAAA4xE,SAAA,MAAA5xE,EAAAkZ,OAAA,KAAAlZ,EAAAkZ,OAAA3lB,QAAA,4BASAoD,EAAAkB,oBAAA,iEAEIlB,EAAAoX,sBAAA,eAAA1B,EAAAulE,SAAA+a,6BANRh2F,EAAA8E,yBAAA,YAII9E,EAAA0J,qBAAA,EAAAusF,EAAA,iBAMJj2F,EAAA+E,iEAHwB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAK,EAAA0Z,SAjDpCjrB,yBAqEmC,eAAAC,EAAtBk1F,EAAsBh1F,EArEnC,SAAAg1F,IAAA/0F,EAAAC,KAAA80F,GAsEoB90F,KAAA4qB,OAAmB,GAE5B5qB,KAAAsjF,OAAS,IACnB1jF,SAJYk1F,yCAAsB,kDAAtBA,EAAsB/rF,UAAA,qBAAAwW,OAAA,CAAAqL,OAAA,UAAA1hB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,grDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlE3BhB,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAwsF,EAAA,YAAAl2F,CAYM,EAAAm2F,EAAA,YAZNn2F,CAYM,EAAAo2F,EAAA,eAZNp2F,CAYM,EAAAq2F,EAAA,eAZNr2F,CAYM,EAAAs2F,EAAA,aAqCVt2F,EAAA+E,gCA9C0B/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAshB,QAYjBviB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAAAvH,EAAAshB,QAAAthB,EAAAshB,OAAA3lB,SAOAoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAvH,EAAAshB,OAAA,KAAAthB,EAAAshB,OAAA3lB,QASAoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAvH,EAAAshB,OAAA,KAAAthB,EAAAshB,OAAA3lB,QASAoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAvH,EAAAshB,OAAA,KAAAthB,EAAAshB,OAAA3lB,mNAyBJ6vF,CAAsB,gQCvEnCj3F,EAAA,WAQAyC,EAAAzC,EAAA,OASA8b,GANA9b,EAAA,OACAA,EAAA,MAKAA,EAAA,QACAuC,EAAAvC,EAAA,mLAgCYwK,EAAAkB,oBAAA,yBAGIlB,EAAAwI,qBAAA,wCAEJxI,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,YAMAlB,EAAA8E,yBAAA,UACI9E,EAAAgF,iBAAA,qCACJhF,EAAA+E,wBAAA/E,2CADIA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAAsN,sBAAA,IAAAC,EAAAgpF,2BAAA,mEAsCQv2F,EAAA8E,yBAAA,OAAA9E,CAA6C,WAA7CA,CAA6C,aAGjCA,EAAAgF,iBAAA,GAA0BhF,EAAA+E,yBAE9B/E,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,uBAAA2oD,EAAAlxD,EAAA2I,wBAAAa,GAAA+L,UAAA9L,EAAAzJ,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAAU,EAAA+sF,SAAAtlC,GAAc,GAGvBlxD,EAAA8E,yBAAA,iBACK9E,EAAAgF,iBAAA,aAAOhF,EAAA+E,wBAAA/E,iCAXZA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAgsD,EAAAulC,WAAAxrF,KAAA,8BALhBjL,EAAA8E,yBAAA,QAAA9E,CAAiC,aACKA,EAAAgF,iBAAA,aAAOhF,EAAA+E,yBACzC/E,EAAA0J,qBAAA,EAAAgtF,EAAA,aAmBJ12F,EAAA+E,iEAnByB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAa,EAAAstF,sBA7DjDr/F,sBAqGiC,eAAAC,EAApBq/F,EAAoB,SAAAt+F,GAAAC,EAAAq+F,EAAAt+F,GAAA,IAyD5BE,EAzD4BC,EAAAC,EAAAk+F,GAoD7B,SAAAA,EACYrlF,EACA3Y,GAAyB,IAAAG,EAAArB,SAAAC,KAAAi/F,IAEjC79F,EAAAN,EAAAO,KAAArB,OAHQ4Z,SACAxY,EAAAH,OA9CLG,EAAA89F,iBAAqC,UAErC99F,EAAA+9F,qBAA4B,KAK5B/9F,EAAAg+F,cAA+B,KAC/Bh+F,EAAAi+F,eAAgC,KAChCj+F,EAAAw9F,0BAAoC,GACpCx9F,EAAAk+F,oBAA8B,GAC9Bl+F,EAAAm+F,YAAwC,KAE/Bn+F,EAAA2U,UAAY3U,EAAKH,KAAKkX,cACtB/W,EAAAyU,SAAWzU,EAAKH,KAAKiX,gBACrB9W,EAAAqU,YAAc,SAACkJ,GAAC,OAAMvd,EAAKH,KAAK4U,SAAW8I,CAAC,EAE5Cvd,EAAAqhB,UAAS9I,EAAA+I,eAAc,CACnCthB,EAAKyU,SACLzU,EAAKwY,OAAO+I,UACb5f,QACC3C,EAAAyb,QAAO,SAAA3V,GAAG,QAAH0c,EAAA1c,EAAA,GAAG,EAAS,MACnB9F,EAAAub,KAAI,SAAAkH,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAK,OACL,CACIzP,GAAIhS,EAAKH,KAAK4U,SAASzC,GACvBE,KAAM,eACTtP,OAAA+e,EACE3hB,EAAKH,KAAK+hB,kBALRF,EAAA,KAK8B,IAGpC1hB,EAAAo+F,YAAqB,GACrBp+F,EAAAq+F,eAA6B,GAC7Br+F,EAAAs+F,cAA0C,GAAGt+F,CAiBpD,CAACtB,SAAAm/F,EAAA,EAAA19F,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAED,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAApC,KAAKijB,SAAU,EAAK/gB,EAAAE,KAAA,EACdpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OAC/D,OAAAlD,KAAKyV,YAAYzV,KAAKiB,KAAK4U,UAAU3T,EAAAE,KAAA,EACZpC,KAAKyiB,OAAO1f,QAAK3C,EAAA2b,MAAK,IAAI7Y,YAAW,OAA9D,OAAAlD,KAAKw/F,YAAWt9F,EAAA4B,KAAA5B,EAAAE,KAAA,EACYpC,KAAKiB,KAAKkX,cACjCpV,QAAK3C,EAAA2b,MAAK,IACV7Y,YAAW,OAFhB,OAAAlD,KAAKy/F,eAAcv9F,EAAA4B,KAIf9D,KAAK2/F,qBACL3/F,KAAKu/F,YAAcv/F,KAAK2/F,oBAC3Bz9F,EAAAE,KAAA,GACKpC,KAAK4/F,mBAAkB,QAAA19F,SAAAE,KAAA,GAEvBpC,KAAK6/F,cAAa,QACxB7/F,KAAK8/F,iBAEL9/F,KAAK+/F,uBAAuB,yBAAA79F,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAC/B,SAAA2E,IAAA,OAAA9D,EAAA+D,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,cAAAC,MAAA,eAAAw+F,EAAAv+F,EAAAC,IAAAC,KAED,SAAAwD,EAAkBqoF,GAAqB,OAAA9rF,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,WAC/BorF,EAAOjmE,SAAUimE,EAAO1rC,QAAO,CAAAz8C,EAAAjD,KAAA,QAAAiD,SAAAjD,KAAA,EACzBpC,KAAKigG,oBAAmB,OAAA56F,SAAAjD,KAAA,EACxBpC,KAAKkgG,aAAY,OAE3BlgG,KAAKmgG,mBACLngG,KAAKijB,SAAU,EAAM,wBAAA5d,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IACxB,gBAAAogG,EAAApjF,GAAA,OAAAgjF,EAAAp7F,MAAA5E,KAAA6E,UAAA,EATA,IASA,CAAAtD,IAAA,kBAAAC,MAED,WAAe,IAAA6+F,EAAAt7F,EAAA/E,KACc,QAAzBqgG,EAAArgG,KAAKsgG,4BAAoB,IAAAD,GAAzBA,EAA2BE,YACvB,QACA,SAAC56F,EAAe6e,GACZ,IAAMg8E,EAAez7F,EAAK07F,gBAAgB96F,EAASyN,IAC/CotF,GACAA,EAAa95E,SAASlC,EAE9B,EAER,GAAC,CAAAjjB,IAAA,cAAAC,MAED,WASI,OAAAxB,KAAK0gG,iBAAmB,CACpBjqD,QAASO,SAAS4oC,eAAe,gBACjCh+B,OAAQ,CAAE++C,IAAK3gG,KAAKo/F,cAAewB,IAAK5gG,KAAKq/F,gBAC7C/3E,KAAM,GACNu5E,QAAS,IAEb7gG,KAAK8gG,kBAAoB,IAAIC,YAAYC,QAAQC,eAC7CjhG,KAAK0gG,kBAGT1gG,KAAKsgG,qBAAuB,IAAIS,YAAYG,YAAY,CACpDF,QAAShhG,KAAK8gG,oBAEV9gG,KAAKmhG,oBAAsBnhG,KAAK8gG,kBAAkBM,QAC9D,GAAC,CAAA7/F,IAAA,iBAAAC,MAED,WACI,IAAM6/F,EACF,IAAIN,YAAYO,WAAWC,mBAC/BvhG,KAAKwhG,wCACD,IAAIT,YAAYU,SAASC,kBACrBL,GAKRrhG,KAAK2hG,yCACD,IAAIZ,YAAYO,WAAWM,mBAJG,CAC9BC,YAAa7hG,KAAKsgG,sBAM1B,GAAC,CAAA/+F,IAAA,mBAAAC,MAAA,eAAAsgG,EAAArgG,EAAAC,IAAAC,KAED,SAAAsE,IAAA,IAAA87F,EAAAC,EAAAC,EAAApsF,EAAAqsF,EAAAC,EAAAC,EAAA,OAAA1gG,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EACoD,QADpD2/F,EAC2B/hG,KAAKsgG,4BAAoB,IAAAyB,OAAA,EAAzBA,EAA2BM,cAAa,OAAzDxsF,OACAqsF,EACM,OAFNrsF,EAAQzP,EAAAtC,OAEY,QAAdk+F,EAARnsF,EAAUysF,oBAAY,IAAAN,GAAQ,QAARA,EAAtBA,EAAwBO,cAAM,IAAAP,GAAc,QAAdA,EAA9BA,EAAgCQ,oBAAY,IAAAR,OAAA,EAA5CA,EAA8CxgG,MAC5C2gG,EAAQD,GAAct7F,MAAM,OAAO+U,IAAI,SAAC8mF,IAAI,OAAKA,GAAK77F,MAAM,IAAI,GACtE5G,KAAK0/F,cAAgByC,GAAO3lE,OAAO,SAACkmE,GAAW5kE,GAAkB,IAAArL,EAAA7P,EAAAkb,EAAA,GAC7D4kE,UADiDjwE,EAAA,IAAOA,EAAA,GAEjDiwE,EACX,EAAG,IAAIt8F,EAAAhE,KAAA,EACoD,QADpD6/F,EAC2BjiG,KAAKsgG,4BAAoB,IAAA2B,OAAA,EAAzBA,EAA2BU,WAAU,QAAjEP,EAAWh8F,EAAAtC,OACE9D,KAAK0/F,eAEpB1/F,KAAK4Z,OAAO6lC,SADKz/C,KAAK0/F,cAAc0C,IAEvC,yBAAAh8F,EAAA1B,OAAA,EAAAuB,EAAAjG,KAAA,IACJ,gBAAAmgG,IAAA,OAAA2B,EAAAl9F,MAAA5E,KAAA6E,UAAA,EAhBA,IAgBA,CAAAtD,IAAA,uBAAAC,MAED,WAAoB,IAAAohG,EAAAC,EAAA18F,EAAAnG,KACV8iG,EAAuB9rD,SAASC,cAAc,OACpD,IAAI8pD,YAAYgC,cACZD,EACA9iG,KAAKsgG,sBAETtgG,KAAKmhG,oBAAoB98E,SACrB2+E,OAAOv/E,KAAKw/E,gBAAgBC,WAC9B9sE,KAAK0sE,GAEkB,QAAzBF,EAAA5iG,KAAKsgG,4BAAoB,IAAAsC,GAAzBA,EAA2BrC,YAAY,mBAAoB,SAAC/7E,GACxD,IAAM2+E,EAAiBh9F,EAAKs5F,eAAerwE,KAAK,SAACvZ,GAAY,IAAAutF,EACzDvtF,EAASvC,KAAKsf,cACI,QADSwwE,EACvB5+E,EAAE89E,oBAAY,IAAAc,GAAdA,EAAgB9vF,KAAKsf,cACzBzsB,EAAKsP,YAAY0tF,EACrB,EACJ,GACyB,QAAzBN,EAAA7iG,KAAKsgG,4BAAoB,IAAAuC,GAAzBA,EAA2BtC,YAAY,gBAAiB,SAAC/7E,GACjDA,GAAKre,EAAKu5F,eAEVv5F,EAAKyT,OAAO6lC,SADat5C,EAAKu5F,cAAcl7E,GAGpD,EACJ,GAAC,CAAAjjB,IAAA,WAAAC,MAAA,eAAA6hG,EAAA5hG,EAAAC,IAAAC,KAED,SAAAmF,IAAA,IAAAw8F,EAAAC,EAAAx8F,EAAA/G,KAAA,OAAA0B,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OACUmhG,SAAe,CAAE9gE,EAAGziC,KAAKwjG,cAAcpX,cAAc5qF,OAAOwF,EAAA5E,KAAA,EACjD,QADiDkhG,EAC5DvC,mBAAW,IAAAuC,OAAA,EAAXA,EAAa7B,SAASgC,iBAAiBC,aACzCH,GACFtkC,KAAK,SAAC0kC,GACJ58F,EAAKi4F,oBAAsB2E,CAC/B,GAAE,wBAAA38F,EAAAtC,OAAA,EAAAoC,EAAA9G,KAAA,IACL,gBAAA4jG,IAAA,OAAAP,EAAAz+F,MAAA5E,KAAA6E,UAAA,EATA,IASA,CAAAtD,IAAA,mBAAAC,MAEO,WAAgB,IAAAixC,EAAAzyC,KACd2iB,EAAU,CAAElf,QAAS,IAAOogG,oBAAoB,GAEtD,OAAO,IAAIjgG,QAAO,eAAA8uB,EAAAjxB,EAAAC,IAAAC,KAAsB,SAAA+wC,EAAO7uC,EAASowE,GAAM,IAAA6vB,EAAA,OAAApiG,IAAAO,KAAA,SAAA6wC,GAAA,cAAAA,EAAA3wC,KAAA2wC,EAAA1wC,MAAA,YACtD,gBAAiB8zE,WAAS,CAAApjC,EAAA1wC,KAAA,QAczB,GAbGqwC,EAAK8sD,cACCuE,EAAiB,CACnBC,OAAQ,CACJC,SAAUvxD,EAAK8sD,YAAYyE,SAC3BC,UAAWxxD,EAAK8sD,YAAY0E,UAC5BC,SAAU,IAEd5mB,eAAeljE,MAAO87B,WAE1BzD,EAAK2sD,cAAgB3sD,EAAK8sD,YAAYyE,SACtCvxD,EAAK4sD,eAAiB5sD,EAAK8sD,YAAY0E,UAEvCpgG,EAAQigG,IAGPrxD,EAAK8sD,YAAW,CAAAzsD,EAAA1wC,KAAA,QAAA0wC,SAAA1wC,KAAA,EACX8zE,UAAUiuB,YAAYC,mBACxB,SAACjtD,GACG1E,EAAK2sD,cAAgBjoD,EAAS4sD,OAAOC,SACrCvxD,EAAK4sD,eAAiBloD,EAAS4sD,OAAOE,UACtCpgG,EAAQszC,EACZ,EACA,SAACpxC,GAAS,IAAAs+F,EACN5xD,EAAKmsD,0BACD,WACa,QADJyF,EACTt+F,EAAMg0C,eAAO,IAAAsqD,OAAA,EAAbA,EAAe13B,YACf,wCACJsH,EAAOluE,EACX,EACA4c,GACH,OACDuzD,UAAUiuB,YAAYG,cAClB,SAACrhG,GAAC,OAAKwvC,EAAK8xD,mBAAmBthG,EAAE,EACjC,SAACA,GAAC,OAAKwvC,EAAK+xD,wBAAwBvhG,EAAE,GACxC,OAAA6vC,EAAA1wC,KAAA,gBAGNqwC,EAAKmsD,0BACD,uCACJ3qB,EAAO,6BAA6B,yBAAAnhC,EAAApuC,OAAA,EAAAguC,EAAA,IAE3C,gBAAApc,EAAAiQ,GAAA,OAAA7T,EAAA9tB,MAAA5E,KAAA6E,UAAA,EA3CiB,GA4CtB,GAAC,CAAAtD,IAAA,qBAAAC,MAEO,SAAmBijG,GACD,IAAAC,EAAAC,EAIhBC,EAAAC,EAJFJ,KAE2B,QAAvBC,EAAAD,EAAiBV,cAAM,IAAAW,OAAA,EAAvBA,EAAyBV,YAAahkG,KAAKo/F,gBACpB,QAAvBuF,EAAAF,EAAiBV,cAAM,IAAAY,OAAA,EAAvBA,EAAyBV,aAAcjkG,KAAKq/F,iBAE5Cr/F,KAAKo/F,cAAuC,QAA1BwF,EAAGH,EAAiBV,cAAM,IAAAa,OAAA,EAAvBA,EAAyBZ,SAC9ChkG,KAAKq/F,eAAwC,QAA1BwF,EAAGJ,EAAiBV,cAAM,IAAAc,OAAA,EAAvBA,EAAyBZ,UAC/CjkG,KAAK6+F,SAAS7+F,KAAKm/F,uBAG/B,GAAC,CAAA59F,IAAA,0BAAAC,MAEO,SAAwBuE,IAC5B,EAAAzF,EAAAkU,aAAY,mCAChB,GAAC,CAAAjT,IAAA,WAAAC,MAED,SAASmE,GAAa,IAAAgiE,EAAA3nE,KAClBA,KAAKm/F,qBAAuBx5F,EACxB3F,KAAKo/F,eAAiBp/F,KAAKq/F,eAwB3Br/F,KAAKwhG,wCACA3C,SAPmB,CACpBj5F,OAlBkC,CAClC+6F,IAAK3gG,KAAKo/F,cACVwB,IAAK5gG,KAAKq/F,gBAiBVyF,YAR0B,CAC1BnE,IAAKh7F,EAASm5F,WAAWiG,OAAOxF,YAAY,GAC5CqB,IAAKj7F,EAASm5F,WAAWiG,OAAOxF,YAAY,GAC5Cn2D,MAAOzjC,EAASm5F,WAAW11D,OAM3B47D,WAAY,YAKX/lC,KAAK,SAACgmC,GAAyB,IAAAC,EACiB,QAA7CA,EAAAv9B,EAAKg6B,gDAAwC,IAAAuD,GAA7CA,EAA+CC,SAC3CF,EAER,GAAE7gG,MACK,SAAC2B,GAAc,IAAAq/F,EAClB/iG,QAAQ0D,MAAM,yBAA2BA,GAErCA,aAAiBs/F,WACJ,QADaD,EAC1Br/F,EAAMg0C,eAAO,IAAAqrD,GAAbA,EAAev/F,SAAS,YAAQ,EAEhCvF,EAAAkU,aACI,wEAGZ,IAEJ,EAAAlU,EAAAkU,aAAY,iCAEpB,GAAC,CAAAjT,IAAA,oBAAAC,MAAA,eAAA8jG,EAAA7jG,EAAAC,IAAAC,KAED,SAAA2xC,IAAA,IAAAiyD,EAAAhkG,EAAAikE,EAAAggC,EAAA,OAAA9jG,IAAAO,KAAA,SAAAyxC,GAAA,cAAAA,EAAAvxC,KAAAuxC,EAAAtxC,MAAA,WACQpC,KAAKunB,OAAM,CAAAmsB,EAAAtxC,KAAA,QAEX,IAAWb,KADLgkG,EAA4B,GAChBvlG,KAAKunB,OACbi+C,EAASxlE,KAAKunB,OAAOhmB,GAAK8gD,KAC5B9gD,IACMikG,EAAcjkG,EAAIk1E,UAAU,GAClC8uB,EAASnvE,KAAKp2B,KAAKylG,gBAAgBD,EAAahgC,KAEvD9xB,SAAAtxC,KAAA,EACYwB,QAAQ+lB,IAAI47E,GAAS,cAAA7xD,EAAAnwC,OAAA,SAAAmwC,EAAA5vC,MAAA,wBAAA4vC,EAAAhvC,OAAA,EAAA4uC,EAAAtzC,KAAA,IAEzC,gBAAAigG,IAAA,OAAAqF,EAAA1gG,MAAA5E,KAAA6E,UAAA,EAdA,IAcA,CAAAtD,IAAA,aAAAC,MAAA,eAAAkkG,EAAAjkG,EAAAC,IAAAC,KAED,SAAAmmE,IAAA,IAAAC,EAAA/nE,KAAA,OAAA0B,IAAAO,KAAA,SAAAwxC,GAAA,cAAAA,EAAAtxC,KAAAsxC,EAAArxC,MAAA,cAAAqxC,EAAAlwC,OAAA,SACW,IAAIK,QAA6B,SAACC,EAASowE,GAAU,IAAA0xB,EACxD59B,EAAK04B,gBAA8B,QAAfkF,EAAG59B,EAAKjmB,eAAO,IAAA6jD,OAAA,EAAZA,EAAcnpE,OACjC,SAACkmE,EAAakD,GACVlD,SAAYkD,EAAaxyF,IAAMwyF,EACxBlD,CACX,EACA,IAEJ7+F,EAAQkkE,EAAK04B,gBACjB,IAAE,wBAAAhtD,EAAA/uC,OAAA,EAAAojE,EAAA,IACL,gBAAAo4B,IAAA,OAAAwF,EAAA9gG,MAAA5E,KAAA6E,UAAA,EAbA,IAaA,CAAAtD,IAAA,kBAAAC,MAAA,eAAAqkG,EAAApkG,EAAAC,IAAAC,KAEO,SAAAumE,EAAsB3jC,EAAqBihC,GAAc,IAAAsgC,EAAA,OAAApkG,IAAAO,KAAA,SAAAomE,GAAA,cAAAA,EAAAlmE,KAAAkmE,EAAAjmE,MAAA,OAAAimE,SAAAjmE,KAAA,EAC9B,QAD8B0jG,EACvD9lG,KAAKsgG,4BAAoB,IAAAwF,OAAA,EAAzBA,EAA2BC,eAAexhE,EAAa,CACzDyhE,gBAAgB,EAChBC,mBAAoB,GACpBC,gBAAiB,GACjBC,cAAe,GACfC,SAAS,EACTC,iBAAkB7gC,IACpB,wBAAA6C,EAAA3jE,OAAA,EAAAwjE,EAAAloE,KAAA,IACL,gBAAAylG,EAAAj/D,EAAAC,GAAA,OAAAo/D,EAAAjhG,MAAA5E,KAAA6E,UAAA,EAXA,MAWAo6F,CAAA,CAtV4B,CAAQ3+F,EAAA8H,cAAYxI,SAAxCq/F,0CAAmB52F,EAAAC,4BAAAC,EAAA+9F,qBAAAj+F,EAAAC,4BAAAG,EAAAC,qBAAA,kDAAnBu2F,EAAmBl2F,UAAA,kBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,stDAlGxBhB,EAAA8E,yBAAA,WAII9E,EAAA0J,qBAAA,EAAAw0F,EAAA,oBAAAl+F,CAIe,EAAAm+F,EAAA,aAenBn+F,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,CAEC,UAFDA,CAEC,UAFDA,CAEC,sBAIeA,EAAAkB,oBAAA,eAOJlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,cAMI9E,EAAAuI,qBAAA,0BAAStH,EAAAs6F,UAAU,GAEnBv7F,EAAA8E,yBAAA,kBACK9E,EAAAgF,iBAAA,aAAMhF,EAAA+E,wBAAA/E,OAMvBA,EAAA8E,yBAAA,YAAA9E,CAA6C,YAA7CA,CAA6C,SAGjCA,EAAA0J,qBAAA,GAAA00F,EAAA,cAsBJp+F,EAAA+E,wBAAA/E,cAzEHA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA2Z,SAKA5a,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAs1F,2BA8Cav2F,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA01F,iXA0CjBC,CAAoB,oQChJjC,IAAAp1F,EAAAhM,EAAA,OAoBAyC,EAAAzC,EAAA,OAEAw4C,EAAAx4C,EAAA,OAcAwC,EAAAxC,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,mGAqBYwK,EAAAkB,oBAAA,wBAGIlB,EAAAwI,qBAAA,wCAJRxI,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAA20F,EAAA,qBAKJr+F,EAAAoZ,0EAJSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAA+E,EAAA8gC,QAAA9gC,EAAAqN,+BAwBW5a,EAAAs9C,6BAAA,4BADJt9C,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAA40F,EAAA,uBAMJt+F,EAAAoZ,kIALSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,oBAAA+1F,EAAAz/E,QAAA9e,CAGnB,4BAAA4N,EAAA4wF,UAAAC,8BAGUz+F,EAAAiZ,kCAAA,GACIjZ,EAAAkB,oBAAA,6CACJlB,EAAAoZ,qFADSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAxI,EAAAsN,sBAAA,IAAAixF,EAAAz/E,SAAA9e,EAAA6mF,gDAGL7mF,EAAAs9C,6BAAA,4BADJt9C,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAAg1F,EAAA,uBAMJ1+F,EAAAoZ,qFALSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAA+1F,EAAAz/E,QAAA9e,CAGlB,0BAAAu+F,EAAAlkG,gCA1BC2F,EAAA8E,yBAAA,QAAA9E,CAAqB,eAUbA,EAAA0J,qBAAA,EAAAi1F,EAAA,sBAAA3+F,CAOe,EAAA4+F,EAAA,sBAPf5+F,CAOe,EAAA6+F,EAAA,uBAYnB7+F,EAAA+E,wBAAA/E,oFArBIA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAAA2E,EAAA7C,KAAAi0F,EAAAz/E,UAJA9e,EAAA+rD,sBAAA,WAAAwyC,EAAA3kD,SAAA55C,CAAkC,QAAAu+F,EAAAjhG,SAAlC0C,CAAkC,WAAAu+F,EAAAO,SAAlC9+F,CAAkC,UAAAmN,EAAAkhC,QAMnBruC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,4BAQAxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,iDAzB3BxI,EAAAiZ,kCAAA,GAOIjZ,EAAA0J,qBAAA,EAAAq1F,EAAA,aA+BJ/+F,EAAAoZ,0DA/BUpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+1F,6BARdv+F,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAs1F,EAAA,sBAuCJh/F,EAAA+E,iEApCA/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAU,EAAAvI,SAAAX,CACF,eAAAkJ,EAAAgb,kCAqCMlkB,EAAA8E,yBAAA,WAAA9E,CAA+D,YACnCA,EAAAgF,iBAAA,YAAMhF,EAAA+E,wBAAA/E,IApEjC1I,mBAAmB,IAAIkK,EAAAy9F,eAChC,yBAOJ3nG,0BAgFI,eAAAC,EADSi1F,EACT,SAAAl0F,GAAAC,EAAAi0F,EAAAl0F,GAAA,IA+IC4mG,EA/IDzmG,EAAAC,EAAA8zF,GAiEA,SAAAA,EAAoB0E,GAAmB,IAAAn4F,EAAArB,SAAAC,KAAA60F,IACnCzzF,EAAAN,EAAAO,KAAArB,OADgBu5F,YAzDJn4F,EAAAkmB,KAAO,EAEPlmB,EAAAwgD,OAAgB,CAAE9K,EAAG,GAAKC,EAAG,IAY5B31C,EAAAomG,WAAa,IAAI39F,EAAAuV,aAEjBhe,EAAAqmG,aAAe,IAAI59F,EAAAuV,aAI7Bhe,EAAAylG,UAAwB,GAExBzlG,EAAAsb,aAAgC,GAK/Btb,EAAAsmG,YAAuC,IAAI/tF,EAAAqB,gBAAgB,MAE3D5Z,EAAAumG,YAAc,CAClBC,OAAQxmG,EAAKsmG,YAAY3kG,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,EAAE4kG,KAAK,IAChDC,WAAY1mG,EAAKsmG,YAAY3kG,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,EAAE8kG,SAAS,IACxDC,MAAO5mG,EAAKsmG,YAAY3kG,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,EAAEqkB,IAAI,IAC9C6vB,SAAU/1C,EAAKsmG,YAAY3kG,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,EAAE2+C,MAAM,KACrDxgD,CAyBF,CAACtB,SAAA+0F,EAAA,EAAAtzF,IAAA,WAAAC,MAlBqC,WAClCxB,KAAKsnB,KAAO,EACZtnB,KAAK4hD,OAAS,CAAE9K,EAAG,GAAKC,EAAG,IAC3B/2C,KAAKioG,eACT,GAAC,CAAA1mG,IAAA,OAAAC,MAEM,SACH2lB,GAEA,MAA0B,iBAAZA,EACR,OACAA,aAAmBtd,EAAAsxF,YACnB,WACA,WACV,GAAC,CAAA55F,IAAA,WAAAC,MAMM,YACH,EAAA60C,EAAA6xD,oBACJ,GAAC,CAAA3mG,IAAA,cAAAC,MAEM,WACCxB,KAAK02C,WACLL,EAAAsB,cAAa33C,KAAK02C,OAE1B,GAAC,CAAAn1C,IAAA,cAAAC,MAEM,SAAY63B,GAAsB,IAAAt0B,EAAA/E,KACjCq5B,EAAQm+C,KAAOx3E,KAAKw3E,KACpBx3E,KAAKmoG,aAAY/jG,MAAO,SAACogB,GAAC,OAAKniB,QAAQ63E,KAAK11D,EAAE,GAE9C6U,EAAQrwB,UACRhJ,KAAKooG,kBAELpoG,KAAK02C,SACDrd,EAAQnS,OAASlnB,KAAKknB,MACtBlnB,KAAKqoG,QAAQroG,KAAKknB,QAEjBmS,EAAQ/R,MACL+R,EAAQ/R,KAAKixE,eAAiBl/D,EAAQ/R,KAAKs+E,cAC9CvsE,EAAQuoB,SAhLzB,SAAS0mD,EAAYC,EAAWC,GAC5B,OAAOD,EAAGzxD,IAAM0xD,EAAG1xD,GAAKyxD,EAAGxxD,IAAMyxD,EAAGzxD,CACxC,CA+KqBuxD,CACGjvE,EAAQuoB,OAAO22C,cACfl/D,EAAQuoB,OAAOgkD,gBAGvB5lG,KAAKioG,iBAGL5uE,EAAQ9R,QACR8R,EAAQrwB,UACRqwB,EAAQovE,QACRpvE,EAAQyoB,UAER9hD,KAAKyD,QAAQ,cAAe,kBAAMsB,EAAK2jG,YAAY,GAG/D,GAAC,CAAAnnG,IAAA,kBAAAC,MAEM,WACHxB,KAAKmoG,aAAY/jG,MAAO,SAACogB,GAAC,OAAKniB,QAAQ63E,KAAK11D,EAAE,EAClD,GAEA,CAAAjjB,IAAA,aAAAC,MACQ,WAAU,IAAA2E,EAAAnG,KACd,IACI,KAAI,EAACq2C,EAAAkB,WAAUv3C,KAAK02C,SAAW12C,KAAKijB,QAChC,OAAOjjB,KAAKyD,QAAQ,cAAe,kBAAM0C,EAAKuiG,YAAY,GAE9D1oG,KAAK2oG,qBAAiB,EACtBtyD,EAAAuyD,cAAa5oG,KAAK02C,OAAQ,CACtBnvB,OAAQvnB,KAAKunB,OACbve,SAAUhJ,KAAK0c,aACf+rF,OAAQzoG,KAAKyoG,OACb3mD,QAAS9hD,KAAK8hD,QACdn/B,QAAS3iB,KAAK2iB,gBAEV,CAChB,GAEA,CAAAphB,IAAA,gBAAAC,MACQ,WACJ,KACI,EAAA60C,EAAAuyD,cAAa5oG,KAAK02C,OAAQ,CACtBpvB,KAAMtnB,KAAKsnB,KACXuhF,aAAc7oG,KAAKsnB,KACnBs6B,OAAQ5hD,KAAK4hD,OACbknD,eAAgB9oG,KAAK4hD,OACrBj/B,QAAS3iB,KAAK2iB,gBAEV,CAChB,GAAC,CAAAphB,IAAA,aAAAC,OAAA+lG,EAAA9lG,EAAAC,IAAAC,KAEO,SAAAC,IAAA,IAAAmnG,EAAAC,EAAAC,EAAA/iG,EAAAnE,EAAAgF,EAAA/G,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACC/B,EAAA8rF,aAAW,CAAAjqF,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SACLvD,KAAKyD,QAAQ,cAAe,kBAAMsD,EAAKohG,YAAY,EAAE,MAAI,WAEhEnoG,KAAKw3E,KAAsB,QAAnBuxB,EAAI/oG,KAAKkpG,kBAAU,IAAAH,IAAfA,EAAiB3c,eAAkBpsF,KAAKijB,QAAO,CAAA/gB,EAAAE,KAAA,SAC3D,OAAApC,KAAKijB,SAAU,EACXjjB,KAAK02C,YACLL,EAAAuyD,cAAa5oG,KAAK02C,OAAQ,CACtBnvB,OAAQvnB,KAAKunB,OACbve,SAAU,GACVy/F,OAAQzoG,KAAKyoG,OACb3mD,QAAS9hD,KAAK8hD,QACdn/B,QAAS3iB,KAAK2iB,WACjB,EACD0zB,EAAAsB,cAAa33C,KAAK02C,SAEtB12C,KAAK2oG,oBACC5mG,KAAM1B,EAAAiD,SACZ0zC,SAASq1C,OAAM,GAAAroF,OACH,cAARjC,EACM,WAAao3C,sBAAmB94C,EAAAisF,WAChC,gBAAkBnzC,mBAAmBp3C,GAC/C,2CAAAiC,OAC0B,WAAtB2B,SAAS80E,SAAwB,UAAY,IAC9Cv4E,EAAAE,KAAA,MACiBi0C,EAAAiB,cAAa,CAC7Bb,QAAwB,QAAjBwyD,EAAEjpG,KAAKkpG,kBAAU,IAAAD,OAAA,EAAfA,EAAiB7c,cAC1B5+E,IAAKxN,KAAKw3E,IACVjwD,OAAQvnB,KAAKunB,OACbD,KAAMtnB,KAAKsnB,KACXuhF,aAAc7oG,KAAKsnB,KACnBs6B,OAAQ5hD,KAAK4hD,OACb54C,SAAUhJ,KAAK0c,aACf+rF,OAAQzoG,KAAKyoG,OACb3mD,QAAS9hD,KAAK8hD,QACdn/B,QAAS3iB,KAAK2iB,UAChB,QAXF3iB,KAAK02C,OAAMx0C,EAAA4B,KAYX9D,KAAKijB,SAAU,EACfjjB,KAAK4S,aACD,eACkC,QADpB1M,KACdmwC,EAAA8yD,uBAAsBnpG,KAAK02C,eAAO,IAAAxwC,OAAA,EAAlCA,EAAoC4M,UAAU,SAACuQ,GAEvCtc,EAAKmiG,WAAW9c,cAAckO,wBAClCvzF,EAAK2gG,YAAYtlG,KAAI2sB,EAAA,GAAM1L,IAC3Btc,EAAKygG,WAAWloF,KAAK+D,EAAEiE,MACvBvgB,EAAK0gG,aAAanoF,KAAK+D,EAAEu+B,OAC7B,IAEA5hD,KAAKknB,OAAOlnB,KAAKqoG,QAAQroG,KAAKknB,OAAOhlB,EAAAE,KAAA,kBAExCpC,KAAKw3E,MAAuB,QAAhBwxB,EAAChpG,KAAKkpG,kBAAU,IAAAF,IAAfA,EAAiB5c,gBAC/BpsF,KAAKijB,UAELjjB,KAAKyD,QAAQ,cAAe,kBACxBsD,EAAKohG,aAAY/jG,MAAO,SAACogB,GAAC,OAAKniB,QAAQ63E,KAAK11D,EAAE,EAAC,GAEtD,yBAAAtiB,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACJ,SAAAmoG,IAAA,OAAAZ,EAAA3iG,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,UAAAC,MAEO,SAAQ4R,GACZ,GAAKA,GAAOpT,KAAK02C,OACjB,KAAMA,KAAiBL,EAAAkB,WAAUv3C,KAAK02C,QACtC,GAAKA,EACL,KAAM0yD,EAAO1yD,EAAOc,SAASpkC,GACxBg2F,IACLppG,KAAK4hD,OAAS,CACV9K,EAAG,GAAKsyD,EAAKtyD,EAAIsyD,EAAKhyB,EAAI,GAC1BrgC,EAAG,GAAKqyD,EAAKryD,EAAIqyD,EAAKzzB,EAAI,IAE9B31E,KAAKioG,gBAAa,EACtB,GAEA,CAAA1mG,IAAA,YAAAC,MACO,SAAUy0D,EAAez6C,GAC5B,OAAOA,GAAS2rF,QACpB,GAAC,CAAA5lG,IAAA,oBAAAC,MAEO,WAAiB,IAAAixC,EAAAzyC,KACrBA,KAAK0c,cAAgB1c,KAAKgJ,UAAY,IACjC2S,IAAI,SAAC6b,EAAG0a,GAAG,IAAAm3D,EAAA,OAAAt6E,IAAA,GACLyI,GAAC,IACJrQ,QAA0C,QAAnCkiF,EAAE52D,EAAK62D,cAAcC,UAAUr3D,UAAI,IAAAm3D,OAAA,EAAjCA,EAAmCjd,eAAa,GAE5DvwE,OAAO,SAAC2b,GAAC,OAAKA,EAAErQ,OAAO,EAChC,GAAC,CAAA5lB,IAAA,kBAAAC,MAEO,WAAe,IAAAmmE,EAAA3nE,KACbwpG,EAAgBxpG,KAAK6mG,WAAa,GACxC7mG,KAAK6mG,WAAa7mG,KAAKgJ,UAAY,IAAI2S,IACnC,SAAC6b,GAAM,OACHgyE,EAAcp6E,KACV,SAACnsB,GAAC,IAAAwmG,EAAAC,EAAA,OACyB,QAAvBD,EAAAxmG,EAAEsC,IAAI5F,EAAA2wD,yBAAiB,IAAAm5C,OAAA,EAAvBA,EAAyBtC,YACF,QAAvBuC,EAAAzmG,EAAEsC,IAAI5F,EAAA2wD,yBAAiB,IAAAo5C,OAAA,EAAvBA,EAAyBvC,YAAa3vE,EAAE2vE,QAAQ,IAExDt9F,EAAAuxF,SAASb,OAAO,CACZc,UAAW,CACP,CACI/uF,QAAS3M,EAAA2wD,iBACT+jC,SAAQtlE,IAAA,CACJo4E,SAAU3vE,EAAE2vE,UACT3vE,EAAE90B,MACFilE,EAAKggC,eAIpB/sC,OAAQ+M,EAAK4xB,WACf,EAEd,KAAC1E,CAAA,CA9PD,CAAQv0F,EAAA8H,cAAYxI,SADXi1F,0CAAuBxsF,EAAAC,4BAAAD,EAAA+yF,UAAA,kDAAvBvG,EAAuB9rF,UAAA,gCAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,sTAAvBC,EAAAqgG,UAAU,KAAAthG,EAAAuhG,u6BA5EfvhG,EAAAkB,oBAAA,aAOAlB,EAAA0J,qBAAA,EAAA83F,EAAA,qBAAAxhG,CAMe,EAAAyhG,EAAA,YANfzhG,CAMe,EAAA0hG,EAAA,yBAAA1hG,EAAAqd,yEARXrd,EAAAoX,sBAAA,UAAAnW,EAAAkuE,KAEWnvE,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAkuE,IAAAnvE,CAAW,WAAAokB,GAObpkB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAvH,EAAAu9F,UAAA,KAAAv9F,EAAAu9F,UAAA5hG,uXA8DR4vF,CACT,+IChIJh3F,EAAA,OACAA,EAAA,OADA,0BAGA8B,uBAYiC,eAAAC,EAApBk9F,EAAoB,WAK7B,SAAAA,EAAwB7hD,GAAwBl7C,EAAAC,KAAA88F,GAC5C98F,KAAK85C,KAAOmB,GAAOv4C,MAAQ,GAC3B1C,KAAKgqG,mBACT,CAAClqG,SAAAg9F,EAAA,EAAAv7F,IAAA,cAAAC,MAEM,SAAY63B,GACXA,EAAQygB,MACR95C,KAAKgqG,mBAEb,GAAC,CAAAzoG,IAAA,oBAAAC,MAEO,WACJxB,KAAKiqG,eAAiB5lG,KAAKC,UAAUtE,KAAK85C,UAAM50C,EAAW,EAC/D,KAAC43F,CAAA,CAlB4B,GAkB5Bl9F,SAlBQk9F,0CAAoBz0F,EAAAC,4BAAAC,EAAA0hF,kBAAA,qDAApB6S,EAAoB/zF,UAAA,mBAAAwW,OAAA,CAAAu6B,KAAA,QAAA9wC,SAAA,CAAAX,EAAA+xB,gCAAAlxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,wIAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IATzBhB,EAAA8E,yBAAA,UAAA9E,CAEC,WACiDA,EAAAgF,iBAAA,GAE5ChF,EAAA+E,wBAAA/E,UAF4CA,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,EAAA2gG,oCAM7CnN,CAAoB,kJCdjCj/F,EAAA,OACAA,EAAA,OADA,IAEAK,EAAAL,EAAA,2HAgBYwK,EAAA8E,yBAAA,cAGI9E,EAAAuI,qBAAA,uBAAAs5F,EAAA7hG,EAAA2I,wBAAA6U,GAAAjI,UAAArM,EAAAlJ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAG,EAAA44F,UAAAD,EAAA92F,IAAkB,GAE3B/K,EAAAgF,iBAAA,GACJhF,EAAA+E,mDADI/E,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAAwqF,EAAA52F,KAAA,MAAA42F,EAAAE,KAAA,MAnBhBzqG,0BAyBoC,eAAAC,EAAvByqG,EAAuB,WAYhC,SAAAA,EACuCpvD,EAC3Bj6C,EACAspG,GAA8B,IAAAlpG,EAAApB,KAAAD,EAAAC,KAAAqqG,GAFHrqG,KAAAi7C,QAC3Bj7C,KAAAgB,YACAhB,KAAAsqG,eAdItqG,KAAAmqG,UAAY,SAACttC,GACzBz7D,EAAKkpG,aAAaC,IAAI1tC,GACtBie,aAAa52E,QAAQ,iBAAkB24D,EAC3C,EAMgB78D,KAAA2H,MAAQ,eAAAqiF,EAAA,OAAgB,QAAhBA,EAAM5oF,EAAK65C,aAAK,IAAA+uC,OAAA,EAAVA,EAAYriF,OAAO,CAM9C,CAAC7H,SAAAuqG,EAAA,EAAA9oG,IAAA,UAAAgE,IAVJ,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,gBAAkB,EAChD,KAAC8kG,CAAA,CAR+B,GAQ/BzqG,SARQyqG,0CAAuBhiG,EAAAC,4BAapBpK,EAAA+rF,mBAAiB5hF,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAA+hG,kBAAA,kDAbpBH,EAAuBthG,UAAA,sBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,gYAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAtB5BhB,EAAA8E,yBAAA,WAEI9E,EAAAuI,qBAAA,0BAAStH,EAAA3B,OAAO,GAEhBU,EAAA8E,yBAAA,UAAA9E,CAA8C,gBACfA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,WAAc9E,EAAAgF,iBAAA,qCAAmChF,EAAA+E,wBAAA/E,GAErDA,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,qCACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAA04F,EAAA,gBAOJpiG,EAAA+E,gCAZsB/E,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA5L,EAAAsN,sBAAA,wBAGdtN,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAAsN,sBAAA,mCAGiBtN,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAohG,sEAUpBL,CAAuB,mIC7BpCxsG,EAAA,+BAEA8B,YAGsB,eAAAC,EAAT+qG,EAAS,WAClB,SAAAA,EAAoB1pG,GAAyBlB,EAAAC,KAAA2qG,GAAzB3qG,KAAAiB,MAA4B,CAACnB,SAAA6qG,EAAA,EAAAppG,IAAA,YAAAC,MAE1C,SAAU4R,GACb,OAAOpT,KAAKiB,KAAKkuB,YAAY/b,aAAckuB,MAAQluB,EAAK,CAACA,GAC7D,KAACu3F,CAAA,CALiB,GAKjB/qG,SALQ+qG,0CAAStiG,EAAAC,4BAAAC,EAAAG,oBAAA,+DAATiiG,EAAS5yE,MAAA,IAAT4yE,CAAS,+KCNtB9sG,EAAA,WACA2L,EAAA3L,EAAA,OAEAuC,GADAvC,EAAA,OACAA,EAAA,wEAaoBwK,EAAA8E,yBAAA,OACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iEAFiC/E,EAAAgiF,qBAAAl4E,EAAAy4F,KAAAhjC,OAC7Bv/D,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4E,EAAAy4F,KAAAzjF,QAAA,+BAEJ9e,EAAAkB,oBAAA,gFAEIlB,EAAAwI,qBAAA,MAAAxI,EAAA8L,sBAAA,IAAAyB,EAAAg1F,KAAApzB,IAAA,YAAAnvE,EAAAksC,uFAIJlsC,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,WAAA9E,CAA2B,cAQnBA,EAAAgF,iBAAA,gBACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,sBAAA9E,CAAqC,iBAI7BA,EAAAuI,qBAAA,yBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAe9I,EAAA+I,sBAAA8O,EAAA2qF,aAAY,GAH/BxiG,EAAA+E,wBAAA/E,KAORA,EAAA8E,yBAAA,WAAA9E,CAA2B,cACDA,EAAAgF,iBAAA,cAAQhF,EAAA+E,yBAC9B/E,EAAA8E,yBAAA,uBAAA9E,CAAqC,kBAI7BA,EAAAuI,qBAAA,yBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAAhnB,EAAA1X,EAAA8I,0BAAA,OAAe9I,EAAA+I,sBAAA2O,EAAA+qF,QAAO,GAH1BziG,EAAA+E,yBAKA/E,EAAA8E,yBAAA,gBACK9E,EAAAgF,iBAAA,mCAA4BhF,EAAA+E,wBAAA/E,KAI7CA,EAAAoZ,yGA5BYpZ,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,UAAAg+B,GAAA,aAAAlsC,EAAA2V,MAAA7e,CAEC,wBAAAkJ,EAAA2V,qEA4BjB7e,EAAA8E,yBAAA,WAAA9E,CAGC,eACyCA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAgF,GAAA,IAAAC,EAAA5N,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA6E,EAAA60F,QAAO,GAClDziG,EAAAgF,iBAAA,aACJhF,EAAA+E,wBAAA/E,0BAKRA,EAAA8E,yBAAA,YAGI9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,kCAA4BhF,EAAA+E,wBAAA/E,IArE/C1I,iBA4F2B,eAAAC,EAAdmrG,EAAc,WAkBvB,SAAAA,EAAoB/pG,GAA0BjB,EAAAC,KAAA+qG,GAA1B/qG,KAAAgB,YAdJhB,KAAAsQ,KAAO,IAAI9G,EAAAm2B,UAAU,CACjCqrE,SAAU,IAAIxhG,EAAAo2B,YAAY,GAAI,CAACp2B,EAAAq2B,WAAWC,WAC1CmrE,SAAU,IAAIzhG,EAAAo2B,YAAY,GAAI,CAACp2B,EAAAq2B,WAAWC,YAYG,CAAChgC,SAAAirG,EAAA,EAAAxpG,IAAA,OAAAgE,eAH9C,OAAOvF,KAAKgB,UAAUuE,IAAI,kBAAoB,CAAEoN,KAAM,OAC1D,GAAC,CAAApR,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAIM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAApC,KAAKijB,SAAU,EAAK/gB,EAAAE,KAAA,EACdpC,KAAKgB,UAAU8B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAClElD,KAAKijB,SAAU,EAAM,wBAAA/gB,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACxB,SAAA2E,IAAA,OAAA9D,EAAA+D,MAAA5E,KAAA6E,UAAA,IAED,CAAAtD,IAAA,aAAAC,MACO,WACCxB,KAAKkrG,WAAalrG,KAAKkrG,UAAU9e,eACjCpsF,KAAKkrG,UAAU9e,cAAcllE,OAErC,GAEA,CAAA3lB,IAAA,QAAAC,MACO,WACHxB,KAAKijB,SAAU,EAUfjjB,KAAKsQ,KAAK66F,UAAU,CAAEF,SAAU,gCACpC,KAACF,EA9BA,IAAAlqG,CA8BA,CA9CsB,GA8CtBjB,SA9CQmrG,0CAAc1iG,EAAAC,4BAAAC,EAAAC,iBAAA,kDAAduiG,EAAchiG,UAAA,gBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,y9BAzFnBhB,EAAA8E,yBAAA,UAAA9E,CAAyC,WAAzCA,CAAyC,WAQ7BA,EAAA0J,qBAAA,EAAAq5F,EAAA,UAAA/iG,CAEI,EAAAgjG,EAAA,aAKRhjG,EAAA+E,yBACA/E,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAu5F,EAAA,uBAiCJjjG,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAAw5F,EAAA,aAQJljG,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,EAAAy5F,EAAA,yBAAAnjG,EAAAqd,yEAvDYrd,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,yBAAA7+C,EAAAshG,KAAA,KAAAthG,EAAAshG,KAAAzpB,YAEI94E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,uBAAAvH,EAAAshG,KAAA,KAAAthG,EAAAshG,KAAAj4F,OAICtK,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,sBAAAvH,EAAAshG,KAAA,KAAAthG,EAAAshG,KAAAj4F,OAKUtK,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,QAAA5a,CAAgB,WAAA4I,GAoC9B5I,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,6/BAoCR8nF,CAAc,wLCjG3B,IAAAlhG,EAAAhM,EAAA,OACA+P,EAAA/P,EAAA,OAGAyC,EAAAzC,EAAA,OAGA+rC,GAFA/rC,EAAA,OAEAA,EAAA,uDAqBYwK,EAAA8E,yBAAA,UAAA9E,CAIC,aAMOA,EAAAkB,oBAAA,mBACJlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAGI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,2CAVIA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,MAAAsB,EAAA0E,MAAAtD,OAAAlL,CAAoB,SAAA8J,EAAAyS,UAApBvc,CAAoB,WAAA8J,EAAAnJ,UASpBX,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAA4E,EAAA0E,MAAA,KAAA1E,EAAA0E,MAAAvB,gBAAA,MAAAnD,EAAA0E,MAAA,KAAA1E,EAAA0E,MAAAvD,MAAA,MAzBpB3T,0BA6CqC,eAAAC,EAAxB8rC,EAAwB,SAAA/qC,GAAAC,EAAA8qC,EAAA/qC,GAAA,IAAAG,EAAAC,EAAA2qC,GAcjC,SAAAA,EACqCuP,EACzBh6C,GAAyB,IAAAwqG,EAAArqG,EAAArB,SAAAC,KAAA0rC,IAEjCtqC,EAAAN,EAAAO,KAAArB,OAHiCi7C,QACzB75C,EAAAH,OAdKG,EAAA2sB,MAAQ,IAAIlkB,EAAAuV,aAEtBhe,EAAA0a,KAAkB1a,EAAK65C,MAAMn/B,KAI7B1a,EAAAwjB,UAA0B,GAWT,QAAhB6mF,EAACrqG,EAAK0a,KAAKjF,aAAK,IAAA40F,GAAfA,EAAiBr4F,WACXhS,EAAK0a,KAAKjF,MACpBzV,CACL,CAACtB,SAAA4rC,EAAA,EAAAnqC,IAAA,QAAAgE,IAZD,WACI,OAAOvF,KAAK8b,KAAKjF,OAAS7W,KAAKiB,KAAKkuB,YAAYnvB,KAAK8b,KAAKpI,OAAS,GACvE,GAAC,CAAAnS,IAAA,WAAAC,MAYM,WAAQ,IAAAuD,EAAA/E,KACXA,KAAKyD,QACD,OACA,WACIsB,EAAK2f,iBACL3f,EAAK4f,eACT,EACA,IAER,GAAC,CAAApjB,IAAA,gBAAAC,MAEM,WAAa,IAAAi6D,EACVl0C,EAAuB,GAChB,QAAbk0C,EAAIz7D,KAAK8b,YAAI,IAAA2/C,GAATA,EAAWloD,SACXgU,EAAM,UAAa,CAAEC,QAAS,QAC9BD,EAAM,UAAa,CAAEC,QAAS,SAElCxnB,KAAK4kB,UAAY2C,CACrB,GAEA,CAAAhmB,IAAA,iBAAAC,MACO,WACH,IAAKxB,KAAK8b,KAAM,OAAO,KAWvB9b,KAAKgJ,SAAW,CAVF,CACVrD,SAAU3F,KAAK8b,KAAKvI,OACpB4zF,SAAQ,aACRhgF,QAASyiB,EAAAxiB,gBACT1kB,KAAM,CACF4Q,KAAMtT,KAAK8b,KAAKxI,MAEpB+T,QAAS,GACTC,KAAM,KAGd,KAACokB,CAAA,CA1DgC,CAAQprC,EAAA8H,cAAYxI,SAA5C8rC,0CAAuBrjC,EAAAC,4BAepBsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAAG,qBAAA,kDAflBgjC,EAAuB3iC,UAAA,uBAAAyW,QAAA,CAAAuO,MAAA,SAAA/kB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,8lBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA1C5BhB,EAAA8E,yBAAA,UAAA9E,CAA+D,aAA/DA,CAA+D,gBAE5BA,EAAAgF,iBAAA,WAAKhF,EAAA+E,yBAChC/E,EAAA8E,yBAAA,UACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,EAAA25F,EAAA,aAkBArjG,EAAA8E,yBAAA,aAAA9E,CAEC,cAEOA,EAAAgF,iBAAA,aACJhF,EAAA+E,wBAAA/E,YA1BIA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,EAAAwS,KAAAxG,cAAAhM,EAAAwS,KAAAxI,KAAA,KAMHjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuN,6JAgCJ60B,CAAwB,0IC9DrC,IAAAynD,EAAAt1F,EAAA,uEAYQwK,EAAA8E,yBAAA,WAKI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4E,EAAA4nC,QAAA,mEAEJ1xC,EAAAkoD,2BAAAloD,EAAA8E,yBAAA,WAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6U,GAAA,IAAAtU,EAAAlJ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAG,EAAAkV,SAAQ,GAEjBpe,EAAA8E,yBAAA,OACI9E,EAAAkB,oBAAA,YAQJlB,EAAA+E,wBAAA/E,6CAZAA,EAAAoX,sBAAA,SAAA7J,EAAA6Q,QAKQpe,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,OAAAvyC,EAAAysC,KAAAh6C,CAAmB,SAAAuN,EAAA+1F,SAnBvChsG,kBAqE4B,eAAAC,EAAfwnB,EAAe,WAaxB,SAAAA,EAA8CwkF,GAAoB7rG,EAAAC,KAAAonB,GAApBpnB,KAAA4rG,WAX9B5rG,KAAA+5C,QAAU/5C,KAAK4rG,SAAS7xD,QAExB/5C,KAAAqiD,KAAOriD,KAAK4rG,SAASvpD,MAAQ,UAE7BriD,KAAA2rG,OAAS3rG,KAAK4rG,SAASD,QAAU,OAEjC3rG,KAAAymB,OAASzmB,KAAK4rG,SAASnlF,QAAU,IAKoB,CAAC3mB,SAAAsnB,EAAA,EAAA7lB,IAAA,WAAAC,MAE/D,WAAQ,IAAAJ,EAAApB,KACXysE,WAAW,kBAAOrrE,EAAK2uF,MAAO,CAAI,EAAG,KACrCtjB,WAAW,kBAAOrrE,EAAKyqG,cAAe,CAAI,EAAG,IACjD,KAACzkF,CAAA,CAlBuB,GAkBvBxnB,SAlBQwnB,0CAAe/e,EAAAC,4BAaJ6qF,EAAA7iC,kBAAgB,kDAb3BlpC,EAAere,UAAA,oBAAAgW,MAAAtN,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,6nBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAlEpBhB,EAAA0J,qBAAA,EAAA+5F,EAAA,YAAAzjG,CAMM,EAAA0jG,EAAA,mBAJD1jG,EAAAwI,qBAAA,OAAAvH,EAAAywC,SAAAzwC,EAAAuiG,cAMAxjG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAymF,ykBA0DA3oE,CAAe,uMC/E5BvpB,EAAA,WACAyC,EAAAzC,EAAA,OAEAs1F,EAAAt1F,EAAA,uCAmBA8B,sBAkEiC,eAAAC,EAApBosG,EAAoB,SAAArrG,GAAAC,EAAAorG,EAAArrG,GAAA,IAAAG,EAAAC,EAAAirG,GAyB7B,SAAAA,EACsCJ,EAC1BK,GAAuB,IAAA7qG,EAAArB,SAAAC,KAAAgsG,IAE/B5qG,EAAAN,EAAAO,KAAArB,OAHkC4rG,WAC1BxqG,EAAA6qG,OAzBL7qG,EAAAkS,KAAOlS,EAAKwqG,SAASt4F,KAErBlS,EAAAihD,KAAI,GAAAr+C,OAAM5C,EAAKwqG,SAASvpB,OAAS,UAAS,MAE1CjhF,EAAAuqG,OAASvqG,EAAKwqG,SAASvpB,OAAS,UAChCjhF,EAAA8qG,QAAU,GACV9qG,EAAAgG,MAAQ,EACRhG,EAAA+F,OAAS,EACA/F,EAAA+qG,UAAY,GAWrB/qG,EAAAgrG,OAAM,SAAApoG,OAAY5C,EAAK+F,OAAM,KAAAnD,OAAI5C,EAAKgG,MAAK,KAAApD,OAAI5C,EAAK+F,OAAM,KAAAnD,OAAI5C,EAAKgG,MAAK,MAExEhG,EAAAirG,WAAiC,GAAGjrG,CAO3C,CAACtB,SAAAksG,EAAA,EAAAzqG,IAAA,QAAAgE,IAlBD,WACI,OAAOvF,KAAK4rG,SAAS7D,WAAa,CACtC,GAAC,CAAAxmG,IAAA,OAAAgE,IAED,WACI,OAAOvF,KAAK4rG,SAASU,YAAc,CACvC,GAAC,CAAA/qG,IAAA,WAAAC,MAcM,WAAQ,IAAA+qG,EAAAC,EAAAC,EAAA1nG,EAAA/E,KACPA,KAAK4rG,SAASc,OACd1sG,KAAK4S,aACD,OACA5S,KAAK4rG,SAASc,MAAM55F,UAAU,SAAC7P,GAC3B8B,EAAKuO,KAAOrQ,EAAEqQ,KACdvO,EAAKs9C,KAAI,GAAAr+C,OAAMf,EAAEo/E,OAAS,UAAS,MACnCt9E,EAAK4mG,OAAS1oG,EAAEo/E,OAAS,UACzBt9E,EAAK4nG,cAAc1pG,EAAEmpG,OACzB,IAGRpsG,KAAK4S,aACD,QACoB,QADb25F,EACPvsG,KAAK4rG,SAAShE,cAAM,IAAA2E,OAAA,EAApBA,EAAsBz5F,UAAU,SAAC7P,GAC7B8B,EAAK6mG,SAAS/D,MAAQ5kG,EACtB8B,EAAK4nG,cAAc5nG,EAAK6mG,SAASQ,OACrC,IAEJpsG,KAAK4S,aACD,OACmB,QADb45F,EACNxsG,KAAK4rG,SAAS5D,aAAK,IAAAwE,OAAA,EAAnBA,EAAqB15F,UACjB,SAAC7P,GAAC,OAAM8B,EAAK6mG,SAASU,WAAarpG,CAAC,IAG5CjD,KAAK4S,aACD,YACwB,QADb65F,EACXzsG,KAAK4rG,SAAS9D,kBAAU,IAAA2E,OAAA,EAAxBA,EAA0B35F,UACtB,SAAC7P,GAAC,OAAM8B,EAAK6mG,SAAS7D,UAAY9kG,CAAC,IAG3CjD,KAAK2sG,cAAc3sG,KAAK4rG,SAASQ,OACrC,GAAC,CAAA7qG,IAAA,gBAAAC,MAEM,SAAc4qG,GAA0B,IAAAjmG,EAAAnG,KACrC07F,EAA+B0Q,EAAO5vE,OACxC,SAACoqD,EAAC1gF,GAAA,IAAA6B,EAAA6a,EAAA1c,EAAA,GAAG4wC,EAAC/uC,EAAA,GAAEgvC,EAAChvC,EAAA,SAAO,CACZ6kG,MAAO91D,EAAI8vC,EAAEgmB,MAAQ91D,EAAI8vC,EAAEgmB,MAC3BC,MAAO/1D,EAAI8vC,EAAEimB,MAAQ/1D,EAAI8vC,EAAEimB,MAC3BC,MAAO/1D,EAAI6vC,EAAEkmB,MAAQ/1D,EAAI6vC,EAAEkmB,MAC3BC,MAAOh2D,EAAI6vC,EAAEmmB,MAAQh2D,EAAI6vC,EAAEmmB,MAC9B,EACD,CACIH,MAAO,IACPC,OAAO,IACPC,MAAO,IACPC,OAAO,MAGTC,IACCtR,EAAKmR,MAAQnR,EAAKkR,MADnBI,IAECtR,EAAKqR,MAAQrR,EAAKoR,MAEjBjF,EAAU7nG,KAAK4rG,SAAf/D,MACR7nG,KAAKoH,MAAkB,IAAV4lG,IACbhtG,KAAKmH,OAAmB,IAAV6lG,KAAiBnF,GAAS,GACxC7nG,KAAKoH,MAAQ+hC,KAAKC,MAAmB,IAAbppC,KAAKoH,OAC7BpH,KAAKmH,OAASgiC,KAAKC,MAAoB,IAAdppC,KAAKmH,QAC9BnH,KAAKosG,OAASA,EACT5vE,OACG,SAACxT,EAACnG,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAGi0B,EAACh0B,EAAA,GAAEi0B,EAACj0B,EAAA,YAAA9e,OACFglB,GAAChlB,OAAGglB,EAAI,IAAM,IAAEhlB,QACZ8yC,EAAI4kD,EAAKkR,OAASI,IAAW7mG,EAAKiB,MAAS,GAClD,KAAApD,QAAO+yC,EAAI2kD,EAAKoR,OAASE,IAAW7mG,EAAKgB,OAAU,GAAE,EACzD,IAEHu2B,QAAQ,OAAQ,KACrB19B,KAAKqsG,WAAaD,EAAOzwF,IAAI,SAAAmiB,GAAA,IAAArL,EAAA7P,EAAAkb,EAAA,GAAM,MAAM,EAATrL,EAAA,GACrBipE,EAAKkR,OAASI,IAAW7mG,EAAKiB,MAAS,IADfqrB,EAAA,GAExBipE,EAAKoR,OAASE,IAAW7mG,EAAKgB,OAAU,GAClD,GACDnH,KAAKisG,KAAKxpB,eACd,KAACupB,CAAA,CAxG4B,CAAQ1rG,EAAA8H,cAAYxI,SAAxCosG,0CAAmB3jG,EAAAC,4BA0BhB6qF,EAAA7iC,kBAAgBjoD,EAAAC,4BAAAD,EAAA4kG,mBAAA,kDA1BnBjB,EAAmBjjG,UAAA,wBAAAC,SAAA,CAAAX,EAAAY,sCAAA8V,MAAAtN,EAAAvI,MAAA,EAAAC,KAAA,GAAA+D,OAAA,kbAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/DxBhB,EAAA8E,yBAAA,UAAA9E,CAIC,WAMOA,EAAAkoD,2BAAAloD,EAAA8E,yBAAA,WAUI9E,EAAAkB,oBAAA,aAaJlB,EAAA+E,wBAAA/E,KAGRA,EAAAmoD,4BAAAnoD,EAAA8E,yBAAA,WAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,gCAtCI/E,EAAA8/C,sBAAA,qBAAA7+C,EAAA4jG,MAAA5jG,EAAAge,KAAA,KAIIjf,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,QAAA7+C,EAAAlC,MAAA,IAAAiB,CAA2B,SAAAiB,EAAAnC,OAAA,KAIvBkB,EAAAiF,oBAAA,GAAAjF,EAAA+rD,sBAAA,kBAAA9qD,EAAAlC,MAAA,YAAAkC,EAAAnC,OAAA,QAWIkB,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,OAAA7+C,EAAA+4C,KAAAh6C,CAAmB,SAAAiB,EAAAqiG,QADnBtjG,EAAA+rD,sBAAA,SAAA9qD,EAAA8iG,QAmBZ/jG,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,EAAAgK,KAAA,8RAuBC04F,CAAoB,6ICxFjCnuG,EAAA,WACA4yB,EAAA5yB,EAAA,OAEAs1F,EAAAt1F,EAAA,0EA8BgBwK,EAAA8E,yBAAA,YACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,kEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,kBAAAgE,EAAA47F,aAAA,+BARR9kG,EAAA8E,yBAAA,WAMI9E,EAAAgF,iBAAA,GACAhF,EAAA0J,qBAAA,EAAAq7F,EAAA,cAGJ/kG,EAAA+E,kEAPI/E,EAAA8/C,sBAAA,UAAAvyC,EAAAy3F,OAAA,EAAAz3F,EAAA0R,KAAA,MAGAjf,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAAmkC,QAAA,KACO1xC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAA03F,yEAhBfjlG,EAAAiZ,kCAAA,KAAqCjZ,EAAAuI,qBAAA,oBAAAvI,EAAA2I,wBAAAyb,GAAA,IAAA/a,EAAArJ,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAAM,EAAA67F,eAAc,KAAAllG,EAAAuhG,2BAChEvhG,EAAAkB,oBAAA,WAQAlB,EAAA0J,qBAAA,EAAAy7F,EAAA,aAWJnlG,EAAAoZ,4EAhBQpZ,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,eAAAh2C,EAAAw5F,OAAAtjG,CAA6B,mBAAA8J,EAAAkwC,KAAA,KAA7Bh6C,CAA6B,QAAA8J,EAAAk7F,OAAAl7F,EAAAmV,KAAA,KAA7Bjf,CAA6B,SAAA8J,EAAAk7F,OAAAl7F,EAAAmV,KAAA,MAM5Bjf,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA4nC,SAAA5nC,EAAA05F,eAbjBlsG,qBAmD+B,eAAAC,EAAlB6tG,EAAkB,WAoB3B,SAAAA,EACsC7B,EAC1B8B,GAA4B,IAAAlB,EAAAprG,EAAApB,KAAAD,EAAAC,KAAAytG,GADFztG,KAAA4rG,WAC1B5rG,KAAA0tG,MArBL1tG,KAAAsnB,KAAO,EAEPtnB,KAAAqtG,OAASrtG,KAAK4rG,SAASyB,QAAU,GAExBrtG,KAAA+5C,QAAU/5C,KAAK4rG,SAAS7xD,QAExB/5C,KAAAqiD,KAAOriD,KAAK4rG,SAASvpD,MAAQ,UAE7BriD,KAAA2rG,OAAS3rG,KAAK4rG,SAASD,QAAU,UAEjC3rG,KAAAstG,UAAoBttG,KAAK4rG,SAAS0B,WAAa,EAaxC,QAAnBd,EAAAxsG,KAAK4rG,SAAS5D,aAAK,IAAAwE,GAAnBA,EAAqB15F,UAAU,SAACuQ,GAAC,OAC7B8lB,KAAKyZ,IAAI,GAAMxhD,EAAKkmB,KAAOjE,GAAK,EAAG,EAE3C,CAACvjB,SAAA2tG,EAAA,EAAAlsG,IAAA,eAAAgE,IAdD,WACI,SAAOkrB,EAAAk9E,qBAAqC,IAAjB3tG,KAAKstG,WAAoB,MACxD,GAAC,CAAA/rG,IAAA,WAAAC,MAcM,WAAQ,IAAAuD,EAAA/E,KACXysE,WAAW,kBAAO1nE,EAAKgrF,MAAO,CAAI,EAAG,KACrCtjB,WAAW,kBAAO1nE,EAAK8mG,cAAe,CAAI,EAAG,IACjD,GAAC,CAAAtqG,IAAA,kBAAAC,MAEM,WACHxB,KAAKutG,cACT,GAAC,CAAAhsG,IAAA,eAAAC,MAEM,WAAY,IAAA2E,EAAAnG,KACT4tG,EAAM5tG,KAAK0tG,IAAIthB,cAAckO,wBACnC,IAAKsT,EAAIxmG,MAAO,OAAOqlE,WAAW,kBAAMtmE,EAAKonG,cAAc,EAAE,KAC7DvtG,KAAKqtG,OAASlkE,KAAKyZ,IACf,IACC5iD,KAAK4rG,SAASyB,QAAU,KAAOO,EAAIxmG,OAAS,IAErD,KAACqmG,CAAA,CA7C0B,GA6C1B7tG,SA7CQ6tG,0CAAkBplG,EAAAC,4BAqBf6qF,EAAA7iC,kBAAgBjoD,EAAAC,4BAAAD,EAAAqkF,YAAA,kDArBnB+gB,EAAkB1kG,UAAA,uBAAAgW,MAAAtN,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,kbAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAhDvBhB,EAAA0J,qBAAA,EAAA87F,EAAA,2BAAexlG,EAAAwI,qBAAA,OAAAvH,EAAAymF,MAAAzmF,EAAA+jG,+ZAgDVI,CAAkB,yLC/D/B9tG,yBAyCmC,eAAAC,EAAtBkuG,EAAsBhuG,EAAA,SAAAguG,IAAA/tG,EAAAC,KAAA8tG,EAAA,GAAAluG,SAAtBkuG,yCAAsB,kDAAtBA,EAAsB/kG,UAAA,wBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,qJAlCsBsiB,UAAAC,MAAAC,EAAA,wIAGGF,UAAAG,MAAAD,EAAA,uLAIlBF,UAAAI,MAAAF,EAAA,8LAXlCrnB,EAAA8E,yBAAA,UAAA9E,CAGC,UACGA,EAAAulB,iBAAA,KAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,SAAA9E,EAAAulB,iBAAA,KAGAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,OAAA9E,EAAAulB,iBAAA,KAEAvlB,EAAA+E,wBAAA/E,sVAyBCylG,CAAsB,oLC3CnC,IAAAjkG,EAAAhM,EAAA,OACAyC,EAAAzC,EAAA,gHAUQwK,EAAA8E,yBAAA,cAMI9E,EAAAuI,qBAAA,uBAAA8qC,EAAArzC,EAAA2I,wBAAAyb,GAAA7O,UAAAlM,EAAArJ,EAAA8I,0BAASO,SAAA+U,OAAAnH,KAAAo8B,EAAAtoC,IAAoB/K,EAAA+I,sBAAAM,EAAAq+E,MAAS,EAAK,GAE3C1nF,EAAAkB,oBAAA,gBACJlB,EAAA+E,2FAJI/E,EAAA8/C,sBAAA,MAAAh2C,EAAA49E,MAAA,IAAAge,EAAA,WAGU1lG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA6qC,IAXtB/7C,sBAoDiC,eAAAC,EAApBouG,EAAoB,SAAArtG,GAAAC,EAAAotG,EAAArtG,GAAA,IAAAG,EAAAC,EAAAitG,GApDjC,SAAAA,IAAA,IAAA5sG,EAAArB,SAAAC,KAAAguG,+BAsDoBlsD,QAA0B,GAEzB1gD,EAAAqlB,OAAS,IAAI5c,EAAAuV,aAAuBhe,EAOxDtB,SAAAkuG,EAAA,EAAAzsG,IAAA,QAAAC,MAHU,WAAK,IAAAuD,EAAA/E,KACRA,KAAKyD,QAAQ,QAAS,kBAAOsB,EAAKgrF,MAAO,CAAK,EAClD,KAACie,CAAA,CAV4B,CAAQ1tG,EAAA8H,cAAYxI,SAAxCouG,qGAAmBvxE,GAAnBuxE,EAAmB,qDAAnBA,EAAmBjlG,UAAA,oBAAAwW,OAAA,CAAAuiC,QAAA,WAAAtiC,QAAA,CAAAiH,OAAA,UAAAzd,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,wQAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjDxBhB,EAAA0J,qBAAA,EAAAk8F,EAAA,gBAUA5lG,EAAA8E,yBAAA,cAKI9E,EAAAuI,qBAAA,0BAAAtH,EAAAymF,MAAAzmF,EAAAymF,IAAA,EAAA1nF,CAAsB,0BAAAiB,EAAAymF,KACCzmF,EAAA3B,QAAU,EAAE,KAAAU,EAAAuhG,2BAEnCvhG,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,GAAgChF,EAAA+E,wBAAA/E,UAdzBA,EAAAwI,qBAAA,UAAAvH,EAAAw4C,SAUjBz5C,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,OAAAnW,EAAAymF,MAIU1nF,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,EAAAymF,KAAA,8fA+BTie,CAAoB,yNC5DjCnwG,EAAA,WACAi1F,EAAAj1F,EAAA,OAQA8oC,GAPA9oC,EAAA,OAOAA,EAAA,gGAQYwK,EAAAkB,oBAAA,oFAGIlB,EAAAwI,qBAAA,YAAAxI,EAAAsN,sBAAA,IAAAxD,EAAAgV,SAAA9e,EAAA6mF,uCAThBvvF,qBAeI,eAAAC,EADSsuG,EACT,SAAAzmE,GAAA7mC,EAAAstG,EAAAzmE,GAAA,IAAA3mC,EAAAC,EAAAmtG,GAQA,SAAAA,EAAoB5U,EAA2B6U,GAAsB,IAAA/sG,EAAArB,SAAAC,KAAAkuG,IACjE9sG,EAAAN,EAAAO,KAAArB,OADgBs5F,WAA2Bl4F,EAAA+sG,QALxC/sG,EAAA+lB,QAAkB,GACjB/lB,EAAAs4F,aAA2B,KAAKt4F,CAMxC,CAACtB,SAAAouG,EAAA,EAAA3sG,IAAA,WAAAC,MAEM,WACHxB,KAAK4U,MACT,GAAC,CAAArT,IAAA,kBAAAC,MAEM,WACHxB,KAAKmnB,QAAUnnB,KAAKmuG,MAAM/hB,cAAcgiB,SAC5C,GAAC,CAAA7sG,IAAA,cAAAC,MAEM,WACH04F,EAAAC,EAAA+T,EAAA/lB,WAAA,cAAAnoF,MAAAqB,KAAArB,MACAA,KAAK2H,OACT,GAAC,CAAApG,IAAA,OAAAC,MAEM,WAAI,IAAAuD,EAAA/E,KACPA,KAAKyD,QACD,OACA,WACQsB,EAAK20F,cAAc30F,EAAK4C,QACvB5C,EAAKs1F,UAGVt1F,EAAK20F,aAAe30F,EAAKu0F,SAASiB,OAAO,CACrCC,aAAa,EACbC,iBAAkB11F,EAAKu0F,SAClBniD,WACAujD,oBAAoB1jD,SAAStR,MAC7Bi1D,cAAc,CACX,CACIC,QATE,MAUFC,QATE,MAUFC,SAXE,MAYFC,SAXE,WAelBh2F,EAAK20F,aAAasB,OAAOj2F,EAAKs1F,SAClC,EACA,GAER,GAAC,CAAA94F,IAAA,QAAAC,MAEM,WACHxB,KAAK+D,aAAa,QACd/D,KAAK05F,eACL15F,KAAK05F,aAAawB,UAClBl7F,KAAK05F,aAAe,KAE5B,KAACwU,CAAA,CA3DD,CAAQvnE,EAAAv+B,cAAYxI,SADXsuG,0CAAkB7lG,EAAAC,4BAAAC,EAAA+yF,SAAAjzF,EAAAC,4BAAAD,EAAAqkF,YAAA,kDAAlBwhB,EAAkBnlG,UAAA,sBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,2BAOhBypF,EAAAyI,UAAS,4YAlBhBlzF,EAAAoiF,uBAAA,GAEApiF,EAAA0J,qBAAA,EAAAs8F,EAAA,iGASKH,CACT,kLCzBJrwG,EAAA,WACAuC,EAAAvC,EAAA,UAEAA,EAAA,OACAA,EAAA,kDAEA8B,oBAK8B,eAAAC,EAAjB0uG,EAAiB,WAC1B,SAAAA,EAAoBttG,EAAoCC,EAAmCmP,GAAerQ,EAAAC,KAAAsuG,GAAtFtuG,KAAAgB,YAAoChB,KAAAiB,OAAmCjB,KAAAoQ,SAAkB,CAACtQ,SAAAwuG,EAAA,EAAA/sG,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAEvG,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGpC,KAAKgB,UAAU8B,YAAYC,QAAK3C,EAAA4C,OAAM,SAAAC,GAAC,OAAIA,CAAC,IAAGC,YAAW,OAAAhB,SAAAE,KAAA,EAC1DpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAAAC,GAAC,OAAIA,CAAC,IAAGC,YAAW,UACtDlD,KAAKgB,UAAUuE,IAAI,qBAAoB,CAAArD,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAC5CvD,KAAKoQ,QAAQK,SAASzQ,KAAKgB,UAAUuE,IAAI,qBAAqBqB,MAAM,MAAM,wBAAA1E,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAC7E,SAAA2E,IAAA,OAAA9D,EAAA+D,MAAA5E,KAAA6E,UAAA,MAAAypG,EAP6G,IAAAztG,CAO7G,CARyB,GAQzBjB,SARQ0uG,0CAAiBjmG,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAsE,QAAA,kDAAjBqhG,EAAiBvlG,UAAA,oBAAAG,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,IAAjBglG,CAAiB,2MCX9B,IAAApwG,EAAAL,EAAA,UACAA,EAAA,mIAsBgBwK,EAAA8E,yBAAA,wBAGI9E,EAAAuI,qBAAA,uBAAA8qC,EAAArzC,EAAA2I,wBAAA6U,GAAAjI,UAAArM,EAAAlJ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAG,EAAAg9F,UAAA7yD,GAAe,GAExBrzC,EAAAgF,iBAAA,GACJhF,EAAA+E,mDAJI/E,EAAAwI,qBAAA,QAAA6qC,EAAAtoC,IAGA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAmuC,EAAApmC,cAAAomC,EAAApoC,KAAA,MAzBpB3T,wBAgCkC,eAAAC,EAArB4uG,EAAqB1uG,EAY9B,SAAA0uG,EACuCvzD,EAC3Bh6C,GAAyB,IAAAG,EAAApB,KAAAD,EAAAC,KAAAwuG,GADExuG,KAAAi7C,QAC3Bj7C,KAAAiB,OAbIjB,KAAAyuG,QAAUzuG,KAAKiB,KAAKytG,YACpB1uG,KAAA2uG,OAAS3uG,KAAKiB,KAAK2tG,cAEnB5uG,KAAAuuG,UAAS,eAAAroG,EAAAzE,EAAAC,IAAAC,KAAG,SAAAC,EAAOqwB,GAAC,IAAA+3D,EAAA,OAAAtoF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAC1BhB,EAAKH,KAAKstG,UAAUt8E,GAAE,OAC5B7wB,EAAKH,KAAK6X,aAAa1X,EAAKH,KAAK4U,SAASzC,IAChC,QAAV42E,EAAA5oF,EAAK65C,aAAK,IAAA+uC,GAAVA,EAAYriF,QAAQ,wBAAAzF,EAAAwC,OAAA,EAAA9C,EAAA,IACvB,gBAAAob,GAAA,OAAA9W,EAAAtB,MAAA5E,KAAA6E,UAAA,EAJwB,GAMT7E,KAAA2H,MAAQ,eAAAknF,EAAA,OAAgB,QAAhBA,EAAMztF,EAAK65C,aAAK,IAAA4zC,OAAA,EAAVA,EAAYlnF,OAAO,CAK9C,GAAC/H,SAfK4uG,0CAAqBnmG,EAAAC,4BAalBpK,EAAA+rF,mBAAiB5hF,EAAAC,4BAAAC,EAAAG,qBAAA,kDAbpB8lG,EAAqBzlG,UAAA,oBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,2QAjByBsiB,UAAAC,MAAAC,EAAA,wPAZnDrnB,EAAA8E,yBAAA,WAEI9E,EAAAuI,qBAAA,0BAAStH,EAAA3B,OAAO,GAEhBU,EAAA8E,yBAAA,UAAA9E,CAAyC,gBACVA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,+DAGJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,KAA8DvlB,EAAA+E,yBAC9D/E,EAAA8E,yBAAA,uDAII9E,EAAA0J,qBAAA,GAAA88F,EAAA,yDAOJxmG,EAAA+E,wBAAA/E,UAjBQA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,YAAA8T,EAAAhZ,EAAAsN,sBAAA,IAAArM,EAAAqlG,SAAA,KAAAttF,EAAA/L,gBAAA,OAAA+L,EAAAhZ,EAAAsN,sBAAA,IAAArM,EAAAqlG,SAAA,KAAAttF,EAAA/N,MAAA,KAOJjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,iBAAAyN,EAAAjW,EAAAsN,sBAAA,KAAArM,EAAAqlG,SAAA,KAAArwF,EAAAlL,IAIqB/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,KAAArM,EAAAmlG,gIAWxBD,CAAqB,mICnClC3wG,EAAA,iCAEA8B,WAGqB,eAAAC,EAAR40F,EAAQ,WACjB,SAAAA,EAAoBsa,GAAuB/uG,EAAAC,KAAAw0F,GAAvBx0F,KAAA8uG,WAA0B,CAE9ChvG,SAAA00F,EAAA,EAAAjzF,IAAA,YAAAC,MAKO,SACHA,GAGA,OAFAqD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAyD,QAGrD,IAAK,WACD,OAAO7E,KAAK8uG,UAAUC,+BAA+BvtG,GACzD,IAAK,MACD,OAAOxB,KAAK8uG,UAAUE,uBAAuBxtG,GACjD,IAAK,SACD,OAAOxB,KAAK8uG,UAAUG,0BAA0BztG,GACpD,IAAK,QACD,OAAOxB,KAAK8uG,UAAUI,yBAAyB1tG,GACnD,QACI,OAAOxB,KAAK8uG,UAAUK,wBAAwB3tG,GAE1D,KAACgzF,CAAA,CAxBgB,GAwBhB50F,SAxBQ40F,0CAAQnsF,EAAAC,4BAAAC,EAAA6mG,aAAA,8DAAR5a,EAAQz8D,MAAA,IAARy8D,CAAQ,uICLrB32F,EAAA,iCAEKwxG,EAAL,SAAKA,GACDA,WAAAC,KAAA,UACAD,IAAAE,KAAA,UACAF,IAAAG,MAAA,WACAH,IAAAI,OAAA,YACAJ,IAAA7iB,IAAA,SACA6iB,IAAAK,aAAA,kBANCL,CAOL,CAPA,CAAKA,GAAe,IASpB1vG,eAGyB,eAAAC,EAAZi2F,EAAY,WACrB,SAAAA,EAAoBiZ,GAAuB/uG,EAAAC,KAAA61F,GAAvB71F,KAAA8uG,WAA0B,CAAChvG,SAAA+1F,EAAA,EAAAt0F,IAAA,YAAAC,MAE/C,SACIA,GAGA,OAFAqD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAyD,QAGrD,IAAK,WACD,OAAO7E,KAAK8uG,UAAUa,SAASN,EAAgBK,aAAcluG,GACjE,IAAK,MACD,OAAOxB,KAAK8uG,UAAUa,SAASN,EAAgB7iB,IAAKhrF,GACxD,IAAK,SACD,OAAOxB,KAAK8uG,UAAUa,SAASN,EAAgBI,OAAQjuG,GAC3D,IAAK,QACD,OAAOxB,KAAK8uG,UAAUa,SAASN,EAAgBG,MAAOhuG,GAC1D,QACI,OAAOxB,KAAK8uG,UAAUa,SAASN,EAAgBE,KAAM/tG,GAEjE,KAACq0F,CAAA,CAnBoB,GAmBpBj2F,SAnBQi2F,0CAAYxtF,EAAAC,4BAAAC,EAAA6mG,aAAA,kEAAZvZ,EAAY99D,MAAA,IAAZ89D,CAAY,kOCILxtF,EAAAiZ,kCAAA,GACIjZ,EAAAoiF,uBAAA,GACJpiF,EAAAoZ,yFAGApZ,EAAA8E,yBAAA,SAQI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,aAAAxI,EAAA++B,0BAAA,EAAA31B,EAAAm+F,EAAA53B,QAEA3vE,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqiG,EAAAt8F,KAAA,+BAtBZjL,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,UAAA9E,CAIC,cACaA,EAAAgF,iBAAA,GAA8BhF,EAAA+E,wBAAA/E,GAE5CA,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAA89F,EAAA,sBAGJxnG,EAAA+E,yBACA/E,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAA+9F,EAAA,WAUJznG,EAAA+E,yBACJ/E,EAAAoZ,uGAtBQpZ,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,gBAAAtN,EAAApM,MAAAsC,CAA6B,aAAA8J,EAAApM,OAGnBsC,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAApM,MAAA,gBAGKsC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAsB,EAAApM,MAAAsC,CAAc,WAAAuf,GAURvf,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAsB,EAAA49F,iCAS5B1nG,EAAA8E,yBAAA,SAAS9E,EAAAgF,iBAAA,GAAWhF,EAAA+E,iEAAX/E,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA2B,EAAA7P,iCAGVsC,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,UAAuC9E,EAAAgF,iBAAA,GAAahF,EAAA+E,iEADvC/E,EAAAwI,qBAAA,eAC0BxI,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAvC,EAAAuR,sBAvCnDtjB,yBA4CmC,eAAAC,EAAtBowG,EAAsBlwG,EA5CnC,SAAAkwG,IAAAjwG,EAAAC,KAAAgwG,GA8CoBhwG,KAAAijB,QAAkB,GAElBjjB,KAAA+F,MAAgB,GAEhB/F,KAAA+vG,MAA2B,KAC9CnwG,SAPYowG,yCAAsB,kDAAtBA,EAAsBjnG,UAAA,qBAAAwW,OAAA,CAAA0D,QAAA,UAAAld,MAAA,QAAAgqG,MAAA,SAAAvlB,mBAAA7zE,EAAAzN,MAAA,EAAAC,KAAA,EAAA+D,OAAA,0hBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,kCAzC3BhB,EAAA8E,yBAAA,WAII9E,EAAA0J,qBAAA,EAAAk+F,EAAA,sBA0BJ5nG,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAAm+F,EAAA,yBAAA7nG,EAAAqd,iCAAArd,CAEC,EAAA8nG,EAAA,yBAAA9nG,EAAAqd,yEA7BkBrd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,QAAA5a,CAAgB,WAAAokB,wFAqC9BujF,CAAsB,yMCtBf3nG,EAAAiZ,kCAAA,GACIjZ,EAAAgF,iBAAA,oBACJhF,EAAAoZ,yDACApZ,EAAAiZ,kCAAA,GAAsCjZ,EAAAgF,iBAAA,YAAMhF,EAAAoZ,yDAC5CpZ,EAAAiZ,kCAAA,GAAwCjZ,EAAAgF,iBAAA,WAAKhF,EAAAoZ,yDAC7CpZ,EAAAiZ,kCAAA,GAAqCjZ,EAAAgF,iBAAA,UAAIhF,EAAAoZ,yDACzCpZ,EAAAiZ,kCAAA,GAA+BjZ,EAAAgF,iBAAA,aAAOhF,EAAAoZ,+CA3B1D9hB,sBAwCgC,eAAAC,EAAnBwwG,EAAmBtwG,EAAA,SAAAswG,IAAArwG,EAAAC,KAAAowG,EAAA,GAAAxwG,SAAnBwwG,yCAAmB,kDAAnBA,EAAmBrnG,UAAA,kBAAAwW,OAAA,CAAA8nB,OAAA,UAAAmjD,mBAAA/4E,EAAAvI,MAAA,GAAAC,KAAA,GAAA+D,OAAA,sQAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCArCxBhB,EAAA8E,yBAAA,UAAA9E,CAOC,UAPDA,CAOC,gBAWWA,EAAA0J,qBAAA,EAAAs+F,EAAA,qBAAAhoG,CAEe,EAAAioG,EAAA,qBAFfjoG,CAEe,EAAAkoG,EAAA,qBAFfloG,CAEe,EAAAmoG,EAAA,qBAFfnoG,CAEe,EAAAooG,EAAA,sBAKnBpoG,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,SAII9E,EAAAoiF,uBAAA,GACJpiF,EAAA+E,wBAAA/E,UA9BAA,EAAAoX,sBAAA,+BAAAnW,EAAA+9B,OAAAh/B,CAA+C,+BAAAiB,EAAA+9B,OAA/Ch/B,CAA+C,2BAAAiB,EAAA+9B,OAA/Ch/B,CAA+C,yBAAAiB,EAAA+9B,OAA/Ch/B,CAA+C,0BAAAiB,EAAA+9B,QAQ3Ch/B,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,2BAAAnW,EAAA+9B,OAAAh/B,CAA2C,2BAAAiB,EAAA+9B,OAA3Ch/B,CAA2C,uBAAAiB,EAAA+9B,OAA3Ch/B,CAA2C,qBAAAiB,EAAA+9B,OAA3Ch/B,CAA2C,gCAAAiB,EAAA+9B,OAA3Ch/B,CAA2C,yBAAAiB,EAAA+9B,QAOhBh/B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAAAvH,EAAA+9B,QACRh/B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,0BAGAxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,wBACAxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,0BACAxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,uBAKnBxI,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,yBAAAnW,EAAA+9B,OAAAh/B,CAAyC,gCAAAiB,EAAA+9B,uFAS5C+oE,CAAmB,uLC1ChCzwG,wBAwCkC,eAAAC,EAArBjB,EAAqBmB,EAAA,SAAAnB,IAAAoB,EAAAC,KAAArB,EAAA,GAAAiB,SAArBjB,yCAAqB,kDAArBA,EAAqBoK,UAAA,uBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,sKAjCIsiB,UAAAC,MAAAC,EAAA,6GACLF,UAAAG,MAAAD,EAAA,0KAIbF,UAAAI,MAAAF,EAAA,qLATZrnB,EAAA8E,yBAAA,UAAA9E,CAEC,UACwBA,EAAAgF,iBAAA,SAAGhF,EAAA+E,yBACxB/E,EAAA8E,yBAAA,UAAA9E,EAAAulB,iBAAA,KAA2CvlB,EAAA+E,yBAC3C/E,EAAA8E,yBAAA,SAAA9E,EAAAulB,iBAAA,KAGAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,OAAA9E,EAAAulB,iBAAA,KAGAvlB,EAAA+E,wBAAA/E,6VAyBC1J,CAAqB,0JCzClC,IAAAiP,EAAA/P,EAAA,kLA2BYwK,EAAA8E,yBAAA,UAAA9E,CAAwD,WAC7CA,EAAAgF,iBAAA,iBAAWhF,EAAA+E,yBAClB/E,EAAA8E,yBAAA,qBAAA9E,CAAqC,kBACrBA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAA4W,GAAA,IAAAhS,EAAAvN,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAAwE,EAAAkuE,YAAA/yE,EAAA,GACR1I,EAAA8E,yBAAA,mBAAyB9E,EAAAgF,iBAAA,UAAIhF,EAAA+E,yBAC7B/E,EAAA8E,yBAAA,mBAA4B9E,EAAAgF,iBAAA,aAAOhF,EAAA+E,yBACnC/E,EAAA8E,yBAAA,mBAA0B9E,EAAAgF,iBAAA,YAAKhF,EAAA+E,wBAAA/E,iDAHvBA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAsB,EAAA2xE,8EA3BhCnkF,kCAkD4C,eAAAC,EAA/B8wG,EAA+B,WAQxC,SAAAA,EACYztD,EACyBhI,GAAqBl7C,EAAAC,KAAA0wG,GAD9C1wG,KAAAijD,cACyBjjD,KAAAi7C,QARrBj7C,KAAAqzD,KAAarzD,KAAKi7C,MAAMoY,KAEjCrzD,KAAA2wG,WAAqB,EAErB3wG,KAAA8jF,YAAiC,OAMpC9jF,KAAKqzD,KAAOrzD,KAAKi7C,MAAMoY,IAC3B,CAACvzD,SAAA4wG,EAAA,EAAAnvG,IAAA,QAAAC,MAEM,WACHxB,KAAKijD,YAAYt7C,OACrB,KAAC+oG,CAAA,CAjBuC,GAiBvC9wG,SAjBQ8wG,0CAA+BroG,EAAAC,4BAAAC,EAAA26C,cAAA76C,EAAAC,4BAU5BsF,EAAAivB,iBAAe,kDAVlB6zE,EAA+B3nG,UAAA,+BAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,mhBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/CpChB,EAAA8E,yBAAA,WAAA9E,CAAQ,QACAA,EAAAgF,iBAAA,iBAAWhF,EAAA+E,yBACf/E,EAAA8E,yBAAA,aAAA9E,CAAkC,cACpBA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA8E,yBAAA,WAAA9E,CAAgC,UAAhCA,CAAgC,WAEjBA,EAAAgF,iBAAA,eAAShF,EAAA+E,yBAChB/E,EAAA8E,yBAAA,uBACI9E,EAAAkB,oBAAA,cAMJlB,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,WAAA9E,CAAkB,qBACAA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAqnG,UAAA5/F,CAAA,GAAwB1I,EAAAgF,iBAAA,aAAMhF,EAAA+E,wBAAA/E,GAEhDA,EAAA0J,qBAAA,GAAA6+F,EAAA,cAUJvoG,EAAA+E,yBACA/E,EAAA8E,yBAAA,cAAA9E,CAEC,eACqDA,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBACxD/E,EAAA8E,yBAAA,gBAKI9E,EAAAgF,iBAAA,eACJhF,EAAA+E,wBAAA/E,UA9BYA,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA+pD,KAAA//C,MAOMjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAqnG,WAEoBtoG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAAqnG,WAkBlCtoG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAAxI,EAAAqO,0BAAA,EAAAjF,EAAAnI,EAAA+pD,KAAA/pD,EAAAqnG,UAAArnG,EAAAw6E,4LAQH4sB,CAA+B,8ICrD5C7yG,EAAA,6CAUYwK,EAAA8E,yBAAA,WAKI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,kEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAmE,EAAAm/F,SAAA,+BAVRxoG,EAAA8E,yBAAA,WAKI9E,EAAA0J,qBAAA,EAAA++F,EAAA,aAOJzoG,EAAA+E,8FATI/E,EAAA+rD,sBAAA,UAAAjiD,EAAAwa,KAAAvZ,IAKK/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAsB,EAAAwa,KAAAokF,MAAA1oG,CAAmB,WAAAuf,6BAMxBvf,EAAAkB,oBAAA,gFAGIlB,EAAAwI,qBAAA,SAAAxI,EAAA8L,sBAAA,IAAAyB,EAAA+W,KAAAokF,MAAA,cApBhBpxG,sBAwCgC,eAAAC,EAAnB00F,EAAmB,oBAAAA,IAAAv0F,EAAAC,KAAAs0F,EAAA,CAAAx0F,SAAAw0F,EAAA,EAAA/yF,IAAA,WAAAgE,IAI5B,WACI,IAAKvF,KAAK2sB,KAAM,MAAO,KACvB,IAAMrZ,EAAOtT,KAAK2sB,KAAKrZ,MAAQ,GACzBm6D,EAAQn6D,EAAKoqB,QAAQ,oBAAqB,IAAI92B,MAAM,KAC1D,OAAO6mE,EAAMxoE,OAAS,EAAC,GAAAjB,OACdypE,EAAM,GAAG,IAAEzpE,OAAGypE,EAAMA,EAAMxoE,OAAS,GAAG,IACzCqO,EAAKqmB,MAAM,EAAG,EACxB,KAAC26D,CAAA,CAX2B,GAW3B10F,SAXQ00F,yCAAmB,kDAAnBA,EAAmBvrF,UAAA,oBAAAwW,OAAA,CAAAoN,KAAA,QAAAzjB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,6XAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GArCxBhB,EAAA0J,qBAAA,EAAAi/F,EAAA,YAAA3oG,CAYM,EAAA4oG,EAAA,yBAAA5oG,EAAAqd,uCAVDrd,EAAAwI,qBAAA,OAAAvH,EAAAqjB,sRAmCA2nE,CAAmB,uNC1ChCz2F,EAAA,WACAyC,EAAAzC,EAAA,OAMAK,EAAAL,EAAA,OAEAwC,GADAxC,EAAA,MACAA,EAAA,QACAqzG,EAAArzG,EAAA,OACAszG,EAAAtzG,EAAA,OACAuzG,EAAAvzG,EAAA,OACAwzG,EAAAxzG,EAAA,OACAyzG,EAAAzzG,EAAA,OACA0zG,EAAA1zG,EAAA,OACA2zG,EAAA3zG,EAAA,2EAuBYwK,EAAA8E,yBAAA,UAAA9E,CAKC,aALDA,CAKC,UALDA,CAKC,UALDA,CAKC,cAMyBA,EAAAgF,iBAAA,YAAMhF,EAAA+E,wBAAA/E,GAEpBA,EAAA8E,yBAAA,YACI9E,EAAAgF,iBAAA,+DAIJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,kBACI9E,EAAAgF,iBAAA,sBACJhF,EAAA+E,wBAAA/E,iDAlBRA,EAAAwI,qBAAA,UAAAsB,EAAAs/F,eAWYppG,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,YAAA+Q,EAAAjW,EAAAsN,sBAAA,IAAAxD,EAAAw8F,SAAA,KAAArwF,EAAAhJ,gBAAA,OAAAgJ,EAAAjW,EAAAsN,sBAAA,IAAAxD,EAAAw8F,SAAA,KAAArwF,EAAAhL,MAAA,+BA+BhBjL,EAAA8E,yBAAA,WAAA9E,CAIC,aAJDA,CAIC,UAJDA,CAIC,UAJDA,CAIC,cAMyBA,EAAAgF,iBAAA,UAAIhF,EAAA+E,wBAAA/E,GAElBA,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,MAAuCvlB,EAAA+E,yBACvC/E,EAAA8E,yBAAA,iBACK9E,EAAAgF,iBAAA,mBAAahF,EAAA+E,wBAAA/E,+CAZ1BA,EAAAwI,qBAAA,UAAA+E,EAAA87F,4EAiBJrpG,EAAA8E,yBAAA,QAAA9E,CAAsC,eAK9BA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAa,GAAA,IAAAC,EAAAzJ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAU,EAAA6/F,eAAc,GAEvBtpG,EAAA8E,yBAAA,UAAA9E,CAAgD,UAAhDA,CAAgD,cAI9BA,EAAAgF,iBAAA,oBAAchF,EAAA+E,wBAAA/E,GAE5BA,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,MAA+CvlB,EAAA+E,yBAC/C/E,EAAA8E,yBAAA,iBACK9E,EAAAgF,iBAAA,mBAAahF,EAAA+E,wBAAA/E,iCAwB9BA,EAAA8E,yBAAA,WAAA9E,CAKC,aALDA,CAKC,UALDA,CAKC,UALDA,CAKC,cAMyBA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,wBAAA/E,GAExBA,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,0EAGAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,kBACK9E,EAAAgF,iBAAA,oBAAahF,EAAA+E,wBAAA/E,+CAhB1BA,EAAAwI,qBAAA,UAAAa,EAAAkgG,kBAcQvpG,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAzlB,EAAAsN,sBAAA,6BAAAtN,CAAMA,EAAAsN,sBAAA,wBAANtN,EAAA2lB,sBAAA,iEAOZ3lB,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA8O,EAAA2xF,mBAAkB,GAE3BxpG,EAAA8E,yBAAA,UAAA9E,CAAgD,UAAhDA,CAAgD,cAI9BA,EAAAgF,iBAAA,mBAAahF,EAAA+E,wBAAA/E,GAE3BA,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,MAA+CvlB,EAAA+E,wBAAA/E,mEAc/CA,EAAA8E,yBAAA,eAII9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAqqB,GAAA,IAAAtb,EAAA1X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA2O,EAAA+xF,aAAY,GAErBzpG,EAAAgF,iBAAA,mBACJhF,EAAA+E,0BA/KpBzN,wBAmMkC,eAAAC,EAArBk2F,EAAqB,WAmC9B,SAAAA,EACY90F,EACAC,EACAgX,GAAkBlY,EAAAC,KAAA81F,GAFlB91F,KAAAgB,YACAhB,KAAAiB,OACAjB,KAAAiY,UArCIjY,KAAA6V,SAAW7V,KAAKiB,KAAKiX,gBACrBlY,KAAA2uG,OAAS3uG,KAAKiB,KAAK2tG,cACnB5uG,KAAAyuG,QAAUzuG,KAAKiB,KAAKytG,YAEpB1uG,KAAAyxG,cAAgBF,EAAA/C,sBAChBxuG,KAAA+xG,gBAAkBX,EAAAxiB,wBAClB5uF,KAAA0xG,aAAeL,EAAAtT,qBACf/9F,KAAAgyG,sBAAwBb,EAAApnB,8BACxB/pF,KAAA4xG,iBAAmBN,EAAAjH,uBA8BhC,CAACvqG,SAAAg2F,EAAA,EAAAv0F,IAAA,OAAAgE,IA5BJ,WACI,SAAOjF,EAAAmG,cACX,GAAC,CAAAlF,IAAA,SAAAgE,IAED,WACI,OAAOvF,KAAK2sB,KAAKoU,OAAOrsB,KAAK,KACjC,GAAC,CAAAnT,IAAA,UAAAgE,IAED,WACI,OAAOjF,EAAA8wE,OACX,GAAC,CAAA7vE,IAAA,WAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,iBAAmB,EACjD,GAAC,CAAAhE,IAAA,UAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,gBAAkB,EAChD,GAAC,CAAAhE,IAAA,kBAAAgE,IAED,WACI,SAAOjF,EAAAurE,gBACX,GAAC,CAAAtqE,IAAA,SAAAC,MAQM,YACH,EAAAnB,EAAA4xG,SACJ,GAAC,CAAA1wG,IAAA,aAAAC,MAEM,WACHmE,SAASwC,QACb,GAAC,CAAA5G,IAAA,mBAAAC,MAEM,WACCxB,KAAKgB,UAAUuE,IAAI,4BACnBhD,OAAOqS,KACH5U,KAAKgB,UAAUuE,IAAI,4BACnB,UAGJvF,KAAKiY,QAAQrD,KAAK48F,EAAAU,4BAE1B,GAAC,CAAA3wG,IAAA,eAAAC,MAEM,WACHxB,KAAKiY,QAAQrD,KAAKs8F,EAAAiB,0BACtB,GAAC,CAAA5wG,IAAA,gBAAAC,OAAA4wG,EAAA3wG,EAAAC,IAAAC,KAEM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAEOmqF,MACF,kFACH,OAAArqF,SAAAE,KAAA,EAAAF,EAAA4B,KACHgsE,OAAI,OACN9vE,KAAKiY,QAAQrD,KAAK1W,EAAAixF,wBAAyB,CAAEzsF,KAAM,CAAEusF,UALtC/sF,EAAA4B,QAKqD,wBAAA5B,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACvE,SAAAqyG,IAAA,OAAAD,EAAAxtG,MAAA5E,KAAA6E,UAAA,MAAAixF,EATA,IAAAsc,CASA,CAvE6B,GAuE7BxyG,SAvEQk2F,0CAAqBztF,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAoQ,WAAA,kDAArB+8E,EAAqB/sF,UAAA,oBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,+tBApFesiB,UAAAC,MAAAC,EAAA,wZAsD5BF,UAAAG,MAAAD,EAAA,4KAakBF,UAAAI,MAAAF,EAAA,kKA1GUF,UAAAM,MAAAJ,EAAA,+KAoBAF,UAAAO,MAAAL,EAAA,sJAuCAF,UAAA0rB,MAAAxrB,EAAA,0HACrB,gBACA,iBAqBiBF,UAAAowB,MAAAlwB,EAAA,+KAvJrCrnB,EAAA8E,yBAAA,UAAA9E,CAEC,WAEOA,EAAAkB,oBAAA,qBAKAlB,EAAA8E,yBAAA,WAAc9E,EAAAgF,iBAAA,GAAgBhF,EAAA+E,yBAC9B/E,EAAA8E,yBAAA,WAAyC9E,EAAAgF,iBAAA,GAAiBhF,EAAA+E,wBAAA/E,GAE9DA,EAAA0J,qBAAA,EAAAugG,EAAA,4CAyBAjqG,EAAA8E,yBAAA,UAAA9E,CAAgE,cAAhEA,CAAgE,WAAhEA,CAAgE,WAAhEA,CAAgE,eAMtCA,EAAAgF,iBAAA,eAAQhF,EAAA+E,wBAAA/E,GAEtBA,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,kEAIJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,kBACI9E,EAAAgF,iBAAA,sBACJhF,EAAA+E,wBAAA/E,OAIZA,EAAA0J,qBAAA,GAAAwgG,EAAA,cAAAlqG,CAkBM,GAAAmqG,EAAA,eAqBNnqG,EAAA8E,yBAAA,YAAA9E,CAIC,cAJDA,CAIC,WAJDA,CAIC,WAJDA,CAIC,eAMyBA,EAAAgF,iBAAA,iBAAUhF,EAAA+E,wBAAA/E,GAExBA,EAAA8E,yBAAA,aAAA9E,EAAAulB,iBAAA,OAAgDvlB,EAAA+E,yBAChD/E,EAAA8E,yBAAA,kBACK9E,EAAAgF,iBAAA,oBAAahF,EAAA+E,wBAAA/E,OAK9BA,EAAA0J,qBAAA,GAAA0gG,EAAA,cAAApqG,CAsBM,GAAAqqG,EAAA,iBAiBNrqG,EAAA8E,yBAAA,YAAA9E,CAA4C,YAA5CA,CAA4C,gBAOhCA,EAAAuI,qBAAA,0BAAStH,EAAA2oG,QAAQ,GALrB5pG,EAAAulB,iBAAA,OAQAvlB,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAA4gG,EAAA,iBAQJtqG,EAAA+E,yBACA/E,EAAA8E,yBAAA,aACI9E,EAAAiZ,kCAAA,IAAAjZ,EAAAulB,iBAAA,OAA4BvlB,EAAAoZ,kCAC5BpZ,EAAA8E,yBAAA,gBAEI9E,EAAAuI,qBAAA,0BAAStH,EAAA+oG,eAAe,GAExBhqG,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,gEAEJhF,EAAA+E,wBAAA/E,YApLIA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAqjB,KAAAtkB,CAAa,aAAAiB,EAAAy3B,QAGH14B,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA,MAAA3K,EAAAqjB,KAAA,KAAArjB,EAAAqjB,KAAArZ,MAC2BjL,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA,MAAA3K,EAAAqjB,KAAA,KAAArjB,EAAAqjB,KAAAhmB,OAIxC0B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAAsN,sBAAA,KAAArM,EAAAmlG,SAAAxpG,QAuBcoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAyoG,iBASH1pG,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,YAAAixC,EAAAn2C,EAAAsN,sBAAA,MAAArM,EAAAuM,WAAA,KAAA2oC,EAAAlpC,gBAAA,OAAAkpC,EAAAn2C,EAAAsN,sBAAA,MAAArM,EAAAuM,WAAA,KAAA2oC,EAAAlrC,MAAA,KAcXjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAN,SAAAnD,SAAA,SAgBCwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAN,SAAAnD,SAAA,QAuBFwC,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,oBAAAnW,EAAAohG,SAAAphG,EAAAohG,QAAAzlG,SADAoD,EAAAwI,qBAAA,UAAAvH,EAAA0oG,uBAoBC3pG,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,aAAAvH,EAAAohG,QAAA,KAAAphG,EAAAohG,QAAAzlG,QAwBAoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAN,SAAAnD,SAAA,mBA0BQwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAspG,iBAYDvqG,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,EAAA+/E,QAAA5K,KAAA,KAIJp2E,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAArX,EAAA8L,sBAAA,MAAA7K,EAAA+/E,QAAA/K,KAAA,iBAAAj2E,EAAA8L,sBAAA,MAAA7K,EAAA+/E,QAAA/K,KAAA,uBAQPwX,CAAqB,+NC5NlCj4F,EAAA,WACAi1F,EAAAj1F,EAAA,OASAyC,GARAzC,EAAA,OAQAA,EAAA,8FA2C4BwK,EAAAkB,oBAAA,mDAIIlB,EAAAoX,sBAAA,uBAAAhJ,EAAAkmB,qEAvBZt0B,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,WAMI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAa,GAAA,IAAAC,EAAAzJ,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAAU,EAAA+gG,aAAY,EAArBxqG,CAAsB,uBAAAyqG,EAAAzqG,EAAA2I,wBAAAa,GAAA+L,UAAAsC,EAAA7X,EAAA8I,wBAAA,UACb9I,EAAA+I,sBAAA8O,EAAA6yF,eAAAD,GAAmB,GAE5BzqG,EAAAgF,iBAAA,GASAhF,EAAA0J,qBAAA,EAAAihG,EAAA,aAMJ3qG,EAAA+E,yBACJ/E,EAAAoZ,4DArBQpZ,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,gBAAAqzF,EAAA,IAAAA,EAAA7tG,OAAA,EAAAoD,CAAkD,oBAAAyqG,GAHlDzqG,EAAA+rD,sBAAA,MAAA0+C,GAQAzqG,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,gBAAAulG,EAAA,mBAAAA,EAAA,4BAAAA,EAAA,YAAAA,EAAA,KAUKzqG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,kBAAAiiG,6BAzBjBzqG,EAAA8E,yBAAA,WAKI9E,EAAA0J,qBAAA,EAAAkhG,EAAA,sBA2BJ5qG,EAAA+E,iDA3BkC/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAqiG,6BATtC7qG,EAAA8E,yBAAA,WAII9E,EAAA0J,qBAAA,EAAAohG,EAAA,aAiCJ9qG,EAAA+E,iEA9BwB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAsB,EAAAihG,qBApB9BC,EAAe,CACjB,aAAazsG,MAAM,IACnB,aAAaA,MAAM,IACnB,YAAYA,MAAM,IAClB,UAAUA,MAAM,IAChB,CAAC,SAAU,UAAW,gBAG1BjH,2BA6EI,eAAAC,EADS0zG,EACT,SAAA3yG,GAAAC,EAAA0yG,EAAA3yG,GAAA,IAAAG,EAAAC,EAAAuyG,GAsBA,SAAAA,EACYrlB,EACAqL,GAAiB,IAAAl4F,EAAArB,SAAAC,KAAAszG,IAEzBlyG,EAAAN,EAAAO,KAAArB,OAHQiuF,WACA7sF,EAAAk4F,WAlBIl4F,EAAAgyG,OAASC,EAElBjyG,EAAAu7B,MAAqC,SAEpCv7B,EAAAs4F,aAA2B,KAILt4F,EAAAmyG,QAAU,WAC/BD,EAAyBzmG,UAC9BzL,EAAKwT,OACLxT,EAAK2C,aAAa,QACtB,EAC6B3C,EAAAoyG,OAAS,kBAClCpyG,EAAKqC,QAAQ,OAAQ,kBAAMrC,EAAKuG,OAAO,EAAC,EAACvG,CAO7C,CAACtB,SAAAwzG,EAAA,EAAA/xG,IAAA,cAAAC,MAEM,WACH04F,EAAAC,EAAAmZ,EAAAnrB,WAAA,cAAAnoF,MAAAqB,KAAArB,MACAA,KAAK2H,OACT,GAAC,CAAApG,IAAA,aAAAC,MAEM,WAAU,IAAAiyG,EAAAC,EACA,QAAbD,EAAAzzG,KAAKiuF,gBAAQ,IAAAwlB,GAAe,QAAfA,EAAbA,EAAernB,qBAAa,IAAAqnB,GAA5BA,EAA8BE,OACjB,QAAbD,EAAA1zG,KAAKiuF,gBAAQ,IAAAylB,GAAe,QAAfA,EAAbA,EAAetnB,qBAAa,IAAAsnB,GAA5BA,EAA8BxsF,OAClC,GAAC,CAAA3lB,IAAA,OAAAC,MAEM,WACCxB,KAAK05F,cACJ15F,KAAKq6F,UACVr6F,KAAK05F,aAAe15F,KAAKs5F,SAASiB,OAAO,CACrCE,iBAAkBz6F,KAAKs5F,SAClBniD,WACAy8D,SACAC,SACAC,uBAET9zG,KAAK05F,aAAasB,OAAOh7F,KAAKq6F,SAClC,GAAC,CAAA94F,IAAA,QAAAC,MAEM,WACCxB,KAAK05F,eACL15F,KAAK05F,aAAawB,UAClBl7F,KAAK05F,aAAe,KAE5B,GAAC,CAAAn4F,IAAA,iBAAAC,MAEM,SAAeD,GAAW,IAAAwD,EAAA/E,KACzB+zG,EAAa/zG,KAAKiuF,SAAS7B,cAAc4nB,eACvC5oC,EAAMprE,KAAKiuF,SAAS7B,cAAc5qF,OAAS,GACjD,OAAQD,EAAIqxB,eACR,IAAK,SACL,IAAK,UACD5yB,KAAK28B,MAAQ,QACb,MACJ,IAAK,cACD38B,KAAKiuF,SAAS7B,cAAc5qF,MAAK,GAAAwC,OAAMonE,EAAI6oC,OACvC,EACAF,EAAa,IAChB/vG,OAAGonE,EAAI6oC,OAAOF,EAAY3oC,EAAInmE,SAC/B8uG,EAAa5qE,KAAKyZ,IAAI,EAAGmxD,EAAa,GACtC,MACJ,IAAK,UACD/zG,KAAKiuF,SAAS7B,cAAc5qF,MAAK,GAAAwC,OAAMonE,EAAI6oC,OACvC,EACAF,GACA,KAAG/vG,OAAGonE,EAAI6oC,OAAOF,EAAY3oC,EAAInmE,SACrC8uG,GAAc,EACd,MACJ,QACuB,UAAf/zG,KAAK28B,QAAmB38B,KAAK28B,MAAQ,UACzC38B,KAAKiuF,SAAS7B,cAAc5qF,MAAK,GAAAwC,OAAMonE,EAAI6oC,OACvC,EACAF,IACH/vG,OAAGzC,GAAGyC,OAAGonE,EAAI6oC,OAAOF,EAAY3oC,EAAInmE,SACrC8uG,GAAc,EAEtB/zG,KAAKiuF,SAAS7B,cAAc8nB,cAAc,IAAIC,WAAW,UACzDn0G,KAAKo0G,iBACLp0G,KAAKyD,QACD,QACA,WACIsB,EAAK8tG,aACL9tG,EAAKkpF,SAAS7B,cAAc4nB,eAAiBD,EAC7ChvG,EAAKkpF,SAAS7B,cAAcioB,aAAeN,CAC/C,EACA,GAER,GAAC,CAAAxyG,IAAA,iBAAAC,MAEM,WAAc,IAAA2E,EAAAnG,KACjBA,KAAKozG,OAASpzG,KAAKozG,OAAOz3F,IAAI,SAAC1Y,GAAC,OAC5BA,EAAE0Y,IAAI,SAACqxD,GAAC,OACJA,EAAE/nE,OAAS,EACL+nE,EACAA,EACmB,WAAf7mE,EAAKw2B,MACC,cACA,gBACP,EACZ,EAET,KAAC22E,CAAA,CAlHD,CAAQhzG,EAAA8H,cAAYxI,SADX0zG,0CAAwBjrG,EAAAC,4BAAAD,EAAAqkF,YAAArkF,EAAAC,4BAAAC,EAAA+yF,SAAA,kDAAxBgY,EAAwBvqG,UAAA,qDAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,2BAatBypF,EAAAyI,UAAS,uKAbXjyF,EAAAiqG,SAAS,4BAATjqG,EAAAkqG,QAAQ,iyBAzEbnrG,EAAAoiF,uBAAA,GACApiF,EAAA0J,qBAAA,EAAAuiG,EAAA,8iBAwEKhB,CACT,sFCjGJ98E,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,wKCJA,IAAAkK,EAAAhM,EAAA,wCAyB4BwK,EAAA8E,yBAAA,UAAA9E,EAAAulB,iBAAA,MAA2CvlB,EAAA+E,mDATvD/E,EAAA8E,yBAAA,WAKI9E,EAAAkB,oBAAA,qBACAlB,EAAA8E,yBAAA,UAAA9E,CAAc,SACLA,EAAAgF,iBAAA,GAAehF,EAAA+E,yBACpB/E,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,EAAAwiG,EAAA,eACJlsG,EAAA+E,wBAAA/E,2DALWA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA2jG,GAENnsG,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAugG,EAAAlhG,MAEMjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAAmC,OAAAkgG,EAAA7tG,QAvBnChH,wBAgCkC,eAAAC,EAArB60G,EAAqB30G,EAhClC,SAAA20G,IAAA10G,EAAAC,KAAAy0G,GAiCoBz0G,KAAAsU,KAAe,GACftU,KAAA+S,KAAc,GACb/S,KAAA2H,MAAQ,IAAIkC,EAAAuV,eAChCxf,SAJY60G,yCAAqB,kDAArBA,EAAqB1rG,UAAA,oBAAAwW,OAAA,CAAAjL,KAAA,OAAAvB,KAAA,QAAAyM,QAAA,CAAA7X,MAAA,SAAAuB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,eAAAwnG,WAvBIllF,UAAAC,MAAAC,EAAA,+aADiCF,UAAAG,MAAAD,EAAA,6GACnD,gBAAkBglF,+NAc6BllF,UAAAI,MAAAF,EAAA,oHApB3DrnB,EAAA8E,yBAAA,UAAA9E,CAAqE,UAArEA,CAAqE,cAEhCA,EAAAuI,qBAAA,0BAAStH,EAAA3B,MAAA2X,MAAY,GAC9CjX,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,gBAAUhF,EAAA+E,wBAAA/E,GAExBA,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,KAGAvlB,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAA4iG,EAAA,aAaJtsG,EAAA+E,wBAAA/E,UAhBIA,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAxkB,EAAAyJ,KAAA9N,OAAAoD,CAAMiB,EAAAyJ,KAAA9N,QAANoD,EAAA2lB,sBAAA,GAMqB3lB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAyJ,UAexB0hG,CAAqB,yNClClC,IAAA5qG,EAAAhM,EAAA,OASA4yB,GAFA5yB,EAAA,OACAA,EAAA,OACAA,EAAA,QACAyC,EAAAzC,EAAA,OAGA+2G,GADA/2G,EAAA,OACAA,EAAA,QAEA4M,GADA5M,EAAA,OACAA,EAAA,mGAMYwK,EAAA8E,yBAAA,YAA2B9E,EAAAgF,iBAAA,GAAgBhF,EAAA+E,kEAAhB/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,GAAAgE,EAAAq1B,IAAA,mCAD/Bv+B,EAAA8E,yBAAA,UACI9E,EAAA0J,qBAAA,EAAA8iG,EAAA,cACAxsG,EAAAgF,iBAAA,gCACAhF,EAAA8E,yBAAA,YAA2B9E,EAAAgF,iBAAA,gCAA+BhF,EAAA+E,wBAAA/E,2CAFnDA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA20B,UACPz+B,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,UAAAhC,EAAA4b,MAAA,KAAA5b,EAAA4b,MAAApc,KAAAQ,EAAA0c,aAAA,KAC2BxmB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,UAAAhC,EAAA4b,MAAA,KAAA5b,EAAA4b,MAAApc,KAAA,iCAmCnBtJ,EAAA8E,yBAAA,WAAA9E,CAGC,cACaA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,yBACpB/E,EAAA8E,yBAAA,YAAkB9E,EAAAgF,iBAAA,aAAOhF,EAAA+E,wBAAA/E,6BAuB7BA,EAAA8E,yBAAA,YASI9E,EAAAkB,oBAAA,sBACJlB,EAAA+E,iDADmB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAikG,6BAEnBzsG,EAAA8E,yBAAA,WAAA9E,CAA2D,YAInDA,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,4CADIA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,YAAAuE,EAAAic,OAAA,MAAAjc,EAAAic,MAAA1X,UAAA,KAAAvE,EAAAic,MAAA1X,UAAApR,QAAA,iCAnBZoD,EAAA8E,yBAAA,YAII9E,EAAA0J,qBAAA,EAAAgjG,EAAA,4CAWA1sG,EAAA0J,qBAAA,EAAAijG,EAAA,cAOJ3sG,EAAA+E,kEAdP/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAA4sG,sBAAA,UAAA/jG,EAAA6c,MAAA,KAAA7c,EAAA6c,MAAA1X,UAAA,aAAAnF,EAAA6c,OAAA,MAAA7c,EAAA6c,MAAA1X,UAAA,KAAAnF,EAAA6c,MAAA1X,UAAApR,QAAA,MAOkCoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAK,EAAA6c,OAAA,MAAA7c,EAAA6c,MAAA1X,UAAA,KAAAnF,EAAA6c,MAAA1X,UAAApR,QAAA,+HAxEnCoD,EAAA8E,yBAAA,SAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA8O,EAAA8mB,cAAa,GAGtB3+B,EAAA8E,yBAAA,UAAA9E,CAEC,UAC4BA,EAAAgF,iBAAA,GAAkBhF,EAAA+E,yBAC3C/E,EAAA8E,yBAAA,UAAA9E,CAA4B,oBACOA,EAAAgF,iBAAA,GAAYhF,EAAA+E,wBAAA/E,GAE/CA,EAAA8E,yBAAA,WAAA9E,CAEC,WAFDA,CAEC,cAEiBA,EAAAgF,iBAAA,mBAAYhF,EAAA+E,yBACtB/E,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAAoC,eACtBA,EAAAgF,iBAAA,qBAAchF,EAAA+E,yBACxB/E,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,IAIJhF,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,GAAAmjG,EAAA,cAOA7sG,EAAA8E,yBAAA,YAAA9E,CAAoC,eACtBA,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBAChB/E,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,IAMJhF,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,kBAGI9E,EAAAgF,iBAAA,sBACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAAojG,EAAA,cAuBJ9sG,EAAA+E,wBAAA/E,+CA7EAA,EAAAwI,qBAAA,aAAAxI,EAAAmJ,0BAAA,GAAAC,GAAApJ,CAAqB,cAAAA,EAAA++B,0BAAA,GAAAzwB,EAAA,MAAAf,EAAAmY,MAAA,KAAAnY,EAAAmY,MAAA3a,KAQQ/K,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA,MAAA2B,EAAAmY,MAAA,KAAAnY,EAAAmY,MAAAzsB,OAER+G,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,SAAA+E,EAAAyxB,QAAkBh/B,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA2B,EAAA0xB,QAQvBj/B,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAAjQ,SAAA,KAMA0C,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAAqI,EAAAmY,OAAA,MAAAnY,EAAAmY,MAAAvV,UAAA,KAAA5C,EAAAmY,MAAAvV,UAAAlF,QAAA,MAAAsC,EAAAmY,OAAA,MAAAnY,EAAAmY,MAAAvV,UAAA,KAAA5C,EAAAmY,MAAAvV,UAAA7R,OAAA,KAQH0B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAA+E,EAAAmY,OAAA,OAAAqnF,EAAAx/F,EAAAmY,MAAAqU,IAAA,kBAAAgzE,EAAAnwG,QAQGoD,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,UAAA9J,EAAAmY,OAAA,MAAAnY,EAAAmY,MAAA1X,UAAA,KAAAT,EAAAmY,MAAA1X,UAAApR,OAAA,eAAA2Q,EAAAmY,OAAA,MAAAnY,EAAAmY,MAAA1X,UAAA,KAAAT,EAAAmY,MAAA1X,UAAApR,QAAA,uBAgBPoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAA+E,EAAAmY,OAAA,MAAAnY,EAAAmY,MAAA1X,UAAA,KAAAT,EAAAmY,MAAA1X,UAAApR,SAnErBtF,qBAqGgC,eAAAC,EAAnBy1G,EAAmB,SAAA10G,GAAAC,EAAAy0G,EAAA10G,GAAA,IAkB3BE,EAlB2BC,EAAAC,EAAAs0G,GAoB5B,SAAAA,EACYp9F,EACAyvB,EACAzmC,EACA2nB,EACA5nB,GAA0B,IAAAI,EAAArB,SAAAC,KAAAq1G,IAElCj0G,EAAAN,EAAAO,KAAArB,OANQiY,UACA7W,EAAAsmC,SACAtmC,EAAAH,OACAG,EAAAwnB,cACAxnB,EAAAJ,YAvBII,EAAA0lC,UAAoB,EACnB1lC,EAAAumC,KAAO,IAAI99B,EAAAuV,aACXhe,EAAAwmC,OAAS,IAAI/9B,EAAAuV,aAEvBhe,EAAAuE,SAAW,GAAGvE,CAsBrB,CAACtB,SAAAu1G,EAAA,EAAA9zG,IAAA,cAAAgE,IApBD,WACI,OAAOvF,KAAKgB,UAAU6tB,WAC1B,GAAC,CAAAttB,IAAA,SAAAgE,IAED,WAAiB,IAAA0/D,EAAAqwC,EAAAC,EAAAC,EACb,MAA0B,UAAZ,QAAVvwC,EAAAjlE,KAAK+tB,aAAK,IAAAk3C,OAAA,EAAVA,EAAYtoC,OAAyB,UACd,cAAb,QAAV24E,EAAAt1G,KAAK+tB,aAAK,IAAAunF,OAAA,EAAVA,EAAYjuE,QAA8B,UACnB,eAAb,QAAVkuE,EAAAv1G,KAAK+tB,aAAK,IAAAwnF,OAAA,EAAVA,EAAYluE,QAA+B,UACpB,cAAb,QAAVmuE,EAAAx1G,KAAK+tB,aAAK,IAAAynF,OAAA,EAAVA,EAAYnuE,QAA8B,QACvC,SACX,GAAC,CAAA9lC,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAYM,SAAAC,IAAA,IAAAmD,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAApC,KAAK4S,aACD,cACA5S,KAAK0nC,OAAOQ,cAAcp1B,UAAU,SAACq1B,GAAM,IAAAstE,EAAA,OACvCttE,EAAOE,IAAI,WAAsB,QAAVotE,EAAA1wG,EAAKgpB,aAAK,IAAA0nF,OAAA,EAAVA,EAAYriG,MAAO+0B,EAAO5iC,IAAI,SAC/CR,EAAKiiC,cACL,EAAE,IAEd9kC,EAAAE,KAAA,EACoBpC,KAAK01G,oBAAmB,OAA9C11G,KAAK2F,SAAQzD,EAAA4B,KAAA,wBAAA5B,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAChB,SAAA2E,IAAA,OAAA9D,EAAA+D,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,cAAAC,MAAA,eAAAw+F,EAAAv+F,EAAAC,IAAAC,KAEM,SAAAwD,EAAkBk0B,GAAsB,OAAA33B,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,WACvCi3B,EAAQtL,QAAS/tB,KAAK+tB,MAAK,CAAA1oB,EAAAjD,KAAA,QAAAiD,SAAAjD,KAAA,EACLpC,KAAK01G,oBAAmB,OAA9C11G,KAAK2F,SAAQN,EAAAvB,KAAA,wBAAAuB,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IAEpB,gBAAAogG,EAAApjF,GAAA,OAAAgjF,EAAAp7F,MAAA5E,KAAA6E,UAAA,EANA,IAMA,CAAAtD,IAAA,MAAAgE,IAED,WAAc,IAAAowG,EACJhkG,GAAiB,QAAVgkG,EAAA31G,KAAK+tB,aAAK,IAAA4nF,OAAA,EAAVA,EAAYhkG,OAAQyI,KAAK8W,MAChCuX,KAAWhY,EAAAkC,WAAUvY,KAAK8W,MAAOvf,GACvC,SAAA3N,OAAUykC,EAAW,WAAUhY,EAAAiY,QAAO/2B,EAAM,QAChD,GAAC,CAAApQ,IAAA,oBAAAC,MAAA,eAAAo0G,EAAAn0G,EAAAC,IAAAC,KAEM,SAAAsE,IAAA,IAAA4vG,EAAAC,EAAAC,EAAA78F,EAAAsD,EAAAw5F,EAAAriG,EAAA,OAAAjS,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OACG8W,UACQ,QAAV28F,EAAA71G,KAAK+tB,aAAK,IAAA8nF,OAAA,EAAVA,EAAYj/F,UAAU,MACZ,QADck/F,EACxB91G,KAAK+tB,aAAK,IAAA+nF,OAAA,EAAVA,EAAY58F,UACF,QADQ68F,EAClB/1G,KAAK+tB,aAAK,IAAAgoF,OAAA,EAAVA,EAAYv5F,QACX,GAAUpW,EAAAhE,KAAA,EACKpC,KAAK4oB,YAAYgB,UACjC1Q,EAAO9F,IAAM8F,EAAOvS,OACvB,OAFK6V,SAAKpW,EAAAtC,KAIL6P,EACF3T,KAAKiB,KAAKkuB,YAFR6mF,EAAYx5F,GAAO9I,OAAS,KAG9B1T,KAAKiB,KAAK8U,UAAUqZ,KAAK,SAACnsB,GAAC,OAAK+yG,EAAUnwG,SAAS5C,EAAEmQ,GAAG,GAAChN,EAAA7C,OAAA,YAAAS,OACnD2P,GAAQA,EAAK2B,cAAgB3B,EAAKL,MAAQ,KAAO,GAAE,KAAAtP,OACzDwY,GAAOlH,cAAgBkH,GAAOlJ,OAClC,wBAAAlN,EAAA1B,OAAA,EAAAuB,EAAAjG,KAAA,IACH,gBAAA01G,IAAA,OAAAE,EAAAhxG,MAAA5E,KAAA6E,UAAA,EAlBA,IAkBA,CAAAtD,IAAA,SAAAgE,IAED,WAAiB,IAAA0wG,EAAAC,EAAAC,EACb,GAAc,QAAdF,EAAIj2G,KAAK+tB,aAAK,IAAAkoF,GAAVA,EAAYltE,WAAY,MAAO,UACnC,IAAM9Z,GAAkB,QAAVinF,EAAAl2G,KAAK+tB,aAAK,IAAAmoF,OAAA,EAAVA,EAAYvkG,OAAQyI,KAAK8W,MACjCtf,GAAqB,QAAVukG,EAAAn2G,KAAK+tB,aAAK,IAAAooF,OAAA,EAAVA,EAAYvkG,WAAY,GACnC2S,KAAMkM,EAAA4N,YAAWpP,EAAOrd,GACxBo3B,KAAMvY,EAAAwY,gBAAe,CACvBC,MAAOC,KAAKC,MAAMx3B,EAAW,IAC7By3B,QAASz3B,EAAW,KAEnB8rB,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAA15B,UAAUysB,EAAAiY,QAAOzZ,EAAOjvB,KAAK6uB,aAAY,OAAA7qB,UAAMysB,EAAAiY,QAC3CnkB,EACAvkB,KAAK6uB,aACR,MAAA7qB,OAAKglC,EAAG,IACb,GAAC,CAAAznC,IAAA,cAAAC,MAEM,WAAW,IAAA2E,EAAAnG,KACTA,KAAK+tB,OACV/tB,KAAKyD,QAAQ,OAAQ,WACjB,IAAM4U,EAAMlS,EAAK8R,QAAQrD,KAAKggG,EAAAwB,2BAA4B,CACtD1zG,KAAMyD,EAAK4nB,QAEf5nB,EAAKyM,aACD,OACAyF,EAAIM,kBAAkBgvB,KAAK70B,UAAU,kBAAM3M,EAAKwhC,KAAKroB,MAAM,IAE/DnZ,EAAKyM,aACD,SACAyF,EAAIM,kBAAkBivB,OAAO90B,UAAU,SAAC7P,GAAC,OACrCkD,EAAKyhC,OAAOtoB,KAAKrc,EAAE,GAG/B,EACJ,KAACoyG,CAAA,CA1G2B,CAAQ/0G,EAAA8H,cAAYxI,SAAvCy1G,0CAAkBhtG,EAAAC,4BAAAC,EAAAwQ,WAAA1Q,EAAAC,4BAAAG,EAAA8gC,gBAAAlhC,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAqC,WAAA7C,EAAAC,4BAAAyc,EAAAvc,iBAAA,kDAAlB6sG,EAAkBtsG,UAAA,iBAAAwW,OAAA,CAAAwO,MAAA,QAAA+Y,SAAA,YAAAtnB,QAAA,CAAAmoB,KAAA,OAAAC,OAAA,UAAA5+B,SAAA,CAAAX,EAAAinB,6BAFhB,CAAC7kB,EAAAS,YAAU7C,EAAAY,qCAAAZ,EAAA+xB,gCAAAlxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,6wCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAhGlBhB,EAAA0J,qBAAA,EAAAskG,EAAA,WAAAhuG,CAIK,EAAAiuG,EAAA,mBAJ+BjuG,EAAAwI,qBAAA,OAAAvH,EAAAykB,OAW/B1lB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAykB,8IAuFAsnF,CAAmB,4OCtHhC,IAAAxrG,EAAAhM,EAAA,OACA+P,EAAA/P,EAAA,OACA4yB,EAAA5yB,EAAA,OAGA+rC,GADA/rC,EAAA,OACAA,EAAA,QAEA4M,GADA5M,EAAA,OACAA,EAAA,QACA04G,EAAA14G,EAAA,MACA24G,EAAA34G,EAAA,OACAyC,EAAAzC,EAAA,OACA+zD,EAAA/zD,EAAA,OACAwC,EAAAxC,EAAA,OACA8rC,EAAA9rC,EAAA,sFAoBgBwK,EAAAkB,oBAAA,wCAIAlB,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,uBAIJlB,EAAA+E,mEAHQ/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAAA+E,GAAAmY,OAAA,MAAAnY,GAAAmY,MAAA7U,OAAA,KAAAtD,GAAAmY,MAAA7U,OAAA0R,0EAsBAviB,EAAA8E,yBAAA,eAcI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+F,IAAA,IAAAC,GAAA3O,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAA4F,GAAAy/F,UAAS,GAElBpuG,EAAA8E,yBAAA,WAAA9E,CAEC,cACaA,EAAAgF,iBAAA,GAIRhF,EAAA+E,yBACF/E,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,MAMAvlB,EAAA+E,wBAAA/E,kDArBJA,EAAAoX,sBAAA,yBAAAlJ,GAAAmgG,YAAAruG,CAA8C,0BAAAkO,GAAAmgG,YAA9CruG,CAA8C,kCAAAkO,GAAAmgG,aAUhCruG,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA,YAAAsC,GAAAmgG,YAAA,qBAWVruG,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAA,YAAAvX,GAAAmgG,YAAA,yBAAAruG,EAAA2lB,sBAAA,gCAGR3lB,EAAA8E,yBAAA,cAAA9E,CAMC,cACaA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,wBAAA/E,0EAJpBA,EAAAwI,qBAAA,oBAAA0E,iCAzCRlN,EAAA8E,yBAAA,YAKI9E,EAAA0J,qBAAA,EAAA4kG,EAAA,gBAAAtuG,CAgCS,EAAAuuG,EAAA,iBAUbvuG,EAAA+E,mEAtCS/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAU,GAAAmlG,cAAA,MAAAnlG,GAAAwc,MAAA,KAAAxc,GAAAwc,MAAA8oF,eAAA,SAAAtlG,GAAAmlG,aAkCAruG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAU,GAAAulG,yCAyBDzuG,EAAAiZ,kCAAA,GACIjZ,EAAAgF,iBAAA,GACJhF,EAAAoZ,4EADIpZ,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAAmE,GAAAmF,MAAA,KAAAnF,GAAAmF,MAAAvB,gBAAA,MAAA5D,GAAAmF,MAAA,KAAAnF,GAAAmF,MAAAvD,MAAA,mCASZjL,EAAA8E,yBAAA,WAAA9E,CAGC,cACaA,EAAAgF,iBAAA,WAAKhF,EAAA+E,yBACf/E,EAAA8E,yBAAA,SACI9E,EAAAgF,iBAAA,GAEJhF,EAAA+E,wBAAA/E,6CAFIA,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,WAAAxO,GAAA2E,SAAA,KAAA3E,GAAA2E,SAAAP,gBAAA,MAAApE,GAAA2E,SAAA,KAAA3E,GAAA2E,SAAAvC,MAAA,WAAApC,GAAA2E,SAAA,KAAA3E,GAAA2E,SAAAwZ,QAAA,kCAuFQhnB,EAAA8E,yBAAA,YAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,oDADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAwpG,GAAAzjG,KAAA,kCAnBZjL,EAAA8E,yBAAA,WAAA9E,CAMC,YAKOA,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,WAAA9E,CAA4B,YACHA,EAAAgF,iBAAA,GAAehF,EAAA+E,yBACpC/E,EAAA0J,qBAAA,EAAAilG,EAAA,cAMJ3uG,EAAA+E,wBAAA/E,8BAVIA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA+2C,GAAAqS,SAAA,KAGqBtuD,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAqwC,GAAAhxC,MAGDjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAyzC,GAAA3hC,sCA5BxCta,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,WAAA9E,CAEC,WACGA,EAAAulB,iBAAA,MAKAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,EAAAklG,EAAA,cAuBJ5uG,EAAA+E,wBAAA/E,GAERA,EAAAoZ,4EApBbpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA4F,GAAAsX,MAAAqU,IAAA,eAAAvJ,sGA0BiBxwB,EAAAkB,oBAAA,iEAGIlB,EAAAwI,qBAAA,YAAAiB,GAAA+E,MAAA,KAAA/E,GAAA+E,MAAAtD,OAAAlL,CAAqB,WAAAyJ,GAAA9I,SAArBX,CAAqB,UAAAA,EAAAmJ,0BAAA,EAAAm9C,kCAezBtmD,EAAAkB,oBAAA,wFAIIlB,EAAAwI,qBAAA,YAAAxI,EAAAsN,sBAAA,IAAAqL,GAAA+M,MAAA2X,OAAA,oCAAAr9B,EAAA6mF,wDAdR7mF,EAAA8E,yBAAA,WAAA9E,CAGC,WACGA,EAAAulB,iBAAA,MAKAvlB,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAAmlG,EAAA,cASJ7uG,EAAA+E,mEANS/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA6Q,GAAAqM,MAAA2X,oCAiBGr9B,EAAA8E,yBAAA,WAAA9E,CAiBC,cACaA,EAAAgF,iBAAA,GAMRhF,EAAA+E,yBACF/E,EAAA8E,yBAAA,YACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,8DAxBAA,EAAAoX,sBAAA,0BAAAiB,GAAA2mB,OAAA8vE,GAAA/jG,IAAA/K,CAEC,wBAAAqY,GAAA2mB,OAAA8vE,GAAA/jG,IAFD/K,CAEC,0BAAAqY,GAAA2mB,OAAA8vE,GAAA/jG,KAAA,aAAAsN,GAAA2mB,OAAA8vE,GAAA/jG,KAaS/K,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA,aAAAyM,GAAA2mB,OAAA8vE,GAAA/jG,IAAA,oBAAAsN,GAAA2mB,OAAA8vE,GAAA/jG,IAAA,yBAQN/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4pG,GAAA7jG,KAAA,+DApCpBjL,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,WAAA9E,CAEC,WACGA,EAAAulB,iBAAA,MAIAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,EAAAqlG,GAAA,cA6BJ/uG,EAAA+E,wBAAA/E,GAERA,EAAAoZ,4EAjCQpZ,EAAAiF,oBAAA,GAAAjF,EAAAylB,qBAAA,MAAA5N,GAAA6N,MAAAqH,eAAA1d,OAAA,KAAAwI,GAAA6N,MAAAqH,eAAA1d,OAAAzS,SAAA,GAAAoD,EAAA2lB,sBAAA,GAiBrB3lB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAqP,GAAA6N,MAAAqH,eAAA1d,QAAArP,EAAAmJ,0BAAA,EAAA6lG,wEAyBahvG,EAAA8E,yBAAA,WAAA9E,CAA0D,sBAIlDA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6Q,IAAA,IAAAC,GAAAzZ,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAA0Q,GAAAw1F,gBAA0B,EAAK,GAClCjvG,EAAA+E,wBAAA/E,+CAHGA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA2E,GAAAuY,MAAA1X,UAAAhO,CAAwB,OAAAmN,GAAAuY,MAAAzZ,wEAOhCjM,EAAA8E,yBAAA,eAGI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAqsD,IAAA,IAAAxY,GAAAx8C,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAyzC,GAAAld,KAAAroB,KAAAulC,GAAAroC,OAAgB,GAGzBnU,EAAA8E,yBAAA,WAAA9E,CAAmD,cACrCA,EAAAgF,iBAAA,UAAIhF,EAAA+E,yBACd/E,EAAA8E,yBAAA,SAAA9E,EAAAulB,iBAAA,MAAoBvlB,EAAA+E,wBAAA/E,wEAS5BA,EAAA8E,yBAAA,eAGI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAusD,IAAA,IAAAC,GAAAn1D,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAosD,GAAA51B,OAAAtoB,MAAY,GAAK,GAE1BjX,EAAA8E,yBAAA,WAAA9E,CAAmD,cACrCA,EAAAgF,iBAAA,YAAMhF,EAAA+E,yBAChB/E,EAAA8E,yBAAA,SAAA9E,EAAAulB,iBAAA,MAAuBvlB,EAAA+E,wBAAA/E,wEAG/BA,EAAA8E,yBAAA,eAGI9E,EAAAuI,qBAAA,uBAAA2mG,GAAAlvG,EAAA2I,wBAAAwmG,IAAA55F,UAAAqgD,GAAA51D,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA6sD,GAAAx3C,OAAAnH,KAAAi4F,GAAAnkG,IAAmB,GAE5B/K,EAAA8E,yBAAA,WAAA9E,CAAmD,cACrCA,EAAAgF,iBAAA,GAAchF,EAAA+E,yBACxB/E,EAAA8E,yBAAA,SAAA9E,EAAAulB,iBAAA,MAAwBvlB,EAAA+E,wBAAA/E,kCADdA,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAsjG,GAAAhpF,MACclmB,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAypF,GAAAjkG,MAAAjL,EAAA2lB,sBAAA,IAhWhD,IAAMypF,GAAgB,GAEtB93G,6BAuWuC,eAAAC,GAA1Bw2G,GAA0B,WAgEnC,SAAAA,GACqCpiE,GACzB/yC,GACA2nB,GACA5nB,GACAiX,IAAkB,IAAAgtD,GAAAqwC,GAAAC,GAAAx1G,EAAAC,KAAAo2G,IAJOp2G,KAAAg0C,UACzBh0C,KAAAiB,QACAjB,KAAA4oB,eACA5oB,KAAAgB,aACAhB,KAAAiY,WApEKjY,KAAAymB,OAAS,IAAI5c,EAAAuV,aACbpf,KAAA2nC,KAAO,IAAI99B,EAAAuV,aACXpf,KAAA4nC,OAAS,IAAI/9B,EAAAuV,aAEvBpf,KAAA02G,YAAc,GACd12G,KAAA2qC,UAAW,EACX3qC,KAAA03G,WAAY,EACZ13G,KAAAs3G,gBAA0B,EACjBt3G,KAAA+tB,MAAQ/tB,KAAKg0C,OACtBh0C,KAAAgJ,SAAW,CACd,CACIrD,SAAoB,QAAZs/D,GAAEjlE,KAAK+tB,aAAK,IAAAk3C,IAAQ,QAARA,GAAVA,GAAY/rD,cAAM,IAAA+rD,QAAA,EAAlBA,GAAoB1xD,OAC9B4T,QAASyiB,EAAAxiB,kBAIDpnB,KAAA8W,cAAyB,QAAVw+F,GAAAt1G,KAAK+tB,aAAK,IAAAunF,IAAiB,QAAjBA,GAAVA,GAAYlzE,IAAI,mBAAW,IAAAkzE,QAAA,EAA3BA,GAA6BrwG,QAAS,EACrDjF,KAAA4qC,aAAyB,QAAX2qE,GAACv1G,KAAK+tB,aAAK,IAAAwnF,IAAiB,QAAjBA,GAAVA,GAAY1qE,uBAAe,IAAA0qE,KAA3BA,GAA6BnmF,KACxD,SAACnsB,IAAC,MAAwB,kBAAnBA,GAAEwQ,YAAgC,IAGtCzT,KAAA6W,MAAuB,IAAI2/F,EAAAmB,cAC3B33G,KAAA6V,SAAqB,IAAI0gG,EAAAqB,SACzB53G,KAAAwc,MAAe,IAAIo1C,EAAAK,MAEnBjyD,KAAA63G,aAAe73G,KAAKg0C,OAAO39B,UAAUmmB,OACxC,SAACI,GAAOjQ,IAAI,OAAMiQ,IAAkC,aAAzBjQ,GAAKmrF,gBAAiC,EAAI,EAAC,EACtE,GAEG93G,KAAA+3G,eAAiB/3G,KAAKg0C,OAAO39B,UAAUmmB,OAC1C,SAACI,GAAOjQ,IAAI,OAAMiQ,IAAkC,aAAzBjQ,GAAKmrF,gBAAiC,EAAI,EAAC,EACtE,GAEG93G,KAAAg4G,cAAgBh4G,KAAKg0C,OAAO39B,UAAUmmB,OACzC,SAACI,GAAOjQ,IAAI,OACPiQ,IAC4B,cAAzBjQ,GAAKmrF,iBACoB,gBAAzBnrF,GAAKmrF,gBACC,EACA,EAAC,EACf,GA8BA93G,KAAKspF,QAAQrqB,MACjB,CAACn/D,SAAAs2G,GAAA,EAAA70G,IAAA,aAAAgE,IA5BD,WACI,OAAQvF,KAAKgB,UAAUuE,IAAI,iCAC/B,GAAC,CAAAhE,IAAA,iBAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,8BAAgCkyG,EAC9D,GAAC,CAAAl2G,IAAA,cAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAU6tB,WAC1B,GAAC,CAAAttB,IAAA,eAAAgE,IAED,WAAuB,IAAAiwG,GAAAG,GAAAE,GAAAC,GACnB,MAA0B,UAAZ,QAAVN,GAAAx1G,KAAK+tB,aAAK,IAAAynF,QAAA,EAAVA,GAAY74E,OAAyB,UACd,cAAb,QAAVg5E,GAAA31G,KAAK+tB,aAAK,IAAA4nF,QAAA,EAAVA,GAAYtuE,QAA8B,UACnB,eAAb,QAAVwuE,GAAA71G,KAAK+tB,aAAK,IAAA8nF,QAAA,EAAVA,GAAYxuE,QAA+B,UACpB,cAAb,QAAVyuE,GAAA91G,KAAK+tB,aAAK,IAAA+nF,QAAA,EAAVA,GAAYzuE,QAA8B,QACvC,SACX,GAAC,CAAA9lC,IAAA,SAAAgE,IAYD,WAAiB,IAAAwwG,GAAAE,GAAAC,GACb,GAAc,QAAdH,GAAI/1G,KAAK+tB,aAAK,IAAAgoF,IAAVA,GAAYhtE,WAAY,MAAO,UACnC,IAAM9Z,IAAkB,QAAVgnF,GAAAj2G,KAAK+tB,aAAK,IAAAkoF,QAAA,EAAVA,GAAYtkG,OAAQyI,KAAK8W,MACjCtf,IAAqB,QAAVskG,GAAAl2G,KAAK+tB,aAAK,IAAAmoF,QAAA,EAAVA,GAAYtkG,WAAY,GACnC2S,MAAMkM,EAAA4N,YAAWpP,GAAOrd,IACxBo3B,MAAMvY,EAAAwY,gBAAe,CACvBC,MAAOC,KAAKC,MAAMx3B,GAAW,IAC7By3B,QAASz3B,GAAW,KAEnB8rB,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAA15B,UAAUysB,EAAAiY,QAAOzZ,GAAOjvB,KAAK6uB,aAAY,OAAA7qB,UAAMysB,EAAAiY,QAC3CnkB,GACAvkB,KAAK6uB,aACR,MAAA7qB,OAAKglC,GAAG,IACb,GAAC,CAAAznC,IAAA,UAAAC,OAAAy2G,GAAAx2G,EAAAC,IAAAC,KAEM,SAAAC,KAAA,IAAAwrD,GAAA54B,GAAA,OAAA9yB,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAC8C,GAA3CoyB,MAAMn0B,EAAAwxB,WAAoB,QAAXu7B,GAACptD,KAAKwc,aAAK,IAAA4wC,QAAA,EAAVA,GAAYh6C,GAAI,YAC9B,CAAAlR,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,iBAAArB,UAAAE,KAAA,EACFoyB,GACDC,QAAQ,UAAW,IAAChE,EAAAyC,aAAYlzB,KAAK+tB,MAAMpc,QAAOvN,MAC5C,SAACogB,IAAC,SAAKlkB,EAAAkU,aAAW,8BAAAxQ,OAA+BwgB,IAAI,GAAC,OACjExkB,KAAK02G,YAAc,OAAO,wBAAAx0G,GAAAwC,OAAA,EAAA9C,GAAA5B,KAAA,IAC7B,SAAAy2G,KAAA,OAAAwB,GAAArzG,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,QAAAC,MAAA,eAAA02G,GAAAz2G,EAAAC,IAAAC,KAEO,SAAAwD,KAAA,IAAAgzG,GAAAC,GAAAh3G,GAAApB,KAAA,OAAA0B,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAAAiD,UAAAjD,KAAA,EACepC,KAAK4oB,YAAYgB,WACd,QAAlBuuF,GAAAn4G,KAAKg0C,OAAO96B,cAAM,IAAAi/F,QAAA,EAAlBA,GAAoB/kG,MAAwB,QAAtBglG,GAAIp4G,KAAKg0C,OAAO96B,cAAM,IAAAk/F,QAAA,EAAlBA,GAAoBzxG,QACjD,OAFD3G,KAAKwc,MAAKnX,GAAAvB,KAGV9D,KAAK6W,MAAQ7W,KAAKiB,KAAKkuB,YAAYnvB,KAAKwc,MAAM9I,OAC9C1T,KAAK6V,SAAW7V,KAAKiB,KAAK8U,UAAUqZ,KAAK,SAACvW,IAAG,OACzCzX,GAAKob,MAAM9I,MAAM7N,SAASgT,GAAIzF,GAAG,GAErCpT,KAAKgJ,SAAW,CACZ,CACIrD,SAAU3F,KAAKwc,MAAMjJ,OACrB4T,QAASyiB,EAAAxiB,kBAEf,wBAAA/hB,GAAAX,OAAA,EAAAS,GAAAnF,KAAA,IACL,gBAAAspF,KAAA,OAAA4uB,GAAAtzG,MAAA5E,KAAA6E,UAAA,EAhBA,IAgBA,CAAAtD,IAAA,SAAAC,MAEM,SAAO4R,IACV,IAAMwwB,GAAU5jC,KAAK+tB,MAAM8c,gBAAgBzb,KACvC,SAACnsB,IAAC,OAAKA,GAAE6N,WAAasC,EAAE,GAE5B,OAAIwwB,GAAQyD,OAAezD,GAAQyD,OAC5BzD,GACDA,GAAQ4H,SACJ,WACA5H,GAAQ6H,SACR,WACA,UACJ,SACV,GAAC,CAAAlqC,IAAA,eAAAC,MAEM,WAAY,IAAAuD,GAAA/E,KACfA,KAAK2qC,UAAW,EACJ3qC,KAAKiY,QAAQrD,KAAK+0B,EAAA+B,wBAAyB,CACnDC,SAAU,OACVC,UAAW,OACXlpC,KAAM,CAAEoZ,KAAM9b,KAAKwc,SAEnB/D,cAAc3F,UAAU,kBAAO/N,GAAK4lC,UAAW,CAAK,EAC5D,KAACyrE,GAjDA,IAAA6B,EAiDA,CA1IkC,GA0IlCr4G,UA1IQw2G,8CAA0B/tG,EAAAC,4BAiEvBsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAyC,WAAA7C,EAAAC,4BAAAK,EAAAH,iBAAAH,EAAAC,4BAAAO,EAAAkQ,WAAA,mDAjElBq9F,GAA0BrtG,UAAA,0BAAAyW,QAAA,CAAAiH,OAAA,SAAAkhB,KAAA,OAAAC,OAAA,UAAA5+B,SAAA,CAAAX,EAAAinB,6BAFxB,CAAC7kB,EAAAS,aAAUhC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,6/BArQ8CsiB,UAAAC,MAAAC,EAAA,+dAyCXF,UAAAG,MAAAD,EAAA,yKAOpCF,UAAAI,MAAAF,EAAA,6OASuCF,UAAAM,MAAAJ,EAAA,oFAMAF,UAAAO,MAAAL,EAAA,mFAMAF,UAAA0rB,MAAAxrB,EAAA,sKAM3CF,UAAAowB,MAAAlwB,EAAA,ggCA+JaF,UAAAqwB,MAAAnwB,EAAA,otBAnQqBF,UAAAswB,MAAApwB,EAAA,oGACnB,wHA0HXF,UAAAuwB,MAAArwB,EAAA,qmBAkDJF,UAAAwwB,MAAAtwB,EAAA,mRAiBkDF,UAAA83B,MAAA53B,EAAA,6GACnC,0aA8DFF,UAAA+3B,MAAA73B,EAAA,2FAgBAF,UAAAg4B,MAAA93B,EAAA,8FAUAF,UAAAi4B,MAAA/3B,EAAA,oJA3V1BrnB,EAAA8E,yBAAA,UAAA9E,CAEC,UAFDA,CAEC,SAMWA,EAAAuI,qBAAA,uBAAAG,IAAA,OAAAzH,GAAAotG,YAAA3lG,EAAA,GAIH1I,EAAA+E,yBACD/E,EAAA0J,qBAAA,EAAAsmG,EAAA,YAAAhwG,CAGO,EAAAiwG,EAAA,aAUPjwG,EAAA8E,yBAAA,UAKI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,CAAyD,UAAzDA,CAAyD,mBAG7CA,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,GAAAwmG,EAAA,aAgDJlwG,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAAwC,YAAxCA,CAAwC,YAIhCA,EAAAulB,iBAAA,OAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAAA9E,CAA8C,eAChCA,EAAAgF,iBAAA,YAAKhF,EAAA+E,yBACf/E,EAAA8E,yBAAA,UAAK9E,EAAAgF,iBAAA,kCAA0ChF,EAAA+E,wBAAA/E,GAEnDA,EAAA8E,yBAAA,YAAA9E,CAA8C,eAChCA,EAAAgF,iBAAA,eAAQhF,EAAA+E,yBAClB/E,EAAA8E,yBAAA,UAAK9E,EAAAgF,iBAAA,IAAYhF,EAAA+E,wBAAA/E,GAErBA,EAAA8E,yBAAA,YAAA9E,CAA8C,eAChCA,EAAAgF,iBAAA,UAAGhF,EAAA+E,yBACb/E,EAAA8E,yBAAA,UACI9E,EAAA0J,qBAAA,GAAAymG,EAAA,uBAGAnwG,EAAAgF,iBAAA,IAKJhF,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,GAAA0mG,EAAA,cAUJpwG,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAAA9E,CAEC,YAFDA,CAEC,YAIOA,EAAAulB,iBAAA,OAA8CvlB,EAAA+E,yBAC9C/E,EAAA8E,yBAAA,gBAII9E,EAAAuI,qBAAA,0BAAAtH,GAAAguG,gBAA0B,CAAI,GAJlCjvG,EAAAulB,iBAAA,OAQAvlB,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAAmC,YAAnCA,CAAmC,aAINA,EAAAgF,iBAAA,IAAuBhF,EAAA+E,yBAC5C/E,EAAA8E,yBAAA,aAAA9E,EAAAulB,iBAAA,OAAuCvlB,EAAA+E,wBAAA/E,GAE3CA,EAAA8E,yBAAA,YAAA9E,CAEC,aACwBA,EAAAgF,iBAAA,IAAyBhF,EAAA+E,yBAC9C/E,EAAA8E,yBAAA,aAAA9E,EAAAulB,iBAAA,OAAsCvlB,EAAA+E,wBAAA/E,GAE1CA,EAAA8E,yBAAA,YAAA9E,CAEC,aACwBA,EAAAgF,iBAAA,IAAwBhF,EAAA+E,yBAC7C/E,EAAA8E,yBAAA,aAAA9E,EAAAulB,iBAAA,OAA2CvlB,EAAA+E,wBAAA/E,KAGnDA,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,OAKAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,aACI9E,EAAAkB,oBAAA,uBACAlB,EAAA8E,yBAAA,YAAA9E,CAAiC,UACxBA,EAAAgF,iBAAA,IAA2BhF,EAAA+E,yBAChC/E,EAAA8E,yBAAA,aAII9E,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,OAIZA,EAAA0J,qBAAA,GAAA2mG,EAAA,uBAqCArwG,EAAA8E,yBAAA,gBAGI9E,EAAAuI,qBAAA,0BAAStH,GAAA2iC,cAAc,GAEvB5jC,EAAA0J,qBAAA,GAAA4mG,EAAA,0BAOJtwG,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAA6mG,GAAA,aAAAvwG,CAmBM,GAAAwwG,GAAA,uBA2CNxwG,EAAA8E,yBAAA,eAAA9E,CAKC,eACaA,EAAAgF,iBAAA,YAAKhF,EAAA+E,wBAAA/E,GAEnBA,EAAA0J,qBAAA,GAAA+mG,GAAA,cAOJzwG,EAAA+E,yBACA/E,EAAA8E,yBAAA,qBACI9E,EAAA0J,qBAAA,GAAAgnG,EAAA,iBAWA1wG,EAAA8E,yBAAA,gBAAsB9E,EAAAuI,qBAAA,0BAAStH,GAAAs+B,OAAAtoB,MAAa,GACxCjX,EAAA8E,yBAAA,YAAA9E,CAAmD,eACrCA,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBAChB/E,EAAA8E,yBAAA,UAAA9E,EAAAulB,iBAAA,OAAsBvlB,EAAA+E,wBAAA/E,KAG9BA,EAAA0J,qBAAA,GAAAinG,GAAA,gBAAA3wG,CASS,GAAA4wG,GAAA,iBAWb5wG,EAAA+E,wBAAA/E,WAtVQA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,GAAAotG,YAAAruG,CAAuB,YAAAiB,GAAAkT,MAAA,KAAAlT,GAAAkT,MAAApJ,IAOtB/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAAAvH,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAA7U,QAAA,MAAA5P,GAAAykB,MAAA7U,OAAA0R,QAAAthB,GAAAykB,MAAA7U,OAAA0R,OAAA3lB,SAIAoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAvH,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAA7U,QAAA,MAAA5P,GAAAykB,MAAA7U,OAAA0R,OAAA,KAAAthB,GAAAykB,MAAA7U,OAAA0R,OAAA3lB,QAUDoD,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,eAAAnW,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAA7U,QAAA,MAAA5P,GAAAykB,MAAA7U,OAAA0R,QAAAthB,GAAAykB,MAAA7U,OAAA0R,OAAA3lB,SAEAoD,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,GAAAykB,MAAAzsB,MAAA,KAIiB+G,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,SAAAvH,GAAA4vG,cACT7wG,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,GAAAg+B,OAAA,KAMHj/B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBAAAvH,GAAAykB,MAAA4O,OAwDIt0B,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA5L,EAAA8L,sBAAA,MAAA7K,GAAAykB,MAAApc,KAAA,oBAIAtJ,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,GAAAg+B,QAKcj/B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAuN,OAGfxO,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAAjE,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAA7U,OAAA,KAAA5P,GAAAykB,MAAA7U,OAAA5D,gBAAA,MAAAhM,GAAAykB,OAAA,MAAAzkB,GAAAykB,MAAA7U,OAAA,KAAA5P,GAAAykB,MAAA7U,OAAA5F,QAAA,MAAAhK,GAAAykB,MAAA,KAAAzkB,GAAAykB,MAAApoB,UAAA,KASH0C,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAuM,UA8BwBxN,EAAAiF,oBAAA,IAAAjF,EAAA4L,4BAAA3K,GAAAuuG,cAAA,GAMAxvG,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,GAAAyuG,gBAAA,GAMA1vG,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,GAAA0uG,eAAA,GAWV3vG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAykB,MAAAvV,WAENnQ,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA,MAAA3K,GAAAykB,MAAAvV,UAAA,KAAAlP,GAAAykB,MAAAvV,UAAAlF,MAGDjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,GAAAykB,MAAAzZ,MAEAjM,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,GAAAykB,MAAAzZ,KAAA,KAKDjM,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAwN,cA2CNzO,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,GAAAqhC,UASJtiC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAykB,MAAA2X,MAkBUr9B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAshC,YAkDqBviC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAguG,gBAa/BjvG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,GAAAouG,WAeArvG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAykB,MAAAorF,oBAUe9wG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,GAAA8vG,oBAcvBhD,EAA0B,mSCvXvC,IAAAx4G,EAAAC,EAAA,OACAwC,EAAAxC,EAAA,OACA8b,EAAA9b,EAAA,OASAuC,EAAAvC,EAAA,OAWA4yB,EAAA5yB,EAAA,OACAyC,EAAAzC,EAAA,OAcAq/B,GAFAr/B,EAAA,OAEAA,EAAA,QAKA2C,EAAA3C,EAAA,OACAqoE,EAAAroE,EAAA,OACA0+D,EAAA1+D,EAAA,OACA0uC,EAAA1uC,EAAA,OAEAy+D,GADAz+D,EAAA,OACAA,EAAA,QAEAw7G,GADAx7G,EAAA,OACAA,EAAA,QACAqvF,EAAArvF,EAAA,OACAy7G,EAAAz7G,EAAA,OACA4M,EAAA5M,EAAA,OACA2L,EAAA3L,EAAA,OACA84B,EAAA94B,EAAA,OACAu/B,EAAAv/B,EAAA,OAIAk7C,EAAAl7C,EAAA,KAEA07G,GADA17G,EAAA,OACAA,EAAA,QACA27G,EAAA37G,EAAA,oFAEM47G,EAAe,CACjB,aACA,cACA,eACA,gBACA,kBACA,YAyBJ95G,mBAG8B,eAAAC,EAAjBsV,EAAiB,SAAAvU,GAAAC,EAAAsU,EAAAvU,GAAA,IAkSzB+4G,EAlSyB54G,GAAAC,EAAAmU,GA2N1B,SAAAA,EACYjU,EACAmP,GACAy8B,GACA7rC,GACA8rC,GACA70B,IAAkB,IAAA7W,EAAArB,EAAAC,KAAAkV,IAE1B9T,EAAAN,GAAAO,KAAArB,OAPQiB,OACAG,EAAAgP,WACAhP,EAAAyrC,aACAzrC,EAAAJ,aACAI,EAAA0rC,WACA1rC,EAAA6W,WAhOJ7W,EAAA2rC,MAAQ,IAAIpzB,EAAAqB,gBAA+B,QAC3C5Z,EAAAi8B,SAAW,IAAI1jB,EAAAqB,gBAAkC,CACrDm0C,SAAU,GACVnmD,SAAU,KAEN5H,EAAAytD,SAAQ0N,EAAAo9C,qBACRv4G,EAAA6vB,MAAQ,IAAItX,EAAAqB,gBAAgBZ,KAAK8W,OACjC9vB,EAAA4yC,OAAS,IAAIr6B,EAAAqB,gBAA+B,MAC5C5Z,EAAA0vB,SAAW,IAAInX,EAAAqB,gBAAwB,IAGxC5Z,EAAA2S,aAA8B,IAAIvT,EAAAwsB,cACrC3oB,KAAK0xB,MAAM9xB,eAAe4D,QAAQ,8BAAgC,OAEtDzG,EAAA6hB,QAAU7hB,EAAK0vB,SAAS3V,eACxB/Z,EAAAuhB,QAAUvhB,EAAKi8B,SAASliB,eAExB/Z,EAAAgsC,cACZhsC,EAAKuhB,QAAQ5f,QACT3C,EAAAqxB,WAAU,WACN,OAAOrwB,EAAKH,KAAK4U,YACXxV,EAAAs+B,cACIv9B,EAAKH,KAAK4U,SAASzC,GAAE,sBAEvBrQ,QAAK3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,CAAEjD,QAAS,IAAK,KAAC,EAC5C0C,EAAAO,IAAG,CAAEjD,QAAS,IACxB,IAAC,EACD7W,EAAAub,KAAI,SAAC1Y,IAAC,OAAMA,IAAGgU,mBAAmBqqB,MAAQr+B,GAAEgU,QAAU,EAAE,IAAC,EACzD7W,EAAAmyB,aAAY,IAGJnxB,EAAAmb,UAA8B5C,EAAA+I,eAAc,CACxDthB,EAAKi8B,SAASt6B,QAAK3C,EAAAmxB,yBAAwB,aAC3CnwB,EAAKH,KAAKiX,gBAAgBnV,QACtB3C,EAAAyb,QAAO,SAAC5Y,IAAC,QAAOA,EAAC,MACjB7C,EAAAmxB,yBAAwB,SAE7BxuB,QACC3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAojB,KAAI,SAACvgB,IAAC,OAAK7B,EAAKowB,UAAU,QAAQ,MAClCpxB,EAAAqxB,WAAU,SAAAvrB,IAAmB,IAAA0zG,GAAAtqE,GAAf6f,GAAevsC,EAAA1c,GAAA,GAAP,GAARipD,SACV/tD,SAAK0vB,SAAS1uB,KAAK,sCACN,QAATw3G,GAACzqD,UAAQ,IAAAyqD,IAARA,GAAU30G,SAAQkqD,GAAW,CAAmB,QAAnB7f,GAACluC,EAAKH,KAAK4U,gBAAQ,IAAAy5B,QAAA,EAAlBA,GAAoBl8B,MAAE,EAClDuG,EAAAkgG,UACH1qD,GAASxzC,IAAI,SAACvI,IAAE,SACZ85E,EAAAx7D,sBAAqBte,IAAIrQ,QAAK3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,GAAG,GAAE,GAGnE,IAAC,EACD9Z,EAAAub,KAAI,SAAC8Z,IAAC,SAAKn1B,EAAAgyB,SAAQmD,GAAE,MACrBr1B,EAAAojB,KAAI,SAACvgB,IAAC,OAAK7B,EAAK0vB,SAAS1uB,KAAK,GAAG,MACjChC,EAAAmyB,aAAY,IAGAnxB,EAAA4H,SAAW5H,EAAKmb,OAAOxZ,QACnC3C,EAAAub,KAAI,SAAC8Z,IAAC,SAAKn1B,EAAA6sC,WAAO7sC,EAAAgyB,SAAQmD,GAAE9Z,IAAI,SAAC1Y,IAAC,OAAKA,GAAE+F,QAAQ,IAAG,IAGxC5H,EAAAghB,mBAAkBzI,EAAA+I,eAAc,CAC5CthB,EAAKmb,OACLnb,EAAKuhB,UACN5f,QACC3C,EAAAub,KAAI,SAAAkH,IAAA,IAAAC,GAAAF,EAAAC,GAAA,GAAEtG,GAAMuG,GAAA,GAAAg3F,GAAAh3F,GAAA,GAAI66B,GAAQm8D,GAARn8D,SAAU30C,GAAQ8wG,GAAR9wG,SAAU2W,GAAQm6F,GAARn6F,SAAQ,OACxCpD,GACKV,OAAO,SAACmN,IAAY,IAAA8U,GACX68C,KAAuB,QAAb78C,MAAAx9B,EAAAmG,sBAAa,IAAAq3B,QAAA,EAAbA,GAAen3B,QAAS,KAAKC,MAAM,KAAK,GAClD+M,IAAQvS,EAAKJ,UAAUuE,IACzB,+BACC,IAAIo1E,IACHo/B,GACF34G,EAAKJ,UAAUuE,IAAI,4BAA8B,GAC/Cy0G,GAAgBvwF,OAAOC,KAAKqwF,IAC5BE,GAAajxF,GAAEtV,MAAM0b,KAAK,SAACnsB,IAAC,OAC9B+2G,GAAcn0G,SAAS5C,GAAE,GAE7B,OACI+lB,GAAEmlB,YACAx6B,IAAQqV,GAAEtV,MAAM7N,SAAS8N,QACzBsmG,IAAcF,GAAUE,MAAgBt/B,OACxCh9B,IAAYv8C,EAAK84G,gBAAgBr0G,SAASmjB,GAAE5V,MAC9CpK,GAASw8B,MAAM,SAAChO,IAAC,OAAKxO,GAAEhgB,SAASnD,SAAS2xB,GAAE,IAC5CxO,GAAErJ,UAAYwpB,KAAKyZ,IAAI,EAAGjjC,IAAY,EAE9C,GACCga,MAAM,EAAGwP,KAAK0Z,IAAI,IAAKtmC,GAAOtX,QAAQ,MAE/C7E,EAAAmyB,aAAY,IAGRnxB,EAAAkwB,mBAAkB3X,EAAA+I,eAAc,CACpCthB,EAAKmb,OACLnb,EAAKghB,kBACNrf,QACC3C,EAAAuxB,sBAAqB,SAAAc,GAAAC,IAAU,OAAV9P,EAAA6P,GAAA,GAAI,KAAA7P,EAAA8P,GAAA,GAAM,EAAe,MAC9CtyB,EAAAqxB,WAAU,SAAAiC,IAAc,IAAAiR,GAAA/hB,EAAA8Q,GAAA,GACpB,SAAO/Z,EAAA+I,gBADQiiB,GAAA,IAEF,IAAIhpB,IAAI,SAAC1Y,IACd,IAAM2uB,MAAUvxB,EAAAwxB,WAAU5uB,GAAEmQ,GAAI,YAAYwe,QACxC,YAEEE,GAAMF,GACPG,SACAhvB,QACG3C,EAAAub,KAAI,SAAC1Y,IAAC,OACDA,IAAK,IAAI0Y,IAAI,SAACsW,IAAC,OAAK,IAAIzxB,EAAAwsB,cAAciF,GAAE,EAAC,IAGtD,OAAK7wB,EAAKgxB,gBAAe,QAAApuB,OAASf,GAAEmQ,MAChChS,EAAKwR,aAAY,QAAA5O,OAASf,GAAEmQ,IAAMwe,GAAQS,QAEvCP,EACX,GAER,IAAC,EACD1xB,EAAAmyB,aAAY,IAGAnxB,EAAA+4G,4BAA2BxgG,EAAA+I,eAAc,CACrDthB,EAAKghB,gBACLhhB,EAAKkwB,gBACLlwB,EAAKgsC,iBACLzzB,EAAA2zB,OAAMlsC,EAAKkP,KAAKuC,gBAAc8G,EAAA4zB,OAAM,QACrCxqC,QACC3C,EAAAub,KAAI,SAAAiY,IAAoC,IAAA8K,GAAA9b,EAAAgR,GAAA,GAAlC7gB,GAAI2rB,GAAA,GAAErJ,GAAQqJ,GAAA,GAAE0O,GAAa1O,GAAA,GAC/Bt9B,EAAK0vB,SAAS1uB,KAAK,gCACnB,IAAAg4G,GAAoCh5G,EAAKytD,MAAM3/B,cAAzCvd,GAAIyoG,GAAJzoG,KAAMC,GAAQwoG,GAARxoG,SAGZmB,OADIwR,EAAMkM,EAAA4N,YAAW1sB,GAAMC,IAAUsjB,YACrCniB,MAAOzS,EAAAsuE,0BACH77D,GACA,CAAEpB,QAAMC,YAAUsgB,SAAU,KAAM5d,QAAMhU,EAAAmG,gBACxC2mC,MAEY,IACXvxB,OAAO,SAACW,GAAO01B,IACZ,SAAOonE,EAAAe,sBACH1oG,GACAA,GAnKR,IAmKeC,GACPyjB,GAAS6c,KAAQ,GAEzB,GACCr1B,KAAK,SAACgW,GAAGlU,IAAC,OAAKkU,GAAElT,SAAWhB,GAAEgB,QAAQ,EAC/C,IAAC,EACDvf,EAAAojB,KAAI,SAACvgB,IAAC,OAAK7B,EAAK0vB,SAAS1uB,KAAK,GAAG,MACjChC,EAAAmyB,aAAY,IAGAnxB,EAAAk5G,2BACZ3gG,EAAA+I,eAAc,CAACthB,EAAKghB,gBAAiBhhB,EAAKgsC,gBAAgBrqC,QACtD3C,EAAAyb,QAAO,kBAAOza,EAAK0vB,SAASlY,UAAU,MACtCxY,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAqxB,WAAU,SAAAsC,IAA4B,IAAAkxC,GAAAs1C,GAAA33F,EAAAmR,GAAA,GAA1BxX,GAAMg+F,GAAA,GAAEntE,GAAamtE,GAAA,GAC7B,IAAKh+F,GAAOtX,OAAQ,SAAO0U,EAAAO,IAAG,IAC9B9Y,EAAK0vB,SAAS1uB,KAAK,kCACnB,IAAAo4G,GAAyBp5G,EAAKytD,MAAM3/B,cAA9Bvd,GAAI6oG,GAAJ7oG,KAAMC,GAAQ4oG,GAAR5oG,SAIZ2K,OAH4Bnb,EAAKq5G,aAC3Bv0C,EAAAw0C,uBACAx9E,EAAAgd,4BACN39B,MAASjc,EAAAsuE,0BACLryD,GACA,CAAE5K,QAAMC,YAAUsgB,SAAU,KAAM5d,QAAMhU,EAAAmG,gBACxC2mC,KAGOzxB,IAAI,SAAAuY,IAAK,OAAAA,GAAF9gB,EAAW,GACzBzB,GACAC,IACU,QAAVqzD,GAAA7jE,EAAK2sB,aAAK,IAAAk3C,QAAA,EAAVA,GAAY7xD,UAAMlO,GACpBnC,QACE3C,EAAAub,KAAI,SAACu2C,IACD,IAAIn/C,GAAOwJ,GAAOV,OAAO,SAAC5Y,GAAGgvB,IAAC,OAAKigC,GAAajgC,GAAE,GAClDlf,SAAOzS,EAAAsuE,0BACH77D,GACA,CACIpB,QACAC,YACAsgB,SAAU,KACV5d,QAAMhU,EAAAmG,gBAEV2mC,GAGR,IAAC,EACDhtC,EAAA+xB,YAAW,SAAClvB,IAAC,MAAK,EAAE,GAE5B,IAAC,EACD7C,EAAAojB,KAAI,SAACvgB,IAAC,OAAK7B,EAAK0vB,SAAS1uB,KAAK,GAAG,MACjChC,EAAAmyB,aAAY,IAGJnxB,EAAA0Z,iBAAmB1Z,EAAK6vB,MAAMluB,QAC1C3C,EAAAqxB,WAAU,SAAC/Y,IAEP,OADaywB,KAAK6L,OAAIvkB,EAAAkqF,kBAAiBjiG,GAAG0B,KAAK8W,SAE1C9vB,EAAKJ,UAAUuE,IAAI,sCAAwC,IAC1DnE,EAAK+4G,yBACL/4G,EAAKk5G,uBACf,IAqLYl5G,EAAAstB,eAAiB,kBAAMttB,EAAKirE,MAAM,kBAAkB,EAvJhEjrE,EAAKwnB,YAAc,IAAIne,EAAAS,UAAU9J,EAAKH,MACtCG,EAAKwR,aACD,gBACAxR,EAAKgP,QAAQqjB,OAAO3gB,UAAU,SAACib,IAEvBA,cAAiBnwB,EAAAixC,gBAChB4qE,EAAa73E,KAAK,SAAC3+B,IAAC,OAAK8qB,GAAMvgB,IAAI3H,SAAS5C,GAAE,IAE/C7B,EAAKiP,WAEb,IAEJjP,EAAKwR,aACD,cACAxR,EAAKytD,MAAMh8C,aAAaC,UAAU,SAAA8nG,IAA+B,IAA5BjpG,GAAIipG,GAAJjpG,KACjCvQ,EAAK0rC,QAAQp6B,WAAW,CACpBf,KAAMvQ,EAAKkP,KAAK9O,MAAMmQ,KACtBC,SAAUxQ,EAAKkP,KAAK9O,MAAMoQ,WAE1BD,IAAQA,KAASvQ,EAAK6vB,MAAMrY,YAC5BxX,EAAK6vB,MAAM7uB,KAAKuP,IACpBvQ,EAAKmnB,WACT,IAEJ,IAAIqU,GAAQ,EACZx7B,SAAK40B,SACD,WACA,WACI,IAOE6kF,GAOKC,GAdDtkG,GAAWpV,EAAKytD,MAAMrtD,MAAMgV,SAC9BomB,KAAUpmB,IAAUvR,SACxB23B,GAAQpmB,IAAUvR,OAEN,MAARuR,OAAUvR,SACT7D,EAAKJ,UAAUuE,IAAI,uCAChBnE,EAAKJ,UAAUQ,MAAM,4BAGC,QAD1Bq5G,GAAAz5G,EAAKytD,MACAtpD,IAAI,yBAAiB,IAAAs1G,IAD1BA,GAEMn0D,cAAc,CAACl9C,EAAAq2B,WAAWC,WAChC1+B,EAAKytD,MACAtpD,IAAI,kBACJ8L,WAAWjQ,EAAKytD,MAAMrtD,MAAMu5G,kBAED,QAAhCD,GAAA15G,EAAKytD,MAAMtpD,IAAI,yBAAiB,IAAAu1G,IAAhCA,GAAkCE,kBAClC55G,EAAKytD,MAAMtpD,IAAI,kBAAkB4lG,UAAU,OAE/C/pG,EAAKytD,MAAMosD,yBACf,EACA,KACF75G,CACN,CAACtB,SAAAoV,EAAA,EAAA3T,IAAA,OAAAgE,IA7ED,WACI,OAAOvF,KAAK+sC,MAAMn0B,UACtB,GAAC,CAAArX,IAAA,OAAAgE,IACD,WACI,OAAOvF,KAAK6uD,KAChB,GAAC,CAAAttD,IAAA,QAAAgE,IACD,WACI,OAAOvF,KAAKg0C,OAAOp7B,UACvB,GAAC,CAAArX,IAAA,kBAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAc,qBAAuB,EAC/D,GAAC,CAAAhE,IAAA,eAAAgE,IAED,WACI,OAAyD,IAAlDvF,KAAKgB,UAAUuE,IAAI,0BAC9B,GAAC,CAAAhE,IAAA,yBAAAC,MA+DM,WACHxB,KAAK4S,aAAa,eAAgB5S,KAAK8a,iBAAiBhI,YAC5D,GAAC,CAAAvR,IAAA,UAAAC,MAEM,SAAQA,IACXxB,KAAK+sC,MAAM3qC,KAAKZ,GACpB,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWA,IACdxB,KAAKq9B,SAASj7B,KAAI2sB,IAAA,GAAM/uB,KAAKq9B,SAASzkB,YAAepX,IACzD,GAAC,CAAAD,IAAA,UAAAC,OAAAk4G,EAAAj4G,EAEM,eAAAsD,GAAA/E,KACH+tB,GAAAlpB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,IAAIrE,EAAAwsB,cAAc,CACrCuD,QAASvwB,KAAKgB,UAAUuE,IAAI,gCAC9B,OAAA7D,IAAAC,KAAA,SAAAC,GAAAs5G,IAAA,IAAAC,EAAAjpE,GAAA11B,GAAA,OAAA9a,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAEsB,GAAxB2C,GAAKivC,OAAO5xC,KAAK2rB,KACbA,GAAMorF,mBAAkB,CAAAj3G,GAAAE,KAAA,QAAAF,UAAAE,KAAA,KACH8jE,EAAAk1C,WACjBrtF,GAAMorF,oBACRj2G,YAAW,OAFPi4G,EAAMj5G,GAAA4B,KAGXiB,GAAKivC,OAAOp7B,WAAmBoW,WAAUD,IAAA,GACnCosF,EAAOnsF,YAAU,IACpBqsF,SAAUF,EAAOnsF,WAAWsB,UAC9B,OAENvrB,GAAK+nC,QAAQp6B,WAAW,CACpBurB,OAAmC,QAA7Bi9E,GAAEntF,GAAMqH,eAAe1d,cAAM,IAAAwjG,QAAA,EAA3BA,GAA6Bv/F,IAAI,SAAC1Y,IAAC,OAAKA,GAAEmQ,EAAE,KACrDlR,GAAAiC,GAAAzC,IAAAgoB,KACeqE,GAAMnX,WAAS,WAAA1U,GAAA4vC,GAAA5vC,GAAAiC,MAAAozB,KAAA,CAAAr1B,GAAAE,KAAA,SAAtB8vC,OACD11B,GAAQuR,GAAMnX,UADbs7B,GAAGhwC,GAAA4vC,GAAAtwC,OACwBU,GAAAE,KAAA,GACL2C,GAAK6jB,YAAYgB,UAC1CpN,GAAMpJ,IAAMoJ,GAAM7V,OACrB,QAFDonB,GAAMnX,UAAUs7B,IAAIhwC,GAAA4B,KAAA5B,GAAAE,KAAA,gBAIxB2C,GAAKksB,MAAM7uB,KAAK2rB,GAAMpc,MACtB5M,GAAKu2G,YAAY,yBAAAp5G,GAAAwC,OAAA,EAAA9C,GAAA,EAtBfF,EAsBe,GACpB,SAAA0mB,KAAA,OAAAsxF,EAAA90G,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,YAAAC,MAEM,WAAS,IAAA+5G,GAAAC,GAAAC,GACZz7G,KAAK6uD,MAAM/f,QACX,IAAM/gB,GACF/tB,KAAKg0C,OAAOp7B,YACX,CAAEwc,eAAgB,IAEvBp1B,KAAK8sC,QAAQp6B,WAAW,CACpBurB,OAAmC,QAA7Bs9E,GAAExtF,GAAMqH,eAAe1d,cAAM,IAAA6jG,QAAA,EAA3BA,GAA6B5/F,IAAI,SAAC1Y,GAAC,OAAKA,EAAEmQ,EAAE,KAExD,IAAM0D,KAAiBiX,GAAMqH,eAAe5e,SAAS,GACrDxW,KAAK6uD,MAAMx9C,WAAU0d,MAAA,GACdhB,GAAMqH,gBACNrH,IAAK,IACRnc,SAAUmc,GAAMnc,UAAY,IAAU,GAAKmc,GAAMnc,SACjD0C,KAAMyZ,IAAOzZ,SAAQhU,EAAAmG,eAAcE,MACnC6R,UACIuV,IAAOvV,cACPlY,EAAAmG,gBACA,IAAIsyC,EAAAmO,KAAK,CAAEvgD,MAAOonB,IAAOzZ,OAC7BkC,UAA0C,QAAhCglG,GAAAztF,GAAMqH,eAAe5e,SAAS,UAAE,IAAAglG,QAAA,EAAhCA,GAAkC3iF,QAAS,GACrD6iF,sBACoC,QAAhCD,GAAA1tF,GAAMqH,eAAe5e,SAAS,UAAE,IAAAilG,QAAA,EAAhCA,GAAkCv2C,eACjCn3C,GAAM3a,IAAM0D,GAAe,IAAM,IACtCY,UAAQ0lB,EAAA0D,gBAAe/S,GAAMqH,eAAe1d,QAAU,OAE1D1X,KAAKq9B,SAASj7B,KAAK,CAAE4G,SAAU,KAC/BhJ,KAAKuoB,WACT,GAAC,CAAAhnB,IAAA,YAAAC,MAEM,WACHyC,eAAeorC,WAAW,sBAC1BrvC,KAAKwxB,UAAU,WACfxxB,KAAKwxB,UAAU,SACfxxB,KAAKooB,SACT,GAAC,CAAA7mB,IAAA,YAAAC,MAEM,WACHyC,eAAeC,QACX,qBACAG,KAAKC,UAAUtE,KAAK6uD,MAAM3/B,eAAiB,IAEnD,GAAC,CAAA3tB,IAAA,WAAAC,MAEM,WAAQ,IAAAm6G,GACX,IAAK13G,eAAe4D,QAAQ,sBACxB,OAAO7H,KAAKooB,UAEhB,IAAMwzF,GAAYv3G,KAAK0xB,MACnB9xB,eAAe4D,QAAQ,uBAAyB,MAEpD7H,KAAK6uD,MAAMx9C,WAAU0d,IAAA,GACd6sF,IAAS,IACZlkG,QACqB,QAAhBikG,GAAAC,GAAUlkG,cAAM,IAAAikG,IAAhBA,GAAkB12G,QAAU22G,GAAUlkG,OAAO,GAAG0nB,WAC3ChC,EAAA0D,gBAAe86E,GAAUlkG,QACzBkkG,GAAUlkG,SAAW,KAEvC,GAAC,CAAAnW,IAAA,qBAAAC,MAIM,WAAyC,IAAA2E,GAAAnG,KAAtBwvC,GAAA3qC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAChByL,GAAOtQ,KAAK6uD,MAElB,GADAv+C,GAAKgY,mBACAhY,GAAKiE,OAAUi7B,GACpB,KAAMzhB,GAAQ,IAAIvtB,EAAAwsB,cAAa+B,IAAA,GAAMze,GAAK4e,eAAa,IAAExX,OAAQ,MACrD1X,KAAKiY,QAAQrD,KAAKykG,EAAAwC,wBAAyB,CAAEn5G,KAAMqrB,KAC3DtV,cAAc3F,UAAU,SAAC4F,GAAC,OAC1BA,EAAIvS,GAAKiK,QAAQK,SAAS,CAAC,MAAQ,EAAE,GAE7C,GAAC,CAAAlP,IAAA,WAAAC,MAEM,WAA+B,IAAAuF,GAAA/G,KAAtBwvC,GAAA3qC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACZ,OAAO,IAAIjB,QAAO,eAAAywB,GAAA5yB,EAAAC,IAAAC,KAAgB,SAAAsE,GAAOpC,GAASowE,GAAM,IAAA6nC,GAAA3jE,GAAAC,GAAA9jB,GAAAynF,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAznF,GAAA0nF,GAAAznF,GAAAU,GAAAgnF,GAAAhsG,GAAAyd,GAAAqW,GAAAm4E,GAAAnpG,GAAAkB,GAAA3C,GAAAC,GAAA+Y,GAAA4F,GAAA7Y,GAAAsX,GAAAzS,GAAA/F,GAAAyY,GAAAutF,GAAAvsD,GAAAj9B,GAAAxxB,GAAA8uC,GAAA53B,GAAAmgB,GAAAxiB,GAAAilE,GAAAmhC,GAAAvlF,GAAAD,GAAAylF,GAAAr1G,GAAAszE,GAAAhnD,GAAAgpF,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA,OAAAv7G,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OAIL,GAH/C2E,GAAK+pB,SAAS1uB,KAAK,sBACbkO,GAAOvJ,GAAK8nD,OACbvmC,mBACCyF,GAAQhnB,GAAKgnB,OAAS,IAAIvtB,EAAAwsB,cAC3B1c,GAAKiE,OAAUi7B,GAAK,CAAAppC,GAAAhE,KAAA,QACrB2E,UAAK+pB,SAAS1uB,KAAK,IAAIgE,GAAA7C,OAAA,SAChB0wE,EAAM,kCAAAjwE,UACyB1D,EAAAmU,kBAC9BnE,IACFoE,KAAK,MAAK,OACf,OAiBJ,GAfK0vB,GAAqB,QAAb03E,GAAG/0G,GAAKgnB,aAAK,IAAA+tF,QAAA,EAAVA,GAAY13E,SAAQm4E,GAUjCjsG,GAAK4e,cARL9b,GAAEmpG,GAAFnpG,GACAkB,GAAIioG,GAAJjoG,KACA3C,GAAI4qG,GAAJ5qG,KACAC,GAAQ2qG,GAAR3qG,SACA+Y,GAAO4xF,GAAP5xF,QACA4F,GAAOgsF,GAAPhsF,QACA7Y,GAAM6kG,GAAN7kG,OACAsX,GAAUutF,GAAVvtF,WAEEzS,IAA8B,QAArB47B,GAAA7nC,GAAK/K,IAAI,oBAAY,IAAA4yC,QAAA,EAArBA,GAAuB32C,QAAS,GAC3CgV,IAA+B,QAApB4hC,GAAA9nC,GAAK/K,IAAI,mBAAW,IAAA6yC,QAAA,EAApBA,GAAsB52C,QAAS,GAChC,MAAVwtB,OAAYqsF,UAAqC,SAAzBrsF,IAAYqsF,UACpCt0G,GAAKuJ,KAAKe,WAAW,CAAE6rG,WAAW,IAGhC9pG,IAAMzB,KAASoc,GAAMpc,MAAQC,KAAamc,GAAMnc,WAClD2K,GAAOtX,OAAM,CAAAmB,GAAAhE,KAAA,SAEP6sB,aAAQwB,EAAAyC,aAAYvhB,IAAKvL,GAAAhE,KAAA,GACzB2E,GAAKo2G,gCACP5gG,GACA5K,GACAC,GACAwB,GACM,CAAE6b,SAAO1K,IAAK0K,GAAyB,GAAjBlB,GAAMnc,eAC5B1M,EACNk/B,IAAYhxB,IAAM,IACrBhP,MAAO,SAACnB,IACL8D,SAAK+pB,SAAS1uB,KAAK,IACnB6xE,EAAOhxE,IACDA,EACV,GAAE,QAegC,GAbhCu5G,GACFloG,MAAsB,QAAlBggB,MAAKh0B,EAAAmG,sBAAa,IAAA6tB,QAAA,EAAbA,GAAe3tB,QACxBgkB,MAAyB,QAAlBoxF,MAAKz7G,EAAAmG,sBAAa,IAAAs1G,QAAA,EAAbA,GAAep1G,OACzBspD,GAAoB,QAAZ+rD,GAAGz/F,GAAO,UAAE,IAAAy/F,QAAA,EAATA,GAAW5oG,GACtB4f,GAAa5f,GACb,CACImhB,WACc,QAAV0nF,GAAAl1G,GAAKgnB,aAAK,IAAAkuF,IAAc,QAAdA,GAAVA,GAAYrlG,UAAU,UAAE,IAAAqlG,QAAA,EAAxBA,GAA0B7oG,MAChB,QADkB8oG,GAC5Bn1G,GAAKgnB,aAAK,IAAAmuF,IAAQ,QAARA,GAAVA,GAAYhjG,cAAM,IAAAgjG,QAAA,EAAlBA,GAAoB9oG,KACpB68C,IAER,GACFusD,KAAUxpF,GAAMoqF,SAAW9oG,IAAQqW,IACjCnpB,GAAQuF,GAAK8nD,MAAM3/B,eACrBnoB,GAAK8lC,UAAU2D,iBAAkBj0B,GAAOtX,OAAM,CAAAmB,GAAAhE,KAAA,SAAAgE,UAAAhE,KAAA,GACxB2E,GAAK8lC,UAAU4D,YAAY,CAC7C99B,KAAM,QACN+9B,cAAen0B,GAAO,GAAGjH,cAAgBiH,GAAO,GAAGjJ,KACnD3B,QACAC,YACA2e,aACF,QANW,GAOD,OAPN+f,GAAOlqC,GAAAtC,OAORwsC,GAASK,QAAO,CAAAvqC,GAAAhE,KAAA,gBAAAgE,GAAA7C,OAAA,SAASwD,GAAK+pB,SAAS1uB,KAAK,KAAG,QACnDZ,GAAc4zB,eAAiB,CAC5Bwb,QAASN,GACTO,WAAYP,GAAQO,YACtB,QAwBN,GAtBMn4B,GAAIlX,GAAMmQ,KACZ6E,GAASvR,UAAY,UAAWuR,GAAS,KACnCqiB,GAAQriB,GAASmF,IAAI,SAAC1Y,IAAC,OAAA8rB,IAAA,GACtB9rB,IAAC,IACJ0f,QAAS1f,GAAE0f,QAAQhH,IAAI,SAACuH,IAAC,OAAA6L,IAAA,GAAW7L,IAAC,IAAEsX,QAAQ,GAAK,IAAI,GAE5DhkB,GAAW,CACP,IAAI8lD,EAAAgC,cAAc,CACd8G,WAAY1sD,GACZmgB,SACAssC,MAAO3jE,GAAMu5G,eACb71C,YAAa1jE,GAAMk6G,0BAI3BllG,GAAS2uD,MAAQ3jE,GAAMu5G,eACvBvkG,GAAS0uD,YAAc1jE,GAAMk6G,sBAE3BrlG,MAAY/V,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EAChBvhB,GAAM6U,WAAS,CAAE7U,GAAMgX,cAAalY,EAAAmG,iBACxC,SAEA8V,GAAOtX,OAAQ,CACVq2E,GAAqB,EAAdmhC,GAAiB,EAACvlF,GAAAC,EACV5a,IAAM,IAA1B,IAAA2a,GAAAlO,MAAAiO,GAAAC,GAAAI,KAAAC,MAIgB,OAHNmlF,GAAW31G,GAAK/F,UAAUuE,IAAG,uBAAAvB,OADvBizB,GAAAz1B,MAEqB4R,OAE7BspG,GAAUphC,QAAOA,GAAQohC,GAASphC,OAC1B,MAARohC,OAAUD,YAAWA,GAAYC,GAASD,UACjD,OAAAzyF,IAAAkN,GAAA1S,EAAAwF,GAAA,SAAAkN,GAAAM,GAAA,CACAh2B,GAAc85E,MAAQ95E,GAAM67G,YAAc/hC,GAC1C95E,GAAci7G,UAAYj7G,GAAM87G,gBAAkBb,GACtDr2G,UAAAhE,KAAA,GACoB2E,GAAKwJ,aACtB,IAAI/P,EAAAwsB,cAAa+B,IAAA,GACVvtB,IAAK,IACR+7G,WAAsB,QAAZpB,GAAEp1G,GAAKgnB,aAAK,IAAAouF,QAAA,EAAVA,GAAYjjG,OACxB5E,KACIvN,GAAK/F,UAAUuE,IAAI,2BAClBwB,GAAK/F,UAAUuE,IAAI,2BACd/D,GAAMoV,UAAU,GAAGjQ,MACnB,KACNnF,GAAM8S,KACVhT,MAAOE,GAAMF,OAAS,gBACtB+U,UAAWA,GAAUsF,IAAI,SAAC1Y,IACtB,cAAOA,GAAEu6G,eACFv6G,EACX,GACA0O,KAAM+G,GACNlC,YACAkB,UAAQ0lB,EAAA+D,gBAAezpB,IACvB0d,eACIruB,GAAK/F,UAAUuE,IAAI,0BACnBwB,GAAK/F,UAAUuE,IAAI,2BACb,CACIk4G,cAAej8G,GAAM8S,KACrB08B,YACmB,QAAforE,GAAA56G,GAAMgX,iBAAS,IAAA4jG,QAAA,EAAfA,GAAiBprE,cACJ,QADcrc,MAC3Br0B,EAAAmG,sBAAa,IAAAkuB,QAAA,EAAbA,GAAeqc,aAEvB,CACIA,YACmB,QAAfqrE,GAAA76G,GAAMgX,iBAAS,IAAA6jG,QAAA,EAAfA,GAAiBrrE,cACJ,QADcpc,MAC3Bt0B,EAAAmG,sBAAa,IAAAmuB,QAAA,EAAbA,GAAeoc,gBAGrChe,IACH5uB,MAAO,SAACogB,IACLyvD,QAAOzvD,IACPzd,GAAK+pB,SAAS1uB,KAAK,IACboiB,EACV,GAAE,QASY,GA/CRnd,GAAMjB,GAAAtC,KAuCN62E,KAAuB,QAAbrlD,MAAAh1B,EAAAmG,sBAAa,IAAA6uB,QAAA,EAAbA,GAAe3uB,QAAS,KAAKC,MAAM,KAAK,GAClD+sB,GAAWtd,GAAUwF,OACvB,SAAC8Q,IAAI,OACDA,GAAK+wF,aACL/wF,GAAKhmB,QAAUonB,GAAMzZ,OACpBqY,GAAKhmB,MAAMd,SAAS80E,KACrBhuD,GAAK6wF,cAAc,GAErBb,GAAQ,eAAApnF,GAAA9zB,EAAAC,IAAAC,KAAG,SAAAwD,GAAOqf,IAAC,IAAAkR,GAAA,OAAAh0B,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,UAChB2E,GAAKuJ,KAAK9O,MAAM4R,GAAE,CAAA/N,GAAAjD,KAAA,QAAAiD,UAAAjD,KAAA,KACbm3G,EAAAoE,aACFt2G,GAAO+L,GACPmJ,GAAOtX,OACD,CACIm4G,SACIr2G,GAAKuJ,KAAK9O,MAAM8S,OACH,QADOohB,MACpBp1B,EAAAmG,sBAAa,IAAAivB,QAAA,EAAbA,GAAe/uB,OACnB4tB,UAAWhY,GAAO,GAAGnJ,IAEzB,IACRlQ,YAAW,QACb,EAAA5C,EAAAkU,aAAY,uCACZzN,GAAK+pB,SAAS1uB,KAAK,IAAI,aAErBoiB,GAAC,wBAAAnf,GAAAX,OAAA,EAAAS,GAAA,IACV,gBAjBaohC,IAAA,OAAAhR,GAAA3wB,MAAA5E,KAAA6E,UAAA,MAkBV8uB,GAAS1uB,OAAM,CAAAmB,GAAAhE,KAAA,SAAAgE,UAAAhE,KAAA,MACT86B,EAAAkd,wBACF/yC,GACA,UACAssB,IACHvvB,MAAOu4G,IAAS,aAEX,MAANjlG,OAAQzS,QAAqC,QAA/Bq3G,GAAIvuF,GAAMqH,eAAe1d,cAAM,IAAA4kG,IAA3BA,GAA6Br3G,QAAM,CAAAmB,GAAAhE,KAAA,SAAAgE,UAAAhE,KAAA,MAC/Cu0B,EAAA2P,gCACFj/B,GACA,CACIsK,QACAC,YACA0C,QACAgwB,eACa,QAATs4E,GAAArgG,GAAO,UAAE,IAAAqgG,QAAA,EAATA,GAAWtnG,gBAAyB,QAAbunG,GAAItgG,GAAO,UAAE,IAAAsgG,QAAA,EAATA,GAAWvpG,OAAQ,GAClDixB,aAAsB,QAATu4E,GAAAvgG,GAAO,UAAE,IAAAugG,QAAA,EAATA,GAAW1pG,KAAM,GAC9BM,OAAgB,QAATqpG,GAAAxgG,GAAO,UAAE,IAAAwgG,QAAA,EAATA,GAAWrpG,QAAS,CACL,QADKspG,GACvBj2G,GAAK9F,KAAK4U,gBAAQ,IAAAmnG,QAAA,EAAlBA,GAAoB5pG,GACF,QADI6pG,GACtBl2G,GAAK9F,KAAK4U,gBAAQ,IAAAonG,QAAA,EAAlBA,GAAoBrpG,YAG5B8D,GACAqW,GAAMqH,eAAe1d,QACxBtT,MAAOu4G,IAAS,QAErB51G,GAAKsJ,YACLtJ,GAAKgN,aAAe1M,GACpBpD,eAAeC,QACX,4BACAG,KAAKC,UAAU+C,KAEnBN,GAAKkO,QAAQ,WACbpR,GAAQwD,IACRN,GAAK+pB,SAAS1uB,KAAK,IAAI,yBAAAgE,GAAA1B,OAAA,EAAAuB,GAAA,IAC1B,gBAAA+W,GAAAsZ,IAAA,OAAAjC,GAAAzvB,MAAA5E,KAAA6E,UAAA,EAlNiB,GAmNtB,GAAC,CAAAtD,IAAA,eAAAC,MAAA,eAAAo8G,EAAAn8G,EAAAC,IAAAC,KAEO,SAAAmF,GACJinB,GACAiF,IAA0B,OAAAtxB,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAE1B,OAAApC,KAAK69G,mBAAmB9vF,GAAM1X,WAAWrP,EAAAzD,OAAA,UAEpCvD,KAAKy6G,gBASAv0C,EAAAM,WAAUz4C,GAAOiF,KAAK,EARtBkK,EAAA4T,gBACIvE,EAAAoM,6BAA2B5pB,IAAA,GACpBhB,GAAM04C,UAAQ,IACjBp/B,OAAQrnC,KAAKgB,UAAUuE,IAAI,4BACrB,WACA,gBAEZxC,QAAK3C,EAAAub,KAAI,SAAC1Y,IAAC,SAAKs5D,EAAAhpC,6BAA4BtwB,GAAE,KAExDC,aAAW,wBAAA8D,EAAAtC,OAAA,EAAAoC,GAAA9G,KAAA,IAChB,gBAAAuQ,GAAAi2B,GAAAC,IAAA,OAAAm3E,EAAAh5G,MAAA5E,KAAA6E,UAAA,EAnBA,IAmBA,CAAAtD,IAAA,kCAAAC,MAAA,eAAAs8G,EAAAr8G,EAAAC,IAAAC,KAEO,SAAA+wC,GACJn2B,GACA5K,GACAC,GACAmsG,EACA9/E,IAAe,IAAAjL,GAAA4J,GAAAV,GAAAD,GAAA7E,GAAA,OAAA11B,IAAAO,KAAA,SAAAyxC,IAAA,cAAAA,GAAAvxC,KAAAuxC,GAAAtxC,MAAA,UAEJ,MAANma,OAAQtX,OAAM,CAAAyuC,GAAAtxC,KAAA,eAAAsxC,GAAAnwC,OAAA,UAAS,GAAI,OAKuC,GAJjEyvB,GAAa,CACfC,gBAAcxC,EAAAyC,aAAYvhB,IAC1ByhB,cAAY3C,EAAAyC,aAAYvhB,IAAmB,GAAXC,GAAgB,KAAQ,OAExDmsG,IAAS/qF,GAAMgrF,cAAa,GAAAh6G,OAAM+5G,EAAQ9uF,MAAK,OAAAjrB,OAAM+5G,EAAQx5F,OAC7DvkB,KAAKy6G,aAAY,CAAA/mE,GAAAtxC,KAAA,SAAAsxC,UAAAtxC,KAAA,KACMo3G,EAAAzmD,oBAAkBhkC,IAAA,GAChCiE,IAAK,IAAEirF,WAAY1hG,GAAOZ,IAAI,SAAC1Y,IAAC,OAAKA,GAAEmQ,EAAE,KAC9CpT,KAAKiB,MACPiC,YAAW,OACT05B,GAAQ,EAACV,GAAA/E,EAJCuc,GAAA5vC,MAKc4vC,GAAAvxC,KAAA,GAAAi1B,GAAA11B,IAAAC,KAAA,SAAAy1B,KAAA,IAAA5a,GAAA,OAAA9a,IAAAO,KAAA,SAAA6wC,IAAA,cAAAA,GAAA3wC,KAAA2wC,GAAA1wC,MAAA,OAAZ,GAALoa,GAAKyf,GAAAz6B,MACP+a,GAAO6S,KAAK,SAAAuG,IAAK,OAAAA,GAAFviB,KAAgBoJ,GAAMpJ,EAAE,GAAC,CAAA0/B,GAAA1wC,KAAA,eAAA0wC,GAAAvvC,OAAA,mBAChCiZ,GAAM01C,aAAar2C,OAC5B,SAAC5Y,IAAC,MACe,SAAbA,GAAEokC,UACA02E,MAAWttF,EAAAyC,aAAYjwB,GAAE0O,QAAUosG,GAAS9uF,MAAM,GAEnDhqB,QAAU,GAAG23B,KAAQ,wBAAAkW,GAAApuC,OAAA,EAAA0yB,GAAA,GAAA8E,GAAAlT,IAAA,YAAAiT,GAAAC,GAAA5E,KAAAC,KAAA,CAAAmc,GAAAtxC,KAAA,gBAAAsxC,GAAAE,cAAAxc,KAAA,qBAAAsc,GAAAvvC,GAAA,CAAAuvC,GAAAtxC,KAAA,gBAAAsxC,GAAAnwC,OAAA,uBAAAmwC,GAAAtxC,KAAA,iBAAAsxC,GAAAtxC,KAAA,iBAAAsxC,GAAAvxC,KAAA,GAAAuxC,GAAA5B,GAAA4B,GAAAtvC,MAAA,IAAA83B,GAAA1X,EAAAkvB,GAAA5B,IAAA,QAAA4B,UAAAvxC,KAAA,GAAA+5B,GAAA1E,IAAAkc,GAAA2T,OAAA,eAE9BzqB,KAAUrgB,GAAOtX,OAAM,CAAAyuC,GAAAtxC,KAAA,iBAAA4B,OAEnBuY,GAAOtX,OAAS,EACV,qBACA,8BACV,kDAAAyuC,GAAAtxC,KAAA,iBAAAsxC,UAAAtxC,KAAA,MAGuB86B,EAAAgd,2BACvB39B,GAAOZ,IAAI,SAAC1Y,IAAC,OAAKA,GAAEmQ,EAAE,GACtBzB,GACAC,GACAqsB,IACF/6B,YAAW,QALK,GAAAwwC,GAAA5vC,KAMA0hC,MAAM,SAACviC,IAAC,OAAKA,EAAC,GAAC,CAAAywC,GAAAtxC,KAAA,iBAAA4B,OAEzBuY,GAAOtX,OAAS,EACV,qBACA,8BACV,0DAAAyuC,GAAAnwC,OAAA,UAED,GAAI,yBAAAmwC,GAAAhvC,OAAA,EAAAguC,GAAA1yC,KAAA,oBACd,gBAAAm9G,GAAAtpE,GAAAm0B,GAAAqB,GAAAI,GAAAy0C,GAAA,OAAAJ,EAAAl5G,MAAA5E,KAAA6E,UAAA,EApDA,IAoDA,CAAAtD,IAAA,qBAAAC,MAEO,SAAmB6U,IACvB,IAAMsd,GAAWtd,GAAUwF,OAAO,SAAC8Q,IAAI,OAAKA,GAAK+wF,WAAW,GAC5D,GAAa,MAAR/pF,OAAU1uB,OACf,KAAM4hD,GAAe7mD,KAAKgB,UAAUuE,IAAI,qBAAuB,GAC/DvF,KAAKgB,UAAU84B,gBACX,sBACAx5B,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EACC8jC,GAAahrC,OAAO,SAAC5Y,IAAC,OAAMA,GAAE4C,SAAS5C,GAAE0D,MAAM,IAACoc,EAChD4Q,GAAShY,IACR,SAAC1Y,IAAC,SAAAe,OAAQf,GAAE0D,MAAK,KAAA3C,OAAIf,GAAEqQ,KAAI,KAAAtP,OAAIf,GAAEkvC,aAAY,MAEnD,CAEV,KAACj9B,CAAA,CAlrByB,CAAQ5U,EAAA8H,cAAYxI,SAArCsV,4CAAgB7M,EAAAgV,mBAAA9U,EAAAG,qBAAAL,EAAAgV,mBAAA5U,EAAAwE,QAAA5E,EAAAgV,mBAAA1U,EAAAmrC,iBAAAzrC,EAAAgV,mBAAAxU,EAAAL,iBAAAH,EAAAgV,mBAAA0H,EAAAgV,mBAAA1xB,EAAAgV,mBAAA2H,EAAAjM,WAAA,qDAAhB7D,EAAgBoI,QAAhBpI,EAAgBqI,UAAAC,WAFb,SAEHtI,CAAiB,+KClG9B,IAAAtH,EAAA/P,EAAA,OAEAk2C,EAAAl2C,EAAA,OAMAyC,GADAzC,EAAA,OACAA,EAAA,mFAEA8B,0BA8DoC,eAAAC,EAAvBi8G,EAAuB,WAWhC,SAAAA,EACqC7nE,EACzB/7B,GAA8ClY,EAAAC,KAAA67G,GADrB77G,KAAAg0C,SACzBh0C,KAAAiY,UAZIjY,KAAAi0C,gBAAeF,EAAAG,+BAC3Bl0C,KAAKg0C,QAEOh0C,KAAAm0C,eAAcJ,EAAAK,4BAC1Bp0C,KAAKg0C,QAEOh0C,KAAAq0C,aAAYN,EAAAO,0BAAyBt0C,KAAKg0C,QAEnDh0C,KAAAm+G,cAAe,CAKnB,CAACr+G,SAAA+7G,EAAA,EAAAt6G,IAAA,QAAAC,MAEG,WACH,IAAKxB,KAAKm+G,aACN,SAAO79G,EAAAkU,aACH,wEAGRxU,KAAKiY,QAAQtQ,OAAM,EACvB,KAACk0G,CAAA,CAvB+B,GAuB/Bj8G,SAvBQi8G,0CAAuBxzG,EAAAC,4BAYpBsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAA26C,cAAA,kDAZlB24D,EAAuB9yG,UAAA,uBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,4CA3DMsiB,UAAAC,MAAAC,EAAA,+XAYfF,UAAAG,MAAAD,EAAA,0IAYAF,UAAAI,MAAAF,EAAA,wHAYAF,UAAAM,MAAAJ,EAAA,gJAE2CF,UAAAO,MAAAL,EAAA,sMAtC9DrnB,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,KAA4DvlB,EAAA+E,yBAC5D/E,EAAA8E,yBAAA,UAAA9E,CAA+D,SAQvDA,EAAAuI,qBAAA,0BAAAtH,EAAA60G,cAAwB,CAAI,oCAE5B91G,EAAAkB,oBAAA,WACAlB,EAAA8E,yBAAA,UAAA9E,EAAAulB,iBAAA,KAA4BvlB,EAAA+E,wBAAA/E,GAEhCA,EAAA8E,yBAAA,SAOI9E,EAAAuI,qBAAA,0BAAAtH,EAAA60G,cAAwB,CAAI,oCAE5B91G,EAAAkB,oBAAA,YACAlB,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,MAAoCvlB,EAAA+E,wBAAA/E,GAExCA,EAAA8E,yBAAA,UAOI9E,EAAAuI,qBAAA,0BAAAtH,EAAA60G,cAAwB,CAAI,iCAE5B91G,EAAA8E,yBAAA,iBAA0B9E,EAAAgF,iBAAA,eAAQhF,EAAA+E,yBAClC/E,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,MAA6BvlB,EAAA+E,wBAAA/E,GAEjCA,EAAA8E,yBAAA,gBAAmC9E,EAAAuI,qBAAA,0BAAStH,EAAA3B,OAAO,GAAnDU,EAAAulB,iBAAA,OAEAvlB,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,eAAA9E,CAKC,eACaA,EAAAgF,iBAAA,YAAKhF,EAAA+E,wBAAA/E,UA1CXA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAA8L,sBAAA,IAAA7K,EAAA2qC,aAAA,OAAA5rC,EAAAksC,yBAYAlsC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAA8L,sBAAA,IAAA7K,EAAA6qC,YAAA,OAAA9rC,EAAAksC,yBAYAlsC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAA8L,sBAAA,MAAA7K,EAAA+qC,UAAA,OAAAhsC,EAAAksC,yBAeJlsC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAAvH,EAAA60G,0OAcCtC,CAAuB,kMCzEpC,IAAAv7G,EAAAzC,EAAA,OAOA4yB,EAAA5yB,EAAA,OAYAy+D,EAAAz+D,EAAA,OACA+zD,EAAA/zD,EAAA,OACAk7C,EAAAl7C,EAAA,KAMAy7G,EAAAz7G,EAAA,OAEIugH,EAA0B,CAAEhrG,GAAI,UAAWE,KAAM,gBAErD3T,oBAAA,SAAgB6G,EAAkBmmB,GAC1BA,IAAMyxF,EAAgBzxF,EAC9B,EAEA,IAAM0xF,EAAe,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAMJ1+G,gBAA0B,WAuFtB,SAAAqtB,IAAqD,IAAA9mB,EAAAo4G,EAAAC,EAAAnxD,EAAAC,EAAAjsD,EAAApB,KAAzC0C,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuC,GAAE9E,EAAAC,KAAAgtB,GACjDhtB,KAAKoT,GAAK1Q,EAAK+hC,UAAY/hC,EAAK0Q,IAAM,GACtCpT,KAAKw+G,YACD97G,EAAK87G,gBACL/tF,EAAAyC,aACIxwB,EAAKiP,SACD8e,EAAAqkB,0BAAsBrkB,EAAA4N,YAAW,IAAIjkB,KAAQ,GAAI,CAC7C26B,UAAW,KAG3B/0C,KAAKy+G,UACD/7G,EAAK+7G,cACLhuF,EAAAyC,gBACIzC,EAAA4N,YAA8B,IAAnBr+B,KAAKw+G,YAAoB97G,EAAKkP,UAAY,KAE7D5R,KAAKo9G,SAAW16G,EAAK06G,UAAY,GACjCp9G,KAAK2qB,SACmC,QAApCzkB,EAACxD,EAAKioB,SAAWyzF,EAAcz3G,aAAK,IAAAT,OAAA,EAApCA,EAAuC0sB,gBAAiB,GAC5D5yB,KAAKsU,MACD5R,EAAK4R,MACLtU,KAAK2qB,SACLyzF,EAAcz3G,OACd,IACFisB,cACF,IA0CoB8rF,EA1CdroG,EAAY3T,EAAK2T,WAAa,GACpCrW,KAAKqW,UAAYA,EACZwF,OAAO,SAAC8Q,GAAS,OAAMA,EAAKuF,QAAQ,GACpCvW,IAAI,SAACkrE,GAAC,OAAK,IAAI9tC,EAAAmO,KAAK2/B,EAAE,GAC3B7mF,KAAK4W,aACDtW,EAAA6sC,QACIzqC,EAAKkU,WACDP,EACKwF,OAAO,SAAC8Q,GAAI,OAAMA,EAAauF,QAAQ,GACvCvW,IAAI,SAACqN,GAAC,OAAK,IAAI4oC,EAAAK,MAAMjpC,EAAS,GACvC,UACC,GACThpB,KAAKsB,MAAQoB,EAAKpB,MAClBtB,KAAK0lC,KAAOhjC,EAAKgjC,MAAQ,GACzB1lC,KAAI2+G,UAAaj8G,EAAIi8G,QACrB3+G,KAAKuwB,UAAY7tB,EAAK6tB,QACtBvwB,KAAK2R,KAA0B,IAAnB3R,KAAKw+G,aAAsBx+G,KAAK2R,KAC5C3R,KAAK4R,SACDlP,EAAKkP,aACL6e,EAAAwkB,qBAAqC,IAAjBvyC,EAAK+7G,UAAkBz+G,KAAK2R,OAChD,GACA3R,KAAKuwB,UACJvwB,KAAa2R,QAAO8e,EAAA0C,YAAWnzB,KAAK2R,MAAMukC,UAC1Cl2C,KAAa4R,SAAWu3B,KAAKyZ,IAAI,KAAS5iD,KAAK4R,WAEpD5R,KAAKk1C,SACDxyC,EAAKwyC,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC7Dt1C,KAAKwvE,YAAc9sE,EAAK8sE,aAAe9sE,EAAKk8G,oBAAsB,GAClE5+G,KAAK6+G,WAAan8G,EAAKm8G,YAAcn8G,EAAKo8G,mBAAqB,GAC/D9+G,KAAK++G,iBACDr8G,EAAKq8G,kBAAoBr8G,EAAKs8G,yBAA2B,GAC7Dh/G,KAAKk9G,YAAcx6G,EAAKw6G,UACxBl9G,KAAKm5G,mBAAqBz2G,EAAKy2G,oBAAsB,GACrDn5G,KAAKwY,UAAYxY,KAAKqW,UAAU+Y,KAC5B,SAACzC,GAAI,OAAKA,EAAKhmB,QAAUvF,EAAKkT,IAAI,GAEtCtU,KAAKi/G,cAAkC,QAArBX,EAAG57G,EAAKu8G,qBAAa,IAAAX,KACvCt+G,KAAKm7G,OAASz4G,EAAKy4G,OAAS,IAAInuF,EAActqB,EAAKy4G,QAAU,KAC7Dn7G,KAAKk/G,QAAUx8G,EAAKw8G,SAAW,GAC/Bl/G,KAAKokC,SAAW1hC,EAAK0hC,SACrBpkC,KAAK6qC,gBAAkBnoC,EAAKmoC,iBAAmB,GAC/C7qC,KAAKm/G,cAAkC,QAArBZ,EAAG77G,EAAKy8G,qBAAa,IAAAZ,KAEnCv+G,KAAKgvB,WADLtsB,EAAKw6G,UACa,CACdjuF,MACuB,IAAnBjvB,KAAKw+G,aACL,IAAIpkG,KACuC,IAAtC1X,EAAKssB,WAAmBowF,aAC3BlqF,UACN3Q,IACI7hB,EAAKssB,WAAWzK,KAChB,IAAInK,KACqC,IAApC1X,EAAKssB,WAAmBqwF,WAC3BnqF,UACNc,SAAUtzB,EAAKssB,WAAWgH,SAC1B1F,QAAS5tB,EAAKssB,WAAWsB,QACzBgvF,YAAa58G,EAAKssB,WAAWswF,YAC7BC,cACgC,QAA5Bb,EAAAh8G,EAAKssB,WAAWuwF,oBAAY,IAAAb,OAAA,EAA5BA,EAA8B/iG,IAAI,SAAC1Y,GAAC,MACnB,iBAANA,EAAiBA,EAAIo7G,EAAanoD,QAAQjzD,EAAE,KAClD,IAGK,GAEtB,IAAMiW,EAASxW,EAAKwW,OA0BpB,QAAW3X,KAxBD,MAAN2X,KAAQvS,QACP3G,KAAK4W,UAAUwY,KAAK,SAACnsB,GAAC,OAAKA,EAAE0D,QAAUuS,EAAOvS,KAAK,IAEpD3G,KAAK4W,UAAUwf,KAAK,IAAIw7B,EAAAK,MAAM/4C,IAElClZ,KAAKkZ,OAASA,GAAWlZ,KAAK4W,UAAU,IAAc,MACjDsC,GAAUxW,EAAK6xB,YAChBv0B,KAAKkZ,OAAS,CAAE9F,GAAI1Q,EAAK6xB,YAE7Bv0B,KAAKu9G,WAAa76G,EAAK66G,YAAc76G,EAAKwW,OAC1ClZ,KAAKw/G,gBAAkBx/G,KAAK0lC,KAAK7/B,SAAS,iBAC1C7F,KAAKy/G,YAAc/8G,EAAK+8G,aAAe,GACvCz/G,KAAKo1B,eAAiB1yB,EAAK0yB,gBAAkB,GAC7Cp1B,KAAKqnC,UAASiyE,EAAAoG,aAAW3wF,IAAA,GAAMrsB,GAAS1C,QAAW,OACnDA,KAAK2F,SACDjD,EAAKiD,WAAsB,QAAdynD,EAAIptD,KAAKwc,aAAK,IAAA4wC,OAAA,EAAVA,EAAY93C,gBAA0B,QAAd+3C,EAAIrtD,KAAKwc,aAAK,IAAA6wC,OAAA,EAAVA,EAAY/5C,OAAQ,GACrEtT,KAAKq9G,WAAa36G,EAAK26G,YAAc,EACrCr9G,KAAKs9G,eAAiB56G,EAAK46G,gBAAkB,EAC7Ct9G,KAAK2S,KACe,aAAhB3S,KAAKqnC,OACC,YACArnC,KAAKqW,UAAU+Y,KAAK,SAACnsB,GAAC,OAAKA,EAAEy6G,WAAW,GACxC,WACA,WACQh7G,EACRnB,KAAOvB,OACTA,KAAKo1B,eAAe7zB,GAChBmB,EAAKnB,IAAQvB,KAAKo1B,eAAe7zB,IAG7CvB,KAAKo1B,eAAe5e,UAAYxW,KAAKo1B,eAAe5e,UAAY,IAAImF,IAChE,SAACsW,GAAC,OACE,IAAIqqC,EAAAgC,cAAavvC,IAAA,GAAMkD,GAAC,IAAElE,MAAO3sB,EAAMuQ,KAAMvQ,EAAKuQ,OAAc,EAE5E,CAEA7R,SAAAktB,EAAA,EAAAzrB,IAAA,aAAAgE,IAxIA,WACI,OAAOvF,KAAKuwB,SAAWvwB,KAAK4R,UAAY,GAC5C,GAEA,CAAArQ,IAAA,MAAAC,MACO,SAAwCD,GAC3C,OAAOvB,KAAKo1B,eAAe7zB,EAC/B,GAAC,CAAAA,IAAA,SAAAgE,IAkID,WACI,OAAOvF,KAAKqW,UAAUwF,OAAO,SAAC2b,GAAC,QAAOA,EAAEkmF,WAAW,EACvD,GACA,CAAAn8G,IAAA,QAAAgE,IACA,WACI,OAAOvF,KAAK4W,UAAU,IAAM,IAChC,GAAC,CAAArV,IAAA,WAAAgE,IACD,WACI,SAAOkrB,EAAAkC,WAAU3yB,KAAK2R,KAAMyI,KAAK8W,MACrC,GAEA,CAAA3vB,IAAA,SAAAC,MAGO,WAAM,IAAAm+G,EAAAC,EACHrpC,EAAGxnD,EAAA,GAA6B/uB,MAChC2R,EAAO3R,KAAKuwB,WAAUE,EAAA0C,YAAWnzB,KAAK2R,MAAQ3R,KAAK2R,KACnD4S,GAAWgM,EACXE,EAAA4N,YAAW1sB,EADL3R,KAAKuwB,QACM,KACAvwB,KAAK4R,UAC5B2kE,EAAIioC,eAAc/tF,EAAAyC,aAAYvhB,GAC9B4kE,EAAIkoC,aAAYhuF,EAAAyC,aAAY3O,GAC5B,IAAMlO,EAAYrW,KAAKqW,UACtB,OAAArW,KAAak9G,WACK,QAAfyC,EAAA3/G,KAAKgvB,kBAAU,IAAA2wF,OAAA,EAAfA,EAAiBrvF,UAAwC,SAA7BtwB,KAAKgvB,WAAWqsF,SAC5Cr7G,KAAKk9G,YACL3mC,EAAIvnD,cAAasqF,EAAAuG,iBAAe9wF,IAAA,GACzB/uB,KAAKgvB,YAAU,IAClBC,MAAOjvB,KAAK2R,eAET4kE,EAAIvnD,WAAWC,aACfsnD,EAAIvnD,WAAWzK,KAE1BgyD,EAAIvnD,WAAaunD,EAAIvnD,YACfvF,OAAOC,KAAK6sD,EAAIvnD,YAAY/pB,OACxBsxE,EAAIvnD,WAER,KACNunD,EAAIlgE,aAAY/V,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EAEX1M,GAAS0M,EACT/iB,KAAK4W,UAAU+E,IAAI,SAAC1Y,GAAC,OAAA8rB,IAAA,GAAW9rB,GAAC,IAAEivB,UAAU,GAAI,KAExD,SAEAlyB,KAAKuwB,UACLgmD,EAAI8mC,WAAa,EACjB9mC,EAAI+mC,eAAiB,EACrB/mC,EAAInhD,eAAe0qF,gBAAervF,EAAAiY,QAAO/2B,EAAM,eAEnD4kE,EAAInhD,eAAe5e,SAAW+/D,EAAInhD,eAAe5e,SAASmF,IACtD,SAACsW,GAAC,OAAK,IAAIqqC,EAAAgC,cAAavvC,IAAA,GAAMkD,GAAC,IAAElE,MAAO,OAAO,GAEnDwoD,EAAIhiD,UAAuB,QAAdqrF,EAAG5/G,KAAKkZ,cAAM,IAAA0mG,OAAA,EAAXA,EAAaxsG,UACtBmjE,EAAI//D,gBACJ+/D,EAAI5kE,YACJ4kE,EAAI3kE,gBACJ2kE,EAAIlvC,OACNkvC,EAAI4oC,sBAAsB5oC,EAAI4iC,sBACnC74G,EAAA01C,mBAAkBugC,GACXA,CACX,GAEA,CAAAh1E,IAAA,QAAAgE,IACA,WAMI,IAAM2rB,EAAM,IAAI9W,KACVzI,EAAO3R,KAAK2R,KAClB,SAAI8e,EAAAsR,UAAS7Q,KAAKT,EAAA0lB,KAAIxkC,EAAM,CAAE03B,SAAS,MAAgB,YACnD5Y,EAAAsR,UAAS7Q,EAAKvf,GAAc,cAC5B8e,EAAAsR,UAAS7Q,KAAKT,EAAA0lB,KAAIxkC,EAAM,CAAE03B,QAAS,MAAe,aAClD5Y,EAAAsR,UAAS7Q,KAAKT,EAAA0lB,KAAIxkC,EAAM,CAAE03B,QAASrpC,KAAK4R,YACjC,cACJ,MACX,GAAC,CAAArQ,IAAA,eAAAgE,IAED,WACI,IAAM2rB,EAAM,IAAI9W,KAChB,OACIpa,KAAKyoC,aACJhY,EAAAwR,SAAQ/Q,KAAKT,EAAA4N,YAAWr+B,KAAK2R,MAAM,MAAG,EACnC8e,EAAAsR,UAAS7Q,KAAKT,EAAA4N,YAAWr+B,KAAK2R,KAAM3R,KAAK4R,UAErD,KAACob,CAAA,CA9SqB,odChD1B,IAAA3sB,EAAAxC,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAEAwkC,EAAAxkC,EAAA,OACAk7C,EAAAl7C,EAAA,KAEA2C,EAAA3C,EAAA,OACA4yB,EAAA5yB,EAAA,OACA27G,EAAA37G,EAAA,OA6BMkiH,EAAe,uBAMrB,SAAgBvsF,EACZiP,GAEA,IAAMzP,KAAQqP,EAAAK,eAAcD,GAC5B,SAAOpiC,EAAAkF,KAAG,GAAAvB,OAAI+7G,GAAe/7G,OAAGgvB,EAAQ,IAAMA,EAAQ,KAAMjwB,QACxD3C,EAAAub,KAAI,SAAC5I,GAAI,OAAKA,EAAK4I,IAAI,SAAC6I,GAAC,OAAK,IAAIhkB,EAAAwsB,cAAcxI,EAAE,EAAC,MACnDpkB,EAAA+xB,YAAW,SAAClvB,GAAC,SAAK0W,EAAAO,IAAG,GAAG,GAEhC,CA2CA,SAAgB8lG,EAAYt9G,GACxB,SAAOrC,EAAAuiC,MAAI,GAAA5+B,OAAI+7G,GAAmB,IAAIv/G,EAAAwsB,cAActqB,GAAM+jE,UAAU1jE,QAChE3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAItb,EAAAwsB,cAAclR,EAAK,GAE7C,CASA,SAAgBmkG,EACZ7sG,EACA1Q,GAEiC,IAAjCw9G,EAAAr7G,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,QAEpBmuB,KAAQqP,EAAAK,eAHd79B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAI7B,OAAmB,UAAXq7G,EAAqB7/G,EAAA64C,MAAQ74C,EAAA0iC,KAAG,GAAA/+B,OACjC+7G,EAAe,KAAA/7G,OAAIm1C,mBAAmB/lC,IAAGpP,OACxCgvB,EAAQ,IAAMA,EAAQ,IAE1B,IAAIxyB,EAAAwsB,cAActqB,GAAM+jE,UAC1B1jE,QAAK3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAItb,EAAAwsB,cAAclR,EAAK,GAChD,CA7EAnc,cAAA6zB,EAUA7zB,iBAAA,SAAgBwgH,EACZ19E,GAEA,SAAOpiC,EAAA2yB,OAAqB,CACxBumB,aAAc9W,EACdzJ,GAAI,SAACld,GAAI,OAAK,IAAItb,EAAAwsB,cAAclR,EAAK,EACrC09B,SAAUumE,EACVthH,KAAM,KACPsE,QACC3C,EAAAqxB,WAAS,eAAAvrB,EAAAzE,EAAC,SAAAsG,GAAA,IAASrF,EAAIqF,EAAJrF,KAAMN,EAAI2F,EAAJ3F,KAAI,OAAAV,IAAAC,KAAA,SAAAC,IAAA,IAAAmR,EAAA2mC,EAAA,OAAAh4C,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrB2Q,EAAIgQ,EAAOrgB,GAAI,WACZN,EAAI,CAAAF,EAAAE,KAAA,SAAAF,SAAAE,KAAA,EACYA,IAAOc,YAAW,OACrCR,GADMg3C,EAAIx3C,EAAA4B,MACEpB,KACZN,EAAOs3C,EAAKt3C,KACZ2Q,EAAI,GAAA/O,OAAA+e,EAAOhQ,GAAIgQ,EAAKrgB,IAAMR,EAAAE,KAAA,uBAAAF,EAAAqB,OAAA,SAEvBwP,GAAI,yBAAA7Q,EAAAwC,OAAA,EAAA9C,EAAA,EARcF,EAQd,GACd,gBAAAsb,GAAA,OAAA9W,EAAAtB,MAAA5E,KAAA6E,UAAA,EATQ,KASR,EACDzE,EAAA+xB,YAAW,SAAClvB,GAAC,SAAK0W,EAAAO,IAAG,GAAG,GAEhC,EAOAva,YAAA,SAAgBy7G,EAAUhoG,GAA2C,IAC3D4f,KAAQqP,EAAAK,eADoB79B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAE/D,SAAOxE,EAAAkF,KAAG,GAAAvB,OACH+7G,EAAe,KAAA/7G,OAAIm1C,mBAAmB/lC,IAAGpP,OACxCgvB,EAAQ,IAAMA,EAAQ,KAE5BjwB,QAAK3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAItb,EAAAwsB,cAAclR,EAAK,GAChD,EAMAnc,cAAAqgH,EAaArgH,cAAAsgH,EAoBatgH,YAAY,SACrB+C,EACA+/B,GAEQ//B,OAAY,MAAZA,YAAc2kC,OACf3kC,EAAK0Q,GACN6sG,EACIv9G,EAAKy8G,eAAgBz8G,EAAKy2G,oBAAsBz2G,EAAK0Q,GAAY2b,IAAA,GAC5DrsB,GAAI,IAAE0Q,GAAI1Q,EAAKy2G,oBAAsBz2G,EAAK0Q,KAC/CqvB,GAEJu9E,EAAYt9G,EACtB,EAOA/C,cAAA,SAAgBg+G,EAAYvqG,GAA2C,IAC7D4f,KAAQqP,EAAAK,eADsB79B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAEjE,SAAOxE,EAAA4kC,KAAG,GAAAjhC,OACH+7G,EAAe,KAAA/7G,OAAIm1C,mBAAmB/lC,IAAGpP,OACxCgvB,EAAQ,IAAMA,EAAQ,IAE1B,CACIomB,cAAe,QAG3B,EAOAz5C,eAAA,SAAgBygH,EAAahtG,EAAYmhB,GACrC,SAAOl0B,EAAAuiC,MAAI,GAAA5+B,OACJ+7G,EAAe,KAAA/7G,OAAIm1C,mBAClB/lC,GACH,uBAAApP,OAAsBm1C,mBAAmB5kB,IAC1C,IACFxxB,QAAK3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAItb,EAAAwsB,cAAclR,EAAK,GAChD,EAOAnc,cAAA,SAAgB0gH,EAAYjtG,EAAYmhB,GACpC,SAAOl0B,EAAAuiC,MAAI,GAAA5+B,OACJ+7G,EAAe,KAAA/7G,OAAIm1C,mBAClB/lC,GACH,sBAAApP,OAAqBm1C,mBAAmB5kB,IACzC,IACFxxB,QAAK3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAItb,EAAAwsB,cAAclR,EAAK,GAChD,EAOAnc,eAAA,SAAgB2gH,EAAaltG,GAA+C,IAClEqvB,KAAIJ,EAAAK,eAD2B79B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiC,IAEtE,SAAOxE,EAAAuiC,MAAI,GAAA5+B,OACJ+7G,EAAe,KAAA/7G,OAAIm1C,mBAAmB/lC,GAAG,YAAApP,OACxCy+B,EAAI,IAAMA,EAAI,IAElB,IACF1/B,QAAK3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAItb,EAAAwsB,cAAclR,EAAK,GAChD,EAOAnc,mBAAA,SAAgB4gH,EACZntG,GAC+B,IAEzB4f,KAAQqP,EAAAK,eAFd79B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAG7B,SAAOxE,EAAAkF,KAAG,GAAAvB,OACH+7G,EAAe,KAAA/7G,OAAIm1C,mBAAmB/lC,GAAG,WAAApP,OACxCgvB,EAAQ,IAAMA,EAAQ,KAE5BjwB,QAAK3C,EAAAub,KAAI,SAAC5I,GAAI,OAAKA,EAAK4I,IAAI,SAACG,GAAI,OAAK,IAAIi9B,EAAAkB,UAAUn+B,EAAK,EAAC,GAChE,EASAnc,oBAAA,SAAgB6gH,EACZptG,EACAqtG,EACA9jF,GAC+B,IAEzB3J,KAAQqP,EAAAK,eAAa3T,IAAA,GAF3BlqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,IAEK,IAAE83B,WACpC,SAAOt8B,EAAAuiC,MAAI,GAAA5+B,OACJ+7G,EAAe,KAAA/7G,OAAIm1C,mBAClB/lC,GACH,YAAApP,OAAWy8G,EAAQ,YAAAz8G,OAAWgvB,EAAQ,IAAMA,EAAQ,IACrD,IACFjwB,QAAK3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAIi9B,EAAAkB,UAAUn+B,EAAK,GAC5C,EASAnc,sBAAA,SAAgB+gH,EACZttG,EACAmhB,EACA2e,GACiC,IAE3BzQ,KAAIJ,EAAAK,eAAa3T,EAAA,GAFvBlqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA+B,KAG/B,SAAOxE,EAAA64C,OAAK,GAAAl1C,OACL+7G,EAAe,KAAA/7G,OAAIm1C,mBAClB/lC,GACH,cAAApP,OAAam1C,mBAAmB5kB,IAAUvwB,OAAGy+B,EAAI,IAAMA,EAAI,IAC5DyQ,GACFnwC,QAAK3C,EAAAub,KAAI,SAACG,GAAI,OAAKA,CAA0B,GACnD,EASAnc,mBAAA,SAAgBghH,EACZvtG,EACA6b,EACArd,EACAqsB,GAEA,OAAOzK,EAAY,CACfyqF,WAAY7qG,EACZ6f,gBAAcxC,EAAAyC,aAAYjE,GAC1BmE,cAAY3C,EAAAyC,gBAAYzC,EAAA4N,YAAWpP,EAAOrd,MAC3C7O,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAiD,IAA5CA,EAAE4Y,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAO6qB,CAAM,GAAEh5B,MAAY,GACpE,EASAtF,yBAAA,SAAgB+6G,EACZlxF,EACAyF,EACArd,EACAqsB,GAEA,SAAOu7E,EAAAjnD,2BAA0B,CAC7B0rD,WAAYz0F,EAAQ9U,OACpBue,gBAAcxC,EAAAyC,aAAYjE,GAC1BmE,cAAY3C,EAAAyC,gBAAYzC,EAAA4N,YAAWpP,EAAOrd,MAC3C7O,QACC3C,EAAAub,KAAI,SAACY,GAAM,OACPiN,EAAQ7N,IACJ,SAACvI,GAAE,QACGmJ,EAAO6S,KACL,SAACpG,GAAC,IAAA43F,EAAA,OAAK53F,EAAE5V,KAAOA,IAAyB,QAAlBwtG,EAAA53F,EAAUkJ,gBAAQ,IAAA0uF,OAAA,EAAlBA,EAAoBxtG,MAAOA,CAAE,EACvD,EACR,GAGb,2ICtTA,IAAA9S,EAAAzC,EAAA,OAEA2L,EAAA3L,EAAA,OACA6P,EAAA7P,EAAA,OAEA8P,EAAA9P,EAAA,OACA+P,EAAA/P,EAAA,OACAgQ,EAAAhQ,EAAA,OACAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAwQ,EAAAxQ,EAAA,OAEAy8C,EAAAz8C,EAAA,OACAw8C,EAAAx8C,EAAA,OAEAgjH,EAAAhjH,EAAA,OACAijH,EAAAjjH,EAAA,OACA+2G,EAAA/2G,EAAA,OAEAgM,GADAhM,EAAA,OACAA,EAAA,WACAA,EAAA,0IAUA8B,qBAoB+B,eAAAC,EAAlBkP,EAAkBhP,EAAA,SAAAgP,IAAA/O,EAAAC,KAAA8O,EAAA,GAAAlP,SAAlBkP,yCAAkB,iDAAlBA,wDAHE,CAACtF,EAAAwC,qBAAoBb,QAAA,CAd5B7K,EAAAgZ,aACA9P,EAAAiC,YACAjC,EAAAwC,oBACAqC,EAAA4B,eACAnC,EAAAuB,eACAxB,EAAAsB,mBACAxB,EAAAsB,oBACAvB,EAAAsB,gBACApB,EAAAsB,gBACAnB,EAAAuB,yBACAgrC,EAAAvuC,iBACAsuC,EAAAtrC,iBACAlF,EAAA6F,mBAKKZ,CAAkB,oCA3B3B8lG,EAAAwB,2BAA0B,CAAA7tG,EAAAwsF,QAAAxsF,EAAAgsF,KAAA9rF,EAAAisF,eAAA/rF,EAAAisF,cAAA/rF,EAAAyrF,oBAAAvvE,EAAA8vE,wBAAA7vE,EAAA8vE,uBAAA5vE,EAAAkrF,oBAAAhrF,EAAA4oE,iBAAA+yB,EAAAC,QAAAD,EAAAE,YAAAF,EAAAG,eAAAC,EAAA1sB,UAC1BosB,EAAApM,uBAAqB,CAAAlsG,EAAAqtF,SAAAwrB,EAAAvrB,+CAArBgrB,EAAApM,sBAAqB,CAAAlsG,EAAAwsF,QAAAxsF,EAAAgsF,KAAA5rF,EAAAisF,cAAA/rF,EAAAyrF,oBAAA6sB,EAAA1sB,WAAA,oCACrBqsB,EAAAzL,mBAAkB,CAAA9sG,EAAAwsF,QAAAxsF,EAAAgsF,KAAA5rF,EAAAisF,cAAA/rF,EAAAyrF,oBAAApvE,EAAAkrF,qBAAA,CAAA7nG,EAAA84G,UAAA94G,EAAAqtF,6FCzBtBp/D,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,uNCLA,IAAA8wB,EAAA5yB,EAAA,OAmBMwgH,EAAe,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAyIJ,SAAgBiD,EACZvuG,GACqB,IAArBwuG,EAAA18G,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,GAEfoqB,EAAQ,IAAI7U,KAAK,GACfonG,EAAqB,GAC3BzuG,EAAK8J,KAAK,SAACgW,EAAGlU,GAAC,OAAKkU,EAAElhB,KAAOgN,EAAEhN,IAAI,GAAE,IACXslB,EADWC,EAAAC,EACfpkB,GAAI,IAA1B,IAAAmkB,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAA4B,KAAA6Y,EAAAyH,EAAjBjU,EAAO3M,EAAAz1B,MACRigH,EAAY,IAAIrnG,QAClBqW,EAAA4N,YAAWuF,EAAQjyB,OAA6B,QAAvBy+B,EAACxM,EAAQxO,sBAAc,IAAAgb,OAAA,EAAtBA,EAAwBitE,aAAc,IAE9DqE,KAAUjxF,EAAA4N,YACZuF,EAAQjyB,KACRiyB,EAAQhyB,WAAkC,QAAtBimC,EAAAjU,EAAQxO,sBAAc,IAAAyiB,OAAA,EAAtBA,EAAwBylE,iBAAkB,KAElE,EAAI7sF,EAAAwR,SAAQ2B,EAAQjyB,KAAMsd,IACTka,KAAK6L,OAAIvkB,EAAAwkB,qBAAoBwsE,EAAWxyF,KACzCsyF,GACRC,EAAMprF,KAAK,CACPnH,MAAOA,EAAMiG,UACb3Q,IAAKqf,EAAQjyB,OAGrBsd,EAAQyyF,IACL,EAAIjxF,EAAAkxF,cAAa1yF,EAAO2U,EAAQjyB,QACnCsd,EAAQyyF,GAEf,OAAA13F,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACD,IAAMxO,EAAIiG,EAAMiG,UAChBssF,SAAMprF,KAAK,CACPnH,MAAOjG,EACPzE,IAA4B,IAAtByE,GAAQ5O,KAAK8W,SAEhBswF,CACX,CAxKA7hH,cAAA,SAAgB+/G,EACZzoG,GAAgB,IAAA2qG,EAEhB,OAAqB,QAArBA,EAAI3qG,EAAQL,iBAAS,IAAAgrG,GAAjBA,EAAmB38G,OAEfgS,EAAQL,UAAU4uB,MACd,SAACvT,GAAC,MAA2B,aAAtBA,EAAE6lF,iBAAkC7gG,EAAQu0B,QAAQ,GAGxD,WAEPv0B,EAAQL,UAAUgrB,KACd,SAAC3P,GAAC,MACwB,cAAtBA,EAAE6lF,iBACoB,gBAAtB7lF,EAAE6lF,eAAiC,GAGpC,YAEJ,WAEJ,UACX,EAEAn4G,kBAAA,SAAgBkgH,EAAgBn9G,GAAuB,IAAAm/G,EAC/C5yF,EAAQvsB,EAAKusB,OAAqC,IAA3BvsB,EAAa08G,YACpC76F,EAAM7hB,EAAK6hB,KAAQ7hB,EAAa28G,UACpC,GAAI38G,EAAK48G,YAAc,EACnB,OAAQ58G,EAAK4tB,SACT,IAAK,QACD/L,KAAMkM,EAAAkvB,SACF1wB,GAAS7U,KAAK8W,OACbxuB,EAAK48G,YAAc,GAAK58G,EAAKszB,UAChCd,UACF,MACJ,IAAK,SACD3Q,KAAMkM,EAAAqxF,UACF7yF,GAAS7U,KAAK8W,OACbxuB,EAAK48G,YAAc,GAAK58G,EAAKszB,UAChCd,UACF,MACJ,IAAK,YACL,IAAK,UACD3Q,KAAMkM,EAAAsxF,WACF9yF,GAAS7U,KAAK8W,OACbxuB,EAAK48G,YAAc,GAAK58G,EAAKszB,UAChCd,UACF3Q,KAAMkM,EAAAkvB,SAAQp7B,EAAK,GAAG2Q,UACtB,MACJ,IAAK,SACD3Q,KAAMkM,EAAAuxF,UACF/yF,GAAS7U,KAAK8W,OACbxuB,EAAK48G,YAAc,GAAK58G,EAAKszB,UAChCd,UAId,MAAO,CACHkqF,eAAa3uF,EAAAyC,gBAAYzC,EAAA0C,YAAWlE,IACpCowF,aAAW5uF,EAAAyC,gBAAYzC,EAAA4C,UAAS9O,IAChCyR,SAAUtzB,EAAKszB,SACf1F,QAAS5tB,EAAK4tB,QACdivF,cACqB,QAAjBsC,EAAAn/G,EAAK68G,oBAAY,IAAAsC,OAAA,EAAjBA,EAAmBlmG,IAAI,SAAC1Y,GAAC,MACR,iBAANA,EAAiBo7G,EAAap7G,GAAKA,CAAC,KAC1C,GAEjB,EAEAtD,mBAAA,SAAgBmvB,EAAgB5oB,GAMZ,IALhB8vB,EAAQ9vB,EAAR8vB,SAEA/G,EAAK/oB,EAAL+oB,MACA1K,EAAGre,EAAHqe,IACA+6F,EAAWp5G,EAAXo5G,YAEIroG,EAAU,GAEd,GAAI+e,EAAU,CACV,OARG9vB,EAAPoqB,SASQ,IAAK,QACDrZ,EAAUA,EAAQjT,OACdgyB,EAAW,EAAC,SAAAhyB,OAAYgyB,EAAQ,SAAU,SAE1CspF,EAAc,IACd/6F,KAAMkM,EAAAkvB,SACF1wB,GAAS7U,KAAK8W,OACbouF,EAAc,GAAKtpF,GACtBd,WACN,MACJ,IAAK,SACDje,EAAUA,EAAQjT,OACdgyB,EAAW,EAAC,SAAAhyB,OAAYgyB,EAAQ,UAAW,UAE3CspF,EAAc,IACd/6F,KAAMkM,EAAAqxF,UACF7yF,GAAS7U,KAAK8W,OACbouF,EAAc,GAAKtpF,GACtBd,WACN,MACJ,IAAK,YACL,IAAK,UACDje,EAAUA,EAAQjT,OACdgyB,EAAW,EAAC,SAAAhyB,OAAYgyB,EAAQ,WAAY,WAE5CspF,EAAc,IACd/6F,KAAMkM,EAAAsxF,WACF9yF,GAAS7U,KAAK8W,OACbouF,EAAc,GAAKtpF,GACtBd,WACN,MACJ,IAAK,SACDje,EAAUA,EAAQjT,OACdgyB,EAAW,EAAC,SAAAhyB,OAAYgyB,EAAQ,UAAW,UAE3CspF,EAAc,IACd/6F,KAAMkM,EAAAuxF,UACF/yF,GAAS7U,KAAK8W,OACbouF,EAAc,GAAKtpF,GACtBd,WAGVoqF,GAAe,IACfroG,EAAUA,EAAQjT,OAAM,WAAAA,UAAYysB,EAAAiY,QAAOnkB,EAAK,mBAGxD,OAAOtN,CACX,EAOAtX,mBAAA2hH,EAoCA3hH,uBAAA,SAAgB06G,EACZprF,EACA1K,EACAxR,GACqB,IAGGkpB,EADlBgmF,EAASX,EAAiBvuG,EAFhClO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAE6Bq3B,EAAA/E,EAC9B8qF,GAAM,IAAxB,IAAA/lF,EAAAlT,MAAAiT,EAAAC,EAAA5E,KAAAC,MAA0B,KAAf2qF,EAAGjmF,EAAAz6B,MACV,GACIytB,GAASizF,EAAIjzF,OACbA,EAAQizF,EAAI39F,KACZA,EAAM29F,EAAIjzF,OACV1K,GAAO29F,EAAI39F,IAEX,OAAO,EAEd,OAAAyF,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAA1E,GAAA,CACD,OAAO,CACX,EAQA73B,sBAAA,SAAgBwiH,EACZpvG,GAEqB,IAII4tD,EALzBhvD,EAAA9M,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,QAAmBuV,MAAO8a,UAC1BqsF,EAAA18G,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,GAEb28G,EAAQF,EAAiBvuG,EAAMwuG,GAC/BjjC,KAAO7tD,EAAA2xF,eAAW3xF,EAAA0N,eAAcxsB,GAAO,GAAGivD,EAAAzpC,EAC5BqqF,GAAK,IAAzB,IAAA5gD,EAAA53C,MAAA23C,EAAAC,EAAAtpC,KAAAC,MAA2B,KAAhB8qF,EAAK1hD,EAAAn/D,MACZ,MAAIivB,EAAAwR,SAAQogF,EAAMpzF,MAAOqvD,GACrB,OAAO+jC,EACJ,MAAI5xF,EAAAsR,UAASu8C,EAAM+jC,EAAM99F,OACtB3S,EAAW6e,EAAAwkB,qBAAoBotE,EAAM99F,IAAK+5D,IAChCijC,EAAU,OAAOc,EAExC,OAAAr4F,GAAA42C,EAAAp8C,EAAAwF,EAAA,SAAA42C,EAAAppC,GAAA,CACD,OAAOgqF,EAAMA,EAAMv8G,OAAS,EAChC,8MCjPA,IAAAuE,EAAA3L,EAAA,OACA+P,EAAA/P,EAAA,OACA2C,EAAA3C,EAAA,OACAqoE,EAAAroE,EAAA,OACAyC,EAAAzC,EAAA,qHAOYwK,EAAA8E,yBAAA,aAAA9E,CAA6D,cAC/CA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,qEAGvBA,EAAA8E,yBAAA,WAAA9E,CAIC,UAJDA,CAIC,aAE0BA,EAAAgF,iBAAA,oBAAchF,EAAA+E,yBACjC/E,EAAAkB,oBAAA,wBAMJlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,CAAqC,cACVA,EAAAgF,iBAAA,wBAAkBhF,EAAA+E,yBACzC/E,EAAAkB,oBAAA,yBAMJlB,EAAA+E,wBAAA/E,2CApBAA,EAAAwI,qBAAA,YAAA+E,EAAAtF,MAQQjI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAxI,CAAS,iBAAAA,EAAAmJ,0BAAA,EAAAC,IAQTpJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAxI,CAAS,iBAAAA,EAAAmJ,0BAAA,EAAAC,kEAMrBpJ,EAAA8E,yBAAA,cAAA9E,CAGC,eACyBA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAysC,GAAA,IAAAhnC,EAAApO,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAqF,EAAA6rG,OAAM,GAAEj6G,EAAAgF,iBAAA,kBAAYhF,EAAA+E,wBAAA/E,0BAGnDA,EAAA8E,yBAAA,YACI9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,UACI9E,EAAAgF,iBAAA,+CACJhF,EAAA+E,wBAAA/E,UAHaA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBAzC7BlR,+BAkDyC,eAAAC,EAA5B2iH,EAA4B,WAOrC,SAAAA,EACqCvuE,EACzBiP,GAAuDljD,EAAAC,KAAAuiH,GAD9BviH,KAAAg0C,SACzBh0C,KAAAijD,cARLjjD,KAAAijB,SAAU,EACDjjB,KAAAsQ,KAAO,IAAI9G,EAAAm2B,UAAU,CACjC27C,MAAO,IAAI9xE,EAAAo2B,YAAY5/B,KAAKg0C,OAAOqpE,YAAc,GACjDZ,UAAW,IAAIjzG,EAAAo2B,YAAY5/B,KAAKg0C,OAAOspE,gBAAkB,IAM1D,CAACx9G,SAAAyiH,EAAA,EAAAhhH,IAAA,OAAAC,OAAAghH,EAAA/gH,EAAAC,IAAAC,KAEG,SAAAC,IAAA,IAAA6gH,EAAAC,EAAA1vF,EAAAjF,EAAA3sB,EAAApB,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAApC,KAAKijB,SAAU,EACfjjB,KAAKijD,YAAYmzC,cAAe,EAE1BpjE,EAAa,CACfuB,WAAsB,QAAXkuF,EAAAziH,KAAKg0C,cAAM,IAAAyuE,GAAc,QAAdA,EAAXA,EAAa7rG,UAAU,UAAE,IAAA6rG,OAAA,EAAzBA,EAA2BrvG,MAAiB,QAAfsvG,EAAI1iH,KAAKg0C,cAAM,IAAA0uE,GAAQ,QAARA,EAAXA,EAAaxpG,cAAM,IAAAwpG,OAAA,EAAnBA,EAAqBtvG,KACpElR,EAAAE,KAAA,KACmB8jE,EAAAM,WAChB,IAAIhmE,EAAAwsB,cAAa+B,IAAA,GACV/uB,KAAKg0C,QAAM,IACdqpE,WAAYr9G,KAAKsQ,KAAK9O,MAAM85E,MAC5BgiC,eAAgBt9G,KAAKsQ,KAAK9O,MAAMi7G,aACjCh2C,SACHzzC,GAEC9vB,YAAWkB,MACL,SAACnB,GACJ7B,QAAK6hB,SAAU,EACf7hB,EAAK6hD,YAAYmzC,cAAe,KAChC91F,EAAAkU,aAAW,uCAAAxQ,OAAwCf,EAAE8C,QAC/C9C,CACV,GAAE,OAdA8qB,EAAK7rB,EAAA4B,QAeXxD,EAAAirC,eAAc,mDACdvrC,KAAKijD,YAAYmzC,cAAe,EAChCp2F,KAAKijB,SAAU,EACfjjB,KAAKijD,YAAYt7C,MAAMomB,GAAO,yBAAA7rB,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACjC,SAAAsiH,IAAA,OAAAE,EAAA59G,MAAA5E,KAAA6E,UAAA,MAAA09G,EA5BG,IAAAC,CA4BH,CAtCoC,GAsCpC5iH,SAtCQ2iH,0CAA4Bl6G,EAAAC,4BAQzBsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAA26C,cAAA,kDARlBq/D,EAA4Bx5G,UAAA,4BAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,sxBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA/CjChB,EAAA8E,yBAAA,aAAA9E,CAAmC,QAC3BA,EAAAgF,iBAAA,qCAA+BhF,EAAA+E,yBACnC/E,EAAA0J,qBAAA,EAAA4wG,EAAA,gBAGJt6G,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAA6wG,EAAA,aAAAv6G,CAuBO,EAAAw6G,EAAA,eAvBPx6G,CAuBO,EAAAy6G,EAAA,yBAAAz6G,EAAAqd,yEA3B0Crd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,SAO5C5a,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,QAAA5a,CAAgB,WAAAokB,GAsBhBpkB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,8MAgBAs/F,CAA4B,4NCzDzC,IAAA/4G,EAAA3L,EAAA,OAMA4yB,EAAA5yB,EAAA,OAaAyC,EAAAzC,EAAA,OAEA2C,EAAA3C,EAAA,OACAu4C,EAAAv4C,EAAA,OACAy7G,EAAAz7G,EAAA,OACAk7C,EAAAl7C,EAAA,KAEAu/B,EAAAv/B,EAAA,OAIMklH,IAFFC,EAAevyF,EAAA0lB,QAAI1lB,EAAAwyF,eAAWxyF,EAAAyR,UAAS,IAAI9nB,KAAQ,GAAI,GAAI,CAAEkzD,MAAM,IAGnE,SAAC41C,GAAiC,OAAK,SAACC,GAA4B,IAAAC,EAChE,OAA0B,QAAtBA,EAAAF,EAAiB1hH,aAAK,IAAA4hH,GAAtBA,EAAwBn+G,SAAWk+G,EAAQ3hH,MACpC,CAAE6hH,eAAgB,oCAEtB,IACX,CAAC,GAEL1jH,oBAAA,SAAgBg6G,IAA4D,IAAAtqC,EAAAnpE,EAAA6B,EAAAmzG,EAAAK,EAAAC,EAAAC,EAAAa,EAAAgH,EAAAC,EAAAC,EAAAC,EAA1C11F,EAAAlpB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,IAAIrE,EAAAwsB,cACpDe,IAAOA,EAAQ,IAAIvtB,EAAAwsB,eACxB,IAAM1c,EAAO,IAAI9G,EAAAm2B,UAAU,CACvBvsB,GAAI,IAAI5J,EAAAo2B,YAAY7R,EAAM3a,IAC1BkB,KAAM,IAAI9K,EAAAo2B,YACN7R,EAAMzZ,OAAuB,QAAnB+6D,EAAIthD,EAAMvV,iBAAS,IAAA62D,OAAA,EAAfA,EAAiB1oE,SAAsB,QAAjBT,KAAI5F,EAAAmG,sBAAa,IAAAP,OAAA,EAAbA,EAAeS,QAAS,GAChE,CAAC6C,EAAAq2B,WAAWC,WAEhBtnB,UAAW,IAAIhP,EAAAo2B,YACX7R,EAAMvV,WAAa,IAAIugC,EAAAmO,KAAK,CAAEvgD,MAAOonB,EAAMzZ,MAAQ,MAEvDqW,QAAS,IAAInhB,EAAAo2B,YAAY7R,EAAMpD,UAAwB,QAAjB5iB,KAAIzH,EAAAmG,sBAAa,IAAAsB,OAAA,EAAbA,EAAepB,QACzDy2G,SAAU,IAAI5zG,EAAAo2B,YAAY7R,EAAMqvF,UAChC/mG,UAAW,IAAI7M,EAAAo2B,YAAY7R,EAAM1X,WAAa,IAC9CO,UAAW,IAAIpN,EAAAo2B,YAAY7R,EAAMnX,WAAa,IAC9CtV,MAAO,IAAIkI,EAAAo2B,YAAY7R,EAAMzsB,OAC7BokC,KAAM,IAAIl8B,EAAAo2B,YAAY7R,EAAM2X,MAC5Bi5E,QAAS,IAAIn1G,EAAAo2B,YAAY7R,EAAK4wF,SAC9BhtG,KAAM,IAAInI,EAAAo2B,YAAY7R,EAAMpc,KAAM,CAACnI,EAAAq2B,WAAWC,WAC9CluB,SAAU,IAAIpI,EAAAo2B,YAAY7R,EAAMnc,SAAU,CAACwkC,EAAA4B,cAC3CznB,QAAS,IAAI/mB,EAAAo2B,YAAY7R,EAAMwC,SAC/B2sF,UAAW,IAAI1zG,EAAAo2B,YAAY7R,EAAMmvF,WACjCluF,WAAY,IAAIxlB,EAAAo2B,YAAY7R,EAAMiB,YAClCmqF,mBAAoB,IAAI3vG,EAAAo2B,YAAY7R,EAAMorF,oBAC1CgC,OAAQ,IAAI3xG,EAAAo2B,YAAY7R,EAAMotF,QAC9BsE,YAAa,IAAIj2G,EAAAo2B,YAAY7R,EAAM0xF,aACnCjpG,SAAU,IAAIhN,EAAAo2B,aACW,QAApBs7E,EAAAntF,EAAMqH,sBAAc,IAAA8lF,GAAa,QAAbA,EAApBA,EAAsB1kG,SAAS,UAAE,IAAA0kG,OAAA,EAAjCA,EAAmCriF,QAAS,IAEjDkiF,eAAgB,IAAIvxG,EAAAo2B,aACI,QAApB27E,EAAAxtF,EAAMqH,sBAAc,IAAAmmF,GAAa,QAAbA,EAApBA,EAAsB/kG,SAAS,UAAE,IAAA+kG,OAAA,EAAjCA,EAAmCp2C,QAAS,IAEhDu2C,qBAAsB,IAAIlyG,EAAAo2B,aACF,QAApB47E,EAAAztF,EAAMqH,sBAAc,IAAAomF,GAAa,QAAbA,EAApBA,EAAsBhlG,SAAS,UAAE,IAAAglG,OAAA,EAAjCA,EAAmCt2C,cAAe,IAEtDm4C,WAAY,IAAI7zG,EAAAo2B,YAAY7R,EAAMsvF,YAAc,GAChDC,eAAgB,IAAI9zG,EAAAo2B,YAAY7R,EAAMuvF,gBAAkB,GACxD5lG,OAAQ,IAAIlO,EAAAo2B,eACRxC,EAAA0D,iBAAmC,QAApB26E,EAAA1tF,EAAMqH,sBAAc,IAAAqmF,OAAA,EAApBA,EAAsB/jG,SAAU,KAGnDgsG,aAAc,IAAIl6G,EAAAo2B,YAAgC,QAArB08E,EAACvuF,EAAMqH,sBAAc,IAAAknF,OAAA,EAApBA,EAAsBoH,cACpD/9G,SAAU,IAAI6D,EAAAo2B,YAAY7R,EAAMpoB,UAChCg+G,YAAa,IAAIn6G,EAAAo2B,aAAY,GAC7BgkF,cAAe,IAAIp6G,EAAAo2B,aACK,QAApB0jF,EAAAv1F,EAAMqH,sBAAc,IAAAkuF,OAAA,EAApBA,EAAsBM,iBAAiB,GAE3CxmC,WAAY,IAAI5zE,EAAAo2B,aAAgC,QAApB2jF,EAAAx1F,EAAMqH,sBAAc,IAAAmuF,OAAA,EAApBA,EAAsBnmC,aAAc,IAChE9hD,SAAU,IAAI9xB,EAAAo2B,aAAgC,QAApB4jF,EAAAz1F,EAAMqH,sBAAc,IAAAouF,OAAA,EAApBA,EAAsBloF,WAAY,IAC5DyzB,KAAM,IAAIvlD,EAAAo2B,aAAgC,QAApB6jF,EAAA11F,EAAMqH,sBAAc,IAAAquF,OAAA,EAApBA,EAAsB10D,OAAQ,IACpDowD,cAAe,IAAI31G,EAAAo2B,aAAY,GAC/B1mB,OAAQ,IAAI1P,EAAAo2B,YAAiB7R,EAAM7U,UAEvC5I,SAAK/K,IAAI,aAAasN,aAAaC,UAAU,SAACoQ,GAAC,OAC3C5S,EAAK+T,SAAS/P,KAAKmlB,SAASvW,GAAGvc,MAAM,GAEzC2J,EAAK/K,IAAI,aAAasN,aAAaC,UAAU,SAAC2iB,GAC1CnlB,EAAK+T,SAASnL,OAAOugB,SAAU,MAADhE,KAAGxwB,OAAUwwB,EAAE,GAAa,MAC1DnlB,EAAK+T,SAAS3M,OAAQ,MAAD+d,KAAGxwB,OAAS,SAAW,YAChD,GACAqL,EAAKuC,aAAaC,UAAU,SAACuQ,GAC0B,IAAA80B,EAE5CC,EAFH9nC,EAAK9O,MAAMmQ,KAAOyI,KAAK8W,OAAS5gB,EAAK9O,MAAM4R,GAC3B,QAAhB+kC,EAAA7nC,EAAK/K,IAAI,eAAO,IAAA4yC,GAAhBA,EAAkBI,QAAQ,CAAED,WAAW,IAEvB,QAAhBF,EAAA9nC,EAAK/K,IAAI,eAAO,IAAA6yC,GAAhBA,EAAkBpJ,OAAO,CAAEsJ,WAAW,GAE9C,GACAhoC,EAAK+T,SAAS1S,KAAKkB,aAAaC,UAAU,SAACnB,GAAQ,IAAAkyG,EAAAC,EAC3CnyG,EAAOyI,KAAK8W,QAAU5gB,EAAK9O,MAAM4R,IACjC9C,EAAKe,WACD,CACIM,QAAM8e,EAAAqkB,uBAAsB16B,KAAK8W,MAAO,CACpC6jB,UAAW,EACX2D,eAAgB,SACjBxjB,WAEP,CAAEojB,WAAW,IAImB,oBAAf,QAArBurE,EAAAvzG,EAAK9O,MAAMwtB,kBAAU,IAAA60F,OAAA,EAArBA,EAAuBxI,WACa,UAAf,QAArByI,EAAAxzG,EAAK9O,MAAMwtB,kBAAU,IAAA80F,OAAA,EAArBA,EAAuBzI,WAEvB/qG,EAAKe,WAAW,CACZ2d,WAAUD,IAAA,GACHze,EAAK9O,MAAMwtB,YAAU,IACxBuwF,aAAc,CAAC,IAAInlG,KAAKzI,GAAMoyG,aAI9C,GACAzzG,EAAK/K,IAAI,wBAAwBmhD,cAAc,CAC3Cq8D,EAAsBzyG,EAAK/K,IAAI,eAE/BwoB,EAAM3a,KACN9C,EAAK/K,IAAI,QAAQgzC,UACjBjoC,EAAK/K,IAAI,aAAagzC,WAEN,YAAhBxqB,EAAM4O,OAAqBrsB,EAAK/K,IAAI,QAAQgzC,UACzCjoC,CACX,EAMA3Q,8BAAA,SAAgBqkH,EAA4B1lC,IACxC0kC,EAAevyF,EAAA0N,eAAc,IAAI/jB,KAAKkkE,GAC1C,EAQA3+E,qBAAA,SAAgBskH,EACZ5uF,EACA8Y,EACA+1E,GACkC,IAAlCvyG,EAAA9M,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,MAAe4rB,EAAAylB,SAAQ,IAAI97B,MAErB8W,EAAM,IAAI9W,KAAKzI,GACfwyG,KAAiB7K,EAAA6I,qBAAoB9sF,EAAU1jB,EAAM,GACrDsd,EAAQ,IAAI7U,KAAK+pG,EAAel1F,OAChC1K,EAAM,IAAInK,KAAK+pG,EAAe5/F,KAC9B6/F,KAAiB9jH,EAAA60E,sBACnBxjE,EACAA,EACAwyG,EAAel1F,MACfk1F,EAAe5/F,KAEb8/F,KAAwB5zF,EAAAwY,gBAAe,CACzCI,SAAS+6E,EACH3zF,EAAAwkB,qBADGmvE,EACiB7/F,EACA0K,EADKiC,KAG7BozF,GAAiBF,KAAkB,EAAC3zF,EAAAkC,WAAU1D,EAAOiC,GAE3D,MAAO,CACHmW,OAAS8G,EAEHi2E,EACAF,EACI,uBACA,YACJ,sBALA,eAMNK,gBATeH,KAAkB,EAAC3zF,EAAAkC,WAAUpO,EAAK2M,GAU3C,oBACAkzF,EAAc,cAAApgH,UACAysB,EAAAiY,QAAOnkB,EAAK,UAAS,KAAAvgB,OAAIqgH,EAAqB,KAC5DC,EACA,oBAAmB,WAAAtgH,UACRysB,EAAAiY,QAAOzZ,EAAO,UAAS,KAAAjrB,OAAIqgH,EAAqB,KAEzE,EAEA1kH,kBAAA,SAAgB6kH,EACZzxG,EACA0xG,EACAC,GAEA,IAAMC,EAAOD,EAAeC,KACtBj0C,EAAKg0C,EAAeh0C,GAUpBl3C,EATgBzmB,EAAK8I,OAAO,SAAC+nB,GAC/B,IAAM3U,EAAQ,IAAI7U,KAAKwpB,EAAQjyB,MACzB4S,KAAMkM,EAAA4N,YAAWpP,EAAO2U,EAAQhyB,UACtC,OACKgyB,EAAQhtB,UAAUwY,KACf,SAAC5S,GAAK,OAAKA,EAAM7V,QAAU+9G,EAAeloG,KAAK,MAC9C,EAAClc,EAAA60E,sBAAqBwvC,EAAMj0C,EAAIzhD,EAAMiG,UAAW3Q,EAAI2Q,UAElE,GACmClxB,OAAOygH,GAC1CjrF,SAAa3c,KAAK,SAACgW,EAAGlU,GAAC,OAAKkU,EAAElhB,KAAOgN,EAAEhN,IAAI,MACpCrR,EAAA6sC,QAAO3T,EAAc,KAChC,EAEA75B,8BAAA,SAAgB4zB,EAA4BqQ,GACxC,IAAIvtB,EAAY,CACZ,CACIjD,GAAIwwB,EAAQmN,QACZz9B,KAAMswB,EAAQ8J,UACd/mC,MAAOi9B,EAAQiB,WACf+/E,WAAW,IAGnB,MAA6B,YAAzBhhF,EAAQnwB,cACR4C,EAAU+f,KACN,IAAI2iB,EAAAmO,KAAK,CACL5zC,KAAMswB,EAAQvwB,YAAcuwB,EAAQpwB,YACpC7M,MAAOi9B,EAAQ9yB,SACf+4B,WAAYjG,EAAQiG,cAIhCxzB,EAAYA,EAAUrS,OAAO4/B,EAAQvtB,WAC9B,IAAI7V,EAAAwsB,cAAa+B,MAAA,GACjB6U,GACAA,EAAQxO,gBAAc,IACzB/e,YACAjD,GAAIwwB,EAAQxwB,IAAMwwB,EAAQxO,eAAehiB,GACzCkB,KAAMsvB,EAAQiB,WACdo6E,eAAe,IAEvB,qGClPA,IAAAxuF,EAAA5yB,EAAA,OAEa8B,cAAc,SAACwjH,GAA4B,IAAA0B,EAC9ClzG,EAAqB,QAAjBkzG,EAAG1B,EAAQvoD,cAAM,IAAAiqD,OAAA,EAAdA,EAAgBt/G,IAAI,QACjC,OAAIoM,MAAQ8e,EAAAwR,SAAQ7nB,KAAK8W,OAAG,EAAIT,EAAA4N,YAAW1sB,EAAKnQ,MAAO2hH,EAAQ3hH,QACpD,CAAEoQ,UAAU,GAEhB,IACX,EAGAjS,WAAA,SAAgBmlH,EACZ3B,GAEA,OAAOA,EAAQ3hH,UAASivB,EAAAsR,UAASohF,EAAQ3hH,MAAO,IAAI4Y,MAC9C,CAAE2qG,WAAW,GACb,IACV,oFClBAvuF,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,qKCDA,IAAAiO,EAAA/P,EAAA,OAIAmnH,GAFAnnH,EAAA,OAEAA,EAAA,oDAIA8B,yBAgBmC,eAAAC,EAAtBqlH,EAAsBnlH,EAO/B,SAAAmlH,EACoChqE,EACxBj6C,GAA0B,IAAAkkH,EAAAnlH,EAAAC,KAAAilH,GADFjlH,KAAAi7C,QACxBj7C,KAAAgB,YARIhB,KAAAwc,MAAQxc,KAAKi7C,MAAMz+B,MACnBxc,KAAAmlH,WAAUH,EAAAxpC,gBAAc,GAAAx3E,OACjC2B,SAASC,QAAM5B,QACdhE,KAAKgB,UAAUuE,IAAI,wBAtBb,oCAuBRm4B,QAAQ,SAA0B,QAAlBwnF,EAAEllH,KAAKi7C,MAAMz+B,aAAK,IAAA0oG,OAAA,EAAhBA,EAAkBv+G,QAKvC,GAAC/G,SAVKqlH,0CAAsB58G,EAAAC,4BAQnBsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAAC,iBAAA,kDARlBy8G,EAAsBl8G,UAAA,sBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,iCAZGsiB,UAAAC,MAAAC,EAAA,wGAAO,4IADrCrnB,EAAA8E,yBAAA,WAAA9E,CAAQ,UACJA,EAAAulB,iBAAA,KAAkDvlB,EAAA+E,yBAClD/E,EAAAkB,oBAAA,WACAlB,EAAA8E,yBAAA,aAAA9E,CAA8B,cAChBA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA8E,yBAAA,YACI9E,EAAAkB,oBAAA,WACJlB,EAAA+E,gCARsD/E,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAA,MAAAxkB,EAAAkT,MAAA,KAAAlT,EAAAkT,MAAAlJ,MAAAjL,EAAA2lB,sBAAA,GAOpB3lB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,MAAAvH,EAAA67G,QAAA98G,EAAAksC,6EAK7B0wE,CAAsB,6NCxBnC,IAAAr3G,EAAA/P,EAAA,OACAyC,EAAAzC,EAAA,UAQAA,EAAA,OACAA,EAAA,sLAYYwK,EAAA8E,yBAAA,aAAA9E,CAAmE,cACrDA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,0BAkBfA,EAAA8E,yBAAA,WAAA9E,CAAuD,cACjCA,EAAAgF,iBAAA,UAAIhF,EAAA8E,yBAAA,UAAM9E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBAAO/E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBACrC/E,EAAAkB,oBAAA,4BAIJlB,EAAA+E,mDAcI/E,EAAA8E,yBAAA,WAAA9E,CAGC,WACGA,EAAAulB,iBAAA,MAAiBvlB,EAAA+E,yBACjB/E,EAAA8E,yBAAA,YAGI9E,EAAAgF,iBAAA,6DAEJhF,EAAA+E,wBAAA/E,4CAFIA,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAArX,EAAA8L,sBAAA,IAAArC,EAAAxB,KAAA9O,MAAAmQ,KAAA,qBAAAtJ,EAAA8L,sBAAA,IAAArC,EAAAxB,KAAA9O,MAAAmQ,KAAAG,EAAA+c,aAAA,+BAIRxmB,EAAA8E,yBAAA,WAAA9E,CAGC,WACGA,EAAAulB,iBAAA,MAAqBvlB,EAAA+E,yBACrB/E,EAAAkB,oBAAA,yBAOJlB,EAAA+E,kEALQ/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA6Q,EAAApR,KAAA9O,MAAAmQ,KAAAtJ,CAAwB,MAAAqZ,EAAA9J,aAAxBvP,CAAwB,WAAAqZ,EAAA0jG,yCArDxC/8G,EAAA8E,yBAAA,YAAA9E,CAA+D,WAA/DA,CAA+D,cAEpCA,EAAAgF,iBAAA,WAAKhF,EAAA8E,yBAAA,UAAM9E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBAAO/E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBACvC/E,EAAA8E,yBAAA,uBACI9E,EAAAkB,oBAAA,cAOAlB,EAAA8E,yBAAA,eAAA9E,EAAAulB,iBAAA,OAAyCvlB,EAAA+E,wBAAA/E,KAGjDA,EAAA0J,qBAAA,GAAAszG,EAAA,cAOAh9G,EAAA8E,yBAAA,YAAA9E,CAA2B,YACvBA,EAAAulB,iBAAA,OAAkBvlB,EAAA+E,yBAClB/E,EAAA8E,yBAAA,aAII9E,EAAAgF,iBAAA,IAIJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,aACI9E,EAAA0J,qBAAA,GAAAuzG,EAAA,aAAAj9G,CAWM,GAAAk9G,EAAA,cAcVl9G,EAAA+E,wBAAA/E,4CA3DeA,EAAAwI,qBAAA,YAAAK,EAAAZ,MAcajI,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,OAAAK,EAAA2G,qBAapBxP,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAA2D,EAAAZ,KAAA+T,SAAAzN,WAAA,MAAA1F,EAAAZ,KAAA+T,SAAAzN,UAAApV,MAAA,QAAA0P,EAAAZ,KAAA+T,SAAAzN,UAAApV,MAAA,GAAA8T,gBAAA,MAAApE,EAAAZ,KAAA+T,SAAAzN,WAAA,MAAA1F,EAAAZ,KAAA+T,SAAAzN,UAAApV,MAAA,QAAA0P,EAAAZ,KAAA+T,SAAAzN,UAAApV,MAAA,GAAA8R,MAAA,KASCjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAK,EAAAZ,KAAA+T,SAAA1S,MAYAtJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAK,EAAAZ,KAAA+T,SAAAzS,wEAjDjBvJ,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAAyzG,EAAA,eA6DAn9G,EAAA8E,yBAAA,aAAA9E,CAAiE,cAC1BA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA8O,EAAAoiG,OAAM,GAAlDj6G,EAAAulB,iBAAA,KAEAvlB,EAAA+E,wBAAA/E,GAERA,EAAAoZ,4EAlEWpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAAtF,gCAoEPjI,EAAA8E,yBAAA,YACI9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,iCAAqBhF,EAAA+E,wBAAA/E,2CADCA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eACtBxI,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA5L,EAAAsN,sBAAA,IAAApE,EAAA0R,WAjFnBtjB,+BAkGyC,eAAAC,EAA5B6lH,EAA4B,WAuBrC,SAAAA,EACqCxqE,EACzBj6C,EACAqtB,EACA40B,EACA7yC,GAAerQ,EAAAC,KAAAylH,GAJUzlH,KAAAi7C,QACzBj7C,KAAAgB,YACAhB,KAAAquB,cACAruB,KAAAijD,cACAjjD,KAAAoQ,UA3BIpQ,KAAAijB,QAAUjjB,KAAKquB,YAAYpL,OA4BxC,CAACnjB,SAAA2lH,EAAA,EAAAlkH,IAAA,OAAAgE,IA1BJ,WACI,OAAOvF,KAAKquB,YAAY/d,IAC5B,GAAC,CAAA/O,IAAA,eAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,4BAA8B,GAC5D,GAAC,CAAAhE,IAAA,sBAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,iCAC9B,GAAC,CAAAhE,IAAA,gBAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,uBAC9B,GAAC,CAAAhE,IAAA,cAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAU6tB,WAC1B,GAAC,CAAAttB,IAAA,WAAAC,MAUM,WACHxB,KAAKquB,YAAYjG,UACjBpoB,KAAKsQ,KAAKe,WAAW,CACjBuF,UAAW,CAAC5W,KAAKi7C,MAAMz+B,OACvBlI,QAAMhU,EAAAmG,eAAcE,MACpB6R,aAAWlY,EAAAmG,gBAEnB,GAAC,CAAAlF,IAAA,OAAAC,OAAAghH,EAAA/gH,EAAAC,IAAAC,KAEM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGpC,KAAKquB,YAAYxE,WAAUzlB,MAAO,SAACnB,GACrC,QAAA3C,EAAAkU,aAAYvR,GACNA,CACV,GAAE,OACEjD,KAAKgB,UAAU6xE,SAASjgD,cAAc/sB,SAAS,aAC/C7F,KAAKoQ,QAAQK,SAAS,CAAC,QAAS,UAAW,aAAU,EAErDnQ,EAAAirC,eAAc,6BAElBvrC,KAAKijD,YAAYt7C,QAAQ,wBAAAzF,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAC5B,SAAAsiH,IAAA,OAAAE,EAAA59G,MAAA5E,KAAA6E,UAAA,MAAA4gH,EAbA,IAAAjD,CAaA,CAnDoC,GAmDpC5iH,SAnDQ6lH,0CAA4Bp9G,EAAAC,4BAwBzBsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAyM,kBAAA7M,EAAAC,4BAAAK,EAAAu6C,cAAA76C,EAAAC,4BAAAO,EAAAoE,QAAA,kDAxBlBw4G,EAA4B18G,UAAA,4BAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kBA9FpBsiB,UAAAC,MAAAC,EAAA,4ZAqEoDF,UAAAG,MAAAD,EAAA,mQAtDhCF,UAAAI,MAAAF,EAAA,+FAGDF,UAAAM,MAAAJ,EAAA,6IAWRF,UAAAO,MAAAL,EAAA,mbAgBIF,UAAA0rB,MAAAxrB,EAAA,wMAYAF,UAAAowB,MAAAlwB,EAAA,8RA1D5BrnB,EAAA8E,yBAAA,WAAA9E,CAAQ,QACJA,EAAAulB,iBAAA,KAAoBvlB,EAAA+E,yBACpB/E,EAAAkB,oBAAA,WACAlB,EAAA0J,qBAAA,EAAA2zG,EAAA,8CAGJr9G,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAA4zG,EAAA,oDAoEAt9G,EAAA0J,qBAAA,EAAA6zG,EAAA,yBAAAv9G,EAAAqd,yEAxEard,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAxI,EAAAsN,sBAAA,IAAArM,EAAA2Z,UAIE5a,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAxI,EAAAsN,sBAAA,IAAArM,EAAA2Z,SAAA5a,CAA0B,WAAAwd,ohBAwFpC4/F,CAA4B,mJCnHzC5nH,EAAA,WAGAs1F,EAAAt1F,EAAA,iEA4CoBwK,EAAA8E,yBAAA,SAA0C9E,EAAAgF,iBAAA,GAAUhF,EAAA+E,kEAAV/E,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA1C,EAAAob,gCAC1CtkB,EAAA8E,yBAAA,UACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,kEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAmE,EAAAs/B,WAAA,+BAEJ3oC,EAAA8E,yBAAA,UACI9E,EAAAgF,iBAAA,6DAEJhF,EAAA+E,kEAFI/E,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAArX,EAAA8L,sBAAA,IAAAjD,EAAA+d,MAAA,wBAAA5mB,EAAA8L,sBAAA,IAAAjD,EAAAqT,IAAA,4CApBZlc,EAAA8E,yBAAA,WAUI9E,EAAAkB,oBAAA,WACAlB,EAAA8E,yBAAA,UAAA9E,CAAqB,UAEbA,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAA8zG,EAAA,UAAAx9G,CAAwD,EAAAy9G,EAAA,UAAxDz9G,CAAwD,EAAA09G,EAAA,WAQ5D19G,EAAA+E,wBAAA/E,2CApBAA,EAAAgiF,qBAAA,4EAAAl4E,EAAA6nF,MAAA,IAAA7nF,EAAA8nF,OADA5xF,EAAAwI,qBAAA,KAAAsB,EAAAoB,QAWQlL,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4E,EAAAmB,MAAAnB,EAAAoB,QAAApB,EAAAiB,GAAA,KAE0B/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAAwa,MACAtkB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAAwa,MAAAxa,EAAA6+B,YAGC3oC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA8c,QAnCnDtvB,2BAoEqC,eAAAC,EAAxBmiD,EAAwB,WAejC,SAAAA,EACsC6pD,EAC1B3d,GAAiCluF,EAAAC,KAAA+hD,GADP/hD,KAAA4rG,WAC1B5rG,KAAAiuF,WAfIjuF,KAAAoT,GAAKpT,KAAK4rG,SAASx4F,GACnBpT,KAAAuT,OAASvT,KAAK4rG,SAASr4F,OACvBvT,KAAAsT,KAAOtT,KAAK4rG,SAASt4F,KACrBtT,KAAA2sB,KAAO3sB,KAAK4rG,SAASj/E,KACrB3sB,KAAAivB,MAAQjvB,KAAK4rG,SAAS38E,MACtBjvB,KAAAukB,IAAMvkB,KAAK4rG,SAASrnF,IACpBvkB,KAAAqnC,OAASrnC,KAAK4rG,SAASvkE,OACvBrnC,KAAAgxC,WAAahxC,KAAK4rG,SAAS56D,UASxC,CAAClxC,SAAAiiD,EAAA,EAAAxgD,IAAA,WAAAC,MAEG,WAA0B,IAAAJ,EAAApB,KAAjBgmH,EAAAnhH,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACxBmhH,EAAQ,IACZv5C,WAAW,WAAK,IAAAw5C,EACNrrD,EACuC,QADjCqrD,EACR7kH,EAAK6sF,SAAS7B,cAAc85B,qBAAa,IAAAD,OAAA,EAAzCA,EAA2CC,cAC/C,IAAKtrD,EAAQ,OAAOx5D,EAAKuD,WAAWqhH,GACpC,IAAM7uE,IACCgvE,SAASvrD,EAAO1jB,MAAME,IAAK,IAAM,IADlCD,IAECgvE,SAASvrD,EAAO1jB,MAAMkvE,KAAM,IAAM,IAEzChlH,EAAK64F,MAAQ9iD,KAAc,GAAM,SAAW,MAC5C/1C,EAAK44F,MAAQ7iD,KAAc,GAAM,QAAU,MAC/C,EAAG,IACP,GAAC,CAAA51C,IAAA,kBAAAgE,IAED,WACI,MAAO,EACX,KAACw8C,CAAA,CArCgC,GAqChCniD,SArCQmiD,0CAAwB15C,EAAAC,4BAgBrB6qF,EAAA7iC,kBAAgBjoD,EAAAC,4BAAAD,EAAAqkF,YAAA,kDAhBnB3qC,EAAwBh5C,UAAA,wBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,oeAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjE7BhB,EAAAkB,oBAAA,WAYAlB,EAAA0J,qBAAA,EAAAs0G,EAAA,yBAAAh+G,EAAAqd,yEAVIrd,EAAAwI,qBAAA,UAAAy1G,EAAAj+G,CAAwB,cAAxBA,CAAwB,qBAAxBA,CAAwB,qBAAxBA,CAAwB,WAAxBA,CAAwB,aAOxBA,EAAA+rD,sBAAA,KAAA9qD,EAAA8J,GAAA/K,CAAc,SAAAiB,EAAAiK,yeAwDbwuC,CAAwB,kRCnFrClkD,EAAA,WACAwC,EAAAxC,EAAA,OACA4yB,EAAA5yB,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAaAyC,GADAzC,EAAA,OACAA,EAAA,QAUA0oH,GADA1oH,EAAA,OACAA,EAAA,QAGA2oH,EAAA3oH,EAAA,OACA2jD,EAAA3jD,EAAA,OACA4oH,EAAA5oH,EAAA,OACA0jD,EAAA1jD,EAAA,MAEAq/B,GADAr/B,EAAA,OACAA,EAAA,0EAiBA8B,sBACiC,eAAAC,EAApB8mH,EAAoB,SAAA/lH,GAAAC,EAAA8lH,EAAA/lH,GAAA,IA2J5Bm9E,EA3J4Bh9E,EAAAC,EAAA2lH,GAkJ7B,SAAAA,EACY9sG,EACA3Y,EACAD,EACA2lH,EACA1uG,GAAkB,IAAA7W,EAAArB,SAAAC,KAAA0mH,IAE1BtlH,EAAAN,EAAAO,KAAArB,OANQ4Z,SACAxY,EAAAH,OACAG,EAAAJ,YACAI,EAAAulH,YACAvlH,EAAA6W,UAtJJ7W,EAAAwlH,QAAU,IAAIjtG,EAAAqB,gBAA0B,IACxC5Z,EAAAi8B,SAAW,IAAI1jB,EAAAqB,gBAA6B,IAC5C5Z,EAAAylH,UAAY,IAAIltG,EAAAqB,gBAA0B,IAC1C5Z,EAAA0lH,eAAiB,IAAIntG,EAAAqB,gBAA0B,IAC/C5Z,EAAA2lH,UAAoC,GACpC3lH,EAAA4lH,OAAiC,GACjC5lH,EAAA6lH,aAAuC,GAEvC7lH,EAAA8lH,YAAc,IAAIvtG,EAAAqB,gBAA0B,IAEpC5Z,EAAAgsC,cACZhsC,EAAKH,KAAKiX,gBAAgBnV,QACtB3C,EAAAyb,QAAO,SAAChD,GAAG,QAAOA,CAAG,MACrBzY,EAAAqxB,WAAU,SAAC5Y,GAAG,SACVxY,EAAAs+B,cAAa9lB,EAAIzF,GAAE,sBAAwBrQ,QACvC3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,CAAEjD,QAAS,IAAK,GACvC,MAEL7W,EAAAub,KAAI,SAAC1Y,GAAC,OAAMA,GAAGgU,mBAAmBqqB,MAAQr+B,EAAEgU,QAAU,EAAE,IAAC,EACzD7W,EAAAmyB,aAAY,IAGJnxB,EAAA25C,UAAY35C,EAAKwY,OAAO/C,MAAM9T,QAC1C3C,EAAAgxB,cAAa,KAAE,EACfhxB,EAAAqxB,WAAU,SAACq9B,GAAG,SACVzuD,EAAAs+B,cAAamwB,EAAI17C,GAAI,SAASrQ,QAC1B3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,CAAEjD,QAAS,IAAK,MACpC7W,EAAAub,KAAI,SAACsW,GAAC,OACDA,GAAGhb,mBAAmBqqB,MAAQrP,EAAEhb,QAAU,IAAI0E,IAC3C,SAAC27D,GAAsB,OACnB,IAAIivC,EAAAY,KAAIp4F,IAAA,GAAMuoD,GAAC,IAAE3jE,KAAMm7C,IAAa,EAC3C,GAER,MAEL1uD,EAAA+xB,YAAW,SAAC3N,GAAC,MAAK,EAAE,MACpBpkB,EAAAmyB,aAAY,IAGRnxB,EAAAgmH,MAAQhmH,EAAKwY,OAAO/C,MAAM9T,QAC9B3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAyb,QAAO,SAAC5Y,GAAC,QAAOA,CAAC,MACjB7C,EAAAojB,KAAI,SAACsrC,GAAO,IAAA5oD,EACR9E,EAAK2lH,UAAY,GACjB,IAAMxyF,EAAYnzB,EAAKH,KAAK2wB,QAAQ,mBACpC,GAAK2C,EACL,KAAI3C,EAAgD,QAAzC1rB,KAAG7F,EAAAwxB,WAAU0C,EAAW,yBAAiB,IAAAruB,OAAA,EAAtCA,EAAwC0rB,QAClDk9B,EAAI17C,IAEHwe,IACLxwB,EAAKwR,aAAY,aAEbgf,EACKG,SACAjf,UAAU,SAAC4F,GAAC,OACTtX,EAAKimH,qBAAqB3uG,GAAK,GAAI6b,EAAU,IAGzDnzB,EAAKwR,aAAa,kBAAmBgf,EAAQS,QAAM,CACvD,IAGIjxB,EAAAkmH,iBAAgB3tG,EAAA+I,eAAc,CAClCthB,EAAKi8B,SACLj8B,EAAKwY,OAAO/C,QACb9T,QACC3C,EAAAyb,QACI,SAAA9T,GAAA,IAAA8a,EAAAD,EAAA7a,EAAA,GAAE9E,EAAC4f,EAAA,GAAEisC,EAAGjsC,EAAA,UACH5f,EAAEskH,SAAWtkH,EAAE0O,QAAO8e,EAAA4C,UAASjZ,KAAK8W,OAAOgE,cAAgB45B,CAAG,MAEvE1uD,EAAAqxB,WAAU,SAAA3O,GAAe,IAAAgb,EAAAlb,EAAAE,EAAA,GAAb7f,EAAC66B,EAAA,GAAEjnB,EAAKinB,EAAA,GAChB,SAAOZ,EAAA5J,eAAc,CACjB3gB,KAAM,OACNsgB,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWlwB,EAAE0O,MAAQyI,KAAK8W,QACpDkC,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpwB,EAAE0O,MAAQyI,KAAK8W,QAChDxd,MAAOmD,EAAMzD,IAErB,IAAC,EACDhT,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAojB,KAAI,SAAC6R,GACDj0B,EAAKwlH,QAAQxkH,KAAKizB,EAAS1Z,IAAI,SAAC1Y,GAAC,OAAKA,EAAE6N,QAAQ,IAChD1P,EAAK8lH,YAAY9kH,KACbizB,EAASxZ,OAAO,SAAC5Y,GAAC,OAAKA,EAAE4mC,UAAU,GAAEluB,IAAI,SAAC1Y,GAAC,OAAKA,EAAE6N,QAAQ,GAElE,IAAC,EACD1Q,EAAAmyB,aAAY,IAGRnxB,EAAAomH,iBAAgB7tG,EAAA+I,eAAc,CAClCthB,EAAK25C,UACL35C,EAAKwlH,QACLxlH,EAAKylH,UACLzlH,EAAK8lH,YACL9lH,EAAK0lH,eACL1lH,EAAKgsC,cACLhsC,EAAKi8B,WACNt6B,QACC3C,EAAAgxB,cAAa,KAAE,EACfhxB,EAAAub,KAAG,eAAA8W,EAAAhxB,EACC,SAAAixB,GAAA,IAAAK,EAAAnQ,EAAA8P,EAAA,GACIoB,EAAKf,EAAA,GACL00F,EAAM10F,EAAA,GACN20F,EAAQ30F,EAAA,GACR8W,EAAU9W,EAAA,GACV40F,GAAK50F,EAAA,GACLya,EAAYza,EAAA,UAAArxB,IAAAC,KAAA,SAAAC,IAAA,IAAAiV,GAAAqgB,GAAAD,GAAAG,GAAA,OAAA11B,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAEZhB,SAAK2lH,UAAY,GAAG1hH,EAAAjD,KAAA,EACAhB,EAAKwY,OAAO/C,MAAM9T,QAAK3C,EAAA2b,MAAK,IAAI7Y,YAAW,OAAzD2T,GAAKxR,EAAAvB,KAAAozB,GAAAC,EACoBrD,GAAKzuB,EAAAlD,KAAA,EAAAi1B,GAAA11B,IAAAC,KAAA,SAAAy1B,KAAA,IAAAmH,GAAAqpF,GAAAx0G,GAAA+6B,GAAA05E,GAAAC,GAAAC,GAAAC,GAAAj6E,GAAA,OAAArsC,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAvBgR,IAAuBw0G,GAAA3wF,GAAAz1B,OAAvB4R,GAAI+6B,GAAQy5E,GAARz5E,SACP05E,GAAUJ,EAAO7lF,KAAK,SAAC3P,IAAC,OAAK7e,KAAO6e,EAAC,GACrC61F,GAAeJ,EAAS9lF,KAAK,SAAC3P,IAAC,OAAK7e,KAAO6e,EAAC,GAC5C81F,GAAYJ,GAAM/lF,KAAK,SAAC3P,IAAC,OAAK7e,KAAO6e,EAAC,GACtC+1F,GACFn+E,EAAWjI,KAAK,SAAC3P,IAAC,OAAK7e,KAAO6e,EAAC,IAC9B41F,IACGzmH,EAAKJ,UAAUuE,IAAG,yBACpBwoC,GAWL,QAXkBxP,MAAGj+B,EAAA0tC,kBAClB,CACIr8B,KAAMyI,KAAK8W,MACXtf,SAAU,GACV0C,QAAMhU,EAAAmG,eACNyrB,SAAU,CACN9e,MACAM,MAAO,CAACmD,GAAMjD,UAAWiD,GAAMzD,MAGvCo6B,UACH,IAAAjP,QAAA,EAXqBA,GAWnB0P,OACH7sC,EAAK2lH,UAAU3zG,IACX+6B,KAAaJ,GACN85E,IAAYC,IAAiBE,GAIzBF,IAAiBE,GAElB,OADA,UAJAD,GACI,gBACA,OAIR,eAAe,wBAAA7lH,GAAAwC,OAAA,EAAA0yB,GAAA,GAAAF,GAAAlO,IAAA,WAAAiO,GAAAC,GAAAI,KAAAC,KAAA,CAAAlyB,EAAAjD,KAAA,gBAAAiD,EAAAuuC,cAAAxc,KAAA,iBAAA/xB,EAAAjD,KAAA,gBAAAiD,EAAAjD,KAAA,iBAAAiD,EAAAlD,KAAA,GAAAkD,EAAAysC,GAAAzsC,EAAAjB,MAAA,GAAA8yB,GAAA1S,EAAAnf,EAAAysC,IAAA,QAAAzsC,SAAAlD,KAAA,GAAA+0B,GAAAM,IAAAnyB,EAAAgiD,OAAA,YAE7BjmD,EAAK6mH,aAAan0F,GAAO,yBAAAzuB,EAAAX,OAAA,EAAA9C,EAAA,sBAnCbF,EAmCa,GAC5B,gBAAAsb,GAAA,OAAAyV,EAAA7tB,MAAA5E,KAAA6E,UAAA,EA3CF,KAuDHzD,EAAKs9E,OAAOt9E,CAChB,CAACtB,SAAA4mH,EAAA,EAAAnlH,IAAA,OAAAC,OAAAs8E,EAAAr8E,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,IAAAJ,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EACGpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC7DlD,KAAK0S,WAAW,CACZw1G,gBACoD,IAAhDloH,KAAKgB,UAAUuE,IAAI,2BAE3BvF,KAAK4S,aAAa,WAAY5S,KAAKsnH,cAAcx0G,aACjD9S,KAAK4S,aAAa,OAAQ5S,KAAKonH,MAAMt0G,aACrC9S,KAAK4S,aAAa,gBAAiB5S,KAAKotC,cAAct6B,aACtD9S,KAAK4S,aAAa,UAAW5S,KAAKwnH,cAAc10G,aAChD9S,KAAK4S,aACD,QACA5S,KAAK+6C,UAAUjoC,UAAU,SAACghB,GAAK,OAAK/uB,EAAKkjH,aAAan0F,EAAM,IAC9D,wBAAA1tB,EAAA1B,OAAA,EAAAS,EAAAnF,KAAA,IACL,SAAA0+E,IAAA,OAAAZ,EAAAl5E,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,aAAAC,MAEM,SAAWmhB,GACd3iB,KAAKq9B,SAASj7B,KAAI2sB,IAAA,GAAM/uB,KAAKq9B,SAASzkB,YAAe+J,GACzD,GAAC,CAAAphB,IAAA,uBAAAC,MAEM,SAAAkyB,EAEHa,GAAiB,IAAApuB,EAAAnG,KADfwB,EAAKkyB,EAALlyB,MAGI2mH,GAAW3mH,GAAS,IAAIqa,OAC1B,SAACwH,GAAC,OAAM,CAAC,OAAQ,WAAWxd,SAASwd,EAAE1d,SAAS,GAE9CmuB,GAAStyB,GAAS,IAAIqa,OACxB,SAACwH,GAAC,MACiB,SAAfA,EAAE1d,UACc,YAAf0d,EAAE1d,UAAqC,SAAX0d,EAAE1Q,IAAgB,IAE1C3S,KAAKq9B,SAASzkB,WAAWjH,MAAQyI,KAAK8W,SAE/Cvf,EAAQ8e,EAAA4C,UAASjZ,KAAK8W,OAAOgE,YAC5Bl1B,KAAKq9B,SAASzkB,WAAW2uG,UAE1BvnH,KAAK4mH,QAAQxkH,KACT0xB,EACKjY,OAAO,SAACwH,GAAC,MAAoB,YAAfA,EAAE1d,QAAsB,GACtCgW,IAAI,SAAC0H,GAAC,OAAKA,EAAE9P,QAAU8P,EAAEvS,QAAQ,IAE1C9Q,KAAKknH,YAAY9kH,KACb0xB,EACKjY,OAAO,SAACwH,GAAC,MAAoB,YAAfA,EAAE1d,UAA0B0d,EAAEwmB,UAAU,GACtDluB,IAAI,SAAC0H,GAAC,OAAKA,EAAE9P,QAAU8P,EAAEvS,QAAQ,IAE1C9Q,KAAK6mH,UAAUzkH,KACX0xB,EACKjY,OAAO,SAACwH,GAAC,OAAKA,EAAE+kG,WAAW,GAC3BzsG,IAAI,SAAC0H,GAAC,OAAKA,EAAE9P,QAAU8P,EAAEvS,QAAQ,IAE1C9Q,KAAK8mH,eAAe1kH,KAChB0xB,EACKjY,OAAO,SAACwH,GAAC,OAAKA,EAAEglG,aAAa,GAC7B1sG,IAAI,SAAC0H,GAAC,OAAKA,EAAE9P,QAAU8P,EAAEvS,QAAQ,KAG9C,IACwBmrB,EADlBqmD,EAActiF,KAAKgB,UAAUuE,IAAI,uBAAyB,GAAG22B,EAAA/E,EAChDrD,GAAK,IAAxB,IAAAoI,EAAAlT,MAAAiT,EAAAC,EAAA5E,KAAAC,MAA0B,KAAftkB,EAAIgpB,EAAAz6B,MACXxB,KAAKgnH,OAAO/zG,EAAKM,QAAUN,EAAKnC,UAAYmC,EAAKq1G,WACjDtoH,KAAKinH,aAAah0G,EAAKM,QAAUN,EAAKnC,UAClCwxE,EAAYrvE,EAAK+9B,aAAe,GACvC,OAAAhnB,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAA1E,GAAA,CACDx3B,KAAKuoH,eAAeJ,EAAS5zF,GAC7Bv0B,KAAKyD,QAAQ,SAAU,kBAAM0C,EAAKw/D,cAAc,EAAE,IACtD,GAAC,CAAApkE,IAAA,eAAAC,MAEO,WACJ,IAAMojB,EAAY,GACZw9B,EAAUpiD,KAAKgB,UAAUuE,IAAI,uBAAyB,GAC5D,QAAW47C,KAAWnhD,KAAK+mH,UAClB/mH,KAAK+mH,UAAU5lE,KACpBv8B,EAAS,IAAA5gB,OAAKm9C,IAAa,CACvBkB,KACID,EAAO,QAAAp+C,OAAShE,KAAK+mH,UAAU5lE,MAC/BiB,EAAO,GAAAp+C,OAAIhE,KAAK+mH,UAAU5lE,MAC1BI,EAAAe,gBAAe,GAAAt+C,OAAIhE,KAAK+mH,UAAU5lE,OAG9CnhD,KAAK4Z,OAAO4uG,UAAU,QAAS5jG,EACnC,GAAC,CAAArjB,IAAA,iBAAAC,MAEO,SAAe2mH,EAAgC5zF,GACnD,IAC4BosC,EADtB5tD,EAAO,GAAG6tD,EAAAzpC,EACKgxF,GAAO,IAA5B,IAAAvnD,EAAA53C,MAAA23C,EAAAC,EAAAtpC,KAAAC,MAA8B,KAAAkxF,EAAAC,EAAnBC,EAAMhoD,EAAAn/D,MACPs1C,EAAI6xE,EAAO7xE,EAAI6xE,EAAOC,UACtB7xE,EAAI4xE,EAAO5xE,EAAI4xE,EAAOE,WAC5B91G,EAAKqjB,KAAK,CACN+wE,SAAQ,gBAAAnjG,OAAkB8yC,EAAC,KAAA9yC,OAAI+yC,GAC/BpxC,SAAU,CACNmxC,EAA0B,QAAvB2xE,EAAAE,EAAOG,wBAAgB,IAAAL,GAAvBA,EAAyB5iH,SAAS,SAAW,EAAIixC,EAAIA,EACxDC,EAA0B,QAAvB2xE,EAAAC,EAAOG,wBAAgB,IAAAJ,GAAvBA,EAAyB7iH,SAAS,UAAY,EAAIkxC,EAAIA,GAE7D5vB,QAASs/F,EAAAsC,2BACT1hG,QAAS,GACT3kB,KAAIqsB,IAAA,GAAO45F,GAAM,IAAEzvG,OAAQqb,MAElC,OAAAvK,GAAA42C,EAAAp8C,EAAAwF,EAAA,SAAA42C,EAAAppC,GAAA,CACDx3B,KAAK4Z,OAAOovG,YAAY,UAAWj2G,EACvC,GAAC,CAAAxR,IAAA,eAAAC,MAEO,SAAasyB,GAAa,IAINm1F,EAJMliH,EAAA/G,KACxB+S,EAAO,GACP+uC,EAAU,GACVn/B,EAAU3iB,KAAKq9B,SAASzkB,WAAWswG,EAAA/xF,EACtBrD,GAAK,QAAAsS,EAAA,WAAE,IAAfnzB,EAAIg2G,EAAAznH,MAiBX,GAhBAuR,EAAKqjB,KAAK,CACN+wE,SAAQ,cAAAnjG,OAAgBiP,EAAKM,QAAUN,EAAKG,IAC5CzN,SAAUsN,EAAKG,GACf+T,QAASq6B,EAAAO,yBACTC,WAAW,EACXC,UAAU,EACVv/C,KAAM,CACF0Q,GAAIH,EAAKM,QAAUN,EAAKG,GACxBG,OAAQN,EAAKK,KACbA,KAAML,EAAKK,MAAQL,EAAKM,OACxBoZ,KAAM5lB,EAAKigH,OAAO/zG,EAAKM,SAAWN,EAAKq1G,WACvCjhF,OAAQtgC,EAAKggH,UAAU9zG,EAAKM,QAC5By9B,WAAYjqC,EAAKkgH,aAAah0G,EAAKM,SAAW,IAElD8T,QAAS,MAERpU,EAAKk7B,SAAQ,SAClB,IAAMg7E,EAAO,eAAAxkF,EAAAljC,EAAAC,IAAAC,KAAG,SAAAsE,KAAA,IAAAmjH,EAAAC,EAAAC,GAAAC,GAAAr2G,GAAAC,GAAAygB,GAAA41F,EAAA73G,GAAAC,GAAA+a,GAAAkY,GAAA,OAAAnjC,IAAAO,KAAA,SAAA+E,IAAA,cAAAA,GAAA7E,KAAA6E,GAAA5E,MAAA,UACoB,SAA5B2E,EAAKggH,UAAU9zG,EAAKG,IAAc,CAAApM,GAAA5E,KAAA,eAAA4E,GAAAzD,OAAA,YAC3BjD,EAAAkU,aAAW,GAAAxQ,OACXiP,EAAKK,MAAQ,OAAM,mCACzB,UAGU,QAAX81G,EAAAn2G,EAAK8tB,cAAM,IAAAqoF,IAAXA,EAAankH,QACZgO,EAAK8tB,OAAO3R,KAAK,SAACnsB,IAAC,SAAK3C,EAAAmG,eAAcs6B,OAAOl7B,SAAS5C,GAAE,GAAC,CAAA+D,GAAA5E,KAAA,eAAA4E,GAAAzD,OAAA,YAEnDjD,EAAAkU,aAAW,+BAAAxQ,OACiBiP,EAAKK,KAAI,OAC3C,OAELvM,SAAK4/G,UAAUv+F,UACfrhB,EAAK4/G,UAAUj0G,WAAW,CAAEC,KAAM,SAC9BgQ,EAAQhR,OACR5K,EAAK4/G,UAAUr2G,KAAKe,WAAW,CAC3BM,KAAMgR,EAAQhR,OAElB5K,EAAK4/G,UAAUr2G,KAAKe,WAAW,CAC3Bkf,UAAW5N,EAAQ4N,WAE1BvpB,GAAA5E,KAAA,EACoC2E,EAAK0iH,gBACtC1iH,EAAK4/G,UAAUr2G,KAAK9O,MAAMmQ,KAC1B5K,EAAK4/G,UAAUr2G,KAAK9O,MAAMoQ,SACM,QADEy3G,EACV,QADUC,GAClCviH,EAAKs2B,SAASzkB,kBAAU,IAAA0wG,QAAA,EAAxBA,GAA0BI,cAAM,IAAAL,KAChCp2G,GACH,OAAAu2G,OALK73G,IAKL63G,EAAAxiH,GAAAlD,MALK6N,KAAMC,GAAQ43G,EAAR53G,SAMZ+a,IANsBA,GAAI68F,EAAJ78F,OAMPhK,EAAQrO,SAAQhU,EAAAmG,eACzBo+B,GAAiB,QAAP0kF,GAAG58F,UAAI,IAAA48F,QAAA,EAAJA,GAAM5iH,MACzBI,EAAK4/G,UAAUr2G,KAAKe,WAAW,CAC3BuF,UAAW,CAAC3D,GACZnC,SAAUmC,EAAKG,GACfC,WAAYJ,EAAKK,KACjB3B,QACAC,SAAU+Q,EAAQ4N,QAAU,IAAU3e,GACtC2B,OAAQN,GAAMM,QAAUN,GAAMG,GAC9BI,YAAaP,EAAKK,KAClBqZ,QACAkY,cACApxB,aAAc,OACdC,MAAOT,EAAKU,KACN,CAAU,QAAVT,GAACD,EAAKU,YAAI,IAAAT,QAAA,EAATA,GAAWU,UAAoB,QAAXT,GAAEF,EAAKU,YAAI,IAAAR,QAAA,EAATA,GAAWC,IAClC,KACPpM,GAAA5E,KAAA,GACG2E,EAAK4/G,UAAUn2G,cAAapM,MAAO,SAACogB,IACtCniB,cAAQO,IAAI4hB,KAAC,EACblkB,EAAAkU,aAAW,uBAAAxQ,OACgBiP,EAAKK,MAAQL,EAAKG,GAAE,MAAApP,OACvCwgB,GAAEu1B,SAAWv1B,GAAEze,OAASye,KAG1BA,EACV,GAAE,QACFzd,EAAKigH,OAAO/zG,EAAKM,QACgB,QADTqgB,GACpBjR,EAAQrO,SAAQhU,EAAAmG,sBAAa,IAAAmtB,QAAA,EADNA,GAExBtgB,QACHhT,EAAAirC,eAAa,4BAAAvnC,OACmBiP,EAAKK,MAAQL,EAAKG,KAChD,yBAAApM,GAAAtC,OAAA,EAAAuB,GAAA,IACL,kBA9DY,OAAA0+B,EAAA//B,MAAA5E,KAAA6E,UAAA,KA+Dbi9C,EAAQ1rB,KAAK,CACThjB,GAAIH,EAAKG,GACTqT,OAAQ,QACRkjG,SAAU,GACVjjG,SAAUyiG,IAEdrnE,EAAQ1rB,KAAK,CACThjB,GAAIH,EAAKG,GACTqT,OAAQ,WACRkjG,SAAU,GACVjjG,SAAUyiG,KA3FlB,IAAAD,EAAAlgG,MAAAigG,EAAAC,EAAA5xF,KAAAC,MAAA6O,GA6FC,OAAApc,GAAAk/F,EAAA1kG,EAAAwF,EAAA,SAAAk/F,EAAA1xF,GAAA,CACDx3B,KAAK4Z,OAAOgwG,WACR,QACA5pH,KAAKq9B,SAASzkB,WAAWsvG,eAAiBpmE,EAAU,IAExD9hD,KAAK4Z,OAAOovG,YAAY,QAASj2G,GACjC/S,KAAKyD,QAAQ,SAAU,kBAAMsD,EAAK4+D,cAAc,EAAE,IACtD,GAAC,CAAApkE,IAAA,kBAAAC,MAAA,eAAAqoH,EAAApoH,EAEO,SACJkQ,EACAC,GAAgB,IAAA6gC,EAAAzyC,KAChBsU,EAAAzP,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACAqtB,EAAArtB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,KAAI,OAAAnD,IAAAC,KAAA,SAAAmF,IAAA,IAAA6lB,EAAAm9F,EAAAzxG,EAAApB,EAAA,OAAAvV,IAAAO,KAAA,SAAA6wC,IAAA,cAAAA,GAAA3wC,KAAA2wC,GAAA1wC,MAAA,OAEN,GAAXuqB,EAAO,MACL8lB,EAAKzxC,UAAUuE,IAAI,gCAA+B,CAAAutC,GAAA1wC,KAAA,SAC9C0nH,YAAQr5F,EAAA4C,aACV5C,EAAAkvB,SACIvlC,KAAK8W,MACLuhB,EAAKzxC,UAAUuE,IAAI,+BAAiC,KAGtD8S,EAAMo6B,EAAKx6B,QAAQrD,KAAK4xG,EAAAuD,0BAA2B,CACrDrnH,KAAM,CAAEiP,OAAMC,WAAUk4G,QAAOx1G,OAAM4d,cACvC4gB,GAAA1wC,KAAA,EACoBiW,EAAII,cAAcvV,YAAW,OAAtC,GAAP+T,EAAO67B,GAAAhvC,KACD,CAAAgvC,GAAA1wC,KAAA,aAAQ,iBAAgB,OACpCuP,EAAOsF,EAAQtF,KACfC,EAAWqF,EAAQrF,SACnB+a,EAAO1V,EAAQ0V,KAAK,eAAAmmB,GAAAvvC,OAAA,SAEjB,CAAEoO,OAAMC,WAAU+a,SAAM,yBAAAmmB,GAAApuC,OAAA,EAAAoC,EAAA,EAnBVpF,EAmBU,GAClC,gBAAA+nH,EAAAnzF,EAAAiQ,GAAA,OAAAsjF,EAAAjlH,MAAA5E,KAAA6E,UAAA,EA1BA,MA0BA6hH,CAAA,CArY4B,CAAQpmH,EAAA8H,cAAYxI,SAAxC8mH,0CAAmBr+G,EAAAgV,mBAAA9U,EAAA+9F,qBAAAj+F,EAAAgV,mBAAA5U,EAAAC,qBAAAL,EAAAgV,mBAAA1U,EAAAH,iBAAAH,EAAAgV,mBAAAxU,EAAA8H,oBAAAtI,EAAAgV,mBAAA0H,EAAAhM,WAAA,qDAAnB2tG,EAAmBppG,QAAnBopG,EAAmBnpG,YAAnBmpG,CAAoB,oQCtDjC7oH,EAAA,WACAwC,EAAAxC,EAAA,OACA4yB,EAAA5yB,EAAA,OAGAyC,EAAAzC,EAAA,OAEAs1F,EAAAt1F,EAAA,yGAsDoBwK,EAAA8E,yBAAA,SAAA9E,CAGC,WACGA,EAAAulB,iBAAA,MAAgBvlB,EAAA+E,yBAAS/E,EAAAgF,iBAAA,GAC7BhF,EAAA+E,kEAD6B/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAmE,EAAAs4G,IAAA,+BAI7B3hH,EAAA8E,yBAAA,SAAA9E,CAMC,WACGA,EAAAulB,iBAAA,MAAyBvlB,EAAA+E,yBAAS/E,EAAAgF,iBAAA,GACtChF,EAAA+E,kEADsC/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA2D,EAAA+4G,aAAA,+BAEtC5hH,EAAA8E,yBAAA,SAAA9E,CAAgD,WAC5CA,EAAAulB,iBAAA,MAAevlB,EAAA+E,yBAAS/E,EAAAgF,iBAAA,GAC5BhF,EAAA+E,kEAD4B/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAkJ,EAAAyzG,GAAA,+BAE5B7hH,EAAA8E,yBAAA,SAAA9E,CAAsD,WAClDA,EAAAulB,iBAAA,MAAiBvlB,EAAA+E,yBAAS/E,EAAAgF,iBAAA,GAC9BhF,EAAA+E,kEAD8B/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAuE,EAAAq4G,KAAA,+BAE9B9hH,EAAA8E,yBAAA,SAAA9E,CAGC,WACGA,EAAAulB,iBAAA,MAAqBvlB,EAAA+E,yBACrB/E,EAAAgF,iBAAA,GACJhF,EAAA+E,kEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAAmU,EAAAiL,KAAA,KAAAjL,EAAAiL,KAAArZ,QAAA,MAAAoO,EAAAiL,KAAA,KAAAjL,EAAAiL,KAAAq+E,WAAAtpF,EAAAspF,SAAA,+BAEJ3iG,EAAA8E,yBAAA,SAAA9E,CAAsD,WAClDA,EAAAulB,iBAAA,MAAiBvlB,EAAA+E,yBAAS/E,EAAAgF,iBAAA,GAC9BhF,EAAA+E,kEAD8B/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA2S,EAAAyM,KAAAha,KAAA,mEAtCtCtK,EAAA8E,yBAAA,WAGI9E,EAAAuI,qBAAA,wBAAAvI,EAAA2I,wBAAAuE,GAAA,IAAAC,EAAAnN,EAAA8I,0BAAA,OAAc9I,EAAA+I,sBAAAoE,EAAA7N,QAAO,GAErBU,EAAAkB,oBAAA,WACAlB,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAq4G,EAAA,WAMA/hH,EAAA8E,yBAAA,MAAA9E,CAAG,WAAAA,EAAAulB,iBAAA,MAAqBvlB,EAAA+E,yBAAS/E,EAAAgF,iBAAA,GAAehF,EAAA+E,yBAChD/E,EAAA8E,yBAAA,MAAA9E,CAAG,WAAAA,EAAAulB,iBAAA,OAAsBvlB,EAAA+E,yBAAS/E,EAAAgF,iBAAA,IAAehF,EAAA+E,yBACjD/E,EAAA0J,qBAAA,GAAAs4G,EAAA,WAAAhiH,CAQI,GAAAiiH,EAAA,WARJjiH,CAQI,GAAAkiH,EAAA,WARJliH,CAQI,GAAAmiH,EAAA,WARJniH,CAQI,GAAAoiH,EAAA,YAiBRpiH,EAAA+E,wBAAA/E,6CA/BSA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAAo0G,MAAAp0G,EAAA80G,YAAA7kH,SAAA,QAI4BwC,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAA+0G,SAAA,KACCtiH,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAA03F,UAAA,IAG7BjlG,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAAq0G,eAAAr0G,EAAA80G,YAAA7kH,SAAA,iBAOEwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAAs0G,KAAAt0G,EAAA80G,YAAA7kH,SAAA,OAGEwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAAu0G,OAAAv0G,EAAA80G,YAAA7kH,SAAA,SAKJwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAAo1F,WAAAp1F,EAAA80G,YAAA7kH,SAAA,aAKIwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAA+W,OAAA/W,EAAA80G,YAAA7kH,SAAA,UArE7B,IAAM+kH,EAAQ,GAEdjrH,6BAgGwC,eAAAC,EAA3BmpH,EAA2B,SAAApoH,GAAAC,EAAAmoH,EAAApoH,GAAA,IAiFnCkqH,EAjFmC/pH,EAAAC,EAAAgoH,GAwDpC,SAAAA,EACsCnd,EAC1B5qG,EACAitF,GAAiC,IAAA68B,EAAA1pH,EAAArB,SAAAC,KAAA+oH,IAEzC3nH,EAAAN,EAAAO,KAAArB,OAJkC4rG,WAC1BxqG,EAAAJ,YACAI,EAAA6sF,WAzDL7sF,EAAA4pG,SAAW,GAEF5pG,EAAAurB,KAAOvrB,EAAKwqG,SAASj/E,KAErBvrB,EAAA4oH,IAAM5oH,EAAKwqG,SAASoe,IAEpB5oH,EAAA6oH,aAAe7oH,EAAKwqG,SAASqe,aAE7B7oH,EAAA8oH,GAAK9oH,EAAKwqG,SAASse,GAEnB9oH,EAAA+oH,KAAO/oH,EAAKwqG,SAASue,KAErB/oH,EAAAupH,SAAiC,QAAzBG,EAAG1pH,EAAKwqG,SAAS+e,gBAAQ,IAAAG,OAAA,EAAtBA,EAAwB3tB,QAAQ,GAE3C/7F,EAAA2pH,SAAW3pH,EAAKwqG,SAASmf,UAAY3pH,EAAK4pH,eAEnD5pH,EAAAkmB,KAAO,EAAElmB,CA4ChB,CAACtB,SAAAipH,EAAA,EAAAxnH,IAAA,cAAAgE,IA1CD,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,mCAAqCqlH,CACnE,GAEA,CAAArpH,IAAA,YAAAgE,IACA,WACI,SAAOkrB,EAAAk9E,qBAAqD,KAAhC3tG,KAAK4rG,SAAS0B,WAAa,GAAW,CAC9D2d,WAAW,GAEnB,GAKA,CAAA1pH,IAAA,WAAAgE,IACA,WACI,OAAgC,IAAzBvF,KAAK4rG,SAAS+e,SAAiB3qH,KAAKsnB,IAC/C,GAAC,CAAA/lB,IAAA,WAAAgE,IAED,WACI,OAAO4jC,KAAK6L,OACRvkB,EAAAwkB,qBACqC,KAAhCj1C,KAAK4rG,SAAS0B,WAAa,GAC5B,IAAIlzF,MAGhB,GAAC,CAAA7Y,IAAA,iBAAAgE,IAED,WACI,OAAOvF,KAAKkpF,SAAW,GACjB,UACAlpF,KAAKkpF,SAAW,GAChB,UACA,SACV,GAAC,CAAA3nF,IAAA,WAAAC,MAUM,WAA0B,IAAAuD,EAAA/E,KAAjBgmH,EAAAnhH,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACxBmhH,EAAQ,IACZv5C,WAAW,WAAK,IAAAy+C,EACNtwD,EACuC,QADjCswD,EACRnmH,EAAKkpF,SAAS7B,cAAc85B,qBAAa,IAAAgF,OAAA,EAAzCA,EAA2ChF,cAC/C,IAAKtrD,EAAQ,OAAO71D,EAAKJ,WAAWqhH,GACpC,IAAM7uE,IACCgvE,SAASvrD,EAAO1jB,MAAME,IAAK,IAAM,IADlCD,IAECgvE,SAASvrD,EAAO1jB,MAAMkvE,KAAM,IAAM,IAEzCrhH,EAAKk1F,MAAQ9iD,KAAc,GAAM,SAAW,MAC5CpyC,EAAKi1F,MAAQ7iD,KAAc,GAAM,MAAQ,QACzCpyC,EAAK6N,aACD,OACA7N,EAAK6mG,SAAS5D,MAAMl1F,UAAU,SAAC7P,GAAC,OAAM8B,EAAKuiB,KAAOrkB,CAAC,GAE3D,EAAG,IACP,GAAC,CAAA1B,IAAA,WAAAC,OAAAqpH,EAAAppH,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAA4yB,EAAAvd,EAAA,OAAAvV,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACCpC,KAAKgrG,SAAQ,CAAA9oG,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAC8C,GAAzDixB,KAAMn0B,EAAAwxB,WAAU7xB,KAAK4rG,SAAS1yF,OAAQ,oBACpC,CAAAhX,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBACR,OAAAvD,KAAKgrG,SAAW,aAAa9oG,EAAAE,KAAA,EACPoyB,EACjBC,QAAQ,qBAAsB,CAACz0B,KAAKgqH,MAAK5lH,MACnC,SAACnB,GAAC,OAAK,IAAI,GAAC,OACvBjD,KAAKgrG,UAHC/zF,EAAO/U,EAAA4B,OAIEmT,EAAQk0G,YAAcl0G,EAAQk0G,YAAc,GAAG,yBAAAjpH,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACjE,SAAAorH,IAAA,OAAAP,EAAAjmH,MAAA5E,KAAA6E,UAAA,MAAAkkH,CAAA,CA7FmC,CAAQzoH,EAAA8H,cAAYxI,SAA/CmpH,0CAA0B1gH,EAAAC,4BAyDvB6qF,EAAA7iC,kBAAgBjoD,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAD,EAAAqkF,YAAA,kDAzDnBq8B,EAA0BhgH,UAAA,gCAAAC,SAAA,CAAAX,EAAAY,sCAAA8V,MAAAtN,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,8qBArDJsiB,UAAAC,MAAAC,EAAA,0FACAF,UAAAG,MAAAD,EAAA,wNAHCF,UAAAI,MAAAF,EAAA,iGAWAF,UAAAM,MAAAJ,EAAA,wGAGAF,UAAAO,MAAAL,EAAA,gGAGAF,UAAA0rB,MAAAxrB,EAAA,sGAMAF,UAAAowB,MAAAlwB,EAAA,qGAIAF,UAAAqwB,MAAAnwB,EAAA,wHAjE5BrnB,EAAAkB,oBAAA,UAAAlB,CAIO,UAJPA,CAIO,aAWPA,EAAA8E,yBAAA,WAOI9E,EAAAuI,qBAAA,+BAActH,EAAA8hH,UAAU,GAE3B/iH,EAAA+E,yBAED/E,EAAA0J,qBAAA,EAAAs5G,EAAA,0BAAAhjH,EAAAqd,yEAvBIrd,EAAAijH,qBAAA,WAAAhiH,EAAAiiH,SAAA,aAAAjiH,EAAAiiH,SAAA,MAUAljH,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,mBAAA7+C,EAAAyhH,UAIA1iH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA+W,EAAAvf,CAA0B,cAA1BA,CAA0B,YAAAiB,EAAA0wF,MAA1B3xF,CAA0B,YAAAiB,EAAA2wF,MAA1B5xF,CAA0B,0aA4EzB0gH,CAA2B,2KCxHxClrH,EAAA,WACAK,EAAAL,EAAA,OAEA2tH,EAAA3tH,EAAA,UACAA,EAAA,gEA4BYwK,EAAA8E,yBAAA,UAAA9E,CASC,UAC2BA,EAAAgF,iBAAA,GAAehF,EAAA+E,yBACvC/E,EAAA8E,yBAAA,SACI9E,EAAAgF,iBAAA,GAEJhF,EAAA+E,wBAAA/E,2CAXAA,EAAAgiF,qBAAA,4EAAAl4E,EAAA6nF,MAAA,IAAA7nF,EAAA8nF,OADA5xF,EAAAwI,qBAAA,KAAAsB,EAAAoB,QAQwBlL,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAAs2C,KAAAn1C,MAEpBjL,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAAvN,EAAAs5G,aAAA,sBAAAt5G,EAAAs2C,KAAAt0B,QAAAlvB,QAAA,QA/BpBtF,iCAuC2C,eAAAC,EAA9BisD,EAA8B,WAMvC,SAAAA,EACsC+/C,EAC1B3d,EACAh2E,GAAkBlY,EAAAC,KAAA6rD,GAFQ7rD,KAAA4rG,WAC1B5rG,KAAAiuF,WACAjuF,KAAAiY,UARLjY,KAAAyoD,KAAmBzoD,KAAK4rG,SAASnjD,KACjCzoD,KAAAyrH,aAAuBzrH,KAAK4rG,SAAS6f,YAQzC,CAAC3rH,SAAA+rD,EAAA,EAAAtqD,IAAA,WAAAC,MAEG,WAA0B,IAAAJ,EAAApB,KAAjBgmH,EAAAnhH,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACxBmhH,EAAQ,IACZv5C,WAAW,WAAK,IAAAw5C,EACNrrD,EACuC,QADjCqrD,EACR7kH,EAAK6sF,SAAS7B,cAAc85B,qBAAa,IAAAD,OAAA,EAAzCA,EAA2CC,cAC/C,IAAKtrD,EAAQ,OAAOx5D,EAAKuD,WAAWqhH,GACpC,IAAM7uE,IACCgvE,SAASvrD,EAAO1jB,MAAME,IAAK,IAAM,IADlCD,IAECgvE,SAASvrD,EAAO1jB,MAAMkvE,KAAM,IAAM,IAEzChlH,EAAK64F,MAAQ9iD,KAAc,GAAM,SAAW,MAC5C/1C,EAAK44F,MAAQ7iD,KAAc,GAAM,QAAU,MAC/C,EAAG,IACP,GAAC,CAAA51C,IAAA,gBAAAC,MAEM,WACHxB,KAAKiY,QAAQrD,KAAK42G,EAAAE,gCAAiC,CAC/ChpH,KAAIqsB,EAAA,GAAO/uB,KAAK4rG,WAExB,KAAC//C,CAAA,CA/BsC,GA+BtCjsD,SA/BQisD,0CAA8BxjD,EAAAC,4BAO3BpK,EAAAoyD,kBAAgBjoD,EAAAC,4BAAAD,EAAAqkF,YAAArkF,EAAAC,4BAAAC,EAAAwQ,WAAA,kDAPnB8yC,EAA8B9iD,UAAA,+BAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,iTAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IApCnChB,EAAA8E,yBAAA,cAEI9E,EAAAuI,qBAAA,0BAAStH,EAAAqiH,eAAe,GAExBtjH,EAAAkB,oBAAA,WAUJlB,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAA65G,EAAA,yBAAAvjH,EAAAqd,yEATQrd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAy1G,EAAAj+G,CAAwB,cAAxBA,CAAwB,qBAAxBA,CAAwB,qBAAxBA,CAAwB,WAAxBA,CAAwB,yDA8B3BwjD,CAA8B,0JCnD3C,IAAAj+C,EAAA/P,EAAA,UACAA,EAAA,6DAWA8B,kCAe4C,eAAAC,EAA/B8rH,EAA+B5rH,EAOxC,SAAA4rH,EAA6CzwE,GAA0Bl7C,EAAAC,KAAA0rH,GAA1B1rH,KAAAi7C,QAN7Bj7C,KAAAyoD,KAAOzoD,KAAKi7C,MAAMwN,KAClBzoD,KAAAm0B,QAAUn0B,KAAKi7C,MAAM9mB,QAAQqI,OAAO,SAAC7gB,EAAK8Z,GACtD9Z,SAAI8Z,EAAEriB,IAAM,OACLuI,CACX,EAAG,GAEuE,GAAC/b,SAPlE8rH,0CAA+BrjH,EAAAC,4BAOpBsF,EAAAivB,iBAAe,kDAP1B6uF,EAA+B3iH,UAAA,gCAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,kJAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAZpChB,EAAA8E,yBAAA,WAAA9E,CAAQ,UAC4BA,EAAAgF,iBAAA,GAAehF,EAAA+E,yBAC/C/E,EAAA8E,yBAAA,aAAA9E,CAA4C,cAC9BA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA8E,yBAAA,YACI9E,EAAAkB,oBAAA,mBACJlB,EAAA+E,gCAPoC/E,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,EAAAm/C,KAAAn1C,MAMnBjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAm/C,KAAApgD,CAAa,cAAAiB,EAAA6qB,+FAKzBu3F,CAA+B,4NC3B5C7tH,EAAA,OACAA,EAAA,OADA,IAEAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,OACA8b,EAAA9b,EAAA,OACAwC,EAAAxC,EAAA,OAEA6tD,GADA7tD,EAAA,MACAA,EAAA,OACA0jD,EAAA1jD,EAAA,4DAEA8B,wBAGmC,eAAAC,EAAtBisH,EAAsB,SAAAlrH,GAAAC,EAAAirH,EAAAlrH,GAAA,IAAAG,EAAAC,EAAA8qH,GAuF/B,SAAAA,EACYl7F,EACAm7F,EACA7qH,EACAD,GAA0B,IAAAI,EAAArB,SAAAC,KAAA6rH,IAElCzqH,EAAAN,EAAAO,KAAArB,OALQ2wB,WACAvvB,EAAA0qH,WACA1qH,EAAAH,OACAG,EAAAJ,YA1FJI,EAAAw4E,QAAU,IAAIjgE,EAAAqB,gBAAgB,IACtB5Z,EAAAgzB,SAAWhzB,EAAKuvB,SAASm8B,kBACzB1rD,EAAAimC,UAAS1tB,EAAA+I,eAAc,CACnCthB,EAAKH,KAAKiX,gBACV9W,EAAK0qH,SAASj1G,QACf9T,QACC3C,EAAAub,KAAI,SAAAzV,GAAa,IAAR4oD,EAAQlsC,EAAA1c,EAAA,GAAL,GACR,IAAK4oD,EAAK,MAAO,GACjB,IAAMi9D,EAAS3qH,EAAKH,KAAK2wB,QAAQ,mBACjC,IAAKm6F,EAAQ,SAAOpyG,EAAAO,IAAG,IACvB,IAAI0X,KAAUvxB,EAAAwxB,WAAUk6F,EAAQ,kBAAkBn6F,QAAQk9B,EAAI17C,IAC9DhS,EAAKwR,aAAY,aAEbgf,EACKG,SACAjf,UAAU,SAACpQ,GAAI,IAAAspH,EAAA,OACZ5qH,EAAKw4E,QAAQx3E,MACL,MAAJM,GAAW,QAAPspH,EAAJtpH,EAAMlB,aAAK,IAAAwqH,OAAA,EAAXA,EAAanwG,OACT,SAAC5Y,GAAC,MAAoB,WAAfA,EAAE0C,QAAqB,KAC7B,GACR,IAGbvE,EAAKwR,aAAa,kBAAmBgf,EAAQS,OACjD,IAGYjxB,EAAA6qH,iBAAgBtyG,EAAA+I,eAAc,CAC1CthB,EAAK0qH,SAASj1G,MACdzV,EAAKuvB,SAASq5B,eACd5oD,EAAKgzB,SACLhzB,EAAKw4E,UACN72E,QACC3C,EAAAub,KAAI,SAAAkH,GAAyC,IAAAC,EAAAF,EAAAC,EAAA,GAAvCisC,EAAGhsC,EAAA,GAAE+mC,EAAY/mC,EAAA,GAAEqR,EAAOrR,EAAA,GAAEukB,EAAMvkB,EAAA,GACpC,IAAKgsC,EAAK,MAAO,GACjB,IAQwB73B,EARlBjuB,EAAW,GACXkjH,EAAa,GACb9pE,EAAUhhD,EAAKJ,UAAUuE,IAAI,uBAAyB,GACtD4mH,KAAQ7rH,EAAA6sC,QACV0c,EACKhuC,OAAO,SAAC5Y,GAAC,OAAKA,EAAE+xB,WAAa85B,EAAI17C,EAAE,GACnCuI,IAAI,SAAC1Y,GAAC,OAAKA,EAAEmQ,EAAE,IACtB8jB,EAAAC,EACiBg1F,GAAK,QAAA/0F,EAAA,WAAE,IAGW6E,GAH1BwsB,EAAIxxB,EAAAz1B,MACL4qH,EAAej4F,EAAQtY,OAAO,SAAC5Y,IAAC,OAAKA,GAAEmwC,UAAYqV,CAAI,GACzDgjE,EAAe,EAAEvvF,EAAA/E,EACAi1F,GAAY,QAAAhmF,EAAA,WAAE,IAAxBtR,GAAMmH,GAAAz6B,MACPimH,GAASpgF,EAAOjY,KAClB,SAACnsB,GAAC,OAAKA,EAAE8xB,YAAcD,GAAO1hB,IAAMnQ,EAAEopH,SAAS,GAEnDZ,GAAgBhE,GAAS,EAAI,GAJjC,IAAAvrF,EAAAlT,MAAAiT,GAAAC,EAAA5E,KAAAC,MAAA6O,GAKC,OAAApc,IAAAkS,EAAA1X,EAAAwF,GAAA,SAAAkS,EAAA1E,GAAA,CACD,IAAM80F,EAAYziE,EAAaz6B,KAAK,SAACnsB,IAAC,OAAKA,GAAEmQ,KAAOq1C,CAAI,GACxDz/C,EAASotB,KAAK,CACVzwB,SAAU2mH,EAAU/4G,OACpB4T,QAASukC,EAAAG,+BACT7J,WAAW,EACXC,UAAU,EACV56B,QAAS,GACT3kB,KAAM,CACF+lD,KAAM6jE,EACNn4F,UACAs3F,eACAc,aAAcH,EAAannH,OAC3BiU,OAAQ9X,EAAKH,KAAK2wB,QAAQ,sBAGlC,IAAM46F,GAAiBf,EAAeW,EAAannH,OAC7CzD,GACFgrH,GAAiB,GACX,OACAA,GAAiB,GACjB,UACA,OACVN,EAAU,IAAAloH,OAAKsoH,EAAU/4G,SAAY,CACjC8uC,KACID,EAAO,WAAAp+C,OAAYxC,MACnB4gD,EAAO,GAAAp+C,OAAIxC,MACX+/C,EAAAe,gBAAe,GAAAt+C,OAAIxC,OAnC/B,IAAA01B,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAAAH,GAqCC,OAAApN,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACDp2B,EAAK0qH,SAAStD,UAAU,UAAW0D,GACnC9qH,EAAK0qH,SAAS9C,YAAY,UAAWhgH,EACzC,IAUA5H,EAAKwR,aACD,QACAxR,EAAK0qH,SAASj1G,MACT9T,QAAK3C,EAAAyb,QAAO,SAAC5Y,GAAC,QAAOA,CAAC,IACtB6P,UAAU,SAAC+D,GAAK,OAAKzV,EAAKuvB,SAAS8uB,SAAS5oC,EAAMzD,GAAG,IAE9DhS,EAAKwR,aAAa,SAAUxR,EAAKimC,OAAOv0B,aACxC1R,EAAKwR,aAAa,gBAAiBxR,EAAK6qH,cAAcn5G,aAAa1R,CACvE,CAAC,OAAAtB,EAAA+rH,EAAA,CAtG8B,CAAQvrH,EAAA8H,cAAYxI,SAA1CisH,0CAAqBxjH,EAAAgV,mBAAA9U,EAAAguB,gBAAAluB,EAAAgV,mBAAA5U,EAAA69F,qBAAAj+F,EAAAgV,mBAAA1U,EAAAD,qBAAAL,EAAAgV,mBAAAxU,EAAAL,iBAAA,qDAArBqjH,EAAqBvuG,QAArBuuG,EAAqBtuG,UAAAC,WAFlB,SAEHquG,CAAsB,wPCbnChuH,EAAA,WACAyC,EAAAzC,EAAA,OACAuC,EAAAvC,EAAA,UAEAA,EAAA,OACAA,EAAA,kIAoBoBwK,EAAA8E,yBAAA,kBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAA47G,GAEApkH,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAk/G,EAAAn3G,cAAAm3G,EAAAn5G,KAAA,mEAlBZjL,EAAA8E,yBAAA,qBAAA9E,CAOC,kBAKOA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAC,GAAA,IAAAC,EAAA7I,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAAF,EAAAuE,YAAA1E,GAAmB,iCAEpC1I,EAAA0J,qBAAA,EAAA26G,EAAA,kDAMJrkH,EAAA+E,wBAAA/E,6CATIA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAxD,EAAA0D,WAIoBxN,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAxD,EAAA4D,sCAqBpB1N,EAAA8E,yBAAA,kBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAA87G,GAEAtkH,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAo/G,EAAAr3G,cAAAq3G,EAAAr5G,KAAA,mEAlBZjL,EAAA8E,yBAAA,oDAQI9E,EAAA8E,yBAAA,kBAII9E,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAA8O,EAAAu/B,SAAA1uC,GAAgB,iCAEjC1I,EAAA0J,qBAAA,EAAA66G,EAAA,kDAMJvkH,EAAA+E,wBAAA/E,+CAhBAA,EAAA+rD,sBAAA,kBAAA/yC,EAAAhZ,EAAAsN,sBAAA,IAAAC,EAAAG,YAAA,KAAAsL,EAAApc,QAAA,GAOIoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAC,EAAAiB,QAIoBxO,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAC,EAAA6M,UAzCxC9iB,6BAkEwC,eAAAC,EAA3BitH,EAA2B,SAAAlsH,GAAAC,EAAAisH,EAAAlsH,GAAA,IAgCnCE,EAhCmCC,EAAAC,EAAA8rH,GAyBpC,SAAAA,EACY5rH,EACA2Y,EACAxJ,EACAs3B,GAAsB,IAAAtmC,EAAArB,SAAAC,KAAA6sH,IAE9BzrH,EAAAN,EAAAO,KAAArB,OALQiB,OACAG,EAAAwY,SACAxY,EAAAgP,UACAhP,EAAAsmC,SA3BItmC,EAAA2U,UAAY3U,EAAKH,KAAKs+C,iBAEtBn+C,EAAAyU,SAAWzU,EAAKH,KAAKiX,gBAErB9W,EAAAqhB,OAASrhB,EAAKH,KAAKu+C,cAEnBp+C,EAAAyV,MAAQzV,EAAKwY,OAAO/C,MAEpBzV,EAAAq+C,SAAW,SAACqP,GACxB1tD,EAAKwY,OAAOovG,YAAY,WAAY,IACpC5nH,EAAKqC,QACD,YACA,kBACIrC,EAAKgP,QAAQK,SAAS,GAAI,CACtBq8G,WAAY1rH,EAAKsmC,OACjBqlF,YAAa,CAAEp5G,KAAMm7C,EAAI17C,KAC3B,EACN,IAER,EAEgBhS,EAAAqU,YAAc,SAACoD,GAAG,OAAMzX,EAAKH,KAAK4U,SAAWgD,CAAG,EAAEzX,CASlE,CAACtB,SAAA+sH,EAAA,EAAAtrH,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAmD,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC7DlD,KAAK4S,aACD,cACA5S,KAAK0nC,OAAOQ,cAAcp1B,UAAU,SAACq1B,GAAM,OACvCA,EAAOE,IAAI,QACLtjC,EAAK6U,OAAO6lC,SAAStX,EAAO5iC,IAAI,SAChC,EAAE,IAEd,wBAAArD,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACL,SAAA2E,IAAA,OAAA9D,EAAA+D,MAAA5E,KAAA6E,UAAA,MAAAgoH,CAAA,CA5CmC,CAAQvsH,EAAA8H,cAAYxI,SAA/CitH,0CAA0BxkH,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAA69F,qBAAAj+F,EAAAC,4BAAAK,EAAAsE,QAAA5E,EAAAC,4BAAAK,EAAA4gC,gBAAA,kDAA1BsjF,EAA0B9jH,UAAA,2BAAAC,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,iXArDNsiB,UAAAC,MAAAC,EAAA,2QAsBAF,UAAAG,MAAAD,EAAA,oKAhCzBrnB,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAi7G,EAAA,sDAsBA3kH,EAAA0J,qBAAA,EAAAk7G,EAAA,sDAsBJ5kH,EAAA+E,gCAvCS/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAAAwQ,EAAAhZ,EAAAsN,sBAAA,IAAArM,EAAAyM,YAAA,KAAAsL,EAAApc,QAAA,GAsBAoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAyN,EAAAjW,EAAAsN,sBAAA,IAAArM,EAAAmZ,SAAA,KAAAnE,EAAArZ,mbAmCJ4nH,CAA2B,uQCzExChvH,EAAA,WACAwC,EAAAxC,EAAA,OAEAuC,EAAAvC,EAAA,OAGAyC,EAAAzC,EAAA,OAMAuX,EAAAvX,EAAA,OAGA+rC,GADA/rC,EAAA,OACAA,EAAA,QACAqvH,EAAArvH,EAAA,OAEA4M,GADA5M,EAAA,OACAA,EAAA,QAEA0jD,GADA1jD,EAAA,OACAA,EAAA,OACAsvH,EAAAtvH,EAAA,OACAuvH,EAAAvvH,EAAA,MACAwvH,EAAAxvH,EAAA,OACAyvH,EAAAzvH,EAAA,UACAA,EAAA,+RAOQwK,EAAA8E,yBAAA,aAKI9E,EAAAuI,qBAAA,sBAAAG,IAAA1I,EAAA2I,wBAAAysC,IAAA,IAAAhnC,GAAApO,EAAA8I,0BAAA,OAAc9I,EAAA+I,sBAAAqF,GAAA82G,WAAAx8G,IAAkB,EAAhC1I,CAAiC,wBAAA0I,IAAA1I,EAAA2I,wBAAAysC,IAAA,IAAA/7B,GAAArZ,EAAA8I,0BAAA,OACjB9I,EAAA+I,sBAAAsQ,GAAA8rG,aAAAz8G,IAAoB,qNAKvC1I,EAAA+E,0EATG/E,EAAAwI,qBAAA,MAAAxI,EAAAsN,sBAAA,IAAAxD,GAAA3E,KAAAnF,CAAmB,cAAAiW,GAAAjW,EAAAsN,sBAAA,IAAAxD,GAAAs7G,YAAA,KAAAnvG,GAAAgJ,KAAnBjf,CAAmB,gBAAAyN,GAAAzN,EAAAsN,sBAAA,KAAAxD,GAAAs7G,YAAA,KAAA33G,GAAA8rC,OAAnBv5C,CAAmB,SAAAA,EAAAsN,sBAAA,KAAAxD,GAAAoV,QAAnBlf,CAAmB,WAAAA,EAAAsN,sBAAA,KAAAxD,GAAAnJ,UAAnBX,CAAmB,UAAAA,EAAAsN,sBAAA,KAAAxD,GAAA2vC,SAAnBz5C,CAAmB,SAAAA,EAAAsN,sBAAA,KAAAxD,GAAAs2F,kGAWvBpgG,EAAAkB,oBAAA,wHAEIlB,EAAAwI,qBAAA,SAAAxI,EAAAsN,sBAAA,IAAAC,GAAA2R,QAAAlf,CAAyB,UAAAA,EAAAsN,sBAAA,IAAAC,GAAAksC,SAAzBz5C,CAAyB,qBAAAA,EAAA++B,0BAAA,EAAA31B,GAAA,oCAO7BpJ,EAAAkB,oBAAA,4FAUIlB,EAAA8E,yBAAA,WAAA9E,CAA4D,yBAKpDA,EAAAuI,qBAAA,yBAAAG,IAAA1I,EAAA2I,wBAAAuE,IAAA,IAAAC,GAAAnN,EAAA8I,wBAAA,UAAiB9I,EAAA+I,sBAAAoE,GAAAk4G,YAAA38G,IAAmB,iCACvC1I,EAAA+E,yBACD/E,EAAA8E,yBAAA,cAAA9E,EAAAulB,iBAAA,MAA0CvlB,EAAA+E,wBAAA/E,kDAHtCA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAAwQ,GAAAhZ,EAAAsN,sBAAA,IAAAuK,GAAAyC,WAAA,MAAAtB,GAAAk3B,SAAAl3B,GAAAk3B,QAAA1yC,SAAA,uCAVZwC,EAAA8E,yBAAA,WAKI9E,EAAAkB,oBAAA,0BACAlB,EAAA0J,qBAAA,EAAA47G,EAAA,aASJtlH,EAAA+E,kEAT8C/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAa,GAAAk8G,wCAgB1CvlH,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,YAIAlB,EAAA8E,yBAAA,YAAqB9E,EAAAgF,iBAAA,GAAahF,EAAA+E,wBAAA/E,6BAF9BA,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,mBAAA0lE,GAAA,IAEiBxlH,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA45G,GAAA,gCAd7BxlH,EAAA8E,yBAAA,WAAA9E,CAIC,WACGA,EAAAulB,iBAAA,MAAwCvlB,EAAA+E,yBACxC/E,EAAA0J,qBAAA,EAAA+7G,GAAA,cAUJzlH,EAAA+E,kEARyB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAK,GAAA4wE,SAvDjC,IAAM8oC,GAAQ,GAEdjrH,0BAoFqC,eAAAC,EAAxBmuH,GAAwB,SAAAptH,IAAAC,EAAAmtH,GAAAptH,IAAA,IA6DhCqtH,GA7DgCltH,GAAAC,EAAAgtH,IA6CjC,SAAAA,GACYn0G,GACAq0G,GACAC,GACAC,GACAC,GACAz9F,GACA+W,GACAt3B,GACA6R,GACAhhB,GACAD,GACA4nB,GACAylG,IAA0B,IAAAjtH,GAAArB,SAAAC,KAAA+tH,KAElC3sH,GAAAN,GAAAO,KAAArB,OAdQ4Z,UACAxY,GAAA6sH,MACA7sH,GAAA8sH,UACA9sH,GAAA+sH,UACA/sH,GAAAgtH,YACAhtH,GAAAuvB,YACAvvB,GAAAsmC,UACAtmC,GAAAgP,WACAhP,GAAA6gB,WACA7gB,GAAAH,QACAG,GAAAJ,aACAI,GAAAwnB,eACAxnB,GAAAitH,SAxDIjtH,GAAAoM,IAAMpM,GAAKwY,OAAO25B,QAElBnyC,GAAAmmB,OAASnmB,GAAKwY,OAAO00G,WAErBltH,GAAAqsH,UAAYrsH,GAAKwY,OAAO20G,cAExBntH,GAAA4H,SAAW5H,GAAKwY,OAAOgK,aAEvBxiB,GAAA0gD,QAAU1gD,GAAKwY,OAAO40G,YAEtBptH,GAAAqnG,OAASrnG,GAAKwY,OAAO60G,WAErBrtH,GAAAuhB,QAAUvhB,GAAKwY,OAAO+I,QAEtBvhB,GAAA24C,QAAU34C,GAAKwY,OAAOmgC,QAEtB34C,GAAAsR,WAAa,SAACwQ,IAAC,OAAK9hB,GAAKwY,OAAOlH,WAAWwQ,GAAE,EAwB7C9hB,GAAAstH,iBACZttH,GAAKitH,MAAMh1C,gBAAgBj4E,EAkB/B,CAACtB,SAAAiuH,GAAA,EAAAxsH,IAAA,cAAAC,OAAAwsH,GAAAvsH,EAAAC,IAAAC,KAzCM,SAAAC,GAAkBiL,IAAgB,IAAA8hH,GAAAhsG,GAAA41B,GAAA,OAAA72C,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,EACfpC,KAAK2iB,QAAQ5f,QAAK3C,EAAA2b,MAAK,IAAI7Y,YAAW,OAAtDyf,GAAOzgB,GAAA4B,KACPy0C,GAAW1rC,IAEI,QAAf8hH,GAAAhsG,GAAQ41B,eAAO,IAAAo2E,QAAA,EAAfA,GAAiB9yG,OACb,SAAC5Y,IAAC,MAAW,UAANA,IAAuB,YAANA,EAAe,KACtC,MAHL3C,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EAAMJ,GAAQ41B,SAAW,IAAE,CAAG,QAAS,aAInDv4C,KAAK0S,WAAW,CAAE6lC,aAAW,wBAAAr2C,GAAAwC,OAAA,EAAA9C,GAAA5B,KAAA,IAChC,SAAA0tH,GAAA1wG,IAAA,OAAAgxG,GAAAppH,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,cAAAgE,IAED,WACI,QAASvF,KAAKgB,UAAUuE,IAAI,0BAChC,GAAC,CAAAhE,IAAA,aAAAgE,IAED,WACI,QAASvF,KAAKgB,UAAUuE,IAAI,yBAChC,GAAC,CAAAhE,IAAA,SAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,uBAAyBqlH,EACvD,GAAC,CAAArpH,IAAA,WAAAC,MAAA,eAAAX,GAAAY,EAAAC,IAAAC,KAuBM,SAAAsE,KAAA,IAAAlB,GAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAmE,IAAA,cAAAA,GAAAjE,KAAAiE,GAAAhE,MAAA,OACH,OAAApC,KAAK4Z,OAAOk1B,QAAQ1oC,GAAAhE,KAAA,EACdpC,KAAKiiB,QAAQnf,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,IAAC,OAAKA,EAAC,IAAGC,YAAW,OAChElD,KAAK0tH,aAAY,GACjB1tH,KAAK4S,aACD,cACA5S,KAAK0nC,OAAOQ,cAAcp1B,UAAS,eAAA5M,GAAAzE,EAAAC,IAAAC,KAAC,SAAAwD,GAAOgjC,IAAM,IAAAxb,GAAA,OAAAjrB,IAAAO,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAML,IALpC+lC,GAAOE,IAAI,UAAYF,GAAOE,IAAI,UAClCtjC,GAAK6U,OAAO6lC,SACRtX,GAAO5iC,IAAI,UAAY4iC,GAAO5iC,IAAI,SAG1CR,GAAK6U,OAAOovG,YAAY,WAAY,KAChC7gF,GAAOE,IAAI,SAAQ,CAAAhjC,GAAAjD,KAAA,QACnB2C,GAAK6pH,YAAYzmF,GAAO5iC,IAAI,UAAUF,GAAAjD,KAAA,oBAC/B+lC,GAAOE,IAAI,QAAO,CAAAhjC,GAAAjD,KAAA,SACqB,IAA1CuqB,GAAO5nB,GAAK/D,UAAUQ,MAAM,iBACnB2mC,GAAO5iC,IAAI,UAAYonB,GAAKhmB,MAAK,CAAAtB,GAAAjD,KAAA,SAC1CuqB,UAAO,KAAKtnB,GAAAjD,KAAA,MACCgT,EAAAy5G,WAAU1mF,GAAO5iC,IAAI,SAASrC,YAAW,QAAtDypB,GAAItnB,GAAAvB,KAAA,WAEH6oB,GAAI,CAAAtnB,GAAAjD,KAAA,gBAAAiD,GAAA9B,OAAA,YACEjD,EAAAkU,aAAW,8BAAAxQ,OACgBmkC,GAAO5iC,IAAI,WAC5C,QACLR,GAAK+pH,WACDniG,cAAgB2U,MAAQ3U,GAAK,GAAKA,IACrCvoB,MAAO,SAACnB,KACL,EAAA3C,EAAAkU,aAAW,oBAAAxQ,OAAqBmkC,GAAO5iC,IAAI,UAC3CR,GAAKqL,QAAQK,SAAS,GAAI,CACtBq8G,WAAY/nH,GAAK2iC,OACjBqlF,YAAa,IAErB,GAAG1nH,GAAAjD,KAAA,iBACI+lC,GAAOE,IAAI,UAClBtjC,GAAKgqH,eACD5mF,GAAO5iC,IAAI,UACX4iC,GAAO5iC,IAAI,SAGfR,GAAKtB,QAAQ,kBAAmB,WAC5BsB,GAAK6U,OAAOovG,YAAY,WAAY,GACxC,GACH,yBAAA3jH,GAAAX,OAAA,EAAAS,GAAA,IACJ,gBAAAmxB,IAAA,OAAApwB,GAAAtB,MAAA5E,KAAA6E,UAAA,EAtCkC,KAuCrC,wBAAAuB,GAAA1B,OAAA,EAAAuB,GAAAjG,KAAA,IACL,gBAAA2E,KAAA,OAAA9D,GAAA+D,MAAA5E,KAAA6E,UAAA,EArEA,IAqEA,CAAAtD,IAAA,aAAAC,MAEM,SAAW8lB,IACdtnB,KAAK4Z,OAAOo1G,aAAa1nG,GAAMtnB,KAAK4Z,OAAO6zG,UAAU7rE,OACzD,GAAC,CAAArgD,IAAA,eAAAC,MAEM,SAAaogD,IAChB5hD,KAAK4Z,OAAOo1G,aAAahvH,KAAK4Z,OAAO6zG,UAAUnmG,KAAMs6B,GACzD,GAAC,CAAArgD,IAAA,iBAAAC,MAEO,SAAe4R,IAAqB,IAAAjN,GAAAnG,KAATsT,GAAIzO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,GAChCoqH,GAAkB77G,GAAGvN,SAAS,KAC9B4nE,GAAQr6D,GAAGxM,MAAM,KACjB4U,GAAe,CACjB2rF,SAAQ,UAAAnjG,OAAYoP,IACpBzN,SAAUspH,GACJ,CAAEn4E,EAAGo4E,WAAWzhD,GAAM,IAAK12B,EAAGm4E,WAAWzhD,GAAM,KAC/Cr6D,GACN+T,QAASyiB,EAAAxiB,gBACTC,QAAS,GACT3kB,KAAM,CAAEq3C,QAASzmC,KAErBtT,KAAKyD,QAAQ,kBAAmB,kBAC5B0C,GAAKyT,OAAOovG,YAAY,WAAY,CAACxtG,IAAS,EAEtD,GAAC,CAAAja,IAAA,cAAAC,MAAA,eAAA2tH,GAAA1tH,EAAAC,IAAAC,KAEO,SAAAmF,GAAkBsM,IAAU,IAAAyhB,GAAArY,GAAAhB,GAAAzU,GAAA/G,KAAA,OAAA0B,IAAAO,KAAA,SAAA+E,IAAA,cAAAA,GAAA7E,KAAA6E,GAAA5E,MAAA,OAAA4E,UAAA5E,KAAA,EACZpC,KAAK4oB,YAAYgB,UAAUxW,IAAG,OAAvC,GAALoJ,GAAKxV,GAAAlD,KACD,CAAAkD,GAAA5E,KAAA,eAAA4E,GAAAzD,OAAA,YAASjD,EAAAkU,aAAY,kCAAgC,OAC/DxU,KAAK4Z,OAAO6lC,SAA2C,QAAnC5qB,GAAC70B,KAAKiB,KAAKkuB,YAAY3S,GAAM9I,cAAM,IAAAmhB,QAAA,EAAlCA,GAAoCzhB,IACnDoI,GAAe,CACjB2rF,SAAQ,UAAAnjG,OAAYwY,GAAMpJ,IAC1BzN,SAAU6W,GAAMjJ,OAChB4T,QAASyiB,EAAAxiB,gBACTC,QAAS,GACT3kB,KAAM,CACFq3C,QAAO,GAAA/1C,OAAKwY,GAAMlH,cAAgBkH,GAAMlJ,KAAI,cAGpDtT,KAAKyD,QAAQ,kBAAmB,kBAC5BsD,GAAK6S,OAAOovG,YAAY,WAAY,CAACxtG,IAAS,GAChD,wBAAAxU,GAAAtC,OAAA,EAAAoC,GAAA9G,KAAA,IACL,gBAAA4uH,GAAAroF,IAAA,OAAA4oF,GAAAvqH,MAAA5E,KAAA6E,UAAA,EAlBA,IAkBA,CAAAtD,IAAA,aAAAC,MAAA,eAAA4tH,GAAA3tH,EAAAC,IAAAC,KAEO,SAAA+wC,GAAiB/lB,IAAU,IAAA0iG,GAAAC,GAAAC,GAAA/6F,GAAAmvE,GAAA6rB,GAAA1G,GAAAttG,GAAAi3B,GAAAzyC,KAAA,OAAA0B,IAAAO,KAAA,SAAA6wC,IAAA,cAAAA,GAAA3wC,KAAA2wC,GAAA1wC,MAAA,OACiC,GAA5DmtH,GAAsBvvH,KAAKiB,KAAK2wB,QAAQ,qBACzB,CAAAkhB,GAAA1wC,KAAA,aACT,uDAAsD,OAChE,MAA8B,iBAAnBmtH,KACPA,GAAiB,CACbh7F,UAAWg7F,GACXz1C,OAAQ,mBACR6vC,SAAU,KAGZn1F,MAAMn0B,EAAAwxB,WAAU09F,GAAeh7F,UAAWg7F,GAAez1C,QAAOhnC,GAAA1wC,KAAA,EAE5DoyB,GAAIC,QAAQ,cAAe,CAC7B9H,GAAKhmB,MACLgmB,GAAKq+E,UAAYr+E,GAAKvZ,KACxB,OAMJ,IAVIuwF,GAAS7wD,GAAAhvC,KAKb6X,IAAI,SAACsW,IAAC,OAAK,IAAI7c,EAAAq6G,YAAYx9F,GAAE,IACrBpV,KACN,SAACgW,GAAGlU,IAAC,OACD4wG,GAAe5F,SAASzzD,QAAQrjC,GAAElgB,MAClC48G,GAAe5F,SAASzzD,QAAQv3C,GAAEhM,KAAK,GAEjC,MAATgxF,OAAW1+F,OAAM,CAAA6tC,GAAA1wC,KAAA,cACZ,kCAAiC,QAE3CpC,KAAK4Z,OAAO6lC,SAAqD,QAA7C4vE,GAACrvH,KAAKiB,KAAKkuB,YAAY,CAAa,QAAbmgG,GAAC3rB,GAAU,UAAE,IAAA2rB,QAAA,EAAZA,GAAcz4G,eAAO,IAAAw4G,QAAA,EAA5CA,GAA8Cj8G,IAC7Do8G,GAAW7rB,GAAU,GAAGxsD,SACtB2xE,GAAqBnlB,GAAU,GAA/BmlB,iBACFttG,GAAe,CACjB2rF,SAAQ,UAAAnjG,OAAY2oB,GAAKvZ,IACzBzN,SAC0B,aAAtBg+F,GAAU,GAAGhxF,KACP,CACImkC,EAAmB,MAAhBgyE,OAAkBjjH,SAAS,SACxB,EAAI2pH,GAAI14E,EACR04E,GAAI14E,EACVC,EAAmB,MAAhB+xE,OAAkBjjH,SAAS,UACxB,EAAI2pH,GAAIz4E,EACRy4E,GAAIz4E,GAEdy4E,GACVroG,QAC0B,aAAtBw8E,GAAU,GAAGhxF,KACPu6G,EAAAzf,mBACA7jE,EAAAxiB,gBACVC,QAAS,GACT3kB,KAAM,CACFq3C,QAAO,GAAA/1C,OAAK2oB,GAAKrZ,KAAI,YACrB+5F,OAAQ1J,GAAU,GAAGgnB,SACrBrd,UAAW3J,GAAU,GAAG2J,YAGhCttG,KAAKyD,QAAQ,kBAAmB,WAC5BgvC,GAAK74B,OAAOovG,YAAY,WAAY,CAACxtG,IACzC,GAAG,yBAAAs3B,GAAApuC,OAAA,EAAAguC,GAAA1yC,KAAA,IACN,gBAAA8uH,GAAAtoF,IAAA,OAAA4oF,GAAAxqH,MAAA5E,KAAA6E,UAAA,EA1DA,MA0DAkpH,EAAA,CAlNgC,CAAQztH,EAAA8H,cAAYxI,SAA5CmuH,6CAAuB1lH,EAAAC,4BAAAC,EAAA+9F,qBAAAj+F,EAAAC,4BAAAG,EAAAinH,sBAAArnH,EAAAC,4BAAAK,EAAA+9G,qBAAAr+G,EAAAC,4BAAAO,EAAA8mH,qBAAAtnH,EAAAC,4BAAAyc,EAAA6qG,uBAAAvnH,EAAAC,4BAAA0c,EAAA6mG,uBAAAxjH,EAAAC,4BAAA4c,EAAAqkB,gBAAAlhC,EAAAC,4BAAA4c,EAAAjY,QAAA5E,EAAAC,4BAAA8c,EAAAN,eAAAzc,EAAAC,4BAAAy4G,EAAAr4G,qBAAAL,EAAAC,4BAAA64G,EAAA34G,iBAAAH,EAAAC,4BAAA84G,EAAAl2G,WAAA7C,EAAAC,4BAAAunH,EAAAv+C,qBAAA,kDAAvBy8C,EAAuBhlH,UAAA,uBAAAC,SAAA,CAAAX,EAAAinB,6BATrB,CACP89F,EAAA1G,oBACAnlE,EAAAmuE,qBACAvC,EAAAwC,oBACAtC,EAAAuC,sBACAtC,EAAAzB,sBACAphH,EAAAS,YACH7C,EAAAY,sCAAAC,MAAA,EAAAC,KAAA,GAAA+D,OAAA,q/BAxCgDsiB,UAAAC,MAAAC,EAAA,uNAQPF,UAAAG,MAAAD,EAAA,6PA/CtCrnB,EAAA0J,qBAAA,EAAA+9G,EAAA,8CAaAznH,EAAA0J,qBAAA,EAAAg+G,GAAA,mDASA1nH,EAAA0J,qBAAA,EAAAi+G,EAAA,6DAIA3nH,EAAA0J,qBAAA,EAAAk+G,GAAA,2CAgBA5nH,EAAA0J,qBAAA,EAAAm+G,GAAA,qBAzCK7nH,EAAAwI,qBAAA,QAAAxI,EAAAsN,sBAAA,IAAArM,GAAAolH,mBAaArmH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAAsN,sBAAA,IAAArM,GAAAolH,mBASArmH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAxI,EAAAsN,sBAAA,IAAArM,GAAAolH,mBAIArmH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAxI,EAAAsN,sBAAA,KAAArM,GAAAolH,mBAiBArmH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAA6mH,aAAA7mH,GAAAw4E,OAAA78E,6XAqCA8oH,EAAwB,qRCjHrC,IAAAztH,EAAAzC,EAAA,OAQAwC,EAAAxC,EAAA,OACA4yB,EAAA5yB,EAAA,OASA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAGAq/B,GADAr/B,EAAA,OACAA,EAAA,QAEA0jD,GADA1jD,EAAA,OACAA,EAAA,OAGA2oH,GAFA3oH,EAAA,OAEAA,EAAA,WACAA,EAAA,wEAaA8B,wBACmC,eAAAC,EAAtBgwH,EAAsB,SAAAjvH,GAAAC,EAAAgvH,EAAAjvH,GAAA,IA4O9BkpH,EA5O8B/oH,EAAAC,EAAA6uH,GA8G/B,SAAAA,EACY3uH,EACA2Y,EACA5Y,EACA2lH,EACA1uG,GAAkB,IAAA7W,EAAArB,SAAAC,KAAA4vH,IAE1BxuH,EAAAN,EAAAO,KAAArB,OANQiB,OACAG,EAAAwY,SACAxY,EAAAJ,YACAI,EAAAulH,YACAvlH,EAAA6W,UAlHJ7W,EAAAi8B,SAAW,IAAI1jB,EAAAqB,gBAAgC,IAC/C5Z,EAAAwvB,MAAQ,IAAIjX,EAAAqB,gBAAwB,GAE5B5Z,EAAAuhB,QAAUvhB,EAAKi8B,SAASliB,eAGxB/Z,EAAAqhB,OAASrhB,EAAKH,KAAKu+C,cAAcz8C,QAC7C3C,EAAAub,KAAI,SAAC8Z,GAAC,OAAKA,EAAE5Z,OAAO,SAAC5Y,GAAC,OAAKA,EAAE8rD,KAAKlpD,SAAS,UAAU,EAAC,IAI1CzE,EAAAqyB,UAAS9Z,EAAA+I,eAAc,CACnCthB,EAAKH,KAAKiX,gBACV9W,EAAKi8B,SACLj8B,EAAKwvB,QACN7tB,QACC3C,EAAAqxB,WAAU,SAAAvrB,GAAA,IAAA6B,EAAA6a,EAAA1c,EAAA,GAAE2S,EAAG9Q,EAAA,GAAE9E,EAAC8E,EAAA,YACdm1B,EAAA5J,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0N,eAAcl7B,EAAE0O,MAAQyI,KAAK8W,QACvDkC,cAAY3C,EAAAyC,gBAAYzC,EAAA2N,aAAYn7B,EAAE0O,MAAQyI,KAAK8W,QACnDve,KAAM,UACNe,MAAOmF,GAAKzF,IACd,MAENhT,EAAAmyB,aAAY,IAGAnxB,EAAAgvH,kBAAiBz2G,EAAA+I,eAAc,CAACthB,EAAKi8B,WAAWt6B,QAC5D3C,EAAAqxB,WAAU,SAAA5O,GAAA,IAAAib,EAAE76B,EAAF2f,EAAAC,EAAA,GAAG,YACTqa,EAAA5J,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWlwB,EAAE0O,MAAQyI,KAAK8W,QACpDkC,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpwB,EAAE0O,MAAQyI,KAAK8W,QAChDve,KAAM,UACNhM,MAAO1D,GAAG0pB,OAAqB,QAAjBmR,KAAIx9B,EAAAmG,sBAAa,IAAAq3B,OAAA,EAAbA,EAAen3B,QACnC,MAENvG,EAAAmyB,aAAY,IAIAnxB,EAAAivH,eAAc12G,EAAA+I,eAAc,CACxCthB,EAAKH,KAAKiX,gBACV9W,EAAKi8B,WACNt6B,QACC3C,EAAAqxB,WAAU,SAAAgB,GAAA,IAAAC,EAAA9P,EAAA6P,EAAA,GAAE5Z,EAAG6Z,EAAA,GAAEzvB,EAACyvB,EAAA,YACdwK,EAAA5J,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWlwB,EAAE0O,MAAQyI,KAAK8W,QACpDkC,cAAY3C,EAAAyC,gBACRzC,EAAAkvB,YAAQlvB,EAAA4C,UAASpwB,EAAE0O,MAAQyI,KAAK8W,OAAQ,IAE5Cve,KAAM,UACNe,MAAOmF,GAAKzF,IACd,MAENhT,EAAAmyB,aAAY,IAIAnxB,EAAAmb,OAASnb,EAAKqhB,OAAO1f,QACjC3C,EAAAqxB,WAAU,SAACxuB,GAAC,SACR0W,EAAAkgG,UACI52G,EAAE0Y,IAAI,SAAC8Z,GAAC,SACJp1B,EAAAs+B,cAAalJ,EAAEriB,GAAI,kBAAkBrQ,QACjC3C,EAAAub,KAAI,SAACjD,GAAC,OACFA,EAAEzB,QAAQ0E,IAAI,SAACqN,GAAC,OAAA+F,IAAA,GAAW/F,GAAC,IAAEqY,QAAS5L,EAAEriB,IAAE,EAAI,GAEtD,GAER,MAELhT,EAAAub,KAAI,SAAC1Y,GAAC,SAAK3C,EAAAgyB,SAAQrvB,EAAE,MACrB7C,EAAAmyB,aAAY,IAGAnxB,EAAAkvH,iBAAgB32G,EAAA+I,eAAc,CAC1CthB,EAAKmb,OACLnb,EAAKwY,OAAO/C,QACb9T,QACC3C,EAAAub,KAAI,SAAAoX,GAAA,IAAAwL,EAAA3b,EAAAmQ,EAAA,GAAUlc,EAAK0nB,EAAA,UAAPA,EAAA,GAAoB1iB,OAAO,SAAC5Y,GAAC,OAAKA,EAAEo+B,UAAYxqB,EAAMzD,EAAE,EAAC,IAIzDhS,EAAA0Z,oBAAmBnB,EAAA+I,eAAc,CAC7CthB,EAAKqyB,OACLryB,EAAKkvH,gBACNvtH,QACC3C,EAAAub,KAAI,SAAA+X,GAAA,IAAAiR,EAAA/hB,EAAA8Q,EAAA,GAAED,EAAMkR,EAAA,GAAQ,OAAAA,EAAA,GACT9oB,OAAO,SAAC5Y,GAAC,OAAMwwB,EAAOrE,KAAK,SAAC5K,GAAC,OAAKA,EAAE1T,WAAa7N,EAAEmQ,EAAE,EAAC,EAAC,IAItDhS,EAAAmvH,sBAAqB52G,EAAA+I,eAAc,CAC/CthB,EAAKivH,YACLjvH,EAAKmb,OACLnb,EAAKi8B,WACNt6B,QACC3C,EAAAub,KAAI,SAAAiY,GAEA,QAF+B8K,EAAA9b,EAAAgR,EAAA,GAA7BH,EAAMiL,EAAA,GAAEniB,EAAMmiB,EAAA,GAAI/sB,EAAI+sB,EAAA,GAAJ/sB,KACdugD,EAAe,GAAG96B,EAAA,WAEpB,IAAMwP,KAAMnW,EAAAkvB,SAAQhuC,EAAMsgB,GACpBu+F,GAAa/8F,EAAO5X,OAAO,SAAC5Y,GAAC,SAAKwtB,EAAAkC,WAAUiU,EAAK3jC,EAAE0O,KAAK,GAC9DugD,EAAatrB,EAAI1R,WAAa3Y,EAAOV,OACjC,SAAC5Y,GAAC,OAAMutH,GAAWphG,KAAK,SAAC5K,GAAC,OAAKA,EAAE1T,WAAa7N,EAAEmQ,EAAE,EAAC,GACrDnO,QALGgtB,EAAI,EAAGA,EAAI,EAAGA,IAAGmF,IAO1B,OAAO86B,CACX,IAWA9wD,EAAKwR,aACD,YACA+G,EAAA+I,eAAc,CAACthB,EAAKmb,OAAQnb,EAAK0Z,mBAAmBhI,UAChD,SAAAihB,GAAA,IAAAwmF,EAAA33F,EAAAmR,EAAA,GAAmB,OACf3yB,EAAKqvH,qBADDlW,EAAA,GAAWA,EAAA,GAC6B,IAGxDn5G,EAAKsR,WAAW,CACZw1G,gBACsD,IAAlD9mH,EAAKJ,UAAUuE,IAAI,6BAE3BnE,EAAK40B,SAAS,OAAQ,kBAAM50B,EAAKwvB,MAAMxuB,KAAKgY,KAAK8W,MAAM,EAAE,KAAW9vB,CACxE,CAACtB,SAAA8vH,EAAA,EAAAruH,IAAA,aAAAC,MAEM,SAAWmhB,GACd3iB,KAAKq9B,SAASj7B,KAAI2sB,IAAA,GAAM/uB,KAAKq9B,SAASzkB,YAAe+J,GACzD,GAAC,CAAAphB,IAAA,uBAAAC,MAEO,SAAqB+a,EAAQi1B,GAAS,IAMhBva,EANgBlyB,EAAA/E,KACpCunB,EAAS,GACTkhF,EAAS,GACT3mD,EAAU,GACVM,EAAUpiD,KAAKgB,UAAUuE,IAAI,uBAAyB,GACtDod,EAAU3iB,KAAKq9B,SAASzkB,WAAWse,EAAAC,EACrB5a,GAAM,QAAA6pB,EAAA,WAAE,IAAjB5pB,EAAKya,EAAAz1B,MACNkvH,IAAal/E,EAAUpiB,KAAK,SAACnsB,GAAC,OAAKA,EAAEmQ,KAAOoJ,EAAMpJ,EAAE,GACpDi0B,EAASqpF,EAAW,OAAS,OAQnC,GAPAnpG,EAAM,IAAAvjB,OAAKwY,EAAMjJ,SAAY,CACzB8uC,KACID,EAAO,WAAAp+C,OAAYqjC,KACnB+a,EAAO,GAAAp+C,OAAIqjC,KACXka,EAAAe,gBAAe,GAAAt+C,OAAIqjC,IACvB4jC,QAAS,KAERylD,EAAQ,SACbjoB,EAAOryE,KAAK,CACRu6F,WAAY,EACZhrH,SAAQ,GAAA3B,OAAKwY,EAAMjJ,QACnB4T,QAAO,GAAAnjB,OAAKwY,EAAMlJ,KAAI,YAE1B,IAAM61G,GAAO,eAAAj1F,EAAAzyB,EAAAC,IAAAC,KAAG,SAAAC,IAAA,IAAAgvH,GAAAC,GAAAC,GAAAvH,GAAAwH,GAAAC,EAAAC,GAAAt/G,GAAAC,GAAA+a,GAAAkY,GAAAiqB,GAAA,OAAAptD,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,UACG,SAAXilC,EAAiB,CAAAnlC,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,YACVjD,EAAAkU,aAAW,GAAAxQ,OAEVwY,EAAMlJ,MAAQ,gBAClB,mCACH,UAGW,QAAZs9G,GAAAp0G,EAAMukB,cAAM,IAAA6vF,KAAZA,GAAc3rH,QACbuX,EAAMukB,OAAO3R,KAAK,SAACnsB,IAAC,SAAK3C,EAAAmG,eAAcs6B,OAAOl7B,SAAS5C,GAAE,GAAC,CAAAf,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,YAEpDjD,EAAAkU,aAAW,+BAAAxQ,OACiBwY,EAAMlJ,KAAI,OAC5C,OAELvO,SAAK4hH,UAAUv+F,UACfrjB,EAAK4hH,UAAUj0G,WAAW,CAAEC,KAAM,YAC9BgQ,EAAQhR,OACR5M,EAAK4hH,UAAUr2G,KAAKe,WAAW,CAC3BM,KAAMgR,EAAQhR,OAElB5M,EAAK4hH,UAAUr2G,KAAKe,WAAW,CAC3Bkf,UAAW5N,EAAQ4N,WAE1BruB,GAAAE,KAAA,EACoC2C,EAAK0kH,gBACtC1kH,EAAK4hH,UAAUr2G,KAAK9O,MAAMmQ,KAC1B5M,EAAK4hH,UAAUr2G,KAAK9O,MAAMoQ,SACM,QADEi/G,GACV,QADUC,GAClC/rH,EAAKs4B,SAASzkB,kBAAU,IAAAk4G,QAAA,EAAxBA,GAA0BpH,cAAM,IAAAmH,OAChCr0G,GACH,OAAAy0G,OALKt/G,IAKLs/G,GAAA/uH,GAAA4B,MALK6N,KAAMC,GAAQq/G,GAARr/G,SAMZ+a,IANsBA,GAAIskG,GAAJtkG,OAMPhK,EAAQrO,SAAQhU,EAAAmG,eACzBo+B,GAAiB,QAAP0kF,GAAG58F,UAAI,IAAA48F,QAAA,EAAJA,GAAM5iH,MACnBmoD,GAAM/pD,EAAK6U,OAAOs3G,aACxBnsH,EAAK4hH,UAAUr2G,KAAKe,WAAW,CAC3BuF,UAAW,CAAC4F,GACZ1L,SAAU0L,EAAMpJ,GAChBC,WAAYmJ,EAAMlJ,KAClB3B,QACAC,SAAU+Q,EAAQ4N,QAAU,IAAU3e,GACtC2B,OAAQiJ,GAAOjJ,QAAUiJ,GAAOpJ,GAChCI,YAAagJ,EAAMlJ,KACnBqZ,QACAkY,cACApxB,aAAc,UACdC,MAAO8I,EAAM7I,KACP,CAAW,QAAXo9G,GAACv0G,EAAM7I,YAAI,IAAAo9G,QAAA,EAAVA,GAAYn9G,UAAqB,QAAZo9G,EAAEx0G,EAAM7I,YAAI,IAAAq9G,OAAA,EAAVA,EAAY59G,IACpC,CAAC07C,GAAIl7C,UAAWk7C,GAAI17C,MAC3BlR,GAAAE,KAAA,GACG2C,EAAK4hH,UAAUn2G,cAAapM,MAAO,SAACogB,IACtCniB,cAAQO,IAAI4hB,KAAC,EACblkB,EAAAkU,aAAW,gCAAAxQ,OAEHwY,EAAMlJ,MAAQkJ,EAAMpJ,GACxB,MAAApP,OAAKwgB,GAAEu1B,SAAWv1B,GAAEze,OAASye,KAE3BA,EACV,GAAE,SACF,EAAAlkB,EAAAirC,eAAa,qCAAAvnC,OAELwY,EAAMlJ,MAAQkJ,EAAMpJ,KAE1B,yBAAAlR,GAAAwC,OAAA,EAAA9C,EAAA,IACL,kBAhEY,OAAAsyB,EAAAtvB,MAAA5E,KAAA6E,UAAA,KAiEbi9C,EAAQ1rB,KAAK,CACThjB,GAAIoJ,GAAOjJ,QAAUiJ,GAAOpJ,GAC5BqT,OAAQ,QACRkjG,SAAU,GACVjjG,SAAUyiG,MArFlB,IAAAjyF,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAAA6O,GAuFC,OAAApc,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACDx3B,KAAK4Z,OAAOgwG,WACR,UACAjnG,EAAQulG,eAAiBpmE,EAAU,IAEvC9hD,KAAK4Z,OAAO4uG,UAAU,UAAWjhG,GACjCvnB,KAAK4Z,OAAOu3G,UAAU,UAAW1oB,EACrC,GAAC,CAAAlnG,IAAA,kBAAAC,OAAAqoH,EAAApoH,EAEO,SACJkQ,EACAC,GAAgB,IAAAzL,EAAAnG,KAChBsU,EAAAzP,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACAqtB,EAAArtB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,KAAI,OAAAnD,IAAAC,KAAA,SAAAwD,IAAA,IAAAwnB,EAAAm9F,EAAAzxG,EAAApB,EAAA,OAAAvV,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAEL,GAAXuqB,EAAO,MACLxmB,EAAKnF,UAAUuE,IAAI,kCAAiC,CAAAF,EAAAjD,KAAA,SAChD0nH,YAAQr5F,EAAA4C,aACV5C,EAAAkvB,SACIvlC,KAAK8W,MACL/qB,EAAKnF,UAAUuE,IAAI,iCAAmC,KAGxD8S,EAAMlS,EAAK8R,QAAQrD,KAAK4xG,EAAAuD,0BAA2B,CACrDrnH,KAAM,CAAEiP,OAAMC,WAAUk4G,QAAOx1G,OAAM4d,cACvC7sB,EAAAjD,KAAA,EACoBiW,EAAII,cAAcvV,YAAW,OAAtC,GAAP+T,EAAO5R,EAAAvB,KACD,CAAAuB,EAAAjD,KAAA,aAAQ,iBAAgB,OACpCuP,EAAOsF,EAAQtF,KACfC,EAAWqF,EAAQrF,SACnB+a,EAAO1V,EAAQ0V,KAAK,eAAAtnB,EAAA9B,OAAA,SAEjB,CAAEoO,OAAMC,WAAU+a,SAAM,yBAAAtnB,EAAAX,OAAA,EAAAS,EAAA,EAnBXzD,EAmBW,GAClC,SAAA+nH,EAAAzsG,EAAAsZ,GAAA,OAAAuzF,EAAAjlH,MAAA5E,KAAA6E,UAAA,MAAA+qH,CAAA,CAtQ8B,CAAQtvH,EAAA8H,cAAYxI,SAA1CgwH,0CAAqBvnH,EAAAgV,mBAAA9U,EAAAG,qBAAAL,EAAAgV,mBAAA5U,EAAA69F,qBAAAj+F,EAAAgV,mBAAA1U,EAAAH,iBAAAH,EAAAgV,mBAAAxU,EAAA8H,oBAAAtI,EAAAgV,mBAAA0H,EAAAhM,WAAA,qDAArB62G,EAAqBtyG,QAArBsyG,EAAqBryG,YAArBqyG,CAAsB,8MC3CnC/xH,EAAA,OACAA,EAAA,OADA,IAEAyC,EAAAzC,EAAA,UAEAA,EAAA,qJA+BYwK,EAAAkB,oBAAA,wBAGIlB,EAAAwI,qBAAA,qCAYAxI,EAAA8E,yBAAA,mBAAA9E,EAAAulB,iBAAA,MAMAvlB,EAAA+E,mDACA/E,EAAA8E,yBAAA,kBAAA9E,CAGC,WAHDA,CAGC,WAHDA,CAGC,YAKwCA,EAAAgF,iBAAA,GAAiBhF,EAAA+E,yBAC9C/E,EAAA8E,yBAAA,YAAqB9E,EAAAgF,iBAAA,GAAwBhF,EAAA+E,wBAAA/E,GAEjDA,EAAA8E,yBAAA,YAGI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,6BAbJA,EAAAwI,qBAAA,QAAAugH,GAMqC/oH,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAm9G,EAAA99G,MACRjL,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAm9G,EAAA59G,aAKrBnL,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA6jH,EAAAz+G,KAAA,+BAxBhBtK,EAAAiZ,kCAAA,GAGIjZ,EAAA0J,qBAAA,EAAAs/G,EAAA,mDAOAhpH,EAAA0J,qBAAA,EAAAu/G,EAAA,iFAkBJjpH,EAAAoZ,4EAxBSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBAAAwQ,EAAAhZ,EAAAsN,sBAAA,IAAAzE,EAAAqgH,WAAAlwG,EAAApc,SAOkBoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAA4sG,sBAAA,IAAA5sG,EAAAsN,sBAAA,IAAAzE,EAAAqgH,SAAA,OApDvC5xH,yBAkGoC,eAAAC,EAAvB4xH,EAAuB,SAAA7wH,GAAAC,EAAA4wH,EAAA7wH,GAAA,IAAAG,EAAAC,EAAAywH,GAsBhC,SAAAA,EACY9jB,EACApwE,EACAltB,EACAs3B,GAAsB,IAAAtmC,EAAArB,SAAAC,KAAAwxH,IAE9BpwH,EAAAN,EAAAO,KAAArB,OALQ0tG,MACAtsG,EAAAk8B,UACAl8B,EAAAgP,UACAhP,EAAAsmC,SAzBLtmC,EAAA2uF,MAAO,EACP3uF,EAAAqwH,WAAa,GACJrwH,EAAAmwH,QAAUnwH,EAAKk8B,QAAQo0F,eACvBtwH,EAAA6hB,QAAU7hB,EAAKk8B,QAAQra,QACvB7hB,EAAAuwH,UAAY,SAAC3oG,GAAC,OAAK5nB,EAAKk8B,QAAQq0F,UAAU3oG,EAAE,EAC5C5nB,EAAA8C,QAAU,SAAC+tB,GAAC,OACxBA,aAAaxI,OAASroB,EAAK8gE,OAAOjwC,GAAK7wB,EAAKuwH,UAAU1/F,EAAE,EAYJ7wB,EAAAw4F,QAAU,SAACp1E,GAAC,OAChEpjB,EAAKwwH,WAAWptG,EAAE,EAACpjB,CASvB,CAACtB,SAAA0xH,EAAA,EAAAjwH,IAAA,aAAAC,MAjBM,SAAWusB,GAAK,IAAA8jG,EACmCC,EAAzC,QAATD,EAAC7xH,KAAK0tG,WAAG,IAAAmkB,GAAe,QAAfA,EAARA,EAAUzlC,qBAAa,IAAAylC,GAAvBA,EAAyB/kD,SAAS/+C,EAAMolC,UACzCnzD,KAAK+vF,MAAO,EACE,QAAd+hC,EAAA9xH,KAAK+wF,iBAAS,IAAA+gC,GAAe,QAAfA,EAAdA,EAAgB1lC,qBAAa,IAAA0lC,GAA7BA,EAA+Bne,OAEvC,GAAC,CAAApyG,IAAA,aAAAC,MAcM,WAAU,IAAAuwH,EAAAhtH,EAAA/E,KACbA,KAAK+vF,MAAO,EACM,QAAlBgiC,EAAI/xH,KAAK+wF,iBAAS,IAAAghC,GAAdA,EAAgB3lC,eAChBpsF,KAAKyD,QACD,QACA,kBAAMsB,EAAKgsF,UAAU3E,cAAcllE,OAAO,EAC1C,IAGZ,GAAC,CAAA3lB,IAAA,cAAAC,MAEM,SAAYgjB,GAAO,IAAAwtG,EACtBhyH,KAAK+vF,MAAO,EACZ/vF,KAAKyxH,WAAa,GAClBzxH,KAAK2xH,UAAU,IACG,QAAlBK,EAAIhyH,KAAK+wF,iBAAS,IAAAihC,GAAdA,EAAgB5lC,gBAChBpsF,KAAK+wF,UAAU3E,cAAcllE,QAC7BlnB,KAAK+wF,UAAU3E,cAAcunB,OAErC,GAAC,CAAApyG,IAAA,SAAAC,MAEM,SAAOsa,GACV9b,KAAKyxH,WAAa31G,EAAKxI,KACvB,IAAM0f,EAAa,GAOnBA,EALkB,UAAdlX,EAAKnJ,KACC,QACc,YAAdmJ,EAAKnJ,KACL,UACA,QACImJ,EAAK1I,GACnBpT,KAAKoQ,QAAQK,SAAS,GAAI,CACtBq8G,WAAY9sH,KAAK0nC,OACjBqlF,YAAa/5F,GAErB,KAACw+F,CAAA,CAlE+B,CAAQlxH,EAAA8H,cAAYxI,SAA3C4xH,0CAAsBnpH,EAAAC,4BAAAD,EAAAqkF,YAAArkF,EAAAC,4BAAAC,EAAA0pH,sBAAA5pH,EAAAC,4BAAAG,EAAAwE,QAAA5E,EAAAC,4BAAAG,EAAA8gC,gBAAA,kDAAtBioF,EAAsBzoH,UAAA,qBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,uMAAtBC,EAAAsoH,WAAA7gH,EAAkB,KAAA1I,EAAA6pH,6BAAA,sBAAAnhH,GAAA,OAAlBzH,EAAAswF,QAAA7oF,EAAe,KAAA1I,EAAA6pH,6VA3EC1iG,UAAAC,MAAAC,EAAA,qjBAyBZF,UAAAG,MAAAD,EAAA,iYA7CTrnB,EAAA8E,yBAAA,UAAA9E,CAMC,gBAIOA,EAAAuI,qBAAA,iBAAAG,GAAA,OAAAzH,EAAAymF,KAAgBzmF,EAAA6oH,YAAAphH,GAAsBzH,EAAA8oH,YAAY,GAElD/pH,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAII9E,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAmoH,WAAA1gH,CAAA,EAAA1I,CAAwB,yBAAA0I,GAAA,OACPzH,EAAApF,QAAA6M,EAAe,EADhC1I,CAAwB,yBAAAiB,EAAAymF,OAAAzmF,EAAAmoH,UAAA,GAJ5BppH,EAAA+E,yBAYA/E,EAAA0J,qBAAA,EAAAsgH,EAAA,mDAKAhqH,EAAAkB,oBAAA,aAKJlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,6BACI9E,EAAA0J,qBAAA,GAAAugH,EAAA,sDA6BJjqH,EAAA+E,8FA9DI/E,EAAAoX,sBAAA,OAAAnW,EAAAymF,MAAAzmF,EAAAmoH,YAOIppH,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,EAAAymF,MAAAzmF,EAAAmoH,WAAA,sBAMAppH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAmoH,WAAAppH,CAAwB,kBAAAwd,EAAxBxd,CAAwB,6BAAAuf,GASvBvf,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAAsN,sBAAA,IAAArM,EAAA2Z,UAYA5a,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAxI,EAAAsN,sBAAA,MAAArM,EAAA2Z,WAAA3Z,EAAAymF,MAAAzmF,EAAAmoH,8pBAwDJD,CAAuB,iQCvGpC,IAAAnxH,EAAAxC,EAAA,OAQAyC,EAAAzC,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAWA+zD,EAAA/zD,EAAA,OAEA00H,EAAA10H,EAAA,OAEA20H,GADA30H,EAAA,OACAA,EAAA,wCAeA8B,uBAGiC,eAAAC,EAApBqyH,EAAoB,WAgL7B,SAAAA,EACYhxH,EACAD,GAA0B,IAAAI,EAAApB,KAAAD,EAAAC,KAAAiyH,GAD1BjyH,KAAAiB,OACAjB,KAAAgB,YAhLJhB,KAAAyyH,oBAAsB,IAAI94G,EAAAqB,gBAAwB,IAElDhb,KAAA0yH,QAAU,IAAI/4G,EAAAqB,gBAAwB,IAEtChb,KAAA8wB,SAAW,IAAInX,EAAAqB,iBAAyB,GAEhChb,KAAA2yH,mBACZ3yH,KAAKyyH,oBAAoBt3G,eAErBnb,KAAA4yH,wBAA0B5yH,KAAKiB,KAAKiX,gBAAgBnV,QACxD3C,EAAAyb,QAAO,SAAChD,GAAG,QAAOA,CAAG,MACrBzY,EAAAqxB,WAAU,SAAC5Y,GAAG,SAAKxY,EAAAs+B,cAAa9lB,EAAIzF,GAAI,qBAAqB,MAC7DhT,EAAAub,KAAI,SAAAzV,GAAA,IAAG+Q,EAAO/Q,EAAP+Q,QAAO,OAAQA,GAAiB47G,UAAY,EAAE,MACrDzyH,EAAAmyB,aAAY,IAGRvyB,KAAA8yH,aAAwC9yH,KAAK0yH,QAAQ3vH,QACzD3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAojB,KAAI,kBAAMpiB,EAAK0vB,SAAS1uB,MAAK,EAAK,MAClChC,EAAAqxB,WAAU,SAACgR,GAAC,OACRA,GAAGx9B,OAAS,EACL7D,EAAK2xH,UAAUtwF,GAAsC1/B,QAClD3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,GAAkB,KAAC,EAE3CP,EAAAO,IAAG,GAAkB,MAE/B9Z,EAAAmyB,aAAY,IAGRvyB,KAAAgzH,cAAqChzH,KAAK0yH,QAAQ3vH,QACtD3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAojB,KAAI,kBAAMpiB,EAAK0vB,SAAS1uB,MAAK,EAAK,MAClChC,EAAAqxB,WAAU,SAACgR,GAAC,OACRA,GAAGx9B,OAAS,KACN5E,EAAA4yH,cAAa,CAAExwF,IAAGpB,QAASjgC,EAAKH,KAAKkxC,aAAa/+B,KAAMrQ,QACpD3C,EAAAub,KAAI,SAAA5T,GAAO,OAAAA,EAAJrF,KAEEmZ,OAAO,SAAC5Y,GAAC,OAAKA,EAAEsQ,MAAM,GACtBoI,IACG,SAAC1Y,GAAC,OACE,IAAI2uD,EAAAK,MAAKljC,IAAA,GACF9rB,GAAC,IACJ4T,MAAOzV,EAAKH,KAAKkuB,YACblsB,EAAEyQ,SAED,EAChB,KACR,EAELiG,EAAAO,IAAG,GAAG,MAEhB9Z,EAAA+xB,YAAW,iBAAM,EAAE,IAGfnyB,KAAAkzH,oBACJlzH,KAAKiB,KAAKiX,gBAAgBnV,QACtB3C,EAAAyb,QAAO,SAAChD,GAAG,QAAOA,CAAG,MACrBzY,EAAAqxB,WAAU,oBACNpxB,EAAA0yC,mBAAkB3xC,EAAKH,KAAK4U,SAASzC,GAAI,CACrCE,KAAM,uBACPvQ,QAAK3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,CAAEjD,QAAS,IAAK,GAAE,MAElD7W,EAAAub,KAAI,SAACjZ,GACD,IACuBu0B,EADjBlkB,EAAO,GAAGmkB,EAAAC,EACGz0B,GAAI,IAAvB,IAAAw0B,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAAyB,KAAdzb,EAAImb,EAAAz1B,MACL0xC,EAAWp3B,EAAKo3B,SAASigF,mBAC/B,GAAKjgF,EAAmB,KACmBjX,EADnBC,EAAA/E,EACN+b,EAASj8B,SAAgB,IAA3C,IAAAilB,EAAAlT,MAAAiT,EAAAC,EAAA5E,KAAAC,MAA6C,KAAlC67F,EAAGn3F,EAAAz6B,MACVuR,EAAKqjB,KAAK,CACNhjB,GAAIggH,EAAIhgH,GACRT,KAAM,UACNW,KAAM8/G,EAAI9/G,KACVE,YAAa,GACbG,KAAMmI,EAAKnI,OAElB,OAAAqW,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAA1E,GAAA,GACJ,OAAAxN,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACD,OAAOzkB,CACX,IAGQ/S,KAAA0xH,kBAA6C/3G,EAAA+I,eAAc,CACvE1iB,KAAK0yH,QACL1yH,KAAKgzH,cACLhzH,KAAK8yH,aACL9yH,KAAKyyH,oBACLzyH,KAAK4yH,wBACL5yH,KAAKkzH,sBACNnwH,QACC3C,EAAAub,KAAI,SAAAkH,GAAgE,IAAAC,EAAAF,EAAAC,EAAA,GAAtDtG,EAAMuG,EAAA,GAAEvK,EAAKuK,EAAA,GAAE+vG,EAAQ/vG,EAAA,GAAEuwG,EAAcvwG,EAAA,GAAE9Z,EAAQ8Z,EAAA,GACrDya,EADEza,EAAA,GACc8P,cAChB2+F,KAAUjxH,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EAEXxG,EACEV,OACG,SAAC5Y,GAAC,OACEA,EAAE0D,MAAMisB,cAAc/sB,SAAS03B,IAC/Bt6B,EAAEqQ,KAAKsf,cAAc/sB,SAAS03B,IAC9Bt6B,EAAEqS,aAAasd,cAAc/sB,SAAS03B,EAAO,GAEpD5hB,IAAI,SAACqN,GAAC,MAAM,CACT5V,GAAI4V,EAAE5V,GACNT,KAAM,QACNW,KAAM0V,EAAE1T,cAAgB0T,EAAE1V,KAC1BE,YAAW,aAAAxP,OAAeglB,EAAErJ,SAAQ,KACvC,IAAEoD,EACJswG,EACE13G,IACG,SAACkrE,GAAC,MACG,CACGzzE,GAAIyzE,EAAElgF,MACNgM,KAAOk0E,EAAUysC,MAAM,IAAM,UAC7BC,SAAS,EACTjgH,KAAMuzE,EAAEvzE,KACRE,YAAaqzE,EAAElgF,MACV,GAEhBkV,OACG,SAAC5Y,GAAC,OACEA,EAAEqQ,KAAKsf,cAAc/sB,SAAS03B,IAC9Bt6B,EAAEuQ,YAAYof,cAAc/sB,SAAS03B,IACrCt6B,EAAE0P,KAAKigB,cAAc/sB,SAAS03B,EAAO,IAC5Cxa,EACF8vG,EACEl3G,IACG,SAACkrE,GAAC,MACG,CACGzzE,GAAIyzE,EAAElgF,MACNgM,KAAOk0E,EAAUl0E,MAAQ,UACzB4gH,SAAS,EACTjgH,KAAMuzE,EAAEvzE,KACRE,YAAaqzE,EAAElgF,MACV,GAEhBkV,OACG,SAAC5Y,GAAC,OACEA,EAAEqQ,KAAKsf,cAAc/sB,SAAS03B,IAC9Bt6B,EAAEuQ,YAAYof,cAAc/sB,SAAS03B,IACrCt6B,EAAE0P,KAAKigB,cAAc/sB,SAAS03B,EAAO,IAC5Cxa,EACFxK,EAAMoD,IAAI,SAACkrE,GAAC,MAAM,CACjBzzE,GAAIyzE,EAAElgF,MACNgM,KAAM,OACNW,KAAMuzE,EAAEvzE,KACRE,YAAaqzE,EAAElgF,MAClB,IAAEoc,EACA/Z,EACE6S,OAAO,SAAC5Y,GAAC,OAAKA,EAAEqQ,KAAKsf,cAAc/sB,SAAS03B,EAAO,GACnD5hB,IAAI,SAACqN,GAAC,IAAAwqG,EAAA,MAAM,CACTpgH,GAAI4V,EAAE5V,GACNT,KAAM,UACNW,KAAM0V,EAAE1V,KACRE,YAAa,GACbG,KAAqB,QAAjB6/G,EAAGxqG,EAAUrV,YAAI,IAAA6/G,OAAA,EAAdA,EAAgBpgH,GAC1B,KAET,MAEJm+G,SAAQ10G,KAAK,SAACgW,EAAGlU,GAAC,OAAKkU,EAAEvf,KAAKgrB,cAAc3f,EAAErL,KAAK,GAC5Ci+G,CACX,IAAC,EACDnxH,EAAAojB,KAAI,kBAAMpiB,EAAK0vB,SAAS1uB,MAAK,EAAM,MACnChC,EAAAmyB,aAAY,IAGAvyB,KAAAijB,QAAUjjB,KAAK8wB,SAAS3V,eAEjCnb,KAAA+yH,UAAY,SAACtwF,GAAS,IAAA3E,EAAA,OACzB18B,EAAKJ,UAAUuE,IAAI,0BAAuB,EACpClF,EAAAozH,YAAW,CAAEhxF,IAAGixF,aAAyB,QAAb51F,KAAEz9B,EAAA8rF,oBAAW,IAAAruD,OAAA,EAAXA,EAAa1qB,KAAMrQ,QAC7C3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,EAAEP,IAAI,KAAC,EAEtB6vH,EAAAoB,aAAYlxF,EAAE,EAMpBziC,KAAK0xH,eAAe5+G,YACpB9S,KAAK0+E,MACT,CAAC5+E,SAAAmyH,EAAA,EAAA1wH,IAAA,OAAAC,OAAAs8E,EAAAr8E,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAA4yB,EAAA5C,EAAA7sB,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,QACvDsxB,KAAMg+F,EAAAoB,oBACR5zH,KAAKiB,KAAK2wB,QAAQ,qBAClB,wBAGMA,EAAU4C,EAAI5C,QAAQ,uBACpBG,SAASjf,UAAU,SAAC+gH,GACxB,IAAM9gH,EAAO,GACb,QAAWJ,KAAQkhH,EAAc,KACQlzD,EADRC,EAAAzpC,EACV08F,EAAalhH,IAAK,IAArC,IAAAiuD,EAAA53C,MAAA23C,EAAAC,EAAAtpC,KAAAC,MACIxkB,EAAKqjB,KAAIrH,IAAA,GADE4xC,EAAAn/D,OACQ,IAAEmR,SACxB,OAAAqX,GAAA42C,EAAAp8C,EAAAwF,EAAA,SAAA42C,EAAAppC,GAAA,EAELzyB,EAAK0tH,oBAAoBrwH,KAAK2Q,EAClC,GACA6e,EAAQS,QACX,wBAAAnwB,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACJ,SAAA0+E,IAAA,OAAAZ,EAAAl5E,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,YAAAC,MAEM,SAAU4pE,GACbprE,KAAK0yH,QAAQtwH,KAAKgpE,EACtB,KAAC6mD,EAzBA,IAAAn0C,CAyBA,CA/M4B,GA+M5Bl+E,SA/MQqyH,0CAAoB5pH,EAAAgV,mBAAA9U,EAAAG,qBAAAL,EAAAgV,mBAAA5U,EAAAD,iBAAA,qDAApBypH,EAAoB30G,QAApB20G,EAAoB10G,UAAAC,WAFjB,SAEHy0G,CAAoB,qJC3CjC,IAAA/zH,EAAAL,EAAA,iEAaYwK,EAAA8E,yBAAA,UAAA9E,CAGC,cACaA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,yBACpB/E,EAAA8E,yBAAA,WAAc9E,EAAAgF,iBAAA,GAAYhF,EAAA+E,wBAAA/E,2CAAZA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,GAAA4E,EAAA2hH,KAAA,qCAElBzrH,EAAA8E,yBAAA,UAAA9E,CAGC,cACaA,EAAAgF,iBAAA,aAAOhF,EAAA+E,yBACjB/E,EAAA8E,yBAAA,WAAc9E,EAAAgF,iBAAA,GAAehF,EAAA+E,wBAAA/E,2CAAfA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,GAAAqI,EAAAm+G,SAAA,4BAElB1rH,EAAA8E,yBAAA,UAAA9E,CAGC,gBACwCA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,IAxB1D1I,6BA8BuC,eAAAC,EAA1Bo0H,EAA0Bl0H,EAInC,SAAAk0H,EAA8CpoB,GAAwB7rG,EAAAC,KAAAg0H,GAAxBh0H,KAAA4rG,WAH9B5rG,KAAA8zH,KAAO9zH,KAAK4rG,SAASkoB,MAAQ,EAC7B9zH,KAAA+zH,SAAW/zH,KAAK4rG,SAASmoB,UAAY,CAEoB,GAACn0H,SAJjEo0H,0CAA0B3rH,EAAAC,4BAIfpK,EAAAoyD,kBAAgB,kDAJ3B0jE,EAA0BjrH,UAAA,0BAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,sgBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3B/BhB,EAAA8E,yBAAA,WAGI9E,EAAA0J,qBAAA,EAAAkiH,EAAA,YAAA5rH,CAMM,EAAA6rH,EAAA,YANN7rH,CAMM,EAAA8rH,EAAA,aAcV9rH,EAAA+E,gCAlBS/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAwqH,MAOAzrH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAyqH,UAMA1rH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAwqH,KAAA,8CASJE,CAA0B,2KCtCvCn2H,EAAA,OACAA,EAAA,OADA,IAEAs1F,EAAAt1F,EAAA,sFAmDwBwK,EAAAkB,oBAAA,oDAGIlB,EAAAwI,qBAAA,SAAAa,EAAA8K,MAAAoO,OAAA,0BAGJviB,EAAAkB,oBAAA,qCAiBAlB,EAAA8E,yBAAA,YACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,kEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAkJ,EAAA8tG,gBAAA,+BAOJl8G,EAAA8E,yBAAA,WAAA9E,CAIC,UACGA,EAAAulB,iBAAA,MAAqBvlB,EAAA+E,yBAAO/E,EAAAgF,iBAAA,GAEhChF,EAAA+E,kEAFgC/E,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,GAAA5N,EAAA0K,MAAAmD,SAAA,QAAA7N,EAAA0K,MAAAmD,SAAA,iDAO5BtX,EAAA8E,yBAAA,WAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA6mH,EAAA,+BARR/rH,EAAA8E,yBAAA,WAII9E,EAAA0J,qBAAA,EAAAsiH,EAAA,aAMJhsH,EAAA+E,kEAJ4B/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA6Q,EAAAlF,MAAAxT,oCA9DxCX,EAAA8E,yBAAA,WASI9E,EAAAkB,oBAAA,WACAlB,EAAA8E,yBAAA,UAAA9E,CAAsB,WAOdA,EAAA0J,qBAAA,EAAAuiH,EAAA,YAAAjsH,CAKE,EAAAksH,EAAA,aAKNlsH,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,CAA2D,YAQnDA,EAAAgF,iBAAA,gCAGJhF,EAAAgF,iBAAA,QAAAhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAAyiH,EAAA,cAGJnsH,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAAA9E,CAAqC,YAE7BA,EAAAgF,iBAAA,IACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAA0iH,EAAA,aAAApsH,CAOM,GAAAqsH,EAAA,aAYVrsH,EAAA+E,wBAAA/E,6CA7DJA,EAAAoX,sBAAA,4BAAA7J,EAAAokF,MAAA3xF,CAA2C,+BAAAuN,EAAAqkF,OAJ3C5xF,EAAAwI,qBAAA,WAAA+E,EAAA4G,MAAA,KAAA5G,EAAA4G,MAAApJ,IAWQ/K,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,aAAA7J,EAAA4G,MAAAoO,OAAA,GAAAviB,CAAoC,OAAAuN,EAAA4G,MAAAoO,OAAA,GAApCviB,CAAoC,OAAAuN,EAAA4G,MAAAoO,OAAA,IAM/BviB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAA4G,MAAAoO,OAAA,IAMAviB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAA4G,MAAAoO,OAAA,IAMDviB,EAAAiF,oBAAA,GAAAjF,EAAAgiF,qBAAA,qEAAAz0E,EAAAyxB,4FASkBh/B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,wBAAA+E,EAAAyxB,QAMlBh/B,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAA4G,MAAAlH,cAAAM,EAAA4G,MAAAlJ,KAAA,KAKCjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAA4G,MAAAmD,UAAA,GAOAtX,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAA+E,EAAA4G,MAAAxT,SAAA,KAAA4M,EAAA4G,MAAAxT,SAAA/D,QAAA,GAAA2Q,EAAA++G,gBA3E7Bh1H,4BAkHsC,eAAAC,EAAzBg1H,EAAyB,WAgBlC,SAAAA,EACsChpB,EAC1B5qG,EACAitF,GAAiCluF,EAAAC,KAAA40H,GAFP50H,KAAA4rG,WAC1B5rG,KAAAgB,YACAhB,KAAAiuF,WAjBIjuF,KAAAwc,MAAQxc,KAAK4rG,SAASpvF,MAEtBxc,KAAAyzB,OAASzzB,KAAK4rG,SAASn4E,OAEvBzzB,KAAAqnC,OAASrnC,KAAK4rG,SAASvkE,MAcpC,CAACvnC,SAAA80H,EAAA,EAAArzH,IAAA,gBAAAgE,IARJ,WACI,OAAQvF,KAAKgB,UAAUuE,IAAI,2BAC/B,GAAC,CAAAhE,IAAA,WAAAC,MAQM,WAAQ,IAAAJ,EAAApB,KACXysE,WAAW,kBAAMrrE,EAAKyzH,cAAc,EAAE,IAC1C,GAAC,CAAAtzH,IAAA,eAAAC,MAEM,WACH,IAAMguH,EAAMxvH,KAAKiuF,SAAS7B,cAAckO,wBACxCt6F,KAAKg6F,MAAQw1B,EAAI14E,EAAIE,SAAStR,KAAKovF,YAAc,EAAI,QAAU,MAC/D90H,KAAKi6F,MAAQu1B,EAAIz4E,EAAIC,SAAStR,KAAKqvF,aAAe,EAAI,MAAQ,QAClE,GAAC,CAAAxzH,IAAA,kBAAAgE,IAED,WACI,MAAO,EACX,KAACqvH,CAAA,CAlCiC,GAkCjCh1H,SAlCQg1H,0CAAyBvsH,EAAAC,4BAiBtB6qF,EAAA7iC,kBAAgBjoD,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAD,EAAAqkF,YAAA,kDAjBnBkoC,EAAyB7rH,UAAA,yBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,eAAAqiB,WA7DVC,UAAAC,MAAAC,EAAA,uyCAiBWF,UAAAG,MAAAD,EAAA,0TAnE/BrnB,EAAA8E,yBAAA,aAUI9E,EAAAuI,qBAAA,+BAActH,EAAAurH,cAAc,GAE/BxsH,EAAA+E,yBACD/E,EAAA0J,qBAAA,EAAAijH,EAAA,2BAAA3sH,EAAAqd,yEAVIrd,EAAAwI,qBAAA,UAAA+W,EAAAvf,CAAyB,cAAzBA,CAAyB,qBAAzBA,CAAyB,qBAAzBA,CAAyB,WAAzBA,CAAyB,aAMzBA,EAAA+rD,sBAAA,YAAA9qD,EAAAkT,MAAA,KAAAlT,EAAAkT,MAAAjJ,UAAA,MAAAjK,EAAAkT,MAAA,KAAAlT,EAAAkT,MAAApJ,gfAsGCwhH,CAAyB,+PCpItC/2H,EAAA,WACAwC,EAAAxC,EAAA,OAEAuC,EAAAvC,EAAA,OAQA8b,EAAA9b,EAAA,OAEAyC,EAAAzC,EAAA,OAQAomD,EAAApmD,EAAA,OACA+zD,EAAA/zD,EAAA,OACA2C,EAAA3C,EAAA,OAKAo3H,GAJAp3H,EAAA,OACAA,EAAA,OAEAA,EAAA,OACAA,EAAA,QACAq3H,EAAAr3H,EAAA,MACAs3H,EAAAt3H,EAAA,yEAEa8B,kBAAkB,CAC3By1H,KAAM,UACNC,QAAS,UACTC,SAAU,UACVC,KAAM,UACN,gBAAiB,UACjB,eAAgB,UAChBC,QAAS,WAGb71H,uBACkC,eAAAC,EAArB8vH,EAAqB,SAAA/uH,GAAAC,EAAA8uH,EAAA/uH,GAAA,IA2D7B80H,EA3D6B30H,EAAAC,EAAA2uH,GAkD9B,SAAAA,EACY91G,EACA5Y,EACAqtB,EACApW,EACAhX,GAAyB,IAAAG,EAAArB,SAAAC,KAAA0vH,IAEjCtuH,EAAAN,EAAAO,KAAArB,OANQ4Z,SACAxY,EAAAJ,YACAI,EAAAitB,cACAjtB,EAAA6W,UACA7W,EAAAH,OAtDJG,EAAAulH,UAAsC,GACtCvlH,EAAA2lH,UAA6B,GAErB3lH,EAAAgsC,cACZhsC,EAAKH,KAAKiX,gBAAgBnV,QACtB3C,EAAAyb,QAAO,SAAChD,GAAG,QAAOA,CAAG,MACrBzY,EAAAqxB,WAAU,SAAC5Y,GAAG,SACVxY,EAAAs+B,cAAa9lB,EAAIzF,GAAE,sBAAwBrQ,QACvC3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,CAAEjD,QAAS,IAAK,GACvC,MAEL7W,EAAAub,KAAI,SAAC1Y,GAAC,OAAMA,GAAGgU,mBAAmBqqB,MAAQr+B,EAAEgU,QAAU,EAAE,IAAC,EACzD7W,EAAAmyB,aAAY,IAGZnxB,EAAAgmH,MAAQhmH,EAAKwY,OAAO2C,OAAOxZ,QAC/B3C,EAAAub,KAAI,SAAC5I,GAID,GAHA3R,EAAKowB,UAAU,MACfpwB,EAAKowB,UAAU,MACfpwB,EAAK2lH,UAAY,GACR,MAAJh0G,KAAM9N,OAAe,KACFgyB,EADEC,EAAAC,EACNpkB,GAAI,QAAAqkB,EAAA,WAAE,IAAf5a,EAAKya,EAAAz1B,MACNgzB,KAAMn0B,EAAAwxB,WAAUrV,EAAMpJ,GAAI,YAC5Bwe,EAAU4C,EAAI5C,QAAQ,YAC1BxwB,EAAKwR,aAAY,KAAA5O,OACRwY,EAAMpJ,IACXwe,EACKG,SACAjf,UAAU,SAAC4F,GAAC,OACTtX,EAAKs0H,qBAAqB3iH,EAAMyJ,EAAO9D,EAAE,IAGrDtX,EAAKwR,aAAY,UAAA5O,OAAWwY,EAAMpJ,IAAMwe,EAAQS,QAChDT,EAAU4C,EAAI5C,QAAQ,UACtBxwB,EAAKwR,aAAY,KAAA5O,OACRwY,EAAMpJ,IACXwe,EACKG,SACAjf,UAAU,SAAC4F,GAAC,OACTtX,EAAKu0H,mBAAmB5iH,EAAMyJ,EAAO9D,EAAE,IAGnDtX,EAAKwR,aAAY,UAAA5O,OAAWwY,EAAMpJ,IAAMwe,EAAQS,SArBpD,IAAA6E,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAAAH,GAsBC,OAAApN,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACDp2B,EAAKw0H,cAAc7iH,GACnB3R,EAAKy0H,qBAAqB9iH,EAAI,CAClC,IAWA3R,EAAKwR,aAAa,SAAUxR,EAAKgmH,MAAMt0G,aAAa1R,CACxD,CAACtB,SAAA4vH,EAAA,EAAAnuH,IAAA,YAAAC,OAAAi0H,EAAAh0H,EAEM,SAAgB+a,GAAY,IAAAzX,EAAA/E,KAAEwvC,EAAA3qC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAsB,OAAAnD,IAAAC,KAAA,SAAAC,EAAAmG,GAAA,IAAAqlC,EAAA,OAAA1rC,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAC3B2C,EAAKqoC,cAC5BrqC,QAAK3C,EAAA2b,MAAK,IACV7Y,YAAW,OACF,GAHRkqC,EAAalrC,EAAA4B,QAAAoC,EAIf5F,EAAA0tC,kBACI,CACIr8B,KAAMyI,KAAK8W,MACXtf,SAAU,GACVsgB,SAAU1V,EACVlI,QAAMhU,EAAAmG,gBAEV2mC,IACC,IATDa,OAUE,CAAA/rC,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,YACC0gD,EAAAzvC,aACH,gEACH,WAG6B,SAA7BzP,EAAKgiH,UAAUvqG,EAAMpJ,KAAmBo8B,IACxChzB,EAAM2xB,SAAQ,CAAAjsC,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,YAER0gD,EAAAzvC,aAAW,GAAAxQ,OAEVwY,EAAMlH,cAAgBkH,EAAMlJ,KAChC,wDACH,OAMF,GAJHvO,EAAKspB,YAAYjG,UACjBrjB,EAAKspB,YAAY/d,KAAKe,WAAW,CAC7BiD,KAAmB,QAAfvM,KAAEzH,EAAAmG,sBAAa,IAAAsB,OAAA,EAAbA,EAAepB,MACrBiQ,UAAW,CAAC4F,MAEZzX,EAAK/D,UAAUuE,IAAI,kCAAiC,CAAArD,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,SAC7CwB,EAAKspB,YAAYynG,sBAAoB,QAEhD/wH,EAAKkT,QAAQrD,KACR7P,EAAK/D,UAAUuE,IAAI,+BACd4vH,EAAAlQ,uBACAiQ,EAAAzP,6BACN,CACI/iH,KAAM,CAAE8Z,WAEd,yBAAAta,EAAAwC,OAAA,EAAA9C,EAAA,EA5CqDF,EA4CrD,GACL,SAAAq0H,EAAA/4G,GAAA,OAAAy4G,EAAA7wH,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,uBAAAC,MAEM,SACH+a,EACAC,EACA6Y,GAAmB,IAAAlvB,EAAAnG,KAEdq1B,IACLr1B,KAAK2mH,UAAUnqG,EAAMpJ,IAAMiiB,EAAS1Z,IAAI,SAACsW,GAAC,OAAK,IAAIzxB,EAAAwsB,cAAciF,EAAE,GACnEjyB,KAAKyD,QACD,mBACA,kBAAM0C,EAAK0vH,qBAAqBt5G,EAAO,EACvC,KAER,GAAC,CAAAhb,IAAA,qBAAAC,MAEM,SAAmB+a,EAAiBC,EAAc6qB,GAAc,IAAAtgC,EAAA/G,KACnEA,KAAK+mH,UAAUvqG,EAAMpJ,IAAMoJ,EAAM2xB,SAC3B9G,GAAU,OACV,eACNrnC,KAAKyD,QACD,kBACA,WACIsD,EAAKhD,aAAa,oBAClBgD,EAAKo/D,cAAc5pD,GACnBxV,EAAK8uH,qBAAqBt5G,EAC9B,EACA,IAER,GAAC,CAAAhb,IAAA,gBAAAC,MAAA,eAAAw0H,EAAAv0H,EAAAC,IAAAC,KAEO,SAAAwD,EAAoBoX,GAAe,IAAAqI,EAAAw9B,EAAAlmB,EAAAD,EAAAzf,EAAA6qB,EAAA,OAAA3lC,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACjCwiB,EAAY,GACZw9B,EAAUpiD,KAAKgB,UAAUuE,IAAI,uBAAyB,GAAE22B,EAAA/E,EAC1C5a,GAAM,IAA1B,IAAA2f,EAAAlT,MAAAiT,EAAAC,EAAA5E,KAAAC,MACU8P,EAASrnC,KAAK+mH,WADbvqG,EAAKyf,EAAAz6B,OACwB4R,KAAO,eAC3CwR,EAAS,IAAA5gB,OAAKwY,EAAMjJ,SAAY,CAC5B8uC,KACID,EAAO,SAAAp+C,OAAUqjC,KACjB+a,EAAO,GAAAp+C,OAAIqjC,KACX1nC,EAAA2iD,gBAAe,GAAAt+C,OAAIqjC,IACvB4jC,QAAS,GAEhB,OAAAjhD,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAA1E,GAAA,CACDx3B,KAAK4Z,OAAO4uG,UAAU,SAAU5jG,GAAW,wBAAAvf,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IAC9C,gBAAAmmE,EAAA7vC,GAAA,OAAA0/F,EAAApxH,MAAA5E,KAAA6E,UAAA,EAhBA,IAgBA,CAAAtD,IAAA,uBAAAC,MAEO,SAAqB+a,GACzB,IAC0BokD,EADpB33D,EAA4B,GAAG43D,EAAAzpC,EACjB5a,GAAM,IAA1B,IAAAqkD,EAAA53C,MAAA23C,EAAAC,EAAAtpC,KAAAC,MAA4B,KAAjB/a,EAAKmkD,EAAAn/D,MACPgb,EAAMjJ,QACXvK,EAASotB,KAAK,CACVzwB,SAAU6W,EAAMjJ,OAChByuC,WAAW,EACXC,UAAU,EACV96B,QAAS8tG,EAAAL,0BACTvtG,QAAS,GACT3kB,KAAM,CACF8Z,MAAO,IAAIo1C,EAAAK,MAAMz1C,GACjBiX,OAAQzzB,KAAK2mH,UAAUnqG,EAAMpJ,IAC7Bi0B,OAAQrnC,KAAK+mH,UAAUvqG,EAAMpJ,OAGxC,OAAA4W,GAAA42C,EAAAp8C,EAAAwF,EAAA,SAAA42C,EAAAppC,GAAA,CACDx3B,KAAK4Z,OAAOovG,YAAY,SAAUhgH,EACtC,GAAC,CAAAzH,IAAA,gBAAAC,MAEO,SAAc+a,GAAe,IAEP0sG,EAFOx2E,EAAAzyC,KAC3B8hD,EAAwB,GAAGonE,EAAA/xF,EACb5a,GAAM,QAAA6pB,EAAA,WAAE,IAAjB5pB,EAAKysG,EAAAznH,MACZ,IAAKgb,EAAMjJ,OAAM,SACjBuuC,EAAQ1rB,KAAK,CACThjB,GAAIoJ,EAAMjJ,OACVkT,OAAQ,QACRkjG,SAAU,EACVjjG,SAAU,kBAAM+rB,EAAKsjF,UAAUv5G,EAAM,IAEzCslC,EAAQ1rB,KAAK,CACThjB,GAAIoJ,EAAMjJ,OACVkT,OAAQ,WACRkjG,SAAU,EACVjjG,SAAU,kBAAM+rB,EAAKsjF,UAAUv5G,EAAM,KAZ7C,IAAA0sG,EAAAlgG,MAAAigG,EAAAC,EAAA5xF,KAAAC,MAAA6O,GAcC,OAAApc,GAAAk/F,EAAA1kG,EAAAwF,EAAA,SAAAk/F,EAAA1xF,GAAA,CACDx3B,KAAKyD,QACD,cACA,kBAAMgvC,EAAK74B,OAAOgwG,WAAW,SAAU9nE,EAAQ,EAC/C,GAER,KAAC4tE,CAAA,CAnM6B,CAAQpvH,EAAA8H,cAAYxI,SAAzC8vH,0CAAoBrnH,EAAAgV,mBAAA9U,EAAA+9F,qBAAAj+F,EAAAgV,mBAAA5U,EAAAD,iBAAAH,EAAAgV,mBAAA1U,EAAAuM,kBAAA7M,EAAAgV,mBAAAxU,EAAAkQ,WAAA1Q,EAAAgV,mBAAA0H,EAAArc,qBAAA,qDAApBgnH,EAAoBpyG,QAApBoyG,EAAoBnyG,YAApBmyG,CAAqB,mRCpClC,IAAArvH,EAAAxC,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAUAyC,EAAAzC,EAAA,OAQA+zD,GADA/zD,EAAA,OACAA,EAAA,WACAA,EAAA,kDAeA8B,sBAGiC,eAAAC,EAApB0mG,EAAoB,SAAA3lG,GAAAC,EAAA0lG,EAAA3lG,GAAA,IAoI5Bm9E,EApI4Bh9E,EAAAC,EAAAulG,GAsI7B,SAAAA,EACYrlG,EACAghB,EACAjhB,GAA0B,IAAAI,EAAArB,SAAAC,KAAAsmG,IAElCllG,EAAAN,EAAAO,KAAArB,OAJQiB,OACAG,EAAA6gB,UACA7gB,EAAAJ,YAvIJI,EAAAqrD,OAAS,IAAI9yC,EAAAqB,gBAA+B,MAE5C5Z,EAAA60H,WAAa,IAAIt8G,EAAAqB,gBAAiD,CACtEsM,KAAM,EACNs6B,OAAQ,CAAE9K,EAAG,GAAKC,EAAG,MAGjB31C,EAAA80H,QAAU,IAAIv8G,EAAAqB,gBAAuC,IAErD5Z,EAAAga,UAAY,IAAIzB,EAAAqB,gBAA0C,IAE1D5Z,EAAA+0H,SAAW,IAAIx8G,EAAAqB,gBAAuC,IAEtD5Z,EAAAg1H,QAAU,IAAIz8G,EAAAqB,gBAAwC,IAEtD5Z,EAAAi8B,SAAW,IAAI1jB,EAAAqB,gBAA4B,CAC/Cu9B,QAAS,CAAC,QAAS,aAGfn3C,EAAAi1H,SAAW,IAAI18G,EAAAqB,gBAAwB,IAG/B5Z,EAAAyV,MAAQzV,EAAKqrD,OAAOtxC,eAEpB/Z,EAAA24C,QAAU34C,EAAKi1H,SAASl7G,eAExB/Z,EAAAmb,OAASnb,EAAKqrD,OAAO1pD,QACjC3C,EAAAqxB,WAAU,SAAC5a,GAAK,SACZxW,EAAA4yH,cAAa,CAAE5xF,QAASxqB,GAAOzD,GAAI4yB,MAAO,KAAMjjC,QAC5C3C,EAAAub,KAAI,SAAAzV,GAAO,OAAAA,EAAJxD,KAAgBiZ,IAAI,SAAC1Y,GAAC,OAAK,IAAI2uD,EAAAK,MAAMhvD,EAAS,EAAC,MACtD7C,EAAA+xB,YAAW,SAAClvB,GAAC,SAAK0W,EAAAO,IAAG,GAAc,GACtC,MAEL9Z,EAAAmyB,aAAY,IAGAnxB,EAAAmyC,QAAUnyC,EAAKqrD,OAAO1pD,QAClC3C,EAAAub,KAAI,SAACmzC,GAAG,OAAMA,EAAMA,EAAIv7C,OAAS,KAAO,EAAE,IAG9BnS,EAAAmtH,cAAgBntH,EAAK60H,WAAW96G,eAEhC/Z,EAAAwiB,gBAAejK,EAAA+I,eAAc,CACzCthB,EAAKga,UACLha,EAAKi8B,WACNt6B,QACC3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAub,KAAI,SAAA5T,GAAwB,IAAA8a,EAAAD,EAAA7a,EAAA,GAAtBiB,EAAQ6Z,EAAA,GAAEF,EAAOE,EAAA,GACf9P,EAAO,GACX,QAAWxR,KAAOyH,EAAU,KAAA2lH,EAAA2H,EAEL,QAAf3H,EAAAhsG,EAAQ41B,eAAO,IAAAo2E,GAAfA,EAAiB9oH,SAAStE,IACF,QADM+0H,EAC9B3zG,EAAQ4zG,wBAAgB,IAAAD,GAAxBA,EAA0BzwH,SAAStE,KAGvCwR,EAAOA,EAAK/O,OAAOgF,EAASzH,KAEhC,OAAOwR,CACX,IAGY3R,EAAAotH,eAAc70G,EAAA+I,eAAc,CACxCthB,EAAK+0H,SACL/0H,EAAKi8B,WACNt6B,QACC3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAub,KAAI,SAAAmH,GAAuB,IAAAgb,EAAAlb,EAAAE,EAAA,GAArBg/B,EAAOhkB,EAAA,GAAEnb,EAAOmb,EAAA,GACd/qB,EAAO,GACX,QAAWxR,KAAOugD,EAAS,KAAA00E,EAAAC,EAEJ,QAAfD,EAAA7zG,EAAQ41B,eAAO,IAAAi+E,GAAfA,EAAiB3wH,SAAStE,IACH,QADOk1H,EAC9B9zG,EAAQ+zG,uBAAe,IAAAD,GAAvBA,EAAyB5wH,SAAStE,KAGtCwR,EAAOA,EAAK/O,OAAO89C,EAAQvgD,KAE/B,OAAOwR,CACX,IAGY3R,EAAAqtH,cAAa90G,EAAA+I,eAAc,CACvCthB,EAAKg1H,QACLh1H,EAAKi8B,WACNt6B,QACC3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAub,KAAI,SAAA8W,GAAsB,IAAAC,EAAA9P,EAAA6P,EAAA,GAApBg2E,EAAM/1E,EAAA,GAAE/P,EAAO+P,EAAA,GACb3f,EAAO,GACX,QAAWxR,KAAOknG,EAAQ,KAAAkuB,EAAAC,EAEH,QAAfD,EAAAh0G,EAAQ41B,eAAO,IAAAo+E,GAAfA,EAAiB9wH,SAAStE,IACJ,QADQq1H,EAC9Bj0G,EAAQk0G,sBAAc,IAAAD,GAAtBA,EAAwB/wH,SAAStE,KAGrCwR,EAAOA,EAAK/O,OAAOykG,EAAOlnG,KAE9B,OAAOwR,CACX,IAGY3R,EAAAktH,cAAa30G,EAAA+I,eAAc,CACvCthB,EAAK80H,QACL90H,EAAKi8B,WACNt6B,QACC3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAub,KAAI,SAAAoX,GAAsB,IAAA+jG,EAAAv4F,EAAA3b,EAAAmQ,EAAA,GAApBxL,EAAMgX,EAAA,GAAE5b,EAAO4b,EAAA,GACbw4F,EAAiB,CAAEjnD,KAAM,CAAEtoD,QAAS,SACxC,QAAWjmB,KAAOgmB,EAAQ,KAAAyvG,EAAAC,EAEH,QAAfD,EAAAr0G,EAAQ41B,eAAO,IAAAy+E,GAAfA,EAAiBnxH,SAAStE,IACJ,QADQ01H,EAC9Bt0G,EAAQu0G,sBAAc,IAAAD,GAAtBA,EAAwBpxH,SAAStE,KAGrCw1H,EAAchoG,IAAA,GAAQgoG,GAAmBxvG,EAAOhmB,KAEpD,OAAmB,QAAnBu1H,EAAIn0G,EAAQ41B,eAAO,IAAAu+E,GAAfA,EAAiBjxH,SAAS,WAC1BkxH,EAAe,UAAY,CAAEvvG,QAAS,QACtCuvG,EAAe,UAAY,CAAEvvG,QAAS,SAEnCuvG,CACX,IAGY31H,EAAAuhB,QAAUvhB,EAAKi8B,SAASliB,eAgBpC/Z,EAAKs9E,OAAOt9E,CAChB,CAACtB,SAAAwmG,EAAA,EAAA/kG,IAAA,YAAAgE,IAfD,WACI,OAAOvF,KAAKi2H,WAAWr9G,UAC3B,GAAC,CAAArX,IAAA,eAAAgE,IAED,WACI,OAAOvF,KAAKysD,OAAO7zC,UACvB,GAAC,CAAArX,IAAA,OAAAC,OAAAs8E,EAAAr8E,EAAAC,IAAAC,KAWM,SAAAC,IAAA,IAAAmD,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC7DlD,KAAKiB,KAAKu+C,cACLz8C,QAAK3C,EAAAyb,QAAO,SAAC5Y,GAAC,QAAOA,CAAC,IACtB6P,UAAU,SAACqkH,GACR,IAAMtgH,EAAQ9R,EAAK0nD,OAAO7zC,YACRu+G,EAAW/nG,KACzB,SAAC0/B,GAAG,OAAKj4C,GAAOzD,KAAO07C,EAAI17C,EAAE,IAEf+jH,EAAWlyH,QACzBF,EAAK06C,SAAS03E,EAAW,GAAG/jH,IAE5BrO,EAAK/D,UAAUuE,IAAI,gCACnBR,EAAK2N,WAAW,CACZgkH,gBAAiB3xH,EAAK/D,UAAUuE,IAC5B,iCAIRR,EAAK/D,UAAUuE,IAAI,+BACnBR,EAAK2N,WAAW,CACZmkH,eAAgB9xH,EAAK/D,UAAUuE,IAC3B,gCAIRR,EAAK/D,UAAUuE,IAAI,iCACnBR,EAAK2N,WAAW,CACZ6jH,iBAAkBxxH,EAAK/D,UAAUuE,IAC7B,kCAIRR,EAAK/D,UAAUuE,IAAI,+BACnBR,EAAK2N,WAAW,CACZwkH,eAAgBnyH,EAAK/D,UAAUuE,IAC3B,+BAIhB,GAAG,wBAAArD,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACV,SAAA0+E,IAAA,OAAAZ,EAAAl5E,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,aAAAC,MAEM,SAAWmhB,GACd,IAAMy0G,EAAcp3H,KAAKq9B,SAASzkB,WAC5B2/B,KAAUj4C,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EACdJ,EAAQ41B,SAAW6+E,EAAY7+E,SAAOx1B,EACtC/iB,KAAKgB,UAAUuE,IAAI,wBAA0B,MAErDvF,KAAKq9B,SAASj7B,KAAI2sB,MAAA,GACX/uB,KAAKq9B,SAASzkB,YACd+J,GAAO,IACV41B,YAER,GAAC,CAAAh3C,IAAA,QAAAC,MAEM,WACHxB,KAAKk2H,QAAQ9zH,KAAK,IAClBpC,KAAKob,UAAUhZ,KAAK,IACpBpC,KAAKo2H,QAAQh0H,KAAK,IAClBpC,KAAKm2H,SAAS/zH,KAAK,IACnBpC,KAAKq9B,SAASj7B,KAAK,CACfm2C,QAAS,CAAC,QAAS,aAEvBv4C,KAAKgvH,aAAa,EAAG,CAAEl4E,EAAG,GAAKC,EAAG,IACtC,GAAC,CAAAx1C,IAAA,WAAAC,MAEM,SAAS6/B,GACZ,IAAMytB,EAAM9uD,KAAKiB,KAAKkuB,YAAY,CAACkS,IAC/BytB,GAAK9uD,KAAKysD,OAAOrqD,KAAK0sD,EAC9B,GAAC,CAAAvtD,IAAA,YAAAC,MAEM,SAAU8R,EAAciU,GAC3B,IAAM3C,EAAY5kB,KAAKk2H,QAAQt9G,WAC/BgM,EAAUtR,GAAQiU,EAClBvnB,KAAKk2H,QAAQ9zH,KAAKwiB,EACtB,GAAC,CAAArjB,IAAA,cAAAC,MAEM,SAAY8R,EAActK,GAC7B,IAAMquH,EAAcr3H,KAAKob,UAAUxC,WACnCy+G,EAAY/jH,GAAQtK,EACpBhJ,KAAKob,UAAUhZ,KAAKi1H,EACxB,GAAC,CAAA91H,IAAA,aAAAC,MAEM,SAAW8R,EAAcwuC,GAC5B,IAAMw1E,EAAct3H,KAAKm2H,SAASv9G,WAClC0+G,EAAYhkH,GAAQwuC,EACpB9hD,KAAKm2H,SAAS/zH,KAAKk1H,EACvB,GAAC,CAAA/1H,IAAA,YAAAC,MAEM,SAAU8R,EAAcm1F,GAC3B,IAAM8uB,EAAav3H,KAAKo2H,QAAQx9G,WAChC2+G,EAAWjkH,GAAQm1F,EACnBzoG,KAAKo2H,QAAQh0H,KAAKm1H,EACtB,GAAC,CAAAh2H,IAAA,eAAAC,MAEM,SAAa8lB,EAAcs6B,GAC9B5hD,KAAKi2H,WAAW7zH,KAAK,CAAEklB,OAAMs6B,UACjC,KAAC0kD,CAAA,CAjP4B,CAAQhmG,EAAA8H,cAAYxI,SAAxC0mG,0CAAmBj+F,EAAAgV,mBAAA9U,EAAAG,qBAAAL,EAAAgV,mBAAA5U,EAAAqc,eAAAzc,EAAAgV,mBAAA1U,EAAAH,iBAAA,qDAAnB89F,EAAmBhpF,QAAnBgpF,EAAmB/oF,UAAAC,WAFhB,SAEH8oF,CAAoB,gQC9CjC,IAAAjmG,EAAAxC,EAAA,OAEAuC,GADAvC,EAAA,OACAA,EAAA,QAEAyC,EAAAzC,EAAA,OAIA0jD,GAHA1jD,EAAA,OAEAA,EAAA,OACAA,EAAA,OACA25H,EAAA35H,EAAA,OACA45H,EAAA55H,EAAA,mDAqKA,SAAS65H,EAAetrB,GACpB,IAAM1Q,GAAyB0Q,GAAU,IAAI5vE,OACzC,SAACoqD,EAAC/jE,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAGi0B,EAACh0B,EAAA,GAAEi0B,EAACj0B,EAAA,SAAO,CACZ8pF,MAAO91D,EAAI8vC,EAAEgmB,MAAQ91D,EAAI8vC,EAAEgmB,MAC3BC,MAAO/1D,EAAI8vC,EAAEimB,MAAQ/1D,EAAI8vC,EAAEimB,MAC3BC,MAAO/1D,EAAI6vC,EAAEkmB,MAAQ/1D,EAAI6vC,EAAEkmB,MAC3BC,MAAOh2D,EAAI6vC,EAAEmmB,MAAQh2D,EAAI6vC,EAAEmmB,MAC9B,EACD,CACIH,MAAO,IACPC,OAAO,IACPC,MAAO,IACPC,OAAO,MAGf,MAAO,CACHj2D,EAAG4kD,EAAKkR,OAASlR,EAAKmR,MAAQnR,EAAKkR,OAAS,EAC5C71D,EAAG2kD,EAAKoR,OAASpR,EAAKqR,MAAQrR,EAAKoR,OAAS,EAEpD,CAtKAntG,sBACiC,eAAAC,EAApB+vH,EAAoB,SAAAhvH,GAAAC,EAAA+uH,EAAAhvH,GAAA,IAgC5Bm9E,EAhC4Bh9E,EAAAC,EAAA4uH,GAyB7B,SAAAA,EACY/1G,EACA3Y,EACAD,GAA0B,IAAAI,EAAArB,SAAAC,KAAA2vH,IAElCvuH,EAAAN,EAAAO,KAAArB,OAJQ4Z,SACAxY,EAAAH,OACAG,EAAAJ,YA3BJI,EAAA2lH,UAA6B,GAC7B3lH,EAAAu2H,UAA4B,GAC5Bv2H,EAAAw2H,UAA6B,GAC7Bx2H,EAAAy2H,MAA0B,GAC1Bz2H,EAAA02H,QAAuC,GACvC12H,EAAAga,UAA6B,GAE7Bha,EAAAgmH,MAAQhmH,EAAKwY,OAAO/C,MAAM9T,QAC9B3C,EAAAub,KAAI,SAACmzC,GACD,GAAKA,EACL1tD,GAAK2lH,UAAY,GACjB,IAAIxyF,EAAiBnzB,EAAKH,KAAK2wB,QAAQ,mBACvC,GAAK2C,EACL,KAAM3C,KAAUvxB,EAAAwxB,WAAU0C,EAAW,kBAAkB3C,QAAO,GAAA5tB,OACvD8qD,EAAI17C,GAAE,WAEbhS,EAAKwR,aAAY,QAEbgf,EAAQG,SAASjf,UAAU,SAAC4F,GAAC,OAAKtX,EAAK22H,UAAUr/G,EAAE,IAEvDtX,EAAKwR,aAAa,UAAWgf,EAAQS,OAAM,EAC/C,IASAjxB,EAAKs9E,OAAOt9E,CAChB,CAACtB,SAAA6vH,EAAA,EAAApuH,IAAA,OAAAC,OAAAs8E,EAAAr8E,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAs1B,EAAAD,EAAA+gG,EAAArkH,EAAAskH,EAAA/7F,EAAAD,EAAAi8F,EAAAhyH,EAAAiyH,EAAAC,EAAAC,EAAA94B,EAAA,OAAA79F,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,EACGpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAAAhB,UAAAE,KAAA,EACjCwB,QAAQ+lB,IAChC3pB,KAAKiB,KAAKwhB,OAAO9G,IAAI,SAAC9C,GAAG,SACrBxY,EAAAs+B,cAAa9lB,EAAIzF,GAAI,eAAelQ,WAAW,IAEtD,OAJkBg0B,EAAAC,EAAAj1B,GAAA4B,MAKa5B,GAAAC,KAAA,EAAA+0B,EAAAlO,IAAA,WAAAiO,EAAAC,EAAAI,KAAAC,KAAA,CAAAr1B,GAAAE,KAAA,SACe,GAArC61H,EAAa,OADZtkH,EAAIsjB,EAAAz1B,QACyB,QAAjBw2H,EAAJrkH,EAAMsD,eAAe,IAAA+gH,OAAA,EAArBA,EAAuBC,MAC5B,CAAA/1H,GAAAE,KAAA,gBAAAF,GAAAqB,OAAA,uBAAA24B,EAAA/E,EACS8gG,GAAK,IAAxB,IAAA/7F,EAAAlT,MAAAiT,EAAAC,EAAA5E,KAAAC,MACsB4gG,GADPjyH,GAAJgyH,EAAIj8F,EAAAz6B,OAEFs9F,YAAc,IADLq5B,WAAYC,EAAclyH,EAAdkyH,eAAgBC,EAAYnyH,EAAZmyH,aAEtC94B,GAAgB24B,EAAKI,UAAY,IAAjC/4B,YACRv/F,KAAK43H,UAAUM,EAAK9kH,IAHJlN,EAARyZ,UAG8B,IACtC3f,KAAK23H,UAAUO,EAAK9kH,KACD,IAAf+kH,EACMC,IACY,MAAX74B,KAAat6F,OACRyyH,EAAen4B,GACf,MACN,KACVv/F,KAAK63H,MAAMK,EAAK9kH,MACVilH,GACFr4H,KAAKgB,UAAUuE,IAAI,iCACvBvF,KAAK83H,QAAQI,EAAK9kH,IAAMmsF,GAAe,EAC1C,OAAAv1E,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAA1E,GAAA,SAAAt1B,GAAAE,KAAA,gBAAAF,GAAAE,KAAA,iBAAAF,GAAAC,KAAA,GAAAD,GAAAiC,GAAAjC,GAAAkC,MAAA,GAAA8yB,EAAA1S,EAAAtiB,GAAAiC,IAAA,QAAAjC,UAAAC,KAAA,GAAA+0B,EAAAM,IAAAt1B,GAAAmlD,OAAA,YAELrnD,KAAK2lE,eACL3lE,KAAK4S,aAAa,OAAQ5S,KAAKonH,MAAMt0G,aAAa,yBAAA5Q,GAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,mBACrD,SAAA0+E,IAAA,OAAAZ,EAAAl5E,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,YAAAC,MAEM,SAAUkB,GACb,IAGwBi+D,EAFlB8nC,EAAS,GACTz/F,EAAW,GAAG43D,EAAAzpC,EAFNz0B,GAAMlB,OAAS,IAGL,IAAxB,IAAAo/D,EAAA53C,MAAA23C,EAAAC,EAAAtpC,KAAAC,MAA0B,KAAf5jB,EAAIgtD,EAAAn/D,MACL+2H,EAAS5kH,EAAKipB,OAAS58B,KAAK43H,UAAUjkH,EAAK6kH,UAAY,KAG7D,GAFAx4H,KAAK+mH,UAAUpzG,EAAK6kH,SAChBD,EAAS,GAAM,OAASA,EAAS,IAAO,UAAY,OACnDv4H,KAAK23H,UAAUhkH,EAAK6kH,SACzB,KAAIrxG,EAAU,GACVxT,EAAKipB,QACLzV,GAAO,GAAAnjB,OAAO2P,EAAKipB,OAAS,EAAC,gBAAA54B,OACV,IAAf2P,EAAKipB,MAAc,GAAK,IAC5B,OAEAjpB,EAAK8kH,cACLtxG,GAAO,gBAAAnjB,OAAoB2P,EAAK8kH,YAAW,eAC3C9kH,EAAK+kH,aAAe,IACpBvxG,GAAO,GAAAnjB,OAAO2P,EAAKglH,iBAAgB,KAAA30H,OACL,IAA1B2P,EAAKglH,iBAAyB,SAAW,SAC7C,OACAhlH,EAAKogH,WAAU5sG,GAAO,aAAAnjB,OAAiB2P,EAAKogH,SAAQ,QACpDpgH,EAAKilH,aAAYzxG,GAAO,eAAAnjB,OAAmB2P,EAAKilH,WAAU,QAC1DjlH,EAAK8kE,UAAStxD,GAAO,UAAAnjB,OAAc2P,EAAK8kE,QAAO,OACnDgwB,EAAOryE,KAAK,CACRzwB,SAAU3F,KAAK23H,UAAUhkH,EAAK6kH,SAC9BrxG,UACAE,QAAS,MAGTrnB,KAAKgB,UAAUuE,IAAI,yCAClBoO,EAAK8kH,aAAe9kH,EAAKogH,WAE1B/qH,EAASotB,KAAK,CACVzwB,SAAU3F,KAAK23H,UAAUhkH,EAAK6kH,SAC9BrxG,QAASswG,EAAAzD,2BACTtxH,KAAM,CAAEoxH,KAAMngH,EAAK8kH,YAAa1E,SAAUpgH,EAAKogH,UAC/C1sG,QAAS,IACZ,EAER,OAAA2C,GAAA42C,EAAAp8C,EAAAwF,EAAA,SAAA42C,EAAAppC,GAAA,CACDx3B,KAAKob,UAAYpS,EACZhJ,KAAKgB,UAAUuE,IAAI,wCACpBvF,KAAK4Z,OAAOu3G,UAAU,QAAS1oB,GAEnCzoG,KAAK2lE,cACT,GAAC,CAAApkE,IAAA,eAAAC,MAEO,WACJ,IAAMojB,EAAY,GACZ5b,EAAW,GACXo5C,EAAUpiD,KAAKgB,UAAUuE,IAAI,uBAAyB,GAC5D,QAAW87B,KAAWrhC,KAAK+mH,UAAW,CAClC,IAAMvhD,EACFpjB,EAAO,QAAAp+C,OAAShE,KAAK+mH,UAAU1lF,MAC/B+gB,EAAO,GAAAp+C,OAAIhE,KAAK+mH,UAAU1lF,MAC1BkgB,EAAAe,gBAAe,GAAAt+C,OAAIhE,KAAK+mH,UAAU1lF,KAClCrhC,KAAK63H,MAAMx2F,GACXr4B,EAASotB,KAAK,CACV+wE,SAAQ,QAAAnjG,OAAUq9B,GAClB17B,SAAU+xH,EAAe13H,KAAK83H,QAAQz2F,IACtCla,QAASqwG,EAAAxrB,oBACTtpG,KAAM,CACF2/E,MAAO7c,EACP4mC,OAAQpsG,KAAK83H,QAAQz2F,IAEzBha,QAAS,KAGbzC,EAAS,IAAA5gB,OAAKq9B,IAAa,CACvBghB,KAAMmjB,EACNyF,QAAS,IAIrBjrE,KAAK4Z,OAAOovG,YAAY,QAAO,GAAAhlH,OAAMgF,EAAQ,CAAEhJ,KAAKob,aACpDpb,KAAK4Z,OAAO4uG,UAAU,QAAS5jG,EACnC,KAAC+qG,CAAA,CA/I4B,CAAQrvH,EAAA8H,cAAYxI,SAAxC+vH,0CAAmBtnH,EAAAgV,mBAAA9U,EAAA+9F,qBAAAj+F,EAAAgV,mBAAA5U,EAAAC,qBAAAL,EAAAgV,mBAAA1U,EAAAH,iBAAA,qDAAnBmnH,EAAmBryG,QAAnBqyG,EAAmBpyG,YAAnBoyG,CAAoB,+KC7BjC9xH,EAAA,kEAEA8B,8BA6DwC,eAAAC,EAA3Bi5H,EAA2B/4H,EAcpC,SAAA+4H,EAAoBj/G,GAA2B,IAAAxY,EAAApB,KAAAD,EAAAC,KAAA64H,GAA3B74H,KAAA4Z,SAbJ5Z,KAAA84H,OAAS,kBACrB13H,EAAKwY,OAAOo1G,aACR7lF,KAAK0Z,IAAI,GAAiC,IAA7BzhD,EAAKwY,OAAO6zG,UAAUnmG,MACnClmB,EAAKwY,OAAO6zG,UAAU7rE,OACzB,EACW5hD,KAAA+4H,QAAU,kBACtB33H,EAAKwY,OAAOo1G,aACR7lF,KAAKyZ,IAAI,EAAiC,kBAA9BxhD,EAAKwY,OAAO6zG,UAAUnmG,MAClClmB,EAAKwY,OAAO6zG,UAAU7rE,OACzB,EACW5hD,KAAA8uC,MAAQ,kBACpB1tC,EAAKwY,OAAOo1G,aAAa,EAAG,CAAEl4E,EAAG,GAAKC,EAAG,IAAM,CAED,GAACn3C,SAd1Ci5H,0CAA2BxwH,EAAAC,4BAAAC,EAAA+9F,qBAAA,kDAA3BuyB,EAA2B9vH,UAAA,4BAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,mEApDhBsiB,UAAAC,MAAAC,EAAA,qKAWAF,UAAAG,MAAAD,EAAA,sKAWAF,UAAAI,MAAAF,EAAA,8JA5BhBrnB,EAAA8E,yBAAA,cAKI9E,EAAAuI,qBAAA,0BAAStH,EAAAwvH,QAAQ,GAIjBzwH,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,SAAGhF,EAAA+E,wBAAA/E,GAEjBA,EAAA8E,yBAAA,cAKI9E,EAAAuI,qBAAA,0BAAStH,EAAAyvH,SAAS,GAIlB1wH,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,YAAMhF,EAAA+E,wBAAA/E,GAEpBA,EAAA8E,yBAAA,cAKI9E,EAAAuI,qBAAA,0BAAStH,EAAAwlC,OAAO,GAIhBzmC,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,eAAShF,EAAA+E,wBAAA/E,qcA2BlBwwH,CAA2B,8IChExC,IAAAv4H,EAAAzC,EAAA,OAEA2L,GADA3L,EAAA,OACAA,EAAA,QACAK,EAAAL,EAAA,OAEAk1F,EAAAl1F,EAAA,OACAm7H,EAAAn7H,EAAA,OACAi1F,EAAAj1F,EAAA,OAEAy8C,EAAAz8C,EAAA,OACAo7H,EAAAp7H,EAAA,UAEAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,iBAkBA8B,sBAegC,eAAAC,EAAnBsM,EAAmBpM,EAAA,SAAAoM,IAAAnM,EAAAC,KAAAkM,EAAA,GAAAtM,SAAnBsM,yCAAmB,iDAAnBA,uDAZL5L,EAAAgZ,aACApb,EAAA6Q,iBACAvF,EAAAiC,YACAjC,EAAAwC,oBACA+mF,EAAAqB,qBACA4kC,EAAAE,cACApmC,EAAAmB,aACA35C,EAAAvuC,iBACAktH,EAAApqH,wBAIK3C,CAAmB,sFCxDhCsqB,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,mJCXA,IAAA6J,EAAA3L,EAAA,OACA+P,EAAA/P,EAAA,UACAA,EAAA,wJAkBYwK,EAAA8E,yBAAA,UAAA9E,CAGC,WAHDA,CAGC,WAEcA,EAAAgF,iBAAA,eAAShF,EAAA+E,yBAChB/E,EAAA8E,yBAAA,YAGI9E,EAAAgF,iBAAA,GAKJhF,EAAA+E,wBAAA/E,8CALIA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAAsc,SAAA5e,MAAAsC,EAAAsc,SAAA3e,QAAA,+CAQZlL,EAAA8E,yBAAA,UAAA9E,CAGC,UAHDA,CAGC,WAEcA,EAAAgF,iBAAA,UAAIhF,EAAA+E,yBACX/E,EAAAkB,oBAAA,4BAGJlB,EAAA+E,wBAAA/E,yGA/BRA,EAAA8E,yBAAA,YAKI9E,EAAA0J,qBAAA,EAAAonH,EAAA,YAAA9wH,CAgBM,EAAA+wH,EAAA,aAYN/wH,EAAA8E,yBAAA,UAAA9E,CAEC,UAFDA,CAEC,WAEcA,EAAAgF,iBAAA,UAAIhF,EAAA+E,yBACX/E,EAAA8E,yBAAA,oBACI9E,EAAAgF,iBAAA,2CACJhF,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,UAAA9E,CAEC,YAFDA,CAEC,YAEcA,EAAAgF,iBAAA,iBAAUhF,EAAA+E,yBACjB/E,EAAA8E,yBAAA,sBAEI9E,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAyb,GAAA,IAAA/a,EAAArJ,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAAM,EAAApB,KAAAe,WAAA,CAAAM,KAAAZ,IAAiC,GAGrD1I,EAAA+E,wBAAA/E,GAELA,EAAA8E,yBAAA,YAAA9E,CAAkD,YACvCA,EAAAgF,iBAAA,eAAQhF,EAAA+E,yBACf/E,EAAAkB,oBAAA,0BASJlB,EAAA+E,wBAAA/E,iDAhEJA,EAAAwI,qBAAA,YAAAsB,EAAA7B,MAIKjI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA+f,UAiBA7pB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAAmC,MAeiBjM,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,KAAAsB,EAAAknH,YAWVhxH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAsB,EAAA7B,KAAA9O,MAAAmQ,KAAAtJ,CAA2B,iBAAAA,EAAAmJ,0BAAA,GAAAC,GAA3BpJ,CAA2B,WAAA8J,EAAAizG,eAU3B/8G,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAukG,EAAAjjG,EAAA7B,KAAA/K,IAAA,cAAA6vG,EAAA5zG,MAAA6G,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,UAAhCA,CAAgC,WAAA8J,EAAAizG,gBApExDzlH,4BAwFsC,eAAAC,EAAzBmqH,EAAyB,WAelC,SAAAA,EAEY9uE,EAQAj6C,GAA0BjB,EAAAC,KAAA+pH,GAR1B/pH,KAAAi7C,QAQAj7C,KAAAgB,YAxBLhB,KAAAsU,KAAOtU,KAAKi7C,MAAM3mC,KAClBtU,KAAAsQ,KAAO,IAAI9G,EAAAm2B,UAAU,CACxBhT,KAAM,IAAInjB,EAAAo2B,YAAY5/B,KAAKi7C,MAAMtuB,MACjChb,KAAM,IAAInI,EAAAo2B,YAAY5/B,KAAKi7C,MAAMtpC,MACjCC,SAAU,IAAIpI,EAAAo2B,YAAY5/B,KAAKi7C,MAAMrpC,YAGzB5R,KAAAq5H,WAAar5H,KAAKi7C,MAAM6uE,MACxB9pH,KAAAkyB,SAAWlyB,KAAKi7C,MAAM/oB,QAiBnC,CAACpyB,SAAAiqH,EAAA,EAAAxoH,IAAA,gBAAAgE,IAfJ,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,uBAC9B,KAACwkH,CAAA,CAbiC,GAajCnqH,SAbQmqH,0CAAyB1hH,EAAAC,4BAgBtBsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAAC,iBAAA,kDAhBlBuhH,EAAyBhhH,UAAA,yBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,w9BAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IArF9BhB,EAAA8E,yBAAA,aAAA9E,CAAmD,QAC3CA,EAAAgF,iBAAA,uBAAiBhF,EAAA+E,yBACrB/E,EAAA8E,yBAAA,aAAA9E,CAA8B,cAChBA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA0J,qBAAA,EAAAunH,EAAA,gBAqEAjxH,EAAA8E,yBAAA,aAAA9E,CAEC,cAEOA,EAAAgF,iBAAA,gBACJhF,EAAA+E,wBAAA/E,UAzECA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAgH,MAuEqBjI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAAvH,EAAAgH,KAAA9O,sQAOrBuoH,CAAyB,sFC/FtCvzF,EAAAC,aAAA54B,EAAA,OAAA8B,GAEA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,8ICTA,IAAAkK,EAAAhM,EAAA,qCAEA8B,uBAiCiC,eAAAC,EAApB25H,EAAoB,WAjCjC,SAAAA,IAAAx5H,EAAAC,KAAAu5H,GAuC+Bv5H,KAAAi6E,UAAY,IAAIpwE,EAAAuV,aAEpCpf,KAAAw5H,cAAe,EAEtB15H,SAAAy5H,EAAA,EAAAh4H,IAAA,gBAAAC,MAGO,WACHxB,KAAKw5H,cAAgBx5H,KAAKw5H,aAC1Bx5H,KAAKi6E,UAAU36D,MACnB,KAACi6G,CAAA,CAhB4B,GAgB5B35H,SAhBQ25H,yCAAoB,kDAApBA,EAAoBxwH,UAAA,sBAAAwW,OAAA,CAAAjM,KAAA,OAAAwlB,SAAA,YAAAtZ,QAAA,CAAAy6D,UAAA,YAAAuQ,mBAAA/4E,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,0QAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCA9BzBhB,EAAA8E,yBAAA,cAQI9E,EAAAuI,qBAAA,kCAAiBtH,EAAAmwH,eAAe,GAEhCpxH,EAAA8E,yBAAA,WAGI9E,EAAAuI,qBAAA,0BAAStH,EAAAmwH,eAAe,GAExBpxH,EAAAoiF,uBAAA,GACJpiF,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAA0B9E,EAAAuI,qBAAA,0BAAStH,EAAAmwH,eAAe,GAC9CpxH,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,UAfAA,EAAA+rD,sBAAA,WAAA9qD,EAAAwvB,SAAAzwB,CAA0B,OAAAiB,EAAAgK,MActBjL,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,eAAAjE,EAAAkwH,aAAA,+NAYHD,CAAoB,mJCnCjC,IAAA1vH,EAAAhM,EAAA,OAOA2L,EAAA3L,EAAA,OACAyC,EAAAzC,EAAA,OAQAwC,GADAxC,EAAA,MACAA,EAAA,QACA4yB,EAAA5yB,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,gEAkB4BwK,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAA6oH,EAAAtmH,IAEA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAmsH,EAAApkH,cAAAokH,EAAApmH,KAAA,4BA8BZjL,EAAA8E,yBAAA,qBAMI9E,EAAAgF,iBAAA,6BACJhF,EAAA+E,mDAsCR/E,EAAA8E,yBAAA,WAAA9E,CAIC,cAEQA,EAAAgF,iBAAA,GACUhF,EAAA+E,yBAEf/E,EAAAkB,oBAAA,wBAKJlB,EAAA+E,iEARS/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,GAAAgE,EAAAjB,KAAA9O,MAAAg8B,MAAAyQ,OAAA,iEAST5lC,EAAA8E,yBAAA,WAAA9E,CAIC,cAC0BA,EAAAgF,iBAAA,gBAAUhF,EAAA+E,yBACjC/E,EAAAkB,oBAAA,wBAKJlB,EAAA+E,gDASI/E,EAAA8E,yBAAA,UAAA9E,CAGC,cAC2BA,EAAAgF,iBAAA,6BAAuBhF,EAAA+E,yBAC/C/E,EAAAkB,oBAAA,yBAOJlB,EAAA+E,gCALQ/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,SAAAxI,CAAU,WAAVA,CAAU,qCAMlBA,EAAA8E,yBAAA,UAAA9E,CAGC,cAC2BA,EAAAgF,iBAAA,6BAAuBhF,EAAA+E,yBAC/C/E,EAAAkB,oBAAA,yBAOJlB,EAAA+E,kEALQ/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,MAAAkN,EAAAzN,KAAA9O,MAAAysE,WAAAI,YAAA,GAAAhmE,CAA8C,WAA9CA,CAA8C,qCA5B1DA,EAAA8E,yBAAA,YAQI9E,EAAA0J,qBAAA,EAAA4nH,EAAA,aAAAtxH,CAYM,EAAAuxH,EAAA,cAcVvxH,EAAA+E,iEAxBS/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAK,EAAA2oH,qBAAAh0H,SAAA,eAaAwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAK,EAAA2oH,qBAAAh0H,SAAA,yCAuBGwC,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAAipH,GAEAzxH,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAusH,EAAA,+BAfhBzxH,EAAA8E,yBAAA,WAAA9E,CAIC,cAEQA,EAAAgF,iBAAA,GACMhF,EAAA+E,yBAEX/E,EAAA8E,yBAAA,sBAAA9E,CAAoD,mBAE5CA,EAAA0J,qBAAA,EAAAgoH,EAAA,oBAMJ1xH,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAAW9E,EAAAgF,iBAAA,8BAAwBhF,EAAA+E,wBAAA/E,6CAZlCA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,GAAAkJ,EAAAnG,KAAA9O,MAAAg8B,MAAAyQ,OAAA,sCAMwB5lC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA4F,EAAAujH,2CAoBrB3xH,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAAopH,GAEA5xH,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA0sH,EAAA,+BAfhB5xH,EAAA8E,yBAAA,WAAA9E,CAIC,cAEQA,EAAAgF,iBAAA,GACKhF,EAAA+E,yBAEV/E,EAAA8E,yBAAA,sBAAA9E,CAAoD,mBAE5CA,EAAA0J,qBAAA,EAAAmoH,EAAA,oBAMJ7xH,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAAW9E,EAAAgF,iBAAA,8BAAwBhF,EAAA+E,wBAAA/E,6CAZlCA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,GAAAuE,EAAAxB,KAAA9O,MAAAg8B,MAAAyQ,OAAA,qCAMwB5lC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAiB,EAAAkoH,uHASjC3xH,EAAA8E,yBAAA,WAAA9E,CAIC,cAEQA,EAAAgF,iBAAA,GACahF,EAAA+E,yBAElB/E,EAAA8E,yBAAA,UAAA9E,CAAyC,qBAKjCA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAk7C,GAAA,IAAAC,EAAA9jD,EAAA8I,0BAAA,OAER9I,EAAA+I,sBAAA+6C,EAAAguE,YAAAppH,EAAAo7C,EAAA77C,KAAA9O,MAAAysE,WAAAQ,UAEU,IAExB,GACkBpmE,EAAA+E,yBACA/E,EAAA8E,yBAAA,qBAKI9E,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAk7C,GAAA,IAAA30C,EAAAlP,EAAA8I,0BAAA,OAER9I,EAAA+I,sBAAAmG,EAAA4iH,YAAA5iH,EAAAjH,KAAA9O,MAAAysE,WAAAQ,UACS,GAAC19D,GAGxB,GACkB1I,EAAA+E,wBAAA/E,+CA5BCA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,GAAAmU,EAAApR,KAAA9O,MAAAg8B,MAAAyQ,OAAA,6CAMG5lC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA6Q,EAAApR,KAAA9O,MAAAysE,WAAAQ,UAAA,GAAApmE,CAA8C,iBAAAA,EAAAmJ,0BAAA,EAAAC,IAY9CpJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA6Q,EAAApR,KAAA9O,MAAAysE,WAAAQ,UAAA,GAAApmE,CAA2C,UAAAqZ,EAAApR,KAAA9O,MAAAysE,WAAAQ,UAAA,GAA3CpmE,CAA2C,iBAAAA,EAAAmJ,0BAAA,EAAAC,8BAmCvCpJ,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,gCACJhF,EAAA+E,gFAHI/E,EAAAwI,qBAAA,QAAAupH,EAAAhnH,IAEA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAAimH,EAAA54H,MAAAiW,EAAAoX,aAAA,+BAoBAxmB,EAAA8E,yBAAA,mBAQI9E,EAAAgF,iBAAA,gCACJhF,EAAA+E,0GARI/E,EAAAwI,qBAAA,QAAAwpH,EAAAjnH,IAOA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAAkmH,EAAA74H,MAAA49C,EAAAvwB,aAAA,+BATRxmB,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAAuoH,EAAA,qBAUJjyH,EAAAoZ,yFARSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAwpH,EAAAjnH,IAAA2N,EAAAzQ,KAAA9O,MAAAysE,WAAAK,WAAA,sEAhDzBjmE,EAAA8E,yBAAA,WAAA9E,CAIC,cAEQA,EAAAgF,iBAAA,GACOhF,EAAA+E,yBAEZ/E,EAAA8E,yBAAA,WAAA9E,CAAgD,sBAAhDA,CAAgD,mBAMpCA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAikD,GAAA,IAAAC,EAAA7sD,EAAA8I,0BAAA,OAET9I,EAAA+I,sBAAA8jD,EAAAqlE,aAAAxpH,EAAAmkD,EAAA5kD,KAAA9O,MAAAysE,WAAAK,WAEW,IAE5B,GAC0BjmE,EAAA0J,qBAAA,EAAAyoH,EAAA,oBAMJnyH,EAAA+E,wBAAA/E,GAGJA,EAAA8E,yBAAA,sBAAA9E,CAAoD,mBAM5CA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAikD,GAAA,IAAA/P,EAAA78C,EAAA8I,0BAAA,OAET9I,EAAA+I,sBAAA8zC,EAAAq1E,aAAAr1E,EAAA50C,KAAA9O,MAAAysE,WAAAK,WACU,GAACv9D,GAG5B,GAE0B1I,EAAA0J,qBAAA,EAAA0oH,EAAA,uBAYJpyH,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAAW9E,EAAAgF,iBAAA,mCAA4BhF,EAAA+E,wBAAA/E,iDApD1CA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,GAAA2S,EAAA5P,KAAA9O,MAAAg8B,MAAAyQ,OAAA,uCAOO5lC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAqP,EAAA5P,KAAA9O,MAAAysE,WAAAK,WAAA,MAAAjmE,CAAoD,iBAAAA,EAAAmJ,0BAAA,EAAAC,IAU/BpJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAqP,EAAAw6G,aAWrBryH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAqP,EAAA5P,KAAA9O,MAAAysE,WAAAK,WAAA,OAAAjmE,CAEC,iBAAAA,EAAAmJ,0BAAA,EAAAC,IAS8BpJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAqP,EAAAw6G,uCAiB/CryH,EAAA8E,yBAAA,WAAA9E,CAIC,cAEOA,EAAAgF,iBAAA,GAEJhF,EAAA+E,yBACA/E,EAAAkB,oBAAA,wBAKJlB,EAAA+E,iEARQ/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAiI,EAAAlF,KAAA9O,MAAAg8B,MAAAyQ,OAAA,iDA1SpBtuC,4BA8TsC,eAAAC,EAAzB+6H,EAAyB,WAyElC,SAAAA,EACY15H,EACAD,GAA0BjB,EAAAC,KAAA26H,GAD1B36H,KAAAiB,OACAjB,KAAAgB,YAzEIhB,KAAAsiH,MAAO,EACNtiH,KAAA46H,cAAgB,IAAI/wH,EAAAuV,aAE9Bpf,KAAA65H,qBAAiC,GAExB75H,KAAA66H,eAAiB76H,KAAKiB,KAAKiX,gBAAgBnV,QACvD3C,EAAAyb,QAAO,SAAC5Y,GAAC,QAAOA,CAAC,MACjB7C,EAAAqxB,WAAU,SAAC5Y,GAAG,SACVxY,EAAAy6H,YAAW,CAAElnH,UAAWiF,EAAIzF,KAAMrQ,QAC9B3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,CAAExX,KAAM,IAAK,GACpC,MAELtC,EAAAub,KAAI,SAACq5D,GAAG,OAAKA,EAAItyE,IAAI,MACrBtC,EAAAmyB,aAAY,IAGAvyB,KAAA06H,YAAc,IAAIp5F,MAAM,IAAQ+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,EAAGivC,GAC5D,IAAM53B,EAAO6uB,KAAKC,MAAM8I,EAAM,GACxB7I,EAAW6I,EAAM,EAAK,GAC5B,MAAO,CACH9+B,GAAIkH,EAAO+uB,EAAU,GACrB7nC,SAAOivB,EAAAlV,KAAI,IAAInB,KAAQ,CAAE8uB,MAAO5uB,EAAM+uB,YAE9C,GAEOrpC,KAAAg6H,gBAAkB,CACrB,QACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,YAGYh6H,KAAAsQ,KAAO,IAAI9G,EAAAm2B,UAAU,CACjCvsB,GAAI,IAAI5J,EAAAo2B,YAAW,WAAA57B,UAAY1D,EAAA8mD,cAAa,KAC5CzzC,KAAM,IAAInK,EAAAo2B,YAAY,IAAKp2B,EAAAq2B,WAAWC,UACtCxsB,KAAM,IAAI9J,EAAAo2B,YAAY,GAAIp2B,EAAAq2B,WAAWC,UACrCtC,MAAO,IAAIh0B,EAAAm2B,UAAU,CACjB6tC,aAAc,IAAIhkE,EAAAo2B,aAAY,GAC9BqO,OAAQ,IAAIzkC,EAAAo2B,aAAY,KAE5BquC,WAAY,IAAIzkE,EAAAm2B,UAAU,CACtBoB,OAAQ,IAAIv3B,EAAAo2B,YAAY,IACxB+jE,UAAW,IAAIn6F,EAAAo2B,YAAY,IAC3ByuC,WAAY,IAAI7kE,EAAAo2B,YAAY,GAC5B8uC,WAAY,IAAIllE,EAAAo2B,YAAY,MAC5BuuC,UAAW,IAAI3kE,EAAAo2B,YAAY,UAC3BwuC,SAAU,IAAI5kE,EAAAo2B,YAAY,SAC1B0uC,WAAY,IAAI9kE,EAAAo2B,YAAY,CAAC,EAAG,KAChC6uC,UAAW,IAAIjlE,EAAAo2B,YAAY,IACvBnP,EAAA0C,YAAW/Y,KAAK8W,OAAOgE,WAAO,EAC9BzE,EAAA4C,UAASjZ,KAAK8W,OAAOgE,YAEzBy5C,aAAc,IAAInlE,EAAAo2B,YAAY,OAWnC,CAAC9/B,SAAA66H,EAAA,EAAAp5H,IAAA,cAAAgE,IAPJ,WACI,OAAOvF,KAAKgB,UAAU6tB,WAC1B,GAAC,CAAAttB,IAAA,cAAAC,MAOM,SAAY63B,GACXA,EAAQy0C,SAAW9tE,KAAK8tE,UACxB9tE,KAAK65H,qBAAuBpwG,OAAOC,KAC/B1pB,KAAK8tE,QAAQG,YAAc,IAE/BjuE,KAAKsQ,KAAKe,WAAWrR,KAAK8tE,UAG1Bz0C,EAAQipF,MACRtiH,KAAKsiH,OAASjpF,EAAQipF,KAAK/pB,gBAC1Bl/D,EAAQipF,KAAKyY,aAEd/6H,KAAK4iC,MAEb,GAAC,CAAArhC,IAAA,eAAAC,MAEM,SAAaytB,EAAe1K,IAC1B0K,IAAU1K,IACX0K,EAAQ1K,IAAKA,EAAM0K,EAAQ,KAC/BjvB,KAAKsQ,KAAKe,WAAW,CAAE48D,WAAY,CAAEK,WAAY,CAACr/C,EAAO1K,MAC7D,GAAC,CAAAhjB,IAAA,cAAAC,MAEM,SAAYytB,EAAe1K,IACzB0K,IAAU1K,IACX0K,EAAQ1K,IAAKA,EAAM0K,GACvBjvB,KAAKsQ,KAAKe,WAAW,CACjB48D,WAAY,CACRQ,UAAW,IACPh+C,EAAA0C,YAAWlE,GAAOiG,WAAO,EACzBzE,EAAA4C,UAAS9O,GAAK2Q,cAI9B,GAAC,CAAA3zB,IAAA,OAAAC,MAEM,WACH,IAAKxB,KAAKsQ,KAAKiE,MACX,SAAOjU,EAAAkU,aAAW,kCAAAxQ,UACoB1D,EAAAmU,kBAC9BzU,KAAKsQ,MACPoE,KAAK,MAAK,MAKpB,QAFMlT,EAAQxB,KAAKsQ,KAAK4e,cAExB+R,EAAA,EAAA+5F,EADuBvxG,OAAOC,KAAKloB,EAAMysE,YACThtC,EAAA+5F,EAAA/1H,OAAAg8B,IAAE,CAA7B,IAAM1/B,EAAGy5H,EAAA/5F,GACLjhC,KAAK65H,qBAAqBh0H,SAAStE,WAC7BC,EAAMysE,WAAW1sE,GAGhCvB,KAAK46H,cAAct7G,KAAK9d,EAC5B,KAACm5H,CAAA,CAjIiC,GAiIjC/6H,SAjIQ+6H,0CAAyBtyH,EAAAC,4BAAAC,EAAAG,qBAAAL,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAzBmyH,EAAyB5xH,UAAA,yBAAAwW,OAAA,CAAAuuD,QAAA,UAAAw0C,KAAA,QAAA9iG,QAAA,CAAAo7G,cAAA,iBAAA5xH,SAAA,CAAAX,EAAA+xB,gCAAAlxB,MAAA,GAAAC,KAAA,GAAA+D,OAAA,w+EAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3T9BhB,EAAA8E,yBAAA,UAAA9E,CAAwD,UAAxDA,CAAwD,UAAxDA,CAAwD,aAG1BA,EAAAgF,iBAAA,UAAIhF,EAAA8E,yBAAA,UAAM9E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBAAO/E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,qBAAA9E,CAAqC,iBAArCA,CAAqC,mBAEPA,EAAAgF,iBAAA,eAAQhF,EAAA+E,yBAC9B/E,EAAA0J,qBAAA,GAAAkpH,EAAA,mDAMJ5yH,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAAW9E,EAAAgF,iBAAA,+BAAwBhF,EAAA+E,wBAAA/E,KAG3CA,EAAA8E,yBAAA,WAAA9E,CAAkC,cACZA,EAAAgF,iBAAA,WAAIhF,EAAA8E,yBAAA,WAAM9E,EAAAgF,iBAAA,QAAChF,EAAA+E,yBAAO/E,EAAAgF,iBAAA,QAAChF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,uBACI9E,EAAAkB,oBAAA,cAMAlB,EAAA8E,yBAAA,gBAAW9E,EAAAgF,iBAAA,+BAAwBhF,EAAA+E,wBAAA/E,OAI/CA,EAAA8E,yBAAA,YAAA9E,CAA+D,WAA/DA,CAA+D,sBAOnDA,EAAAgF,iBAAA,yBACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,GAAAmpH,EAAA,uBAQJ7yH,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAA2B,cACLA,EAAAgF,iBAAA,uBAAgBhF,EAAA+E,yBAClC/E,EAAA8E,yBAAA,sBAAA9E,CAAqC,oBAI7BA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAuwH,qBAAA9oH,CAAA,GAIA1I,EAAA8E,yBAAA,oBAA2B9E,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBACjC/E,EAAA8E,yBAAA,oBAA8B9E,EAAAgF,iBAAA,gBAAShF,EAAA+E,yBACvC/E,EAAA8E,yBAAA,oBACI9E,EAAAgF,iBAAA,uBACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,oBACI9E,EAAAgF,iBAAA,uBACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,oBACI9E,EAAAgF,iBAAA,uBACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,oBACI9E,EAAAgF,iBAAA,sBACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,oBACI9E,EAAAgF,iBAAA,yBACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,oBACI9E,EAAAgF,iBAAA,sBACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,oBAAiC9E,EAAAgF,iBAAA,gBAAShF,EAAA+E,wBAAA/E,GAE9CA,EAAA8E,yBAAA,gBAAW9E,EAAAgF,iBAAA,+BAAwBhF,EAAA+E,wBAAA/E,KAG3CA,EAAA0J,qBAAA,GAAAopH,EAAA,aAAA9yH,CAcM,GAAA+yH,EAAA,aAdN/yH,CAcM,GAAAgzH,EAAA,aAdNhzH,CAcM,GAAAizH,EAAA,aAdNjzH,CAcM,GAAAkzH,EAAA,aAdNlzH,CAcM,GAAAmzH,EAAA,aAdNnzH,CAcM,GAAAozH,EAAA,cAdNpzH,CAcM,GAAAqzH,EAAA,cA4MVrzH,EAAA+E,gCAhTqC/E,EAAAwI,qBAAA,YAAAvH,EAAAgH,MAQIjI,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,MAAArM,EAAAuxH,iBAoCxBxyH,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,QAAAvH,EAAAgH,KAAA9O,MAAAg8B,MAAAyQ,QAaD5lC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAuwH,qBAAAxxH,CAAkC,iBAAAA,EAAAmJ,0BAAA,GAAAC,IA+BzCpJ,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuwH,qBAAAh0H,SAAA,WAeAwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuwH,qBAAAh0H,SAAA,cAYAwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuwH,qBAAAh0H,SAAA,eAAAyD,EAAAuwH,qBAAAh0H,SAAA,eAmCAwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuwH,qBAAAh0H,SAAA,cAqBAwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuwH,qBAAAh0H,SAAA,aAqBAwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuwH,qBAAAh0H,SAAA,cAqCAwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuwH,qBAAAh0H,SAAA,eA8DAwC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAuwH,qBAAAh0H,SAAA,mKAwBJ80H,CAAyB,2ICzVtC,IAAA9wH,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,wCAEA8B,mBAsD6B,eAAAC,EAAhB+7H,EAAgB,WAtD7B,SAAAA,IAAA57H,EAAAC,KAAA27H,GAwDoB37H,KAAA47H,KAAO,EAEP57H,KAAA4iD,IAAM,GAEN5iD,KAAA6iD,IAAM,EAetB/iD,SAAA67H,EAAA,EAAAp6H,IAAA,MAAAC,MAGO,WACExB,KAAKwB,QACNxB,KAAKwB,MAAQxB,KAAK6iD,KAAO,GAO7B7iD,KAAKwB,OALQxB,KAAK67H,SACZ,IAAM77H,KAAK47H,KACX57H,KAAK87H,UACL,GAAK97H,KAAK47H,KACV57H,KAAK47H,MAAQ,EAEf57H,KAAKwB,MAAQxB,KAAK4iD,MAClB5iD,KAAKwB,MAAQxB,KAAK4iD,KAAO,IAE7B5iD,KAAKy5B,SAASz5B,KAAKwB,MACvB,GAEA,CAAAD,IAAA,SAAAC,MACO,WACExB,KAAKwB,QACNxB,KAAKwB,MAAQxB,KAAK6iD,KAAO,GAO7B7iD,KAAKwB,OALQxB,KAAK67H,SACZ,IAAM77H,KAAK47H,KACX57H,KAAK87H,UACL,GAAK97H,KAAK47H,KACV57H,KAAK47H,MAAQ,EAEf57H,KAAKwB,MAAQxB,KAAK6iD,MAClB7iD,KAAKwB,MAAQxB,KAAK6iD,KAAO,GAE7B7iD,KAAKy5B,SAASz5B,KAAKwB,MACvB,GAEA,CAAAD,IAAA,WAAAC,MAIO,SAAS83B,GACZt5B,KAAKwB,MAAQ83B,EAETt5B,KAAKi5B,WACLj5B,KAAKi5B,UAAUK,EAEvB,GAEA,CAAA/3B,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAKwB,MAAQA,CACjB,GAGA,CAAAD,IAAA,mBAAAC,MAIO,SAAiBw3B,GACpBh5B,KAAKi5B,UAAYD,CACrB,GAGA,CAAAz3B,IAAA,oBAAAC,MAIO,SAAkBw3B,GACrBh5B,KAAKm5B,SAAWH,CACpB,KAAC2iG,CAAA,CA7FwB,GA6FxB/7H,SA7FQ+7H,yCAAgB,kDAAhBA,EAAgB5yH,UAAA,gBAAAwW,OAAA,CAAAq8G,KAAA,OAAAh5E,IAAA,MAAAC,IAAA,MAAAk5E,UAAA,aAAA/yH,SAAA,CAAAX,EAAAinB,6BATd,CACP,CACIhjB,QAAS9C,EAAAwwB,kBAETC,eAAapwB,EAAAqwB,YAAW,kBAAMyhG,CAAgB,GAC9CxhG,OAAO,MAEdjxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,mVAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjDGhB,EAAA8E,yBAAA,WAGI9E,EAAAuI,qBAAA,kCAAAtH,EAAAwyH,WAAoC,CAAI,KAAAzzH,EAAAuhG,0BAAxCvhG,CAAyC,oCAAAiB,EAAAuyH,UACJ,CAAI,KAAAxzH,EAAAuhG,0BADzCvhG,CAAyC,iCAAAiB,EAAAuyH,UAEP,CAAI,KAAAxzH,EAAAuhG,0BAFtCvhG,CAAyC,gCAAAiB,EAAAwyH,WAGP,CAAK,KAAAzzH,EAAAuhG,0BAHvCvhG,CAAyC,kCAAAiB,EAAAuyH,UAIN,CAAK,KAAAxzH,EAAAuhG,0BAJxCvhG,CAAyC,+BAAAiB,EAAAuyH,UAKT,CAAK,KAAAxzH,EAAAuhG,2BAErCvhG,EAAA8E,yBAAA,cAMI9E,EAAAuI,qBAAA,0BAAStH,EAAAs+B,QAAQ,GAEjBv/B,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,YAAMhF,EAAA+E,wBAAA/E,GAEpBA,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,cAMI9E,EAAAuI,qBAAA,0BAAStH,EAAA6sC,KAAK,GAEd9tC,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,SAAGhF,EAAA+E,wBAAA/E,YAhBbA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAvH,EAAA9H,OAAA8H,EAAA9H,QAAA8H,EAAAu5C,KAMAx6C,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,KAAAjE,EAAAyyH,UAAAzyH,EAAAyyH,UAAAzyH,EAAA9H,OAAA8H,EAAA9H,QAAA,SAOA6G,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAAAvH,EAAA9H,QAAA8H,EAAAs5C,mLAuBH+4E,CAAgB,sLCzD7B,IAAA9xH,EAAAhM,EAAA,OAOA2L,EAAA3L,EAAA,OACAyC,EAAAzC,EAAA,OACA4yB,EAAA5yB,EAAA,uFAiDgBwK,EAAA8E,yBAAA,YAII9E,EAAAgF,iBAAA,gCACJhF,EAAA+E,iDADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAA6nH,EAAA5oH,GAAA,iCAmBA/K,EAAAkB,oBAAA,yEAfJlB,EAAA8E,yBAAA,eAWI9E,EAAAuI,qBAAA,uBAAAqrH,EAAA5zH,EAAA2I,wBAAAysC,GAAA7/B,UAAAnH,EAAApO,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAqF,EAAAgjB,SAAAwiG,EAAA7oH,IAAgB,GAGzB/K,EAAAgF,iBAAA,gCACAhF,EAAA0J,qBAAA,EAAAmqH,EAAA,cAKA7zH,EAAAkB,oBAAA,YAIJlB,EAAA+E,iFAnBI/E,EAAAoX,sBAAA,oBAAAw8G,EAAA7oH,KAAAwC,EAAAumH,YAAA9zH,CAAkD,kBAAA4zH,EAAAG,SAAlD/zH,CAAkD,yBAAA4zH,EAAA7oH,KAAAwC,EAAAumH,YAAlD9zH,CAAkD,oBAAA4zH,EAAA7oH,KAAAwC,EAAAumH,YAAlD9zH,CAAkD,eAAA4zH,EAAA7oH,KAAAwC,EAAAumH,YAAlD9zH,CAAkD,cAAA4zH,EAAA7oH,KAAAwC,EAAAumH,aAOlD9zH,EAAAwI,qBAAA,WAAAorH,EAAA7oH,GAAAwC,EAAA+uG,MAAAsX,EAAA7oH,GAAAwC,EAAA86D,IAEAroE,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,KAAA8nH,EAAA7oH,GAAA,UAIK/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA+E,EAAAymH,QAAAJ,EAAA7oH,KA1DzBzT,wBA8EI,eAAAC,EADS08H,EACT,SAAA37H,GAAAC,EAAA07H,EAAA37H,GAAA,IAAAG,EAAAC,EAAAu7H,GAiBA,SAAAA,EAAoBt7H,GAA0B,IAAAI,EAAArB,SAAAC,KAAAs8H,IAC1Cl7H,EAAAN,EAAAO,KAAArB,OADgBgB,YAdJI,EAAAujH,KAAO,EACPvjH,EAAAsvE,GAAkB,GAAbt2D,KAAK8W,MACV9vB,EAAAm7H,eAAiB,EACjBn7H,EAAAi7H,SAAQ5rG,EAAA0C,YAAW/Y,KAAK8W,OAAOgE,UACxC9zB,EAAAuQ,KAAeyI,KAAK8W,MACpB9vB,EAAA+6H,eAAsB1rG,EAAA0C,YAAW/Y,KAAK8W,OAAOgE,UAC7C9zB,EAAAkiF,OAAS,EACTliF,EAAAo7H,UAAwB,GAyCfp7H,EAAA23B,iBAAmB,SAACC,GAAE,OAAM53B,EAAK63B,UAAYD,CAAE,EAC/C53B,EAAA83B,kBAAoB,SAACF,GAAE,OAAM53B,EAAK+3B,SAAWH,CAAE,EAAE53B,CAjCjE,CAACtB,SAAAw8H,EAAA,EAAA/6H,IAAA,cAAAC,MAEM,SAAY63B,GACXA,EAAQkjG,gBACRv8H,KAAKy8H,eAEb,GAAC,CAAAl7H,IAAA,WAAAC,MAEM,SAAS83B,GACZ,KAAIA,EAAYt5B,KAAK2kH,MAAQrrF,GAAat5B,KAAK0wE,IAC/C,KAAM/+D,EAAO,IAAIyI,KAAKkf,GACtBt5B,KAAK2R,QAAO8e,EAAAlV,KAAIvb,KAAK2R,KAAM,CACvBA,KAAMA,EAAK+qH,UACXxvD,MAAOv7D,EAAKgrH,WACZC,KAAMjrH,EAAKkrH,gBACZ3nG,UACHl1B,KAAKm8H,eAAc1rG,EAAA0C,YAAWnzB,KAAK2R,MAAMujB,UACrCl1B,KAAKi5B,WAAWj5B,KAAKi5B,UAAUK,EAAS,CAChD,GAAC,CAAA/3B,IAAA,aAAAC,MAEM,SAAWA,GACdxB,KAAK2R,KAAOnQ,EACZxB,KAAKm8H,eAAc1rG,EAAA0C,YAAW3xB,GAAO0zB,UACrCl1B,KAAKsjF,OAAS,EACdtjF,KAAKy8H,eACT,GAAC,CAAAl7H,IAAA,cAAAC,MAEM,SAAYgsF,GACfxtF,KAAKsjF,QAAUkK,EACfxtF,KAAKy8H,eACT,GAAC,CAAAl7H,IAAA,gBAAAC,MAKM,WASH,QARM8hF,EACFtjF,KAAKgB,UAAUuE,IAAI,mBAAqBvF,KAAKu8H,eAC3C5qH,KAAO8e,EAAAsxF,WAAU/hH,KAAK2R,KAAM3R,KAAKsjF,QACnCr0D,KAAQwB,EAAAqsG,gBAAYrsG,EAAAssG,cAAaprH,GAAO,CACxCqrH,aAAc15C,IAEZpyD,KAAMT,EAAA0C,YAAW/Y,KAAK8W,OACtBne,EAAO,GACNA,EAAK9N,OAAS,IACjB8N,EAAKqjB,KAAK,CACNhjB,GAAI6b,EAAMiG,UACV+nG,WAASxsG,EAAAsR,UAAS9S,EAAOiC,GACzBkrG,YAAU3rG,EAAAysG,aAAYjuG,EAAOtd,KAEjCsd,KAAQwB,EAAAkvB,SAAQ1wB,EAAO,GAE3BjvB,KAAKw8H,UAAYzpH,CACrB,KAACupH,CAAA,CAxED,CAAQh8H,EAAA8H,cAAYxI,SADX08H,0CAAqBj0H,EAAAC,4BAAAC,EAAAC,iBAAA,kDAArB8zH,EAAqBvzH,UAAA,oBAAAwW,OAAA,CAAAolG,KAAA,OAAAj0C,GAAA,KAAA6rD,eAAA,kBAAAvzH,SAAA,CAAAX,EAAAinB,6BARnB,CACP,CACIhjB,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAMoiG,CAAqB,GACnDniG,OAAO,KAEd9xB,EAAAY,qCAAAZ,EAAA+xB,gCAAAlxB,MAAA,GAAAC,KAAA,GAAA+D,OAAA,sqCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAxEGhB,EAAA8E,yBAAA,UAAA9E,CAAiB,UAAjBA,CAAiB,WAGLA,EAAAgF,iBAAA,gCACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,CAA+B,cAMvBA,EAAAuI,qBAAA,0BAAStH,EAAA6zH,aAAA,EAAe,GAExB90H,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,kBAAYhF,EAAA+E,wBAAA/E,GAE1BA,EAAA8E,yBAAA,cAKI9E,EAAAuI,qBAAA,0BAAStH,EAAA6zH,YAAY,EAAE,GAEvB90H,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,oBAAahF,EAAA+E,wBAAA/E,OAInCA,EAAA8E,yBAAA,YAGI9E,EAAA0J,qBAAA,GAAAqrH,EAAA,4CAMJ/0H,EAAA+E,yBACA/E,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,GAAAsrH,EAAA,iBAyBJh1H,EAAA+E,wBAAA/E,UA3DQA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,WAAA7K,EAAAkzH,UAAA,QAAAlzH,EAAAkzH,UAAA,GAAAppH,KAAA9J,EAAAqI,KAAA,kBAOItJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAAAvH,EAAAkzH,UAAA,GAAAppH,GAAA9J,EAAAq7G,MASAt8G,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAAAvH,EAAAkzH,UAAA,IAAAppH,GAAA9J,EAAAonE,IAYYroE,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAA4sG,sBAAA,KAAA3rG,EAAAkzH,UAAA,MAUAn0H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAkzH,kGAiCvBF,CACT,mLCxGJ,IAAAzyH,EAAAhM,EAAA,OAQA2L,EAAA3L,EAAA,OAKAy1F,EAAAz1F,EAAA,OACA4yB,EAAA5yB,EAAA,OACA8oC,EAAA9oC,EAAA,wCAsBYwK,EAAA8E,yBAAA,UAAoB9E,EAAAoiF,uBAAA,GAAyBpiF,EAAA+E,uFAG7C/E,EAAA8E,yBAAA,UAAA9E,CAA8D,qBAMtDA,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAAyb,GAAA,IAAA/a,EAAArJ,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAAM,EAAA+nB,SAAA1oB,GAAgB,GACpC1I,EAAA+E,wBAAA/E,6CALGA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA+E,EAAAjE,KAAAtJ,CAAgB,OAAAuN,EAAA+uG,KAAhBt8G,CAAgB,KAAAuN,EAAAk0G,MAAhBzhH,CAAgB,iBAAAuN,EAAA0nH,yBAzBpC39H,qBA4CI,eAAAC,EADS29H,EACT,SAAA91F,GAAA7mC,EAAA28H,EAAA91F,GAAA,IAAA3mC,EAAAC,EAAAw8H,GA0BA,SAAAA,EAAoBhkC,GAAmB,IAAAn4F,EAAArB,SAAAC,KAAAu9H,IACnCn8H,EAAAN,EAAAO,KAAArB,OADgBu5F,YAtBEn4F,EAAAo8H,aAAoB/sG,EAAA0C,YAAW/Y,KAAK8W,OAAOgE,UAIjD9zB,EAAAk8H,WAAqB,EAI9Bl8H,EAAAuQ,KAAeyI,KAAK8W,MAAM9vB,CAgBjC,CAEAtB,SAAAy9H,EAAA,EAAAh8H,IAAA,YAAAgE,IAVA,WAAoB,IAAAk4H,EAAAC,EAChB,OAAoB,QAAbD,EAAAz9H,KAAK29H,gBAAQ,IAAAF,OAAA,EAAbA,EAAexpE,WAAwB,QAAjBypE,EAAI19H,KAAK29H,gBAAQ,IAAAD,OAAA,EAAbA,EAAexpE,QACpD,GAAC,CAAA3yD,IAAA,OAAAgE,IASD,WACI,OAAO,IAAI6U,KAAKpa,KAAKw9H,aAAS,EAAK/sG,EAAA0C,YAAW,IAAI/Y,KACtD,GACA,CAAA7Y,IAAA,QAAAgE,IACA,WACI,OAAO,IAAI6U,KAAKpa,KAAK49H,WAAO,EAAKntG,EAAAuxF,aAASvxF,EAAA4C,UAAS,IAAIjZ,MAAS,EACpE,GAAC,CAAA7Y,IAAA,WAAAC,MAEM,WACHxB,KAAK29H,SAAW39H,KAAKu5F,UAAUh0F,IAAIiE,EAAAq0H,WACnC79H,KAAK2R,KAAOyI,KAAK8W,KACrB,GAEA,CAAA3vB,IAAA,WAAAC,MAIO,SAAS83B,GAAiB,IAAAwkG,EAEvBC,EAAW,IAAI3jH,KAAKpa,KAAK2R,MAC3BqsH,KAAWvtG,EAAAlV,KAAI+d,EAAW,CAC1B4P,MAAO60F,EAASxvD,WAChBllC,QAAS00F,EAASvvD,eACnBt5C,UAEC8oG,EAAWh+H,KAAK2kH,KAAKzvF,YACrB8oG,EAAWh+H,KAAK2kH,KAAKzvF,WAEzBl1B,KAAK2R,KAAOqsH,EACRh+H,KAAKi5B,WACLj5B,KAAKi5B,UAAU+kG,GAEN,QAAbF,EAAA99H,KAAKi+H,gBAAQ,IAAAH,GAAbA,EAAen2H,OACnB,GAGA,CAAApG,IAAA,aAAAC,MAIO,SAAWA,GAAa,IAAA08H,EAC3Bl+H,KAAK2R,KAAOnQ,GAAS4Y,KAAK8W,MACb,QAAbgtG,EAAAl+H,KAAKi+H,gBAAQ,IAAAC,GAAbA,EAAev2H,OACnB,GAGA,CAAApG,IAAA,mBAAAC,MAIO,SAAiBw3B,GACpBh5B,KAAKi5B,UAAYD,CACrB,GAGA,CAAAz3B,IAAA,oBAAAC,MAIO,SAAkBw3B,GACrBh5B,KAAKm5B,SAAWH,CACpB,GAAC,CAAAz3B,IAAA,mBAAAC,MAEM,SAAiBs3B,GACpB94B,KAAK84B,SAAWA,CACpB,KAACykG,CAAA,CAhGD,CAAQ52F,EAAAv+B,cAAYxI,SADX29H,0CAAkBl1H,EAAAC,4BAAAD,EAAA+yF,UAAA,kDAAlBmiC,EAAkBx0H,UAAA,mBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,2BAyBhBiqF,EAAAoC,uBAAsB,6OAjCtB,CACP,CACIppF,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAMqjG,CAAkB,GAChDpjG,OAAO,KAEd9xB,EAAAY,sCAAAuhF,mBAAA/4E,EAAAvI,MAAA,GAAAC,KAAA,EAAA+D,OAAA,sgBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,kCAtCGhB,EAAA8E,yBAAA,aAAA9E,CAQC,SAEOA,EAAAgF,iBAAA,gCACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,CAAiE,cACnDA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA8E,yBAAA,WACI9E,EAAA0J,qBAAA,EAAAosH,EAAA,cACJ91H,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAAqsH,EAAA,yBAAA/1H,EAAAqd,0EAbIrd,EAAAoX,sBAAA,aAAAnW,EAAAwvB,UAHAzwB,EAAAwI,qBAAA,UAAA+W,EAAAvf,CAA2B,WAAAiB,EAAAwvB,UAOvBzwB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAA7K,EAAAqI,KAAA,qBAOGtJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAuBN0sH,CACT,oKC7DJ,IAAA1zH,EAAAhM,EAAA,OAQA2L,EAAA3L,EAAA,OACA4yB,EAAA5yB,EAAA,uFAwBwBwK,EAAAiZ,kCAAA,GACIjZ,EAAAgF,iBAAA,gCAWJhF,EAAAoZ,kHAXIpZ,EAAAiF,oBAAA,GAAAjF,EAAA6L,6BAAA,IAAAmqH,EAAA1sH,KAAAtJ,EAAA8L,sBAAA,IAAAkqH,EAAA1sH,KAAA0sH,EAAAjrH,IAAA,kBAAA1B,EAAAotC,SAAA,iCAAAu/E,EAAA/qH,KAAA,GAAA+qH,EAAA1sH,KAAA,sCALRtJ,EAAA8E,yBAAA,kBAII9E,EAAA0J,qBAAA,EAAAusH,EAAA,sBAaAj2H,EAAAgF,iBAAA,GACJhF,EAAA+E,+EAhBI/E,EAAAwI,qBAAA,QAAAwtH,EAAAjrH,IAEe/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAA+E,EAAA45B,OAafnnC,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAA45B,MAAA,kBA7BxB7vC,yBAuDmC,eAAAC,EAAtB2+H,EAAsB,WAvDnC,SAAAA,IAAAx+H,EAAAC,KAAAu+H,GA2DoBv+H,KAAA4iD,IAAM,IAEN5iD,KAAA6iD,IAAM,GAEN7iD,KAAA47H,KAAO,GAMP57H,KAAAw+H,eAA2B,GAI3Bx+H,KAAA8+C,UAAW,EAEpB9+C,KAAA4R,SAAW,GAEX5R,KAAAy+H,iBAAqC,GAiI/C3+H,SAAAy+H,EAAA,EAAAh9H,IAAA,WAAAC,MA1HU,WACHxB,KAAKy+H,iBAAmBz+H,KAAK0+H,wBACzB1+H,KAAK4iD,IACL5iD,KAAK6iD,IACL7iD,KAAK47H,MAET57H,KAAK2+H,eACT,GAAC,CAAAp9H,IAAA,cAAAC,MAEM,SAAY63B,IAGXA,EAAQupB,KACRvpB,EAAQwpB,KACRxpB,EAAQuiG,MACRviG,EAAQilD,MACRjlD,EAAQmlG,kBAERx+H,KAAKy+H,iBAAmBz+H,KAAK0+H,wBACzB1+H,KAAK4iD,IACL5iD,KAAK6iD,IACL7iD,KAAK47H,MAET57H,KAAK2+H,gBAEb,GAEA,CAAAp9H,IAAA,WAAAC,MAIO,SAAS83B,GACZt5B,KAAK4R,SAAW0nB,EAEZt5B,KAAKi5B,WACLj5B,KAAKi5B,WAAWK,EAExB,GAGA,CAAA/3B,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAK4R,SAAWpQ,EAChBxB,KAAK2+H,eACT,GAAC,CAAAp9H,IAAA,mBAAAC,MAEM,SAAiBs3B,GACpB94B,KAAK84B,SAAWA,CACpB,GAGA,CAAAv3B,IAAA,mBAAAC,MAIO,SAAiBw3B,GACpBh5B,KAAKi5B,UAAYD,CACrB,GAGA,CAAAz3B,IAAA,oBAAAC,MAIO,SAAkBw3B,GACrBh5B,KAAKm5B,SAAWH,CACpB,GAAC,CAAAz3B,IAAA,0BAAAC,MAEO,SAAwBohD,EAAaC,EAAa+4E,GACtD,IAKwC3kG,EALlCgrF,EAA2B,GAC7B3jC,EAAOz7B,EACLlxC,EAAO3R,KAAKs+E,KAAOt+E,KAAKs+E,KAAO,KAErCpnD,EAAAC,EACqBn3B,KAAKw+H,gBAAc,IAAxC,IAAAtnG,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAA0C,KAA/BqhC,EAAM3hC,EAAAz1B,MACbygH,EAAO7rF,KAAK,CACRhjB,GAAIwlD,EACJjnD,KAAMA,KAAO8e,EAAA4N,YAAW1sB,EAAMinD,GAAQ1jC,eAAYhwB,EAClDoO,KACqB,GAAAtP,UACRysB,EAAAwY,gBADT2vB,GAAU,KACc,CACd0U,KAAMnkC,KAAKC,MAAMwvB,EAAU,OAEb,CACd1vB,MAAOC,KAAKC,MAAMwvB,EAAS,IAC3BvvB,QAASuvB,EAAS,QAGvC,OAAA5uC,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CAED,KAAO8mD,GAAQ17B,GACXq/D,EAAO7rF,KAAK,CACRhjB,GAAIkrE,EACJ3sE,KAAMA,KAAO8e,EAAA4N,YAAW1sB,EAAM2sE,GAAMppD,eAAYhwB,EAChDoO,KACa,IAATgrE,GAAS,EACH7tD,EAAAwY,gBAAe,CAAEI,QAAS,GAAK,CAAEu1F,MAAM,IACxB,GAAA56H,UACZysB,EAAAwY,gBADHq1C,GAAQ,KACU,CACdhR,KAAMnkC,KAAKC,MAAMk1C,EAAQ,OAEX,CACdp1C,MAAOC,KAAKC,MAAMk1C,EAAO,IACzBj1C,QAASi1C,EAAO,QAGlCA,GAAQs9C,EAEZ3Z,SAAOplG,KAAK,SAACgW,EAAGlU,GAAC,OAAKkU,EAAEzf,GAAKuL,EAAEvL,EAAE,GAC1B6uG,CACX,GAAC,CAAA1gH,IAAA,gBAAAC,MAEO,WAAa,IAAAq9H,EAAAz9H,EAAApB,KACS,QAAtB6+H,EAAC7+H,KAAKy+H,wBAAgB,IAAAI,GAArBA,EAAuB55H,QAChBjF,KAAKy+H,iBAAiBtvF,UAC9B,SAAClsC,GAAC,OAAKA,EAAEmQ,KAAOhS,EAAKwQ,QAAQ,GAEvB,GAAG5R,KAAKy5B,SAASz5B,KAAK6iD,IACpC,KAAC07E,CAAA,CAtJ8B,GAsJ9B3+H,SAtJQ2+H,yCAAsB,kDAAtBA,EAAsBx1H,UAAA,uBAAAwW,OAAA,CAAAqjC,IAAA,MAAAC,IAAA,MAAA+4E,KAAA,OAAAt9C,KAAA,OAAAxlD,SAAA,WAAA0lG,eAAA,iBAAAhvF,MAAA,QAAAsP,SAAA,YAAA91C,SAAA,CAAAX,EAAAinB,6BARpB,CACP,CACIhjB,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAMqkG,CAAsB,GACpDpkG,OAAO,KAEd9xB,EAAA+xB,gCAAAowD,mBAAA/4E,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,wKAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,kCAlDGhB,EAAA8E,yBAAA,UAAA9E,CAAuD,qBAAvDA,CAAuD,oBAO3CA,EAAAuI,qBAAA,uBAAAG,GAAA,OAAezH,EAAAmwB,SAAA1oB,EAAgB,GAE/B1I,EAAA0J,qBAAA,EAAA+sH,EAAA,oBAmBJz2H,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAAW9E,EAAAoiF,uBAAA,GAAyBpiF,EAAA+E,wBAAA/E,YA7BhBA,EAAA+rD,sBAAA,WAAA9qD,EAAAwvB,UAIhBzwB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAAsI,SAAAvJ,CAAkB,WAAAiB,EAAAwvB,SAAlBzwB,CAAkB,cAAAiB,EAAAsI,SAAA,YAMKvJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAm1H,yRA0C9BF,CAAsB,2ICxEnC1gI,EAAA,WACAyC,EAAAzC,EAAA,OACA2L,EAAA3L,EAAA,OAEA80F,EAAA90F,EAAA,MACAmQ,EAAAnQ,EAAA,OACA6M,EAAA7M,EAAA,OACAgQ,EAAAhQ,EAAA,OACAiQ,EAAAjQ,EAAA,OACA+M,EAAA/M,EAAA,OACA4P,EAAA5P,EAAA,OACAuQ,EAAAvQ,EAAA,OACAqQ,EAAArQ,EAAA,OACAwQ,EAAAxQ,EAAA,OAEAw8C,EAAAx8C,EAAA,OAIAkhI,GAFAlhI,EAAA,OACAA,EAAA,OACAA,EAAA,QACAmhI,EAAAnhI,EAAA,OAGAohI,GAFAphI,EAAA,OACAA,EAAA,OACAA,EAAA,QACAqhI,EAAArhI,EAAA,OAGAshI,GAFAthI,EAAA,OACAA,EAAA,MACAA,EAAA,QACAuhI,EAAAvhI,EAAA,OAEAwhI,GADAxhI,EAAA,OACAA,EAAA,QAEAyhI,GADAzhI,EAAA,OACAA,EAAA,QACA2zG,EAAA3zG,EAAA,OACA0hI,EAAA1hI,EAAA,OACA2hI,EAAA3hI,EAAA,8MAyBA8B,mBAqB6B,eAAAC,GAAhBmM,GAAgBjM,EAAA,SAAAiM,IAAAhM,EAAAC,KAAA+L,EAAA,GAAAnM,UAAhBmM,6CAAgB,kDAAhBA,yDAlBLzL,EAAAgZ,aACA9P,EAAAiC,YACAjC,EAAAwC,oBACAtB,EAAAgF,gBACAlG,EAAAwC,oBACA6B,EAAAsB,mBACArB,EAAAuB,eACAzE,EAAAgB,gBACA6B,EAAA+B,sBACApB,EAAA4B,iBACA9B,EAAA0B,kBACAvB,EAAA4B,eACAjC,EAAAyB,eACAkjF,EAAAmB,gBACAz5C,EAAAtrC,oBAIKhD,EAAgB,oCAzCzBgzH,EAAAxB,mBAAkB,CAAAh1H,EAAAgsF,KAAA9rF,EAAA4sF,gBAAA5sF,EAAA6sF,QAAA3sF,EAAA8rF,UAAA5rF,EAAA+rF,cAAA7vE,EAAA2wE,uBAgBlB6pC,EAAAjD,uBAAqB,CAAA/zH,EAAAqtF,2CAZrBqpC,EAAAQ,yBAAwB,CAAAl3H,EAAAwsF,QAAAxsF,EAAAgsF,KAAA9rF,EAAA2sF,qBAAA3sF,EAAA4sF,gBAAA5sF,EAAA6sF,QAAAtwE,EAAA06G,aAAA16G,EAAA26G,UAAA36G,EAAA46G,UAAA16G,EAAA26G,SAAAl3H,EAAAm3H,UAAA16G,EAAA26G,gBAAA36G,EAAA46G,uBAAAn3H,EAAA+rF,cAAAmsB,EAAAzN,yBAAA6N,EAAAxsB,oBAAA,oCAIxBwqC,EAAAc,wBAAuB,CAAA13H,EAAAwsF,QAAAxsF,EAAAgsF,KAAA9rF,EAAA4sF,gBAAA5sF,EAAA6sF,QAAA3sF,EAAA8rF,UAAA2sB,EAAA8e,cAAA9e,EAAA+e,eAAAt3H,EAAA+rF,cAAAi7B,EAAAhkC,6BAAA,CAAAtjF,EAAAotF,4CAGvB0pC,EAAAe,wBAAuB,CAAA73H,EAAAwsF,QAAAxsF,EAAAgsF,KAAA5rF,EAAA8rF,UAAAzvE,EAAA06G,aAAAW,EAAAtqC,WAAAuqC,GAAAC,YAAAD,GAAAE,aAAAF,GAAAG,cAAAH,GAAAI,WAAA73H,EAAA+rF,cAAAi7B,EAAAhkC,4BAAAs1B,EAAAxsB,oBAAA,CAAApsF,EAAAotF,4CACvB6b,EAAAU,4BAA2B,CAAA3pG,EAAAwsF,QAAAxsF,EAAAgsF,KAAA9rF,EAAAk4H,mBAAAl4H,EAAA2sF,qBAAA3sF,EAAA4sF,gBAAA5sF,EAAAm4H,qBAAAn4H,EAAAo4H,mBAAAp4H,EAAAq4H,gBAAAn4H,EAAA8rF,UAAAzvE,EAAA06G,aAAA16G,EAAA+7G,SAAA77G,EAAA26G,SAAAmB,EAAAC,UAAAt4H,EAAAm3H,UAAAj3H,EAAA+rF,cAAAssC,EAAAxsC,eAAAysB,EAAAxsB,mBAH3ByqC,EAAA+B,uBAEA9B,EAAAe,yBAAuB,CAAA73H,EAAAotF,4CAIvB2pC,EAAA8B,yBAAwB,CAAA74H,EAAAgsF,KAAA9rF,EAAA2sF,qBAAA3sF,EAAA44H,oBAAA54H,EAAA4sF,gBAAA5sF,EAAA6sF,QAAA3sF,EAAA8rF,UAAAzvE,EAAA06G,aAAA16G,EAAA46G,UAAA16G,EAAA26G,SAAAmB,EAAAC,UAAAt4H,EAAAm3H,UAAA1e,EAAA8e,cAAA9e,EAAA+e,eAAAt3H,EAAA+rF,cAAAssC,EAAAxsC,eAfxBqqC,EAAAxB,oBAAkB,oCAiBlBiC,EAAA7E,0BAAyB,CAAApyH,EAAAwsF,QAAAxsF,EAAAgsF,KAAA9rF,EAAA2sF,qBAAA3sF,EAAA4sF,gBAAA5sF,EAAAm4H,qBAAAn4H,EAAA6sF,QAAA7sF,EAAAo4H,mBAAAp4H,EAAAq4H,gBAAAr4H,EAAA64H,cAAAt8G,EAAA06G,aAAA16G,EAAA+7G,SAAA77G,EAAA26G,SAAAmB,EAAAC,UAAAt4H,EAAAm3H,UAAAO,EAAAtqC,WAAAwrC,GAAAC,YAjBzBzC,EAAAxB,mBACAyB,EAAAT,uBAIAW,EAAAuC,wBAAsB,CAAAl5H,EAAAotF,UAAAptF,EAAAqtF,wOC7C1B,IAAA/rF,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,OACAyC,EAAAzC,EAAA,OACA00H,EAAA10H,EAAA,OACAk7C,EAAAl7C,EAAA,KAEA27G,EAAA37G,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,kGAegBwK,EAAA8E,yBAAA,iBAAA9E,CAIC,UAJDA,CAIC,SAEYA,EAAAgF,iBAAA,GAAehF,EAAA+E,yBACpB/E,EAAA8E,yBAAA,YAAqB9E,EAAAgF,iBAAA,eAAahF,EAAA+E,yBAClC/E,EAAA8E,yBAAA,WAAgC9E,EAAAgF,iBAAA,GAAiBhF,EAAA+E,wBAAA/E,6BANrDA,EAAAwI,qBAAA,cAAA6wH,EAAA,KAAAA,EAAA/6H,OAIS0B,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAytH,EAAApuH,MAE2BjL,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA,MAAAytH,EAAA,KAAAA,EAAA/6H,6BAMhD0B,EAAAs9C,6BAAA,GA3BRhmD,2BAsCqC,eAAAC,EAAxB+hI,EAAwB,WAtCrC,SAAAA,IAAA,IAAAvgI,EAAApB,KAAAD,EAAAC,KAAA2hI,GAwCoB3hI,KAAAuY,SAAQoB,EAAAO,IAAG,GAAGnX,QAC1B3C,EAAAqxB,WAAU,oBACN+nF,EAAA/mD,kBAAiB1vD,QAAK3C,EAAA+xB,YAAW,SAAClvB,GAAC,SAAK0W,EAAAO,IAAG,GAAiB,GAAE,MAElE9Z,EAAAqxB,WAAU,SAAC1e,GAAI,OACX4G,EAAAioH,IAAGh9H,WAAA,EAAAme,EACIhQ,EAAK4I,IAAI,SAAC1Y,GAAC,SACVsvH,EAAA1D,WAAU5rH,EAAEmQ,IAAIrQ,QAAK3C,EAAA+xB,YAAW,SAAClvB,GAAC,SAAK0W,EAAAO,IAAG,KAAK,GAAE,IAExD,MAEL9Z,EAAAub,KAAI,SAAC1Y,GAAC,SAAK3C,EAAA6sC,QAAM,IAAE7sC,EAAAmG,gBAAazC,OAAA+e,EAAK9f,IAAI,QAAQ,MACjD7C,EAAAmyB,aAAY,IAETvyB,KAAA84B,UAAW,EAyBF94B,KAAA+4B,iBAAmB,SAACC,GAAqB,OACpD53B,EAAK63B,UAAYD,CAAE,EACRh5B,KAAAk5B,kBAAoB,SAACF,GAAqB,OACrD53B,EAAK+3B,SAAWH,CAAE,EACPh5B,KAAAo5B,iBAAmB,SAACpQ,GAAU,OAAM5nB,EAAK03B,SAAW9P,CAAC,EAxBrElpB,SAAA6hI,EAAA,EAAApgI,IAAA,WAAAC,OAAAqgI,EAAApgI,EAAAC,IAAAC,KAIO,SAAAC,EAAe+E,GAAa,IAAA4R,EAAA,OAAA7W,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACXpC,KAAKuY,MAAMxV,QAAK3C,EAAA2b,MAAK,IAAI7Y,YAAW,OAAlDqV,EAAKrW,EAAA4B,KACX9D,KAAK8b,KAAOvD,GAAO6W,KAAK,SAACnsB,GAAC,OAAKA,EAAE0D,QAAUA,CAAK,GAC3C3G,KAAK8b,OAAM9b,KAAK8b,KAAO,IAAIi9B,EAAAmO,KAAK,CAAEvgD,WACnC3G,KAAKi5B,WAAWj5B,KAAKi5B,UAAUj5B,KAAK8b,MAAM,wBAAA5Z,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACjD,SAAAy5B,EAAAzc,GAAA,OAAA6kH,EAAAj9H,MAAA5E,KAAA6E,UAAA,IAED,CAAAtD,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAK8b,KAAOta,EACF,MAALA,KAAOmF,QAAO3G,KAAK8b,QAAOxb,EAAAmG,eACnC,KAACk7H,EAlBD,IAAAE,CAkBC,CAvCgC,GAuChCjiI,SAvCQ+hI,yCAAwB,kDAAxBA,EAAwB54H,UAAA,wBAAAC,SAAA,CAAAX,EAAAinB,6BARtB,CACP,CACIhjB,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAMynG,CAAwB,GACtDxnG,OAAO,MAEdjxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,qKAXuBsiB,UAAAC,MAAAC,EAAA,uOAtBpBrnB,EAAA8E,yBAAA,qBAAA9E,CAAoD,kBAG5CA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAAmwB,SAAA1oB,EAAgB,GAOjC1I,EAAA0J,qBAAA,EAAA+vH,EAAA,kDAWJz5H,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAAA9E,EAAAulB,iBAAA,KAAgCvlB,EAAA+E,wBAAA/E,GAEpCA,EAAA0J,qBAAA,EAAAgwH,EAAA,2DAtBQ15H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBAAAvH,EAAAwS,KAAA,KAAAxS,EAAAwS,KAAAnV,MAAA0B,CAA4B,WAAAiB,EAAAwvB,SAA5BzwB,CAA4B,oBAAAiB,EAAAwS,MAAAxS,EAAAwS,KAAAnV,MAAA2C,EAAAwS,KAAAxI,MAAAhK,EAAAwS,KAAAnV,MAAA,eASP0B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAArM,EAAAiP,QAadlQ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAxI,EAAAsN,sBAAA,IAAArM,EAAAiP,sIAWVopH,CAAwB,8SChDrC,IAAA3tE,EAAAn2D,EAAA,OACAgM,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,OAGAyC,GADAzC,EAAA,MACAA,EAAA,QASA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAEAmkI,GADAnkI,EAAA,OACAA,EAAA,iIAWYwK,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,WAAA9E,CAIC,iBACyCA,EAAAgF,iBAAA,SAAGhF,EAAA+E,yBACzC/E,EAAA8E,yBAAA,UAAA9E,EAAAulB,iBAAA,MAA0CvlB,EAAA+E,yBAC1C/E,EAAA8E,yBAAA,cAGI9E,EAAAuI,qBAAA,kBAAAG,GAAA1I,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAU9I,EAAA+I,sBAAA8O,EAAA+hH,aAAAlxH,GAAoB,GAHlC1I,EAAA+E,wBAAA/E,GAMRA,EAAAoZ,4EAVQpZ,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,0BAAAvyC,EAAA0tE,OAAA,sEAWRj7E,EAAA8E,yBAAA,YAMI9E,EAAAkB,oBAAA,YAKAlB,EAAA8E,yBAAA,WAAA9E,CAGC,WAHDA,CAGC,eAKoBA,EAAAuI,qBAAA,uBAAAsxH,EAAA75H,EAAA2I,wBAAA8M,GAAAF,UAAAG,EAAA1V,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA2M,EAAAokH,SAAAD,GAAa,GAC/B75H,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,UAAIhF,EAAA+E,wBAAA/E,GAElBA,EAAA8E,yBAAA,eAAa9E,EAAAuI,qBAAA,uBAAAsxH,EAAA75H,EAAA2I,wBAAA8M,GAAAF,UAAArH,EAAAlO,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAmF,EAAA6rH,UAAAF,GAAc,GAChC75H,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,gBAAUhF,EAAA+E,wBAAA/E,GAExBA,EAAA8E,yBAAA,gBAAa9E,EAAAuI,qBAAA,uBAAAsxH,EAAA75H,EAAA2I,wBAAA8M,GAAAF,UAAAQ,EAAA/V,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAgN,EAAAikH,YAAAH,GAAgB,GAClC75H,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,YAAKhF,EAAA+E,wBAAA/E,iEAtB3BA,EAAA8/C,sBAAA,0BAAA52C,EAAA+xE,OAAA,QAIIj7E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,SAAAqxH,4BAgCA75H,EAAAkB,oBAAA,8EAEIlB,EAAAwI,qBAAA,QAAAyxH,EAAA79C,SAAAp8E,CAAuB,sCAI3BA,EAAA8E,yBAAA,iBACK9E,EAAAgF,iBAAA,aAAOhF,EAAA+E,gDAEZ/E,EAAA8E,yBAAA,WAAA9E,CAIC,iBACwCA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,iEAtBlDA,EAAA8E,yBAAA,YAMI9E,EAAAuI,qBAAA,uBAAA0xH,EAAAj6H,EAAA2I,wBAAA0zC,GAAA9mC,UAAA8C,EAAArY,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAAsP,EAAA6hH,YAAAD,GAAiB,GAE1Bj6H,EAAA0J,qBAAA,EAAAywH,EAAA,8BAAAn6H,CAKwB,EAAAo6H,EAAA,kBALxBp6H,CAKwB,EAAAq6H,EAAA,cAW5Br6H,EAAA+E,kFApBI/E,EAAA8/C,sBAAA,0BAAAnxC,EAAAssE,OAAA,QACAj7E,EAAAwI,qBAAA,aAAAyxH,EAAAv8H,OAIKsC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAyxH,EAAAv8H,OAKMsC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAyxH,EAAAv8H,OAKNsC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAyxH,EAAAv8H,iCApBbsC,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAA4wH,EAAA,4CAyBJt6H,EAAAoZ,0EAvByBpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAjE,EAAAkxH,wEAwBzBv6H,EAAA8E,yBAAA,eAMI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6Q,GAAA,IAAAC,EAAAzZ,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAA0Q,EAAAwhE,OAAAxhE,EAAAwhE,OAA2B,EAAC,GAE5Bj7E,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,kBAAYhF,EAAA+E,wBAAA/E,6CAJtBA,EAAAwI,qBAAA,eAAAK,EAAAoyE,sEAMJj7E,EAAA8E,yBAAA,eAMI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAqsD,GAAA,IAAAxY,EAAAx8C,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAAyzC,EAAAy+B,OAAAz+B,EAAAy+B,OAA2B,EAAC,GAE5Bj7E,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,mBAAahF,EAAA+E,wBAAA/E,6CAJvBA,EAAAwI,qBAAA,WAAA4F,EAAA6sE,QAAA7sE,EAAAxR,OAAAwR,EAAAosH,0EASAx6H,EAAA8E,yBAAA,qBAEI9E,EAAAuI,qBAAA,yBAAAkyH,EAAAz6H,EAAA2I,wBAAAs0C,GAAA1nC,UAAA2nC,EAAAl9C,EAAA8I,0BAAA,OAAW9I,EAAA+I,sBAAAm0C,EAAA88E,YAAAS,GAAiB,GAE5Bz6H,EAAA8E,yBAAA,YAA+B9E,EAAAgF,iBAAA,GAAUhF,EAAA+E,yBACzC/E,EAAA8E,yBAAA,cAAA9E,CAA2D,cAC7CA,EAAAgF,iBAAA,YAAMhF,EAAA+E,wBAAA/E,+BAFWA,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA6uH,GACTz6H,EAAAiF,oBAAA,GAAAjF,EAAA+rD,sBAAA,uBAAA0uE,IA9G1CnjI,0BA8JqC,eAAAC,EAAxBwgI,EAAwB,SAAAz/H,GAAAC,EAAAw/H,EAAAz/H,GAAA,IAgFhCoiI,EAhFgCjiI,EAAAC,EAAAq/H,GA4BjC,SAAAA,EACY4C,EACA/qH,EACAjX,GAA0B,IAAAI,EAAArB,SAAAC,KAAAogI,IAElCh/H,EAAAN,EAAAO,KAAArB,OAJQgjI,aACA5hI,EAAA6W,UACA7W,EAAAJ,YA7BLI,EAAA2R,KAAiB,GAEjB3R,EAAA6hI,WAAa,IAAItpH,EAAAqB,gBAA0B,IAC1C5Z,EAAA8hI,aAAe,IAAIvpH,EAAAqB,gBAAiC,IAC5C5Z,EAAAgjF,YAAchjF,EAAK8hI,aAAa/nH,eACzC/Z,EAAAkiF,OAAiB,EAEjBliF,EAAAyhI,WAAqB,EAEZzhI,EAAAozD,WAAa,CAACR,EAAA0B,MAAO1B,EAAAyB,OAErBr0D,EAAAwhI,WAAUjpH,EAAA+I,eAAc,CACpCthB,EAAKgjF,YACLhjF,EAAK6hI,aACNlgI,QAAK3C,EAAAub,KAAI,SAAAzV,GAAA,IAAA6B,EAAA6a,EAAA1c,EAAA,GAAQi9H,GAAGp7H,EAAA,UAALA,EAAA,GAAgB8T,OAAO,SAACoW,GAAC,OAAKkxG,GAAIt9H,SAASosB,EAAE7e,GAAG,EAAC,IA+FnDhS,EAAA23B,iBAAmB,SAACC,GAAyB,OACxD53B,EAAK63B,UAAYD,CAAE,EACR53B,EAAA83B,kBAAoB,SAACF,GAAyB,OACzD53B,EAAK+3B,SAAWH,CAAE,EAAE53B,CAhFzB,CAACtB,SAAAsgI,EAAA,EAAA7+H,IAAA,SAAAgE,IAhBD,WACI,OAAOvF,KAAK+S,KAAK9N,OAASjF,KAAKkjI,aAAatqH,WAAW3T,OAAS,CACpE,GAAC,CAAA1D,IAAA,kBAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,kBAC9B,GAAC,CAAAhE,IAAA,kBAAAC,MAiBM,WAAe,IAAAuD,EAAA/E,KACZ4tG,EAAM5tG,KAAKojI,SAASh3C,cAAckO,wBACxCt6F,KAAK6iI,WAAa15F,KAAKC,MAAMwkE,EAAIxmG,MAAQ,KACzCpH,KAAK4S,aACD,iBACA5S,KAAKokF,YAAYtxE,UAAU,SAACC,GACxB,IACwBkkB,EADlBzN,EAAUzkB,EAAKk+H,WAAWrqH,WAAWse,EAAAC,EAC1B3N,GAAO,QAAA4N,GAAA,WAAE,IAAfhkB,EAAE6jB,EAAAz1B,MACHsa,GAAO/I,EAAKqc,KAAK,SAACnsB,IAAC,OAAKA,GAAEmQ,KAAOA,CAAE,GACrC0I,IAAQA,GAAK2oE,UAAY,MACzB1/E,EAAKs+H,YAAYvnH,GAAKolE,MACtBn8E,EAAKk+H,WAAW7gI,KACZ2C,EAAKk+H,WAAWrqH,WAAWiD,OAAO,SAAC5Y,IAAC,OAAKA,KAAMmQ,CAAE,MAL7D,IAAA8jB,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAAAH,IAQC,OAAApN,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACL,GAER,GAAC,CAAAj2B,IAAA,WAAAC,MAEM,SAASgM,GACZxN,KAAKgjI,WAAWM,KAAK91H,IAAG,EACxBlN,EAAAsrE,YAAW,gCACf,GAAC,CAAArqE,IAAA,YAAAC,MAEM,SAAUgM,GAAc,GAAC,CAAAjM,IAAA,cAAAC,MAEzB,SAAYgM,GACfxN,KAAKy5B,SAASz5B,KAAK+S,KAAK8I,OAAO,SAAC5Y,GAAC,OAAKA,IAAMuK,CAAG,GACnD,GAAC,CAAAjM,IAAA,WAAAC,MAEM,SAASusB,GACPA,EAAMvsB,QACXxB,KAAKy5B,YAASn5B,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EAAK/iB,KAAK+S,MAAI,CAAEgb,EAAMvsB,UAC1CusB,EAAMw1G,UAAUC,aAAahiI,MAAQ,GACzC,GAAC,CAAAD,IAAA,cAAAC,MAEM,SAAYgM,GACfxN,KAAKy5B,YAASn5B,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EAAK/iB,KAAK+S,MAAI,CAAEvF,KACxC,GAAC,CAAAjM,IAAA,eAAAC,OAAAuhI,EAAAthI,EAAAC,IAAAC,KAEM,SAAAC,EAAmBmsB,GAAK,IAAA0oB,EAAA2c,EAAAnhC,EAAA7e,GAAA,OAAA1R,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACtBpC,KAAKyjI,gBAAe,CAAAvhI,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAEzB,GACW,OAFLkzC,EAA4B1oB,EAAMolC,UAEpC1c,EAAS2c,MAAK,CAAAlxD,EAAAE,KAAA,SAEd,KADMgxD,EAAkB3c,EAAQ2c,OAEtBnuD,OAAM,CAAA/C,EAAAE,KAAA,SACH6vB,EAAI,EAAC,YAAEA,EAAImhC,EAAMnuD,QAAM,CAAA/C,EAAAE,KAAA,SAAAF,SAAAE,KAAA,GACXpC,KAAK4jF,WAAWxwB,EAAMnhC,IAAG,QAApC7e,GAAElR,EAAA4B,KACR9D,KAAKijI,WAAW7gI,KAAI,GAAA4B,OAAA+e,EAAK/iB,KAAKijI,WAAWrqH,YAAU,CAAExF,MAAK,QAF5B6e,IAAG/vB,EAAAE,KAAA,iCAAAF,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAMhD,SAAAiiI,EAAAjlH,GAAA,OAAA+lH,EAAAn+H,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,WAAAC,MAEM,SAASA,GACZxB,KAAK+S,KAAOvR,EACRxB,KAAKi5B,WAAWj5B,KAAKi5B,UAAUz3B,EACvC,GAEA,CAAAD,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAK+S,KAAOvR,CAChB,GAAC,CAAAD,IAAA,aAAAC,MAOM,SAAW6xD,GAAU,IAAAltD,EAAAnG,KACxB,OAAO,IAAI4D,QAAgB,SAACC,GACxB,IAAI6/H,GAAW,EACTC,EAAY,SAAC1sH,GACVysH,IACD7/H,EAAQoT,EAAQ7D,IAChBswH,GAAW,GAEfv9H,EAAK+8H,aAAa9gI,KAAI,GAAA4B,OAAA+e,EACf5c,EAAK+8H,aACHtqH,WACAiD,OAAO,SAAC5Y,IAAC,OAAKA,GAAEmQ,KAAO6D,EAAQ7D,EAAE,IAAC,CACvC6D,IAER,EACoB9Q,EAAKnF,UAAUuE,IAAI,2BAEnC,EAAAjF,EAAAsjF,YACIvwB,GACCltD,EAAKnF,UAAUuE,IAAI,uBACpBY,EAAKnF,UAAUuE,IAAI,kCACf,QACNuN,UAAU6wH,EAAWA,EAAW,WAC9Bx9H,EAAKy9H,sBACT,GAEYz9H,EAAK8R,QAAQrD,KAAKotH,EAAAtxB,gCAAiC,CAC3DhuG,KAAM,CAAE2wD,UAER56C,cAAc3F,UAAU,SAACmE,GACpBA,MACL3W,EAAAsjF,YACI3sE,EAAQo8C,KACRp8C,EAAQ05F,UACR15F,EAAQ6sE,aACVhxE,UAAU6wH,EAAWA,EAAW,WAC9Bx9H,EAAKy9H,sBACT,EACJ,EAER,EACJ,GAAC,CAAAriI,IAAA,uBAAAC,MAEO,WACJ,IAAMqiI,EAAY7jI,KAAKkjI,aAClBtqH,WACAiD,OAAO,SAACw3C,GAAI,OAAKA,EAAKoxB,UAAY,GAAG,GAC1Co/C,EAAU96G,QAAQ,SAACkJ,GAAC,cAAYA,EAAEkyD,MAAM,GACpCrJ,cACAA,aAAa52E,QACT,oBACAG,KAAKC,UAAUu/H,GAG3B,KAACzD,CAAA,CA1KgC,CAAQ9/H,EAAA8H,cAAYxI,SAA5CwgI,0CAAuB/3H,EAAAC,4BAAAC,EAAAu7H,WAAAz7H,EAAAC,4BAAAG,EAAAsQ,WAAA1Q,EAAAC,4BAAAK,EAAAH,iBAAA,kDAAvB43H,EAAuBr3H,UAAA,uBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,6JARrB,CACP,CACIiD,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAMkmG,CAAuB,GACrDjmG,OAAO,KAEd9xB,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,2qBAxCwBsiB,UAAAC,MAAAC,EAAA,ucApGkBF,UAAAG,MAAAD,EAAA,4wDAbvCrnB,EAAA8E,yBAAA,aAII9E,EAAAuI,qBAAA,2BAAiBtH,EAAAy6H,iBAAiB,KAAA17H,EAAAuhG,2BAElCvhG,EAAA0J,qBAAA,EAAAiyH,EAAA,qBAAA37H,CAce,EAAA47H,EAAA,aAdf57H,CAce,EAAA67H,EAAA,qBAdf77H,CAce,EAAA87H,EAAA,eAdf97H,CAce,EAAA+7H,EAAA,gBA+EnB/7H,EAAA+E,yBACA/E,EAAA8E,yBAAA,qBAAA9E,CAAoD,uBAE5CA,EAAA0J,qBAAA,GAAAsyH,EAAA,sBASJh8H,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAMI9E,EAAAuI,qBAAA,gCAAAG,GAAA,OAAwBzH,EAAAg7H,SAAAvzH,EAAgB,GAN5C1I,EAAA+E,wBAAA/E,0CA1GeA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAm6H,iBAiBKp7H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAyJ,MA6BL1K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAm6H,iBA8BVp7H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAArE,OAAAqE,EAAAu5H,YAUAx6H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAArE,OAAAqE,EAAAu5H,YAWoBx6H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAyJ,MAYrB1K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,kBAAA4sC,EAAAp1C,CAA4B,gCAAAiB,EAAAkrD,WAA5BnsD,CAA4B,8gBAwC/B+3H,CAAwB,gLCjLrC,IAAAv2H,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,OAGAm2D,EAAAn2D,EAAA,2HAkDgBwK,EAAA8E,yBAAA,oBAEI9E,EAAAuI,qBAAA,yBAAAowD,EAAA34D,EAAA2I,wBAAAyb,GAAA7O,UAAAlM,EAAArJ,EAAA8I,0BAAA,OAAW9I,EAAA+I,sBAAAM,EAAAk2B,OAAAo5B,GAAY,GAEvB34D,EAAA8E,yBAAA,YAAgC9E,EAAAgF,iBAAA,GAAUhF,EAAA+E,yBAC1C/E,EAAA8E,yBAAA,aAAA9E,CAA2D,cAC7CA,EAAAgF,iBAAA,YAAMhF,EAAA+E,wBAAA/E,+BAFYA,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA+sD,GACV34D,EAAAiF,oBAAA,GAAAjF,EAAA+rD,sBAAA,uBAAA4M,IAjD1C,SAAgBujE,EACZphB,EACAp1F,GAEA,GAAKo1F,EACL,KAAMptD,EAAQhoC,EAAMgoC,MACdv0D,EAAQusB,EAAMvsB,MACd0hE,EAAYigD,EAAQ3hH,OACrBA,GAAS,IAAIg0C,SACd0tB,EAAU9sC,KAAK50B,GACf2hH,EAAQ1pF,SAASypC,IAIjBnN,IACAA,EAAMv0D,MAAQ,IAEtB,CAMA,SAAgBgjI,EACZrhB,EACArnG,GAEA,GAAKqnG,EAGL,KAAMjgD,EAAYigD,EAAQ3hH,MACpBy0D,EAAQiN,EAAUhN,QAAQp6C,GAE5Bm6C,GAAS,IACTiN,EAAUh0B,OAAO+mB,EAAO,GACxBktD,EAAQ1pF,SAASypC,GAAS,CAElC,CArCAvjE,cAAA4kI,EAuBA5kI,iBAAA6kI,EAgBA7kI,yBAmCmC,eAAAC,EAAtB6hI,EAAsB,WAnCnC,SAAAA,IAAA,IAAArgI,EAAApB,KAAAD,EAAAC,KAAAyhI,GAoCoBzhI,KAAAw0D,WAAuB,CAACR,EAAAyB,MAAOzB,EAAA0B,OAE/B11D,KAAAykI,YAAc,GAEvBzkI,KAAAwB,MAAa,GAUJxB,KAAAm2C,IAAM,SAAC3xB,GAAoB,OACvC+/G,EACI,CAAE/iI,MAAOJ,EAAKI,MAAOi4B,SAAU,SAACxH,GAAC,OAAK7wB,EAAKq4B,SAASxH,EAAE,GACtDzN,EACH,EAGWxkB,KAAA4nC,OAAS,SAAC9rB,GAAO,OAC7B0oH,EACI,CAAEhjI,MAAOJ,EAAKI,MAAOi4B,SAAU,SAACxH,GAAC,OAAK7wB,EAAKq4B,SAASxH,EAAE,GACtDnW,EACH,EAELhc,SAAA2hI,EAAA,EAAAlgI,IAAA,WAAAC,MAIO,SAAS83B,GACZt5B,KAAKwB,MAAQ83B,EAETt5B,KAAKi5B,WACLj5B,KAAKi5B,UAAUK,EAEvB,GAEA,CAAA/3B,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAKwB,MAAQA,CACjB,GAGA,CAAAD,IAAA,mBAAAC,MAIO,SAAiBw3B,GACpBh5B,KAAKi5B,UAAYD,CACrB,GAGA,CAAAz3B,IAAA,oBAAAC,MAIO,SAAkBw3B,GACrBh5B,KAAKm5B,SAAWH,CACpB,KAACyoG,CAAA,CAhE8B,GAgE9B7hI,SAhEQ6hI,yCAAsB,kDAAtBA,EAAsB14H,UAAA,sBAAAwW,OAAA,CAAAi1C,WAAA,aAAAiwE,YAAA,eAAAz7H,SAAA,CAAAX,EAAAinB,6BATpB,CACP,CACIhjB,QAAS9C,EAAAwwB,kBAETC,eAAapwB,EAAAqwB,YAAW,kBAAMunG,CAAsB,GACpDtnG,OAAO,MAEdjxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,mSAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA9BGhB,EAAA8E,yBAAA,qBAAA9E,CAAoD,uBAE5CA,EAAA0J,qBAAA,EAAA2yH,EAAA,sBASJr8H,EAAA+E,yBACA/E,EAAA8E,yBAAA,aAMI9E,EAAAuI,qBAAA,gCAAAG,GAAA,OAAwBzH,EAAA6sC,IAAAplC,EAAW,GANvC1I,EAAA+E,wBAAA/E,0CATyBA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA9H,OAUrB6G,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAvH,EAAAm7H,aAAA,iBAAAp8H,CAA+C,kBAAAs8H,EAA/Ct8H,CAA+C,gCAAAiB,EAAAkrD,WAA/CnsD,CAA+C,kJAmBlDo5H,CAAsB,sKCpFnC,IAAA53H,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,OAIAy7G,GAHAz7G,EAAA,OAGAA,EAAA,QACAyhI,EAAAzhI,EAAA,OACA4yB,EAAA5yB,EAAA,UACAA,EAAA,uHAsBgBwK,EAAA8E,yBAAA,kBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4E,EAAAyyH,gBAAA,MAxBpBjlI,2BAmDqC,eAAAC,EAAxBilI,EAAwB,WAYjC,SAAAA,EACY5sH,EACAjX,GAA0BjB,EAAAC,KAAA6kI,GAD1B7kI,KAAAiY,UACAjY,KAAAgB,YAZIhB,KAAA2R,KAAOyI,KAAK8W,MAGrBlxB,KAAAwB,MAA2B,CAAE8uB,QAAS,OAU1C,CAACxwB,SAAA+kI,EAAA,EAAAtjI,IAAA,cAAAC,MAEG,SAAY63B,GACf,GAAIA,EAAQ1nB,MAAQ3R,KAAK2R,KAAM,CAC3B,IAAMA,EAAO,IAAIyI,KAAKpa,KAAK2R,MAAM+qH,UAC3B5nH,EAAWq0B,KAAKC,MAAMz3B,EAAO,IAAMA,EAAO,EAAI,EAAI,GACxD3R,KAAK8kI,kBAAiB,GAAA9gI,OAAM8Q,GAAQ9Q,OACnB,IAAb8Q,EAAiB,KAAoB,IAAbA,EAAiB,KAAO,OAElC,IAAbA,GAAkBnD,GAAQ,IAAoB,IAAbmD,KAClC9U,KAAK8kI,kBAAoB,QACZ,IAAbhwH,IAAgB9U,KAAK8kI,kBAAoB,SAC7C9kI,KAAKwB,MAAKutB,IAAA,GACH/uB,KAAKwB,OAAK,IACbytB,MAAOjvB,KAAK2R,KACZ4tG,aAAev/G,KAAKwB,MAAM8uB,QAEpBtwB,KAAKwB,MAAM+9G,aADX,CAAC,IAAInlG,KAAKpa,KAAK2R,MAAMoyG,YAG/B/jH,KAAKy5B,SAASz5B,KAAKwB,OAE3B,GAAC,CAAAD,IAAA,kBAAAgE,IAED,WACI,SAAO+zG,EAAAxqF,kBAAiB9uB,KAAKwB,MACjC,GAEA,CAAAD,IAAA,WAAAC,MAIO,SAAS83B,GACZt5B,KAAKwB,MAAQ83B,EAETt5B,KAAKi5B,WACLj5B,KAAKi5B,UAAUK,EAEvB,GAEA,CAAA/3B,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAKwB,MAAQA,GAAU,EAC3B,GAGA,CAAAD,IAAA,mBAAAC,MAIO,SAAiBw3B,GACpBh5B,KAAKi5B,UAAYD,CACrB,GAGA,CAAAz3B,IAAA,oBAAAC,MAIO,SAAkBw3B,GACrBh5B,KAAKm5B,SAAWH,CACpB,GAAC,CAAAz3B,IAAA,4BAAAC,MAEM,WAAyB,IAAAJ,EAAApB,KACvBA,KAAKwB,MAAM8uB,UACZtwB,KAAKwB,MAAM+9G,aAAe,CAAC,IAAInlG,KAAKpa,KAAK2R,MAAMoyG,WAEnD,IAAM1rG,EAAMrY,KAAKiY,QAAQrD,KAAK0qH,EAAA8B,yBAA0B,CACpD1+H,KAAM,CAAElB,MAAOxB,KAAKwB,SAExBxB,KAAKy5B,SAAQ1K,IAAA,GAAM/uB,KAAKwB,OAAK,IAAE65G,SAAU,UACzChjG,EAAII,cAAc3F,UAAU,SAACpQ,GACzBtB,EAAKq4B,SAAQ1K,IAAA,GACLrsB,GAAQtB,EAAKI,OAAK,IACtB65G,SAAU34G,EAAO,iBAAoBtB,EAAK2jI,YAElD,EACJ,GAAC,CAAAxjI,IAAA,YAAAC,MAEM,SAAU8uB,GACb,IAAM00G,EAAc,IAAI5qH,KAAKpa,KAAK2R,MAAMoyG,SAClCkhB,EACFjlI,KAAKgB,UAAUuE,IAAI,kCAAoC,IAC3DvF,KAAK+kI,UAAY/kI,KAAKwB,MAAM65G,SACZ,SAAZ/qF,EACAtwB,KAAKy5B,SAAS,CACVnJ,QAAS,KACT+qF,SAAU,OACVkE,aAAc,CAACylB,KAEA,UAAZ10G,GASY,WAAZA,GASY,YAAZA,EAjBPtwB,KAAKy5B,SAAS,CACVnJ,UACA+qF,SAAU/qF,EACVrB,MAAOjvB,KAAK2R,KACZ4S,OAAKkM,EAAA4C,aAAS5C,EAAAkvB,SAAQ3/C,KAAK2R,KAAMszH,IAAqB/vG,UACtDqqF,aAAc,CAACylB,GACfhvG,SAAU,IAoBK,WAAZ1F,GACPtwB,KAAKy5B,SAAS,CACVnJ,UACA+qF,SAAU/qF,EACVrB,MAAOjvB,KAAK2R,KACZ4S,OAAKkM,EAAAuxF,UAAShiH,KAAK2R,KAAM,GAAGujB,UAC5BqqF,aAAc,CAACylB,GACfhvG,SAAU,GAGtB,KAAC6uG,CAAA,CAhJgC,GAgJhCjlI,SAhJQilI,0CAAwBx8H,EAAAC,4BAAAC,EAAAwQ,WAAA1Q,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAxBq8H,EAAwB97H,UAAA,uBAAAwW,OAAA,CAAA5N,KAAA,QAAA3I,SAAA,CAAAX,EAAAinB,6BATtB,CACP,CACIhjB,QAAS9C,EAAAwwB,kBAETC,eAAapwB,EAAAqwB,YAAW,kBAAM2qG,CAAwB,GACtD1qG,OAAO,KAEd9xB,EAAA+xB,gCAAAlxB,MAAA,GAAAC,KAAA,GAAA+D,OAAA,yQAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA9CGhB,EAAA8E,yBAAA,qBAAA9E,CAAoD,kBAG5CA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAA47H,UAAAn0H,EAAiB,GAGlC1I,EAAA8E,yBAAA,kBAAyB9E,EAAAgF,iBAAA,oBAAchF,EAAA+E,yBACvC/E,EAAA8E,yBAAA,kBAA0B9E,EAAAgF,iBAAA,WAAKhF,EAAA+E,yBAC/B/E,EAAA8E,yBAAA,kBACI9E,EAAAgF,iBAAA,gCACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,kBACI9E,EAAAgF,iBAAA,kCACJhF,EAAA+E,yBAIA/E,EAAA0J,qBAAA,GAAAozH,EAAA,oBAMA98H,EAAA8E,yBAAA,mBAEI9E,EAAAuI,qBAAA,0BAAStH,EAAA87H,2BAA2B,GAEpC/8H,EAAAgF,iBAAA,kBACJhF,EAAA+E,wBAAA/E,YA1BAA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA9H,MAAA65G,UAOIhzG,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,cAAAlF,EAAA8L,sBAAA,IAAA7K,EAAAqI,KAAA,aAGAtJ,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAApW,EAAAw7H,kBAAA,IAAAz8H,EAAA8L,sBAAA,KAAA7K,EAAAqI,KAAA,sBAMCtJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,0BAAAvH,EAAA9H,MAAA65G,0PA8BRwpB,CAAwB,sKC5DrC,IAAAj3H,EAAA/P,EAAA,OACA4yB,EAAA5yB,EAAA,wCAoCYwK,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,iBACJhF,EAAA+E,uFACA/E,EAAA8E,yBAAA,WAAA9E,CAIC,eAMOA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6U,GAAA,IAAAtU,EAAAlJ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAG,EAAA8zH,gBAAgB,GAAE,GAE3Bh9H,EAAAgF,iBAAA,SACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6U,GAAA,IAAA3U,EAAA7I,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAF,EAAAm0H,gBAAgB,GAAE,GAE3Bh9H,EAAAgF,iBAAA,SACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6U,GAAA,IAAApP,EAAApO,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAqF,EAAA4uH,gBAAgB,GAAE,GAE3Bh9H,EAAAgF,iBAAA,SACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6U,GAAA,IAAA/T,EAAAzJ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAU,EAAAuzH,gBAAgB,GAAE,GAE3Bh9H,EAAAgF,iBAAA,SACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6U,GAAA,IAAAnE,EAAArZ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAsQ,EAAA2jH,gBAAgB,GAAE,GAE3Bh9H,EAAAgF,iBAAA,UACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6U,GAAA,IAAA3F,EAAA7X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA8O,EAAAmlH,gBAAgB,GAAE,GAE3Bh9H,EAAAgF,iBAAA,UACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA6U,GAAA,IAAArQ,EAAAnN,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAoE,EAAA6vH,gBAAgB,GAAE,GAE3Bh9H,EAAAgF,iBAAA,UACJhF,EAAA+E,wBAAA/E,6CA1DIA,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAA7J,EAAAlT,KAAA68G,cAAA3pG,EAAAlT,KAAA68G,aAAA15G,SAAA,KASAwC,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAA7J,EAAAlT,KAAA68G,cAAA3pG,EAAAlT,KAAA68G,aAAA15G,SAAA,KASAwC,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAA7J,EAAAlT,KAAA68G,cAAA3pG,EAAAlT,KAAA68G,aAAA15G,SAAA,KASAwC,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAA7J,EAAAlT,KAAA68G,cAAA3pG,EAAAlT,KAAA68G,aAAA15G,SAAA,KASAwC,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAA7J,EAAAlT,KAAA68G,cAAA3pG,EAAAlT,KAAA68G,aAAA15G,SAAA,KASAwC,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAA7J,EAAAlT,KAAA68G,cAAA3pG,EAAAlT,KAAA68G,aAAA15G,SAAA,KASAwC,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAA7J,EAAAlT,KAAA68G,cAAA3pG,EAAAlT,KAAA68G,aAAA15G,SAAA,MAlGpBlG,2BAqKqC,eAAAC,EAAxBwhI,EAAwB,WAUjC,SAAAA,EACqCnmF,GAAmCl7C,EAAAC,KAAAohI,GAAnCphI,KAAAi7C,QAV9Bj7C,KAAA0C,KAAIqsB,IAAA,GACJ/uB,KAAKi7C,MAAMz5C,OAAK,IACnB+iB,IAAKvkB,KAAKi7C,MAAMz5C,MAAM+iB,QAAOkM,EAAAkvB,SAAQ,IAAIvlC,KAAQ,GAAG8a,UACpDc,SAAUh2B,KAAKi7C,MAAMz5C,MAAMw0B,UAAY,EACvC1F,QAAStwB,KAAKi7C,MAAMz5C,MAAM8uB,QAAUtwB,KAAKi7C,MAAMz5C,MAAM8uB,QAAU,SAC/DgvF,YAAat/G,KAAKi7C,MAAMz5C,MAAM89G,aAAe,IAE1Ct/G,KAAAslI,SAAW,OAIf,CAACxlI,SAAAshI,EAAA,EAAA7/H,IAAA,kBAAAC,MAEG,SAAgBolC,GACd5mC,KAAK0C,KAAK68G,eAAcv/G,KAAK0C,KAAK68G,aAAe,IAClDv/G,KAAK0C,KAAK68G,aAAa15G,SAAS+gC,GAChC5mC,KAAK0C,KAAK68G,aAAev/G,KAAK0C,KAAK68G,aAAa1jG,OAC5C,SAACnD,GAAC,OAAKA,IAAMkuB,CAAG,GAEjB5mC,KAAK0C,KAAK68G,aAAanpF,KAAKwQ,EACvC,KAACw6F,CAAA,CArBgC,GAqBhCxhI,SArBQwhI,0CAAwB/4H,EAAAC,4BAWrBsF,EAAAivB,iBAAe,kDAXlBukG,EAAwBr4H,UAAA,uBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ohCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlK7BhB,EAAA8E,yBAAA,WAAA9E,CAAQ,QACAA,EAAAgF,iBAAA,uBAAiBhF,EAAA+E,yBACrB/E,EAAA8E,yBAAA,aAAA9E,CAA4C,cAC9BA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA8E,yBAAA,WAAA9E,CAAkB,UAAlBA,CAAkB,SAELA,EAAAgF,iBAAA,kBAAYhF,EAAA+E,yBACjB/E,EAAA8E,yBAAA,sBAAA9E,CAAkD,cAChBA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAA5G,KAAAszB,SAAAjlB,CAAA,GAA9B1I,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,sBAAA9E,CAAqC,mBACrBA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAA5G,KAAA4tB,QAAAvf,CAAA,GACR1I,EAAA8E,yBAAA,mBACI9E,EAAAgF,iBAAA,IACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,mBACI9E,EAAAgF,iBAAA,IACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,mBACI9E,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,OAOZA,EAAA0J,qBAAA,GAAAwzH,EAAA,YAAAl9H,CAEK,GAAAm9H,EAAA,gBAsELn9H,EAAA8E,yBAAA,YAAkB9E,EAAAgF,iBAAA,WAAIhF,EAAA+E,yBACtB/E,EAAA8E,yBAAA,yBAAgC9E,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAg8H,SAAAv0H,CAAA,GAC5B1I,EAAA8E,yBAAA,YAAA9E,CAA+B,0BAGvBA,EAAAuI,qBAAA,0BAAAtH,EAAA5G,KAAA48G,YAA4B,CAAC,GAE7Bj3G,EAAAgF,iBAAA,cACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAAyC,0BACRA,EAAAgF,iBAAA,SAAEhF,EAAA+E,yBAC/B/E,EAAA8E,yBAAA,sBACI9E,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAA5G,KAAA6hB,IAAAxT,CAAA,GAEH1I,EAAA+E,wBAAA/E,GAELA,EAAA8E,yBAAA,YAAA9E,CAAyC,0BACLA,EAAAgF,iBAAA,YAAKhF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,sBAAA9E,CAAqC,eAI7BA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAA5G,KAAA48G,YAAAvuG,CAAA,GAHJ1I,EAAA+E,yBAMA/E,EAAA8E,yBAAA,cAAgB9E,EAAAgF,iBAAA,iBAAUhF,EAAA+E,wBAAA/E,SAK1CA,EAAA8E,yBAAA,eAAA9E,CAEC,gBAKOA,EAAAuI,qBAAA,0BAAAtH,EAAA5G,KAAA48G,YAE0C,UAF1Ch2G,EAAAg8H,SAGhB,EAACh8H,EAAA5G,KAAA48G,WAAA,GAGej3G,EAAAgF,iBAAA,aACJhF,EAAA+E,wBAAA/E,UAxIsCA,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA5G,KAAAszB,UAGlB3tB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA5G,KAAA4tB,SAEJjoB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAAjE,EAAA5G,KAAAszB,SAAA,YAGA3tB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,YAAAjE,EAAA5G,KAAAszB,SAAA,YAGA3tB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,aAAAjE,EAAA5G,KAAAszB,SAAA,YAQkB3tB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,kBAAAvH,EAAA5G,KAAA4tB,SAM7BjoB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,kBAAAvH,EAAA5G,KAAA4tB,SAmE2BjoB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAg8H,UAYpBj9H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA5G,KAAA6hB,IAAAlc,CAAsB,kBAAAiB,EAAAg8H,UAUlBj9H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA5G,KAAA48G,YAAAj3G,CAA8B,qBAAAiB,EAAAg8H,UAmB1Cj9H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAAvH,EAAA5G,0OAmBH0+H,CAAwB,uLC3KrC,IAAAv3H,EAAAhM,EAAA,OAUA2L,EAAA3L,EAAA,OACAyC,EAAAzC,EAAA,OACA4nI,EAAA5nI,EAAA,8CAEA8B,yBAkBI,eAAAC,EADSuhI,EACT,SAAAxgI,GAAAC,EAAAugI,EAAAxgI,GAAA,IAAAG,EAAAC,EAAAogI,GAlBJ,SAAAA,IAAA,IAAA//H,EAAArB,SAAAC,KAAAmhI,+BAqBoBsD,YAAc,GACdrjI,EAAAskI,UAAW,EAMnBtkI,EAAAukI,UAAY,kBAAMvkI,EAAKq4B,SAASr4B,EAAKwkI,QAAQC,KAAK/8C,UAAU,EASpD1nF,EAAA23B,iBAAmB,SAACC,GAAuB,OACtD53B,EAAK63B,UAAYD,CAAE,EACR53B,EAAA83B,kBAAoB,SAACF,GAAuB,OACvD53B,EAAK+3B,SAAWH,CAAE,EAAE53B,EAmD5BtB,SAAAqhI,EAAA,EAAA5/H,IAAA,cAAAC,MAjDU,SAAY63B,GAAyB,GAAC,CAAA93B,IAAA,kBAAAC,MAEtC,WACHxB,KAAK8lI,mBACT,GAEA,CAAAvkI,IAAA,WAAAC,MAIO,SAAS83B,GAERt5B,KAAKi5B,WACLj5B,KAAKi5B,UAAUK,EAEvB,GAEA,CAAA/3B,IAAA,aAAAC,MAIO,SAAWA,GAAa,IAAAuD,EAAA/E,KAC3B,GAAIA,KAAK4lI,QAAS,CACd,IAAMG,EAAQ/lI,KAAK4lI,QAAQI,UAAUC,QAAQzkI,GAC7CxB,KAAK4lI,QAAQM,YAAYH,EAAO,eAEhC/lI,KAAKyD,QAAQ,QAAS,kBAAMsB,EAAKohI,WAAW3kI,EAAM,EAE1D,GAAC,CAAAD,IAAA,oBAAAC,MAEO,WAAiB,IAAA2E,EAAAnG,KACrBA,KAAK4lI,QAAU,IAAIH,EAAMzlI,KAAKomI,WAAWh6C,cAAe,CACpDi6C,OAAQrmI,KAAKixF,cAAc7E,cAC3Bq4C,YAAazkI,KAAKykI,YAClB6B,QAAS,CACLC,QAAS,CACL,CAAC,CAAEn+E,KAAM,CAAC,SAAS,EAAO,QAAS,UACnC,CAAC,OAAQ,SAAU,aACnB,CAAC,CAAEr1C,KAAM,WAAa,CAAEA,KAAM,aAGtCyzH,SAAUxmI,KAAK0lI,SACf3lD,MAAO,SAEX//E,KAAK4lI,QAAQa,GAAG,cAAezmI,KAAK2lI,WACpC3lI,KAAK4S,aAAa,UAAW,kBACzBzM,EAAKy/H,QAAQc,IAAI,cAAevgI,EAAKw/H,UAAU,EAEvD,KAACxE,CAAA,CAxED,CAAQ7gI,EAAA8H,cAAYxI,SADXuhI,qGAAsB1kG,GAAtB0kG,EAAsB,qDAAtBA,EAAsBp4H,UAAA,sBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,0UATpB,CACP,CACIiD,QAAS9C,EAAAwwB,kBAETC,eAAapwB,EAAAqwB,YAAW,kBAAMinG,CAAsB,GACpDhnG,OAAO,KAEd9xB,EAAAY,qCAAAZ,EAAA+xB,gCAAAlxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,iCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAZGhB,EAAA8E,yBAAA,gBACI9E,EAAAkB,oBAAA,gBACJlB,EAAA+E,6BAYK+zH,CACT,0MChCJ,IAAAt3H,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,OAKA8oI,GAJA9oI,EAAA,OAEAA,EAAA,OAEAA,EAAA,QAEA8b,GADA9b,EAAA,MACAA,EAAA,QACAuC,EAAAvC,EAAA,0EAyCoBwK,EAAAkB,oBAAA,6DAGIlB,EAAAwI,qBAAA,SAAA0gD,EAAA3mC,OAAA,0BAIAviB,EAAAkB,oBAAA,yEAfZlB,EAAA8E,yBAAA,WAAA9E,CAIC,YAIOA,EAAA0J,qBAAA,EAAA60H,EAAA,aAAAv+H,CAKE,EAAAw+H,EAAA,0BAAAx+H,EAAAqd,kCAONrd,EAAA+E,yBACA/E,EAAA8E,yBAAA,WAAA9E,CAA+B,YAEvBA,EAAAgF,iBAAA,GAGJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,WAAA9E,CAAiD,iBACbA,EAAAgF,iBAAA,YAAKhF,EAAA+E,yBACrC/E,EAAA8E,yBAAA,QACI9E,EAAAgF,iBAAA,IAKJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAAiD,kBACbA,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBACtC/E,EAAA8E,yBAAA,QAAA9E,EAAAulB,iBAAA,OAIAvlB,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAEC,gBAMOA,EAAAuI,qBAAA,uBAAA2gD,EAAAlpD,EAAA2I,wBAAAa,GAAA+L,UAAA9L,EAAAzJ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAU,EAAAg1H,aAAAv1E,GAAmB,GAE5BlpD,EAAA8E,yBAAA,aAAA9E,EAAAgwB,sBAAA,OACIhwB,EAAAkB,oBAAA,eAEJlB,EAAAiwB,sBAAAjwB,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,gBAKI9E,EAAAuI,qBAAA,uBAAA2gD,EAAAlpD,EAAA2I,wBAAAa,GAAA+L,UAAAsC,EAAA7X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA8O,EAAA6mH,YAAAx1E,GAAkB,GAE3BlpD,EAAA8E,yBAAA,aAAA9E,EAAAgwB,sBAAA,OACIhwB,EAAAkB,oBAAA,eAEJlB,EAAAiwB,sBAAAjwB,EAAA+E,wBAAA/E,OAIZA,EAAA8E,yBAAA,gBAMI9E,EAAAuI,qBAAA,uBAAA2gD,EAAAlpD,EAAA2I,wBAAAa,GAAA+L,UAAApI,EAAAnN,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAoE,EAAAgjB,gBAAA+4B,GAAsB,GAE/BlpD,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,IAIRhF,EAAA+E,wBAAA/E,4FA5EGA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAA0gD,EAAA3mC,OAAA,KAAA2mC,EAAA3mC,OAAA3lB,OAAAoD,CAA4B,WAAAokB,GAa7BpkB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAgkD,EAAAj8C,cAAAi8C,EAAAj+C,MAAA,qBAOIjL,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAgkD,EAAA5rD,WAAA,OAAAyM,EAAAD,EAAA0E,MAAA06C,EAAA79C,QAAA,KAAAtB,EAAAkD,gBAAA,OAAAlD,EAAAD,EAAA0E,MAAA06C,EAAA79C,QAAA,KAAAtB,EAAAkB,MAAA,KAaJjL,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAyjC,EAAA5xC,SAAA,IAAA4xC,EAAA5xC,SAAAtX,CAAIkpD,EAAA5xC,UAAJtX,EAAA2lB,sBAAA,IAoCJ3lB,EAAAiF,oBAAA,IAAAjF,EAAAoX,sBAAA,gBAAAtN,EAAAumB,UAAA7yB,SAAA,MAAA0rD,EAAA,KAAAA,EAAAn+C,KAGU/K,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAAumB,UAAA7yB,SAAA,MAAA0rD,EAAA,KAAAA,EAAAn+C,IAAA,uEAjHxBulB,EAAuB,GAE7Bh5B,0BA6IoC,eAAAC,EAAvBqgI,EAAuB,WAchC,SAAAA,EACYj/H,EACAC,EACAgX,GAAkB,IAAA7W,EAAApB,KAAAD,EAAAC,KAAAigI,GAFlBjgI,KAAAgB,YACAhB,KAAAiB,OACAjB,KAAAiY,UAhBLjY,KAAAi8C,UAAY,EACZj8C,KAAAuc,OAAS,IAAI5C,EAAAqB,gBAAyB,IACtChb,KAAAuiB,WAAaviB,KAAKuc,OAAOxZ,QAAK3C,EAAAgxB,cAAa,MAC3CpxB,KAAA84B,UAAW,EA8DF94B,KAAA+4B,iBAAmB,SAACC,GAAwB,OACvD53B,EAAK63B,UAAYD,CAAE,EAERh5B,KAAAk5B,kBAAoB,SAACF,GAAwB,OACxD53B,EAAK+3B,SAAWH,CAAE,EACPh5B,KAAAo5B,iBAAmB,SAACpQ,GAAU,OAAM5nB,EAAK03B,SAAW9P,CAAC,CArDlE,CAAClpB,SAAAmgI,EAAA,EAAA1+H,IAAA,YAAAgE,IARJ,WACI,OAAOvF,KAAKgB,UAAUuE,IAAc,qBAAuBozB,CAC/D,GAAC,CAAAp3B,IAAA,cAAAC,MAQM,WACCxB,KAAKijD,aAAajjD,KAAKijD,YAAYt7C,OAC3C,GAAC,CAAApG,IAAA,QAAAC,MAEM,SAAMkS,GACT,OAAO1T,KAAKiB,KAAKkuB,YAAYzb,EACjC,GAEA,CAAAnS,IAAA,eAAAC,MACO,WAAY,IAAAuD,EAAA/E,KACfA,KAAKijD,YAAcjjD,KAAKiY,QAAQrD,KAAK+xH,EAAAK,6BAA8B,CAC/DtkI,KAAM,CACF6Z,OAAQvc,KAAKuc,OAAO3D,WACpB+J,QAAS,CAAEhD,SAAU3f,KAAKi8C,cAGlCj8C,KAAKijD,YAAYxqC,cAAc3F,UAAU,WAAK,IAAAm0H,EAC1CliI,EAAK00B,SAAyB,QAAjBwtG,EAACliI,EAAKk+C,mBAAW,IAAAgkF,GAAmB,QAAnBA,EAAhBA,EAAkBtuH,yBAAiB,IAAAsuH,OAAA,EAAnCA,EAAqC/nH,UACnDna,EAAKk+C,iBAAc/9C,CACvB,EACJ,GAEA,CAAA3D,IAAA,cAAAC,MACO,SAAYgb,GACfxc,KAAKy5B,SAASz5B,KAAKuc,OAAO3D,WAAWiD,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAOoJ,EAAMpJ,EAAE,GACxE,GAEA,CAAA7R,IAAA,WAAAC,MAIO,SAAS83B,GACZt5B,KAAKuc,OAAOna,KAAKk3B,GAAa,IAC1Bt5B,KAAKi5B,WAAWj5B,KAAKi5B,UAAUK,GAAa,GACpD,GAGA,CAAA/3B,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAKuc,OAAOna,KAAKZ,GAAS,GAC9B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgBgb,GACnB,GAAU,MAALA,KAAOpJ,GACZ,KAAMwmB,EAAW55B,KAAK04B,UAChBmB,GAAaD,EAAS/zB,SAAS2W,EAAMpJ,IAEvCpT,KAAKgB,UAAU84B,gBAAgB,mBAD/BD,EACiD,GAAA71B,OAAA+e,EAC1C6W,GAAQ,CACXpd,EAAMpJ,KAKNwmB,EAAS/d,OAAO,SAAC5Y,GAAC,OAAKA,IAAMuZ,EAAMpJ,EAAE,GAAC,CAGlD,KAAC6sH,CAAA,CAxF+B,GAwF/BrgI,SAxFQqgI,0CAAuB53H,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAoQ,WAAA,kDAAvBknH,EAAuBl3H,UAAA,uBAAAC,SAAA,CAAAX,EAAAinB,6BARrB,CACP,CACIhjB,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAM+lG,CAAuB,GACrD9lG,OAAO,MAEdjxB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,eAAAqiB,qBArI2BC,UAAAC,MAAAC,EAAA,uIAAgB,iBAAO,qBAQQF,UAAAG,MAAAD,EAAA,kGAGAF,UAAAI,MAAAF,EAAA,kGAGCF,UAAAM,MAAAJ,EAAA,kGA4GrCF,UAAAO,MAAAL,EAAA,4FA3D+CF,UAAA0rB,MAAAxrB,EAAA,6pCAD1CF,UAAAowB,MAAAlwB,EAAA,4GACJ,gBAA8Cw3G,6LAgB1C13G,UAAAqwB,MAAAnwB,EAAA,2JAAc,wFAYdF,UAAAswB,MAAApwB,EAAA,6JAAe,mQA9FvCrnB,EAAA8E,yBAAA,QAAA9E,CAAK,UAALA,CAAK,UAALA,CAAK,WAGOA,EAAAgwB,sBAAA,KAA4BhwB,EAAAkB,oBAAA,UAAclB,EAAAiwB,sBAAAjwB,EAAA+E,yBAC1C/E,EAAA8E,yBAAA,UAAA9E,CAA+B,uBAIvBA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAA2yC,UAAAlrC,CAAA,GAGA1I,EAAA8E,yBAAA,wBAAA9E,EAAAulB,iBAAA,KAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,yBAAA9E,EAAAulB,iBAAA,MAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,yBAAA9E,EAAAulB,iBAAA,MAEAvlB,EAAA+E,wBAAA/E,WAMpBA,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,GAAAo1H,EAAA,8CAyFJ9+H,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAKI9E,EAAAuI,qBAAA,0BAAStH,EAAAw9H,cAAc,GAEvBz+H,EAAA8E,yBAAA,YAAA9E,CAAwD,eAC1CA,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBAChB/E,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,OAAoBvlB,EAAA+E,wBAAA/E,YArHRA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA2yC,UAAA5zC,CAAuB,iBAAAA,EAAAmJ,0BAAA,EAAA41H,IAGL/+H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAGAxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,WAGAxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAYZxI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,KAAArM,EAAAiZ,iBA6GrB09G,CAAuB,qOCzJpC,IAAAz2H,EAAA3L,EAAA,OAEAyC,GADAzC,EAAA,OACAA,EAAA,QAOAwC,GADAxC,EAAA,MACAA,EAAA,4EA4C4BwK,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAAw2H,EAAA/xH,cAAA+xH,EAAA/zH,MAEAjL,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA85H,EAAA/xH,cAAA+xH,EAAA/zH,KAAA,4BAaZjL,EAAA8E,yBAAA,kBAAA9E,EAAAulB,iBAAA,MAEAvlB,EAAA+E,gDAEJ/E,EAAA8E,yBAAA,QAAA9E,CAA0B,cACtBA,EAAAulB,iBAAA,MAA+BvlB,EAAA+E,yBAC/B/E,EAAAkB,oBAAA,yBAGJlB,EAAA+E,mDA3DR/E,EAAA8E,yBAAA,WAAA9E,CAAuE,WAAvEA,CAAuE,UAAvEA,CAAuE,UAAvEA,CAAuE,WAIvDA,EAAAgwB,sBAAA,MAAgBhwB,EAAAkB,oBAAA,UAAclB,EAAAiwB,sBAAAjwB,EAAA+E,yBAC9B/E,EAAA8E,yBAAA,uBACI9E,EAAAkB,oBAAA,cAKAlB,EAAA8E,yBAAA,eAAA9E,EAAAulB,iBAAA,OAAgCvlB,EAAA+E,wBAAA/E,KAGxCA,EAAA8E,yBAAA,WAAA9E,CAAkC,YAC9BA,EAAAgwB,sBAAA,OAAiBhwB,EAAAkB,oBAAA,WAAclB,EAAAiwB,sBAAAjwB,EAAA+E,yBAC/B/E,EAAA8E,yBAAA,wBACI9E,EAAAkB,oBAAA,eAKAlB,EAAA8E,yBAAA,gBAAA9E,EAAAulB,iBAAA,OAAiCvlB,EAAA+E,wBAAA/E,OAI7CA,EAAA8E,yBAAA,YAAA9E,CAA2B,YACvBA,EAAAulB,iBAAA,OAAoBvlB,EAAA+E,yBACpB/E,EAAA8E,yBAAA,uBAAA9E,CAAoD,oBAK5CA,EAAA0J,qBAAA,GAAAu1H,EAAA,oDAMJj/H,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,SAAA9E,CAAK,eACDA,EAAAgwB,sBAAA,OACsBhwB,EAAAkB,oBAAA,WAAclB,EAAAiwB,sBAAAjwB,EAAA+E,yBAEpC/E,EAAAkB,oBAAA,yBAIAlB,EAAA0J,qBAAA,GAAAw1H,EAAA,oBAGJl/H,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAAy1H,EAAA,cAMJn/H,EAAA+E,yBACA/E,EAAA8E,yBAAA,aAAA9E,EAAAulB,iBAAA,OAGAvlB,EAAA+E,wBAAA/E,2CA/DkBA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAsB,EAAA7B,MAiCkBjI,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,KAAAxD,EAAA4D,YAgBK1N,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAAs1H,YAI/Bp/H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAAu1H,4EAYdr/H,EAAA8E,yBAAA,cAAA9E,CAGC,eACsCA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA8O,EAAAm8B,SAAQ,GAApDh0C,EAAAulB,iBAAA,MAEAvlB,EAAA+E,wBAAA/E,0BAGAA,EAAA8E,yBAAA,aAGI9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,+BAAyBhF,EAAA+E,wBAAA/E,UADfA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBAvF7BlR,8BAoGwC,eAAAC,EAA3BsyG,EAA2B,WA2BpC,SAAAA,EACYjvD,EACAhiD,EACAD,GAA0BjB,EAAAC,KAAAkyG,GAF1BlyG,KAAAijD,cACAjjD,KAAAiB,OACAjB,KAAAgB,YA7BLhB,KAAAijB,SAAU,EACDjjB,KAAAsQ,KAAO,IAAI9G,EAAAm2B,UAAU,CACjCrsB,KAAM,IAAI9J,EAAAo2B,YAAY,GAAI,CAACp2B,EAAAq2B,WAAWC,WACtCn5B,MAAO,IAAI6C,EAAAo2B,YAAY,GAAI,CAACp2B,EAAAq2B,WAAWC,WACvCn6B,SAAU,IAAI6D,EAAAo2B,YAAY,IAC1BpsB,YAAa,IAAIhK,EAAAo2B,YAAY,GAAI,CAACp2B,EAAAq2B,WAAWC,WAC7ClV,OAAQ,IAAIphB,EAAAo2B,YAAY,MAkBZ5/B,KAAA+V,UAAY/V,KAAKiB,KAAKkX,aAMnC,CAACrY,SAAAoyG,EAAA,EAAA3wG,IAAA,aAAAgE,IArBJ,WACI,OACKvF,KAAKsQ,KAAK+T,SAAS7Q,YAAYe,OAChCvU,KAAKsQ,KAAK+T,SAAS7Q,YAAY0gD,OAEvC,GAAC,CAAA3yD,IAAA,gBAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,sBAAwB,oBACtD,GAAC,CAAAhE,IAAA,eAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,kCAC9B,GAAC,CAAAhE,IAAA,WAAAC,MAUM,WACH,IAAMmrB,KAAOrsB,EAAAmG,eACTkmB,GACA3sB,KAAKsQ,KAAKe,WAAW,CACjBiC,KAAMqZ,EAAKrZ,KACX3M,MAAOgmB,EAAKhmB,QAGhB3G,KAAKiB,KAAK4U,UACV7V,KAAKsQ,KAAKe,WAAW,CACjB1L,SACI3F,KAAKiB,KAAK4U,SAASP,cAAgBtV,KAAKiB,KAAK4U,SAASvC,MAGtE,GAAC,CAAA/R,IAAA,SAAAC,OAAAmmI,EAAAlmI,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAgmI,EAAApzG,EAAApc,EAAA9E,EAAA3M,EAAAhB,EAAA6N,EAAAoX,EAAA,OAAAlpB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGgC,GAFnCpC,KAAKijB,SAAU,EACfjjB,KAAKsQ,KAAKgY,mBACVtoB,KAAKsQ,KAAK2qG,0BACNj7G,KAAKsQ,KAAKiE,MAAK,CAAArS,EAAAE,KAAA,SAC8B,GAAvCwlI,EAAc5nI,KAAKiB,KAAK2wB,QAAQ,QACtB,CAAA1vB,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,YACLjD,EAAAkU,aACH,mDACH,OAECggB,YAAMn0B,EAAAwxB,WAAU+1G,EAAa,UAC3Bt0H,GADoC8E,EAExCpY,KAAKsQ,KAAK9O,OADN8R,KAAM3M,EAAKyR,EAALzR,MAAOhB,EAAQyS,EAARzS,SAAU6N,EAAW4E,EAAX5E,YAAaoX,EAAMxS,EAANwS,OAAM1oB,EAAAE,KAAA,GAE5CoyB,EAAIC,QAAQ,YAAa,CAC3Bz0B,KAAK6nI,cAAa,+CAAA7jI,OAEfsP,EAAI,MAAAtP,OAAK2C,EAAK,QAAA3C,OAAO2B,EAAQ,QAAA3B,OAAOwP,EAAYkqB,QAC/C,WACA,IACH,QAAA15B,OAAO4mB,EAAOlW,KAAK,OAAK,MAAA1Q,OACnBsP,EAAI,WAAAtP,OAAU2C,EAAK,WAAA3C,OAAU2B,EAAQ,WAAA3B,OAAUwP,EAAW,QAAAxP,OAAO4mB,EAAOlW,KAC1E,SAEJ,GACA,GACA,GACA,GACA,KAAI,GAAA1Q,OACD2C,KACL,QACF3G,KAAKijD,YAAYt7C,QACjB3H,KAAKijB,SAAU,KACf3iB,EAAAirC,eAAc,yCAAyC,yBAAArpC,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAE9D,SAAAq8C,IAAA,OAAAsrF,EAAA/iI,MAAA5E,KAAA6E,UAAA,MAAAqtG,EArCA,IAAAy1B,CAqCA,CApFmC,GAoFnC/nI,SApFQsyG,0CAA2B7pG,EAAAC,4BAAAC,EAAA26C,cAAA76C,EAAAC,4BAAAG,EAAAC,qBAAAL,EAAAC,4BAAAK,EAAAH,iBAAA,kDAA3B0pG,EAA2BnpG,UAAA,2BAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,8DAhGnBsiB,UAAAC,MAAAC,EAAA,+aASeF,UAAAG,MAAAD,EAAA,2HAAI,iBAAO,0GAOHF,UAAAI,MAAAF,EAAA,iGAIRF,UAAAM,MAAAJ,EAAA,4HAAK,kBAAO,oFAOJF,UAAAO,MAAAL,EAAA,wHAKZF,UAAA0rB,MAAAxrB,EAAA,+NAiBPF,UAAAowB,MAAAlwB,EAAA,wIAAiB,kBAAO,iLAiBaF,UAAAqwB,MAAAnwB,EAAA,mMAXcF,UAAAswB,MAAApwB,EAAA,yGAK/BF,UAAAuwB,MAAArwB,EAAA,8OAe0BF,UAAAwwB,MAAAtwB,EAAA,wPA5E/DrnB,EAAA8E,yBAAA,aAAA9E,CAAkD,QAC9CA,EAAAulB,iBAAA,KAA+BvlB,EAAA+E,yBAC/B/E,EAAA8E,yBAAA,aAAA9E,CAA8B,cAChBA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA0J,qBAAA,EAAA+1H,EAAA,cAAAz/H,CAiEO,EAAA0/H,EAAA,eAjEP1/H,CAiEO,EAAA2/H,EAAA,yBAAA3/H,EAAAqd,yEAjE+Brd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,QAAA5a,CAAgB,WAAAwd,GAoEjDxd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,6JAuBAivF,CAA2B,mLChHxC,IAAAroG,EAAAhM,EAAA,OASA2L,EAAA3L,EAAA,OAEAyC,GADAzC,EAAA,OACAA,EAAA,QACA4yB,EAAA5yB,EAAA,+GAsBgBwK,EAAA8E,yBAAA,kBACI9E,EAAAgF,iBAAA,gCACJhF,EAAA+E,iEAF+B/E,EAAAwI,qBAAA,QAAA+E,EAAAqyH,YAC3B5/H,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAAyB,EAAAqyH,WAAAryH,EAAAkpC,SAAA,qDAEJz2C,EAAA8E,yBAAA,kBAII9E,EAAAgF,iBAAA,gCAGJhF,EAAA+E,+EALI/E,EAAAwI,qBAAA,QAAAq3H,EAAA90H,IAEA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAA+zH,EAAAv2H,KAAAJ,EAAAutC,SAAA,4BAjBpBn/C,qBAwCI,eAAAC,EADSuoI,EACT,SAAAxnI,GAAAC,EAAAunI,EAAAxnI,GAAA,IAAAG,EAAAC,EAAAonI,GAxCJ,SAAAA,IAAA,IAAA/mI,EAAArB,SAAAC,KAAAmoI,+BA4CoBvM,KAAO,GAIPx6H,EAAAgnI,eAAgB,EAChBhnI,EAAA09C,UAAW,EAGpB19C,EAAAuQ,UAAmByI,MAAO8a,UAE1B9zB,EAAAk9E,QAAe7tD,EAAAiY,QAAO,IAAItuB,KAAQ,SAAShZ,EAiKrDtB,SAAAqoI,EAAA,EAAA5mI,IAAA,WAAAC,MApJU,WAAQ,IAAAuD,EAAA/E,KACXA,KAAKqoI,aAAc,EACnBroI,KAAKsoI,cAAgBtoI,KAAKuoI,uBACtBvoI,KAAK2R,MACJ3R,KAAKooI,cACNpoI,KAAK47H,MAET57H,KAAKyD,QAAQ,OAAQ,kBAAOsB,EAAKsjI,aAAc,CAAK,EACxD,GAAC,CAAA9mI,IAAA,cAAAC,MAEM,SAAY63B,IACXA,EAAQ+uG,eAAiB/uG,EAAQuiG,QACjC57H,KAAKsoI,cAAgBtoI,KAAKuoI,uBACtBvoI,KAAK2R,MACJ3R,KAAKooI,cACNpoI,KAAK47H,MAGjB,GAEA,CAAAr6H,IAAA,eAAAgE,IACA,WACI,IAAM+4E,GAAQt+E,KAAKs+E,MAAQ,SAAS13E,MAAM,KACpC+K,KAAO8e,EAAAlV,KAAIvb,KAAK2R,KAAM,CAAEu3B,OAAQo1C,EAAK,GAAIj1C,SAAUi1C,EAAK,KAC9D,OACI3sE,EAAK68D,aAAe,IAAO,IAC1BxuE,KAAKsoI,cAAcl5G,KAChB,SAACkvD,GAAI,OAAKA,EAAKlrE,QAAOqd,EAAAiY,QAAO/2B,EAAM,QAAQ,KAG/C3R,KAAKsoI,cAAclyG,KAAK,CACpBzkB,OACAyB,MAAIqd,EAAAiY,QAAO/2B,EAAM,WAErB3R,KAAKsoI,cAAczrH,KAAK,SAACgW,EAAGlU,GAAC,MACzB,GAAA3a,OAAG6uB,EAAEzf,IAAKkrB,cAAa,GAAAt6B,OAAI2a,EAAEvL,IAAK,IAGnCpT,KAAKsoI,aAChB,GAEA,CAAA/mI,IAAA,WAAAC,MAIO,SAAS83B,GAEZ,GADAt5B,KAAKs+E,KAAOhlD,EACRt5B,KAAKi5B,UAAW,CAChB,IAAMqlD,GAAQt+E,KAAKs+E,MAAQ,SAAS13E,MAAM,KACpC+K,KAAO8e,EAAA0N,kBACT1N,EAAAlV,KAAIvb,KAAK2R,KAAM,CAAEu3B,OAAQo1C,EAAK,GAAIj1C,SAAUi1C,EAAK,MAErDt+E,KAAKi5B,UAAUtnB,EAAKujB,WAE5B,GAEA,CAAA3zB,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAK2R,KAAOnQ,GAASxB,KAAK2R,KAC1B,IAAIA,KAAO8e,EAAA0N,eAAcn+B,KAAK2R,MAC9BA,KAAO8e,EAAAqkB,uBAAsBnjC,EAAM,CAAEojC,UAAW,IAChD/0C,KAAKs+E,QAAO7tD,EAAAiY,QAAO/2B,EAAM,SACzB3R,KAAKsoI,cAAgBtoI,KAAKuoI,uBACtBvoI,KAAK2R,MACJ3R,KAAKooI,cACNpoI,KAAK47H,KAEb,GAAC,CAAAr6H,IAAA,mBAAAC,MAEM,SAAiBs3B,GACpB94B,KAAK84B,SAAWA,EAChB94B,KAAKsoI,cAAgBtoI,KAAKuoI,uBACtBvoI,KAAK2R,MACJ3R,KAAKooI,eAAiBtvG,EACvB94B,KAAK47H,KAEb,GAEA,CAAAr6H,IAAA,mBAAAC,MAIO,SAAiBw3B,GACpBh5B,KAAKi5B,UAAYD,CACrB,GAEA,CAAAz3B,IAAA,oBAAAC,MAIO,SAAkBw3B,GACrBh5B,KAAKm5B,SAAWH,CACpB,GAEA,CAAAz3B,IAAA,aAAAC,MAGO,WAAU,IAAA2E,EAAAnG,KACbA,KAAKqoI,aAAc,EACnBroI,KAAKyD,QAAQ,WAAY,WACjB0C,EAAKqiI,eACLriI,EAAKqiI,aAAathH,QAClB/gB,EAAKqiI,aAAa5zH,OAClBzO,EAAKyM,aACD,eACAzM,EAAKqiI,aAAaC,aAAa31H,UAAU,SAAC6pB,GACjCA,IACDx2B,EAAKkiI,aAAc,EAE3B,IAGZ,EACJ,GAEA,CAAA9mI,IAAA,yBAAAC,MAKQ,SACJknI,EACAC,GACiB,IAAjB/M,EAAA/2H,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,GAETqsB,EAAM,IAAI9W,KACZzI,EAAO,IAAIyI,KAAKsuH,GACdzmB,EAAS,GACX0mB,KAAc,EAACl4G,EAAAkC,WAAUhhB,EAAMuf,KAAG,EAAKT,EAAAwR,SAAQtwB,EAAMuf,GACrDvf,KAAO8e,EAAA0C,YAAWxhB,IAAI,EACf8e,EAAAwR,SAAQtwB,EAAMuf,KACrBvf,EAAOuf,GAEXvf,KAAO8e,EAAAqkB,uBAAsBnjC,EAAM,CAAEojC,UAAW6mF,IAGhD,QAFMr3G,KAAMkM,EAAA4C,UAAS1hB,IAAI,EAElB8e,EAAAwR,SAAQ1d,EAAK5S,IAChBswG,EAAO7rF,KAAK,CACRzkB,KAAMA,EAAKujB,UACX9hB,MAAIqd,EAAAiY,QAAO/2B,EAAM,WAErBA,KAAO8e,EAAA4N,YAAW1sB,EAAMiqH,GAE5B,OAAO3Z,CACX,KAACkmB,CAAA,CA9KD,CAAQ7nI,EAAA8H,cAAYxI,SADXuoI,qGAAkB1rG,GAAlB0rG,EAAkB,qDAAlBA,EAAkBp/H,UAAA,mBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,oRARhB,CACP,CACIiD,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAMiuG,CAAkB,GAChDhuG,OAAO,KAEd9xB,EAAAY,qCAAAZ,EAAA+xB,gCAAAlxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,mJAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlCGhB,EAAA8E,yBAAA,qBAAA9E,CAAqC,oBAK7BA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAAmwB,SAAA1oB,EAAgB,GAEjC1I,EAAA0J,qBAAA,EAAA62H,EAAA,mBAAAvgI,CAEa,EAAAwgI,EAAA,oBASjBxgI,EAAA+E,wBAAA/E,UAfIA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA2+H,YAAA3+H,EAAAg1E,KAAAj2E,CAA8B,WAAAiB,EAAAwvB,UAIjBzwB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA2+H,YAIU5/H,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAw/H,sQAyB1BX,CACT,uKChEJ,IAAAt+H,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,OACAyC,EAAAzC,EAAA,OAEAuC,EAAAvC,EAAA,OAEA8lF,EAAA9lF,EAAA,OACA6lF,EAAA7lF,EAAA,uFAuBgBwK,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,WACI9E,EAAAkB,oBAAA,6BAMAlB,EAAA8E,yBAAA,YAGI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,GAERA,EAAAoZ,2EAXYpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAxI,CAAe,QAAAqJ,EAAAoK,KAAA2oE,UAQfp8E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAmE,EAAAoK,KAAA2oE,SAAA,+BAIZp8E,EAAA8E,yBAAA,SAAA9E,CAOC,cACaA,EAAAgF,iBAAA,UAAIhF,EAAA+E,wBAAA/E,4CAPdA,EAAAwI,qBAAA,OAAAK,EAAA4K,KAAAtO,IAAAnF,EAAAksC,uFA1BRlsC,EAAA8E,yBAAA,UAAA9E,CAMC,WAEOA,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAAg3H,EAAA,qBAAA1gI,CAce,EAAA2gI,EAAA,WAWf3gI,EAAA8E,yBAAA,cAAa9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAysC,GAAA,IAAAhnC,EAAApO,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAqF,EAAA0vH,WAAW,MAAK,GAClC99H,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,+CAhCnBA,EAAAoX,sBAAA,YAAAtN,EAAA2J,KAAA2oE,SAAA,EAAAp8E,CAAqC,iBAAA8J,EAAA2J,KAAA2oE,SAAA,GAIjCp8E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4E,EAAA2J,KAAAxI,KAAA,KAEWjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA2J,KAAA2oE,UAAA,GAAAtyE,EAAA2J,KAAA2oE,SAAA,KAmBVp8E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA2J,KAAA2oE,UAAA,4BAYTp8E,EAAA8E,yBAAA,WAAA9E,CAEC,UACGA,EAAAulB,iBAAA,MAA4DvlB,EAAA+E,wBAAA/E,IAvD5E1I,2BAoEqC,eAAAC,EAAxBqpI,EAAwB,WApErC,SAAAA,IAAA,IAAA7nI,EAAApB,KAAAD,EAAAC,KAAAipI,GA2EoBjpI,KAAA+4B,iBAAmB,SAACC,GAAE,OAAM53B,EAAK63B,UAAYD,CAAE,EAC/Ch5B,KAAAk5B,kBAAoB,SAACF,GAAE,OAAM53B,EAAK+3B,SAAWH,CAAE,EAE/Dl5B,SAAAmpI,EAAA,EAAA1nI,IAAA,WAAAC,MAIO,SAAS83B,GACZt5B,KAAK8b,KAAOwd,EACRt5B,KAAKi5B,WAAWj5B,KAAKi5B,UAAUj5B,KAAK8b,KAC5C,GAEA,CAAAva,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAK8b,KAAOta,CAChB,GAAC,CAAAD,IAAA,cAAAC,MAEM,SAAYusB,GAAK,IAAAm7G,EAAAnkI,EAAA/E,KACdy2C,EAA4B1oB,EAAMolC,OAE5B,MAAP1c,GAAc,QAAPyyF,EAAPzyF,EAAS2c,aAAK,IAAA81E,GAAdA,EAAgBjkI,QAMrBjF,KAAKmpI,YALmB1yF,EAAQ2c,MAKT,GAJL,SAACt3C,GACf/W,EAAK+W,KAAOA,EACZ/W,EAAK00B,SAAS10B,EAAK+W,KACvB,EAEJ,GAAC,CAAAva,IAAA,cAAAC,MAEO,SAAY6xD,EAAY+1E,GAC5B,IAAM91E,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAW,SAAChvC,GACpC,IACMy/D,EAAON,EAASO,kBADF1/D,EAAE2uC,OAAO9rD,OACwBgsD,EAAK1gD,MAEpDwxE,GADAC,EAAcV,EAAAW,aAAY,CAACJ,GAAO,CAAEK,UAAWjxB,EAAK//C,OAC/B,GACrBkxE,EAA6B,CAC/BpxE,GAAE,GAAApP,UAAK1D,EAAA61D,WAAU,eACjB7iD,KAAM+/C,EAAK//C,KACXmxE,SAAU,EACVr8B,KAAMiL,EAAKjL,KACXrpB,WAAY3kB,KAAK8W,MACjB1jB,IAAK,IAET22E,EAAO98C,OACFtkC,QAAK3C,EAAAwkF,WAAU,SAAC3hF,GAAC,MAAkB,aAAbA,EAAEokC,MAAqB,GAAE,IAC/Cv0B,UAAU,SAAC6pB,GACJwnD,EAAOU,aACPL,EAAeh3E,IAAM22E,EAAOU,YAChCL,EAAeC,SAAW9nD,EAAM8nD,SACX,UAAjB9nD,EAAM0K,SAAoBm9C,EAAeC,UAAW,GACxD2kD,EAAU5kD,EACd,GACJ4kD,EAAU5kD,EACd,GACAlxB,EAAWyxB,kBAAkB1xB,EACjC,KAAC41E,CAAA,CAlEgC,GAkEhCrpI,SAlEQqpI,yCAAwB,kDAAxBA,EAAwBlgI,UAAA,kBAAAC,SAAA,CAAAX,EAAAinB,6BARtB,CACP,CACIhjB,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAM+uG,CAAwB,GACtD9uG,OAAO,MAEdjxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,2iCAXsCsiB,UAAAC,MAAAC,EAAA,oJApDnCrnB,EAAA8E,yBAAA,UAAA9E,CAEC,aAIOA,EAAAuI,qBAAA,kBAAAG,GAAA,OAAUzH,EAAA+/H,YAAAt4H,EAAmB,GAHjC1I,EAAA+E,yBAKA/E,EAAA0J,qBAAA,EAAAu3H,EAAA,aAuCJjhI,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAAw3H,EAAA,yBAAAlhI,EAAAqd,yEAtCSrd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAwS,KAAAzT,CAAY,WAAAuf,8EAuDhBqhH,CAAwB,oNC7ErC,IAAAp/H,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,OACAyC,EAAAzC,EAAA,OAEAuC,EAAAvC,EAAA,OAEA8lF,EAAA9lF,EAAA,OACA6lF,EAAA7lF,EAAA,uFAsCwBwK,EAAAiZ,kCAAA,GAGIjZ,EAAA8E,yBAAA,YACI9E,EAAAkB,oBAAA,6BAMAlB,EAAA8E,yBAAA,YAGI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,GAERA,EAAAoZ,oFAXYpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAxI,CAAe,QAAAmhI,EAAA/kD,UAQfp8E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAi8H,EAAA/kD,SAAA,+BAIZp8E,EAAA8E,yBAAA,SAAA9E,CAOC,cACaA,EAAAgF,iBAAA,UAAIhF,EAAA+E,wBAAA/E,qDAPdA,EAAAwI,qBAAA,OAAA24H,EAAAh8H,IAAAnF,EAAAksC,uFA9BRlsC,EAAA8E,yBAAA,WAAA9E,CAMC,YAIOA,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAA03H,EAAA,sBAAAphI,CAgBe,EAAAqhI,EAAA,YAWfrhI,EAAA8E,yBAAA,eAAa9E,EAAAuI,qBAAA,uBAAA44H,EAAAnhI,EAAA2I,wBAAAuE,GAAAqI,UAAApI,EAAAnN,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAAoE,EAAAm0H,WAAAH,GAAgB,GAClCnhI,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,+BApCnBA,EAAAoX,sBAAA,YAAA+pH,EAAA/kD,SAAA,EAAAp8E,CAAqC,iBAAAmhI,EAAA/kD,SAAA,GAMjCp8E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAi8H,EAAAl2H,KAAA,KAGCjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA24H,EAAA/kD,UAAA,GAAA+kD,EAAA/kD,SAAA,KAoBAp8E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAA24H,EAAA/kD,UAAA,+BAtCbp8E,EAAA8E,yBAAA,YAKI9E,EAAA0J,qBAAA,EAAA63H,EAAA,cA2CJvhI,EAAA+E,iEAzCyB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAsB,EAAAY,6BA6C7B1K,EAAA8E,yBAAA,WAAA9E,CAEC,UACGA,EAAAulB,iBAAA,MAA4CvlB,EAAA+E,wBAAA/E,IA1E5D1I,2BAuFqC,eAAAC,EAAxBiqI,EAAwB,WAvFrC,SAAAA,IAAA,IAAAzoI,EAAApB,KAAAD,EAAAC,KAAA6pI,GAwFW7pI,KAAA+S,KAAqB,GAMZ/S,KAAA+4B,iBAAmB,SAACC,GAAE,OAAM53B,EAAK63B,UAAYD,CAAE,EAC/Ch5B,KAAAk5B,kBAAoB,SAACF,GAAE,OAAM53B,EAAK+3B,SAAWH,CAAE,EAE/Dl5B,SAAA+pI,EAAA,EAAAtoI,IAAA,WAAAC,MAIO,SAAS83B,GACZt5B,KAAK+S,KAAOumB,EAAUzd,OAAO,SAAC5Y,GAAC,OAAKA,EAAEuK,KAAOvK,EAAEwhF,UAAY,GAAG,GAC1DzkF,KAAKi5B,WAAWj5B,KAAKi5B,UAAUj5B,KAAK+S,KAC5C,GAEA,CAAAxR,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAK+S,KAAOvR,EAAMma,IAAI,SAAC1Y,GAAC,OAAA8rB,EAAA,CACpB3b,GAAE,QAAApP,UAAU1D,EAAA61D,WAAU,aACnBlzD,EAAC,EAEZ,GAAC,CAAA1B,IAAA,aAAAC,MAEM,SAAWsa,GACd9b,KAAK+S,KAAO/S,KAAK+S,KAAK8I,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAO0I,EAAK1I,EAAE,EACxD,GAAC,CAAA7R,IAAA,cAAAC,MAEM,SAAYusB,GAAK,IAAAm7G,EAAAnkI,EAAA/E,KACdy2C,EAA4B1oB,EAAMolC,OAExC,GAAY,MAAP1c,GAAc,QAAPyyF,EAAPzyF,EAAS2c,aAAK,IAAA81E,GAAdA,EAAgBjkI,OAQrB,QAPMmuD,EAAkB3c,EAAQ2c,MAC1Bg2E,EAAY,SAACttH,GACf/W,EAAKgO,KAAOgQ,GACJhe,EAAKgO,MAAQ,IAAI8I,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAO0I,EAAK1I,EAAE,IACrDyJ,KAAK,SAACgW,EAAGlU,GAAC,OAAKkU,EAAEkM,WAAapgB,EAAEogB,UAAU,GAC5Ch6B,EAAK00B,SAAS10B,EAAKgO,KACvB,EACSkf,EAAI,EAAGA,EAAImhC,EAAMnuD,OAAQgtB,IAC9BjyB,KAAKmpI,YAAY/1E,EAAMnhC,GAAIm3G,EAEnC,GAAC,CAAA7nI,IAAA,cAAAC,MAEO,SAAY6xD,EAAY+1E,GAC5B,IAAM91E,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAW,SAAChvC,GACpC,IACMy/D,EAAON,EAASO,kBADF1/D,EAAE2uC,OAAO9rD,OACwBgsD,EAAK1gD,MAEpDwxE,GADAC,EAAcV,EAAAW,aAAY,CAACJ,GAAO,CAAEK,UAAWjxB,EAAK//C,OAC/B,GACrBkxE,EAA6B,CAC/BpxE,GAAE,GAAApP,UAAK1D,EAAA61D,WAAU,eACjB7iD,KAAM+/C,EAAK//C,KACXmxE,SAAU,EACVr8B,KAAMiL,EAAKjL,KACXrpB,WAAY3kB,KAAK8W,MACjB1jB,IAAK,IAET22E,EAAO98C,OACFtkC,QAAK3C,EAAAwkF,WAAU,SAAC3hF,GAAC,MAAkB,aAAbA,EAAEokC,MAAqB,GAAE,IAC/Cv0B,UAAU,SAAC6pB,GACJwnD,EAAOU,aACPL,EAAeh3E,IAAM22E,EAAOU,YAChCL,EAAeC,SAAW9nD,EAAM8nD,SACX,UAAjB9nD,EAAM0K,SAAoBm9C,EAAeC,UAAW,GACxD2kD,EAAU5kD,EACd,GACJ4kD,EAAU5kD,EACd,GACAlxB,EAAWyxB,kBAAkB1xB,EACjC,KAACw2E,CAAA,CA7EgC,GA6EhCjqI,SA7EQiqI,yCAAwB,kDAAxBA,EAAwB9gI,UAAA,kBAAAC,SAAA,CAAAX,EAAAinB,6BARtB,CACP,CACIhjB,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAM2vG,CAAwB,GACtD1vG,OAAO,MAEdjxB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,0QA7EuCsiB,UAAAC,MAAAC,EAAA,8HACaF,UAAAG,MAAAD,EAAA,sHACDF,UAAAI,MAAAF,EAAA,uqCAgEbF,UAAAM,MAAAJ,EAAA,oIAvEnCrnB,EAAA8E,yBAAA,UAAA9E,CAAyC,UAAzCA,CAAyC,gBAIDA,EAAAgF,iBAAA,iBAAWhF,EAAA+E,yBAC3C/E,EAAA8E,yBAAA,SAAA9E,EAAAulB,iBAAA,KAAsCvlB,EAAA+E,yBACtC/E,EAAA8E,yBAAA,SAAA9E,EAAAulB,iBAAA,KAA2CvlB,EAAA+E,yBAC3C/E,EAAA8E,yBAAA,cAAA9E,EAAAulB,iBAAA,KAA8CvlB,EAAA+E,yBAC9C/E,EAAA8E,yBAAA,cAII9E,EAAAuI,qBAAA,kBAAAG,GAAA,OAAUzH,EAAA+/H,YAAAt4H,EAAmB,GAJjC1I,EAAA+E,wBAAA/E,GAOJA,EAAA8E,yBAAA,aACI9E,EAAA0J,qBAAA,GAAA+3H,EAAA,cAiDJzhI,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,GAAAg4H,EAAA,0BAAA1hI,EAAAqd,0EAhDard,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,aAAAvH,EAAAyJ,KAAA,KAAAzJ,EAAAyJ,KAAA9N,OAAAoD,CAAoB,WAAAuf,wFAiE5BiiH,CAAwB,gSChGrC,IAAAhgI,EAAAhM,EAAA,OASA2L,EAAA3L,EAAA,OACAyC,EAAAzC,EAAA,OASAuC,EAAAvC,EAAA,OASAm2D,GADAn2D,EAAA,OACAA,EAAA,QACA8b,EAAA9b,EAAA,OAEAmsI,EAAAnsI,EAAA,OACAosI,EAAApsI,EAAA,OACA00H,EAAA10H,EAAA,OACAk7C,EAAAl7C,EAAA,KACA0C,EAAA1C,EAAA,OACAwC,EAAAxC,EAAA,gNAoBwBwK,EAAA8E,yBAAA,qBAII9E,EAAAuI,qBAAA,yBAAAs5H,GAAA7hI,EAAA2I,wBAAAqqB,GAAAzd,UAAAmC,GAAA1X,EAAA8I,0BAAA,OAAW9I,EAAA+I,sBAAA2O,GAAAoqH,WAAAD,IAAgB,GAE3B7hI,EAAAgF,iBAAA,GACAhF,EAAA8E,yBAAA,cAAA9E,CAMC,cACaA,EAAAgF,iBAAA,YAAMhF,EAAA+E,wBAAA/E,gCAXpBA,EAAAoX,sBAAA,aAAAyqH,GAAAxsB,aAGAr1G,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA28H,GAAA52H,MAAA42H,GAAAvjI,MAAA,KAII0B,EAAAiF,oBAAA,GAAAjF,EAAA+rD,sBAAA,wBAAA81E,GAAA52H,MAAA42H,GAAAvjI,8BAoBZ0B,EAAAkB,oBAAA,iFAOAlB,EAAA8E,yBAAA,mBAEI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA8M,GAAA,IAAAC,EAAA1V,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA2M,EAAAqsH,mBAAkB,GAF/B/hI,EAAAulB,iBAAA,MAMAvlB,EAAA+E,oEAAA/E,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAhc,GAAAu4H,QAAAzxH,YAAAvQ,EAAA2lB,sBAAA,iEACA3lB,EAAA8E,yBAAA,mBAEI9E,EAAAuI,qBAAA,uBAAA05H,GAAAjiI,EAAA2I,wBAAAi7C,GAAAruC,UAAAQ,GAAA/V,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAgN,GAAAmsH,QAAAD,IAAa,GAGtBjiI,EAAAgF,iBAAA,GAAehF,EAAAkB,oBAAA,QACflB,EAAA8E,yBAAA,aAAsB9E,EAAAgF,iBAAA,GAAgBhF,EAAA+E,wBAAA/E,8BADtCA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA+8H,GAAAh3H,KAAA,IACsBjL,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAq2H,GAAA3jI,qEAIlC0B,EAAA8E,yBAAA,WAAA9E,CAIC,eAOOA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAk7C,GAAA,IAAAC,EAAA9jD,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA+6C,EAAAq+E,mBAAkB,GAN/BniI,EAAAgwB,sBAAA,MASIhwB,EAAA8E,yBAAA,YACa9E,EAAAkB,oBAAA,aACblB,EAAA+E,yBACJ/E,EAAAiwB,sBAAAjwB,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAAA9E,EAAAgwB,sBAAA,MAQIhwB,EAAA8E,yBAAA,YACgB9E,EAAAkB,oBAAA,aAChBlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,cAGI9E,EAAAuI,qBAAA,kBAAAG,GAAA1I,EAAA2I,wBAAAk7C,GAAA,IAAA30C,EAAAlP,EAAA8I,0BAAA,OAAU9I,EAAA+I,sBAAAmG,EAAAkzH,iBAAA15H,GAAwB,GAHtC1I,EAAA+E,yBAKJ/E,EAAAiwB,sBAAAjwB,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAMI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAk7C,GAAA,IAAAz0C,EAAApP,EAAA8I,0BAASsG,SAAAizH,sBAAuBriI,EAAA+I,sBAAAqG,EAAAkzH,SAAArrH,OAAe,GANnDjX,EAAAgwB,sBAAA,OASIhwB,EAAA8E,yBAAA,aACI9E,EAAAkB,oBAAA,cACJlB,EAAA+E,yBACJ/E,EAAAiwB,sBAAAjwB,EAAA+E,wBAAA/E,IAvHhB,SAASuiI,EAAcjkI,GAGnB,MADI,4JACMkkI,KAAKlkI,EACnB,CAEAhH,yBAoII,eAAAC,EADSkrI,EACT,SAAAnqI,GAAAC,EAAAkqI,EAAAnqI,GAAA,IAAAG,GAAAC,EAAA+pI,GA8FA,SAAAA,EACY7yH,EACAjX,IAA0B,IAAAI,GAAArB,SAAAC,KAAA8qI,IAElC1pI,GAAAN,GAAAO,KAAArB,OAHQiY,UACA7W,GAAAJ,aA1FII,GAAA4kC,MAAQ,EAER5kC,GAAA2pI,QAAS,EAET3pI,GAAA4pI,aAAc,EAED5pI,GAAA6pI,cAAe,EAE5B7pI,GAAA8pI,iBAAkB,EAIjB9pI,GAAA+pI,SAAW,IAAIthI,EAAAuV,aAEfhe,GAAAupI,SAAW,IAAI9gI,EAAAuV,aAEvBhe,GAAAgqI,mBAAqB,CAACp3E,EAAAyB,MAAOzB,EAAA0B,OAG/Bt0D,GAAA6hB,SAAU,EACD7hB,GAAAipI,QAAU,IAAI1wH,EAAAqB,gBAAgB,IAavC5Z,GAAAiqI,WAAajqI,GAAKipI,QAAQtnI,QAC7B3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAqxB,WAAU,SAACxuB,IACP7B,UAAK6hB,SAAU,GAEXhgB,GACM7B,GAAK2pI,UACDpxH,EAAA+I,eAAc,CACVthB,GAAKuyH,YAAY1wH,KAAC,EAClBgnI,EAAAqB,cAAaroI,MACdF,QACC3C,EAAAub,KAAI,SAAAzV,IAAoB,IAAA6B,GAAA6a,EAAA1c,GAAA,GAAlBqlI,EAAKxjI,GAAA,GAAEgjI,GAAMhjI,GAAA,GACX3G,GAAK4pI,cAAaO,EAAQ,IAC9B,IAI2Bt0G,GAJrBu0G,GAAgB,GAChB73G,GACFvyB,GAAKJ,UAAUuE,IAAI,qBACnB,GAAG2xB,GAAAC,EACYxD,IAAQ,IAA3B,IAAAuD,GAAAlO,MAAAiO,GAAAC,GAAAI,KAAAC,MAA6B,KACzB+uB,GADWrvB,GAAAz1B,MAEFoF,MAAM,KAAI2/C,GAAA3jC,EAAA0jC,GAAA,GACnBklF,GAAcp1G,KAAK,CACfzvB,MAHQ4/C,GAAA,GAIRjzC,KAJcizC,GAAA,GAKdtO,QALuBsO,GAAA,KAO9B,OAAAv8B,IAAAkN,GAAA1S,EAAAwF,GAAA,SAAAkN,GAAAM,GAAA,CACD,SAAOl3B,EAAA6sC,QACFo+F,EACIvnI,OAAO+mI,IACP/mI,OAAOwnI,IACZ,QAER,IAEJpqI,GAAKuyH,YAAY1wH,KAAC,EACtB0W,EAAAO,IAAG,KACXnX,QAAK3C,EAAA+xB,YAAW,SAAClvB,IAAC,SAAK0W,EAAAO,IAAG,GAAG,GACnC,IAAC,EACD9Z,EAAAojB,KAAI,SAACvgB,IAAC,OAAM7B,GAAK6hB,SAAU,CAAK,IAG7B7hB,GAAAqqI,YAAsB,GAObrqI,GAAAsqI,QAAU,SAAC1iH,IAAC,OAAK4hH,EAAc5hH,GAAE,EACjC5nB,GAAAuqI,WAAa,kBAAMvqI,GAAKopI,iBAAiB,IAAIzxF,EAAAmO,KAAO,EAAC9lD,EAWrE,CAACtB,SAAAgrI,EAAA,EAAAvpI,IAAA,cAAAC,MArEO,SAAYihC,IAAS,IAAA5f,GACzB,OAAO7iB,KAAKgB,UAAUuE,IAAI,0BAAuB,EAC3ClF,EAAAozH,YAAW,CAAEhxF,KAAGixF,aAAyB,QAAb7wG,MAAExiB,EAAA8rF,oBAAW,IAAAtpE,QAAA,EAAXA,GAAazP,KAAMrQ,QAC7C3C,EAAAub,KAAI,SAAC1Y,IAAC,OAAKA,GAAEP,KAAKiZ,IAAI,SAACkrE,IAAC,OAAK,IAAI9tC,EAAAmO,KAAK2/B,GAAE,EAAC,KAAC,EAE9C0rC,EAAAoB,aAAYlxF,GACtB,GAAC,CAAAlhC,IAAA,qBAAAgE,IAsDD,WACI,OAAOqlI,EAAc5qI,KAAKqqI,QAAQzxH,WACtC,GAAC,CAAArX,IAAA,eAAAC,MASM,WAAmC,IAAAuD,GAAA/E,KAAtBs5B,GAAAz0B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,GACpC7E,KAAKyD,QAAQ,SAAU,kBAAMsB,GAAKslI,QAAQjoI,KAAKk3B,GAAU,EAC7D,GAAC,CAAA/3B,IAAA,mBAAAC,MAEM,WAAmC,IAAA2E,GAAAnG,KAAlB2G,GAAA9B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,GAEpC,GADK8B,KAAOA,GAAQ3G,KAAKqqI,QAAQzxH,YAC5BgyH,EAAcjkI,IACnB,KAAMgmB,GAAO,IAAIosB,EAAAmO,KAAK,CAAE9zC,GAAIzM,GAAOA,SAAO2M,KAAM3M,GAAMC,MAAM,KAAK,KACjE5G,KAAKuqI,QAAQ59G,IACb,IAAQrZ,GAAuBqZ,GAAvBrZ,KAAM6+B,GAAiBxlB,GAAjBwlB,aACRyU,EAAe,GAAA5iD,OAAM2C,GAAK,KAAA3C,OAAIsP,GAAI,KAAAtP,OAAImuC,IACtC0U,GAAe7mD,KAAKgB,UAAUuE,IAAI,qBAAuB,GAC/DvF,KAAKgB,UAAU84B,gBAAgB,mBAAkB,GAAA91B,OAAA+e,EAC1C8jC,GAAahrC,OAAO,SAAC5Y,IAAC,OAAMA,GAAE4C,SAASc,GAAM,IAAC,CACjDigD,KAEJ5mD,KAAKyD,QACD,eACA,WACI0C,GAAKkkI,QAAQjoI,KAAK,IAClB+D,GAAKylI,WAAWx/C,cAAc5qF,MAAQ,EAC1C,EACA,IAAG,CAEX,GAEA,CAAAD,IAAA,UAAAC,MAIO,SAAQmrB,IAAU,IAAAk/G,GAAA/oH,GAAA/b,GAAA/G,KACf+S,IAAuB,QAAhB84H,GAAA7rI,KAAKyrI,mBAAW,IAAAI,QAAA,EAAhBA,GAAkBhwH,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAOuZ,GAAKvZ,EAAE,KAAK,GAClEpT,KAAKy5B,SAAQ,GAAAz1B,OAAA+e,EACNhQ,IAAI,CACP,IAAIgmC,EAAAmO,KAAIn4B,IAAA,GACDpC,IAAI,IACPvZ,GAAIuZ,GAAKvZ,IAAMuZ,GAAKhmB,MACpB62G,eAGc,QAHA16F,GACR6J,GAAKvZ,KAA2B,IAArBuZ,GAAK+wF,YAEZ,KADA/wF,GAAK6wF,sBACD,IAAA16F,aAGtB9iB,KAAKyD,QACD,eACA,WACIsD,GAAKsjI,QAAQjoI,KAAK,IAClB2E,GAAK6kI,WAAWx/C,cAAc5qF,MAAQ,EAC1C,EACA,IAER,GAEA,CAAAD,IAAA,aAAAC,MAIO,SAAWmrB,IACd,IAAM5Z,GAAO/S,KAAKyrI,YAAY5vH,OAAO,SAACiwH,IAAM,OAAKA,GAAO14H,KAAOuZ,GAAKvZ,EAAE,GACtEpT,KAAKy5B,SAAS1mB,GAClB,GAEA,CAAAxR,IAAA,mBAAAC,MAIO,SAAiBusB,IAAK,IAAA0kB,GAAAzyC,KAEzB,GAAI+tB,GAAMolC,OAAQ,CACd,IAAME,GAAOtlC,GAAMolC,OAAOC,MAAM,GAEhC,GAAIC,GAAM,CACN,IAAMiX,GAAS,IAAI/W,WACnB+W,GAAO3W,WAAWN,GAAM,SACxBiX,GAAO9W,iBAAiB,OAAQ,SAAC+W,IAC7B93B,GAAKs5F,eAAgBxhE,GAAIC,WAAmBnjE,QAC5C0mB,GAAMolC,OAAO3xD,MAAQ,EACzB,GACA8oE,GAAO9W,iBAAiB,QAAS,SAACvwD,IAAC,SAC/B3C,EAAAkU,aAAY,sBAAsB,IAIlD,GAEA,CAAAjT,IAAA,iBAAAC,MAIQ,SAAekB,IAAY,IAAAo7B,GAGV7B,GAHU0rC,GAAA3nE,KACzB+S,MAAOzS,EAAAmzD,WAAU/wD,KAAS,GAC1B0Q,IAAkB,QAAb0qB,MAAAx9B,EAAAmG,sBAAa,IAAAq3B,QAAA,EAAbA,GAAekuG,WAAY,UAAU9vG,EAAA/E,EAC/BpkB,IAAI,QAAAqkB,GAAA,WAAE,IAAA60G,GAAZ74D,GAAEn3C,GAAAz6B,MACT4xE,GAAG9/D,KAAO8/D,GAAG9/D,MAAI,GAAAtP,OAAOovE,GAAG84D,WAAU,KAAAloI,OAAIovE,GAAG+4D,WAC5C,IAAM3kH,IACF4rD,GAAG9/D,MAAI,GAAAtP,OAAOmlC,KAAKC,MAAsB,SAAhBD,KAAKgpC,YAE7BvrE,MAAM,KACN8N,KAAK,KACLke,cAEAwgD,GAAGzsE,QACJysE,GAAGzsE,MAAK,GAAA3C,OAAMwjB,GAAO,KAAAxjB,OAAIoP,GAAE,WAAApP,OAAUzD,EAAA6rI,cAEzC,IAAMC,GAAkB1kE,GAAK3mE,UAAUuE,IACnC,iCACC,CAAC,cACN6tE,GAAGoqC,eACkB,QADJyuB,GACb74D,GAAGoqC,sBAAc,IAAAyuB,OAChBI,GAAgBj9G,KAAK,SAACnsB,IAAC,OAAKmwE,GAAGzsE,MAAM2lI,SAASrpI,GAAE,GAGrDmwE,GAAGm5D,MAAQ,GAAKn5D,GAAGm5D,MAEnB5kE,GAAK4iE,QAAQ,IAAIxxF,EAAAmO,KAAKksB,MAtB1B,IAAAl3C,EAAAlT,MAAAiT,GAAAC,EAAA5E,KAAAC,MAAAH,IAuBC,OAAApN,IAAAkS,EAAA1X,EAAAwF,GAAA,SAAAkS,EAAA1E,GAAA,CACL,GAGA,CAAAj2B,IAAA,sBAAAC,MACO,WACCxB,KAAKkrI,kBAET,EAAA5qI,EAAAszD,cAAa,eADC,sJAElB,GAEA,CAAAryD,IAAA,WAAAC,MAIO,SAAS83B,IACZt5B,KAAKyrI,YAAcnyG,GACft5B,KAAKi5B,WACLj5B,KAAKi5B,UAAUK,GAEvB,GAGA,CAAA/3B,IAAA,aAAAC,MAIO,SAAWA,IACdxB,KAAKyrI,YAAcjqI,EACvB,GAAC,CAAAD,IAAA,mBAAAC,MAEM,SAAiBs3B,IACpB94B,KAAK84B,SAAWA,EACpB,GAGA,CAAAv3B,IAAA,mBAAAC,MAIO,SAAiBw3B,IACpBh5B,KAAKi5B,UAAYD,EACrB,GAGA,CAAAz3B,IAAA,oBAAAC,MAIO,SAAkBw3B,IACrBh5B,KAAKm5B,SAAWH,EACpB,GAAC,CAAAz3B,IAAA,YAAAC,MAEM,SAAUsa,IACb,OAAOA,IAAMxI,MAAQ,EACzB,GAEA,CAAA/R,IAAA,mBAAAC,MAGO,WAAwC,IAAAgrI,GAAAzkE,GAAA/nE,KAAvB2sB,GAAA9nB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAAIk0C,EAAAmO,KAC/B7uC,GAAMrY,KAAKiY,QAAQrD,KACrBo1H,EAAAyC,sBACA,CACIrlI,MAAO,OACPD,OAAQ,OACRzE,KAAM,CAAEiqB,WAGK,QAArB6/G,GAAAn0H,GAAIM,yBAAiB,IAAA6zH,IAArBA,GAAuBz+G,MAClBhrB,QAAK3C,EAAA4C,OAAM,SAACC,IAAC,MAAkB,SAAbA,GAAEurB,MAAiB,IACrC1b,UAAU,SAACib,IACRg6C,GAAKwiE,QAAQx8G,GAAMmlB,UACnB76B,GAAI1Q,OACR,EACR,KAACmjI,CAAA,CAnSD,CAAQxqI,EAAA8H,cAAYxI,SADXkrI,4CAAsBziI,EAAAC,4BAAAC,EAAAwQ,WAAA1Q,EAAAC,4BAAAG,EAAAD,iBAAA,kDAAtBsiI,EAAsB/hI,UAAA,wBAAAsoF,UAAA,SAAAhoF,GAAAC,SAAA,EAAAD,sYARpB,CACP,CACIiD,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAM4wG,CAAsB,GACpD3wG,OAAO,KAEd9xB,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,oRAjGgCsiB,UAAAC,MAAAC,EAAA,ikBAqBhBF,UAAAG,MAAAD,EAAA,mIACiC,qOA0BlCF,UAAAI,MAAAF,EAAA,mNACa,iBAAuC,kBACpD,oMAUAF,UAAAM,MAAAJ,EAAA,yOACgB,iBAAkC,kBAClD,kBACA,kNAeAF,UAAAO,MAAAL,EAAA,sNACI,kBAAkC,mBACtC,wDA7GZrnB,EAAA8E,yBAAA,UAAA9E,CAAwD,UAAxDA,CAAwD,uBAAxDA,CAAwD,uBASxCA,EAAA0J,qBAAA,EAAA26H,EAAA,sBAiBJrkI,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAMI9E,EAAAuI,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAqjI,aAAA57H,GAAoB,EAArC1I,CAAsC,gCAAA0I,IAAA,OAIdzH,EAAA8gI,iBAAAr5H,GAAAvP,MAA8B,iCAV1D6G,EAAA+E,yBAYA/E,EAAA0J,qBAAA,GAAA66H,EAAA,qBAKJvkI,EAAA+E,yBACA/E,EAAA8E,yBAAA,+BACI9E,EAAA0J,qBAAA,GAAA86H,EAAA,oBAAAxkI,CAMa,GAAAykI,EAAA,oDASjBzkI,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,GAAAg7H,EAAA,eAiDJ1kI,EAAA+E,gGAhH6B/E,EAAA+rD,sBAAA,WAAA9qD,EAAAwvB,UAWQzwB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAmiI,aAqBrBpjI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,KAAArM,EAAA+gI,SAAAhiI,CAA2B,kBAAA4I,GAA3B5I,CAA2B,kBAAAi+G,EAA3Bj+G,CAA2B,gCAAAiB,EAAA8hI,oBAQ1B/iI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA2Z,SAOA5a,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA0jI,oBAOgB3kI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,MAAArM,EAAA+hI,aAYxBhjI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2hI,sUA8DJH,CACT,8MC/KJ,IAAAjhI,EAAAhM,EAAA,OAQA2L,EAAA3L,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAQAyC,EAAAzC,EAAA,OACAosI,EAAApsI,EAAA,OACA00H,EAAA10H,EAAA,OACAk7C,EAAAl7C,EAAA,KACAwC,EAAAxC,EAAA,8DA0BgBwK,EAAAkB,oBAAA,iFAUAlB,EAAA8E,yBAAA,mBAEI9E,EAAAuI,qBAAA,uBAAAq8H,EAAA5kI,EAAA2I,wBAAA0sC,GAAA9/B,UAAA8D,EAAArZ,EAAA8I,0BAASuQ,SAAA+X,SAAAwzG,GAAkB5kI,EAAA+I,sBAAAsQ,EAAAwrH,YAAW,GAEtC7kI,EAAA8E,yBAAA,YAA2B9E,EAAAgF,iBAAA,GAAiBhF,EAAA+E,yBAC5C/E,EAAA8E,yBAAA,YACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,wBAAA/E,6BAH2BA,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAg5H,EAAA35H,MAEvBjL,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA0/H,EAAAtmI,MAAA,mEAGR0B,EAAA8E,yBAAA,kBAAA9E,CAGC,YAGOA,EAAAuI,qBAAA,qBAAAG,GACiCA,SAAAo8H,kBACpDp8H,EAAA6nE,gBACH,EAHsBvwE,CAEC,sBAAA0I,GAEgCA,SAAAo8H,kBACpDp8H,EAAA6nE,gBACH,EANsBvwE,CAEC,iBAAA0I,GAAA1I,EAAA2I,wBAAAgF,GAAA,IAAAC,EAAA5N,EAAA8I,0BAMlB8E,SAAAwjB,SAAAxjB,EAAAw7G,YACJ1gH,EAAAo8H,kBACE9kI,EAAA+I,sBAAAL,EAAA6nE,iBACH,GACsBvwE,EAAA8E,yBAAA,YAAA9E,EAAAulB,iBAAA,MAEAvlB,EAAA+E,wBAAA/E,iDAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAA5c,EAAAugH,YAAAppH,EAAA2lB,sBAAA,iEAGR3lB,EAAA8E,yBAAA,mBAGI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAmd,GAAA,IAAAhY,EAAA9N,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA+E,EAAAi3H,WAAU,GAEnB/kI,EAAAgF,iBAAA,GACJhF,EAAA+E,mEAJI/E,EAAAwI,qBAAA,YAAA4F,EAAA22H,UAGA/kI,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAAjJ,EAAAg7G,WAAA,yBAAAh7G,EAAA1Q,MAAA,MAvEpBpG,2BAkGI,eAAAC,EADS6/H,EACT,SAAA9+H,GAAAC,EAAA6+H,EAAA9+H,GAAA,IAAAG,EAAAC,EAAA0+H,GA6DA,SAAAA,EAAoBz+H,GAA0B,IAAAI,EAAArB,SAAAC,KAAAy/H,IAC1Cr+H,EAAAN,EAAAO,KAAArB,OADgBgB,YAjDJI,EAAA2E,MAAQ,GAQR3E,EAAAisI,SAA8C,SAAC5qG,GAAC,IAAAv8B,EAAA,OAC5D9E,EAAKJ,UAAUuE,IAAI,0BAAuB,EACpClF,EAAAozH,YAAW,CAAEhxF,IAAGixF,aAAyB,QAAbxtH,KAAE7F,EAAA8rF,oBAAW,IAAAjmF,OAAA,EAAXA,EAAakN,KAAMrQ,QAC7C3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,EAAEP,KAAKiZ,IAAI,SAAC1Y,GAAC,OAAK,IAAI81C,EAAAmO,KAAKjkD,EAAE,EAAC,KAAC,EAE9CsvH,EAAAoB,aAAYlxF,EAAE,EAUjBrhC,EAAAipI,QAAU,IAAI1wH,EAAA0iE,QAEdj7E,EAAAksI,gBAAsClsI,EAAKipI,QAAQtnI,QACtD3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAuxB,yBAAoB,EACpBvxB,EAAAqxB,WAAU,SAACuB,GACP5xB,SAAK6hB,SAAU,EACR7hB,EAAKuhB,SAAWvhB,EAAKuhB,QAAQ1d,OAAS,KACvC0U,EAAAO,IAAG9Y,EAAKuhB,SACRqQ,EAAM/tB,QAAU,EACf7D,EAAK2pI,UAEFpxH,EAAAkgG,UAAS,IAAC0Y,EAAAoB,aAAY3gG,IAAK,EAAGi3G,EAAAqB,cAAat4G,KAD3C5xB,EAAKisI,SAASr6G,IAAK,EAEvBrZ,EAAAO,IAAG,GACb,IAAC,EACD9Z,EAAA+xB,YAAW,SAAClvB,GAAC,SAAK0W,EAAAO,IAAG,GAAG,MACxB9Z,EAAAub,KAAI,SAAC5I,GACD3R,EAAK6hB,SAAU,EACflQ,KAAOzS,EAAAgyB,SAAQvf,GACf,IAAMwqB,GAAUn8B,EAAKqwH,YAAc,IAAI7+F,cACvC,OAAO7f,EAAK8I,OACR,SAACC,GAAI,OAAM1a,EAAKya,QAAUza,EAAKya,OAAOC,EAAMyhB,EAAO,EAE3D,IAeGn8B,EAAAmsI,YAAc,kBAAMnsI,EAAK2C,aAAa,QAAQ,EAE9C3C,EAAA8rI,UAAY,WACf9rI,EAAKqC,QAAQ,OAAQ,eAAAquH,EAAA,OAAoB,QAApBA,EAAM1wH,EAAK2vF,iBAAS,IAAA+gC,GAAe,QAAfA,EAAdA,EAAgB1lC,qBAAa,IAAA0lC,OAAA,EAA7BA,EAA+Bne,MAAM,EACpE,EAAEvyG,CAdF,CAACtB,SAAA2/H,EAAA,EAAAl+H,IAAA,WAAAC,MAgBM,WAAQ,IAAAuD,EAAA/E,KAEXA,KAAK4S,aACD,iBACA5S,KAAKstI,gBAAgBx6H,UAAU,SAACC,GAAI,OAAMhO,EAAKyoI,UAAYz6H,CAAI,IAEnE/S,KAAKytI,mBACT,GAEA,CAAAlsI,IAAA,oBAAAC,MAGO,WAAiB,IAAA2E,EAAAnG,KACpBA,KAAKyD,QACD,QACA,eAAAiqI,EAAA,OAAOvnI,EAAKsrH,YAA6B,QAAhBic,EAAAvnI,EAAKwnI,mBAAW,IAAAD,OAAA,EAAhBA,EAAkBp6H,OAAQ,EAAE,EACrD,IAER,GAEA,CAAA/R,IAAA,WAAAC,MAIO,SAAS83B,EAA0B3yB,GAEb,iBAAd2yB,GACNA,IAAsBt5B,KAAKyxH,aAE5Bn4F,EAAY,IAAIyf,EAAAmO,KAAK,CACjB5zC,MAAOtT,KAAKyxH,YAAc9qH,GAAS,IAAIC,MAAM,KAAK,GAClDD,MAAO3G,KAAKyxH,YAAc9qH,GAAS,MAGrC2yB,aAAqByf,EAAAmO,OAC3BlnD,KAAK2tI,YAAcr0G,EACft5B,KAAKi5B,WACLj5B,KAAKi5B,UAAUK,GAEnBt5B,KAAKytI,oBACT,GAEA,CAAAlsI,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAK2tI,YAAcnsI,EACnBxB,KAAKytI,mBACT,GAAC,CAAAlsI,IAAA,mBAAAC,MAEM,SAAiBs3B,GACpB94B,KAAK84B,SAAWA,CACpB,GAEA,CAAAv3B,IAAA,mBAAAC,MAIO,SAAiBw3B,GACpBh5B,KAAKi5B,UAAYD,CACrB,GAEA,CAAAz3B,IAAA,oBAAAC,MAIO,SAAkBw3B,GACrBh5B,KAAKm5B,SAAWH,CACpB,KAACymG,CAAA,CApJD,CAAQn/H,EAAA8H,cAAYxI,SADX6/H,0CAAwBp3H,EAAAC,4BAAAC,EAAAC,iBAAA,kDAAxBi3H,EAAwB12H,UAAA,0BAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,+BAuELQ,EAAA6iF,6TA/EjB,CACP,CACIpgF,QAAS9C,EAAAwwB,kBACTC,eAAapwB,EAAAqwB,YAAW,kBAAMulG,CAAwB,GACtDtlG,OAAO,KAEd9xB,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,guBAlCyDsiB,UAAAC,MAAAC,EAAA,4HACX,0EA3D3CrnB,EAAA8E,yBAAA,UAAA9E,CAA0C,qBAA1CA,CAA0C,eAO9BA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAmoH,WAAA1gH,CAAA,EAAA1I,CAAwB,yBAAA0I,GAAA,OACPzH,EAAA+gI,QAAAjoI,KAAA2O,GAAuB,GAAG,EAD3C1I,CAAwB,gCAAAiB,EAAAskI,UAOxCtkI,EAAAskI,SAAAtkI,EAAAmoH,YACAnoH,EAAAmwB,SAAAnwB,EAAAmoH,YAEJ,EAAE,EAVkBppH,CAAwB,yBAUhBiB,EAAAmkI,mBAAmB,EAV3BplI,CAAwB,0BAWfiB,EAAAikI,aAAa,GAhB1BllI,EAAA+E,yBAkBA/E,EAAA8E,yBAAA,gBAA8C9E,EAAAgF,iBAAA,YAAMhF,EAAA+E,yBACpD/E,EAAA0J,qBAAA,EAAA87H,EAAA,qBAKJxlI,EAAA+E,yBACA/E,EAAA8E,yBAAA,0BAEI9E,EAAAuI,qBAAA,0BAAAG,GAAA,OAAkBzH,EAAAmwB,SAAA1oB,EAAA6nD,OAAAp3D,MAA6B,GAE/C6G,EAAA0J,qBAAA,EAAA+7H,EAAA,mBAAAzlI,CAQa,GAAA0lI,EAAA,mBARb1lI,CAQa,GAAA2lI,EAAA,qBA+BjB3lI,EAAA+E,wBAAA/E,0CA/DQA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAmoH,WAAAppH,CAAwB,WAAAiB,EAAAwvB,SAAxBzwB,CAAwB,cAAAiB,EAAAm7H,aAAA,qBAAxBp8H,CAAwB,kBAAAuf,GAevBvf,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA2Z,SAUkB5a,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAkkI,WASlBnlI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAmoH,YAAAnoH,EAAAskI,UAAAtkI,EAAAskI,SAAAtkI,EAAAmoH,aAuBAppH,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAAAvH,EAAAkkI,WAAAlkI,EAAAkkI,UAAAvoI,UAAAqE,EAAAmoH,YAAAnoH,EAAAvD,6NA8BR05H,CACT,sFC1HJ9/H,kKCDA,IAAA8wB,EAAA5yB,EAAA,OAGa8B,kBAAkB,CAC3B,CAAEyT,GAAI,IAAKE,KAAM,cACjB,CAAEF,GAAI,IAAKE,KAAM,aACjB,CAAEF,GAAI,IAAKE,KAAM,cACjB,CAAEF,GAAI,IAAKE,KAAM,UAGR3T,gBAAgB,CACzB,CAAEyT,GAAI,IAAKE,KAAM,OAAQqtB,YAAa,IAAKC,MAAO,QAAStB,QAAS,OACpE,CACIlsB,GAAI,IACJE,KAAM,SACNqtB,YAAa,IACbC,MAAO,QACPtB,QAAS,MACT1U,OAAQ,IAEZ,CACIxX,GAAI,IACJE,KAAM,SACNqtB,YAAa,IACbC,MAAO,QACPtB,QAAS,OAEb,CACIlsB,GAAI,IACJE,KAAM,QACNqtB,YAAa,IACbC,MAAO,gBACPtB,QAAS,OAEb,CACIlsB,GAAI,IACJE,KAAM,SACNqtB,YAAa,IACbC,MAAO,OACPtB,QAAS,OAEb,CAAElsB,GAAI,IAAKE,KAAM,QAASqtB,YAAa,IAAKC,MAAO,OAAQtB,QAAS,OACpE,CAAElsB,GAAI,IAAKE,KAAM,QAASqtB,YAAa,IAAKC,MAAO,OAAQtB,QAAS,OACpE,CACIlsB,GAAI,IACJE,KAAM,YACNqtB,YAAa,IACbC,MAAO,aACPtB,QAAS,OAEb,CACIlsB,GAAI,IACJE,KAAM,UACNqtB,YAAa,IACbC,MAAO,YACPtB,QAAS,OAEb,CACIlsB,GAAI,KACJE,KAAM,qBACNqtB,YAAa,IACbC,MAAO,UACPtB,QAAS,OAEb,CACIlsB,GAAI,KACJE,KAAM,aACNqtB,YAAa,IACbC,MAAO,OACPtB,QAAS,QAIJ3/B,cAAgC2hC,MAAM,KAC9C+gB,KAAK,MACL1mC,IAAI,SAAC1Y,EAAGgvB,GAAC,MAAM,CACZ7e,GAAE,SAAApP,OAAWiuB,GACb3e,KAAI,SAAAtP,OAAWiuB,GACfmN,QAASz/B,EAAAsuI,cAAch8G,EAAItyB,EAAAsuI,cAAchpI,QAAQmO,GACjDI,YAAW,iBAAAxP,OAAmBiuB,GAC9Bi8G,aAAY,SAAAlqI,OAAWiuB,GACvBoN,cAAa,UAAAr7B,OAAYiuB,GACzBsN,WAAU,cAAAv7B,OAAgBiuB,GAC1BuN,WAAY,GACZC,kBAAiB,kBAAAz7B,OAAoBiuB,GACxC,GAEQtyB,uBAAuB2hC,MAAM,KACrC+gB,KAAK,MACL1mC,IAAI,SAAC1Y,EAAGgvB,GAAC,MAAM,CACZ7e,GAAE,kBAAApP,OAAoBiuB,GACtBgO,aAAY,SAAAj8B,OAAWiuB,GACvBkO,eAAc,WAAAn8B,OAAaiuB,GAC3BoO,iBAAe5P,EAAAyC,aAAY9Y,KAAK8W,OAChCoP,+BAA6B7P,EAAAyC,aAAY9Y,KAAK8W,OAC9CsP,6BAA2B/P,EAAAyC,aAAY9Y,KAAK8W,MAAQ,KACvD,iHChGL,IAAA5wB,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACAswI,EAAAtwI,EAAA,OAOMuwI,EAAY,iBAELzuI,cAcb,SAAS0uI,KACL,EAAAhuI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,qBAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GAEP,OADekrI,EAAAI,eAEnB,KACH,EAEDluI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,yBAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GACP,IAAM8qB,EAAQogH,EAAAI,gBAAgBn/G,KAC1B,SAAC5K,GAAC,OAAKA,EAAEpR,KAAOnQ,EAAEurI,aAAap7H,EAAE,GAErC,IAAK2a,EACD,KAAM,CACFsZ,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoCf,EAAEurI,aAAap7H,KAElE,OAAO2a,CACX,KACH,EAED1tB,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,qBAClBl7F,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACqd,GACP,IAAM0qG,EAAS1/G,IAAA,GACRgV,EAAQ2B,MAAI,IACftyB,GAAE,aAAApP,UAAe1D,EAAA81E,sBAAqB,QAE1C+3D,SAAAI,gBAAgBn4G,KAAKq4G,GACdA,CACX,KACH,EAEDpuI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,yBAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACgoH,GAAG,OACVC,EAAOR,EAAAI,gBAAPI,CAAwBD,EAAIF,aAAap7H,GAAE2b,EAAA,GAAO2/G,EAAIhpG,MAAO,KACpE,EAEDrlC,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,yBAClBl7F,SAAU,GACVgtE,OAAQ,SACRx5F,SAAU,SAACgoH,GACP,IAAMz4E,EAAQk4E,EAAAI,gBAAgBp/F,UAC1B,SAAC3qB,GAAC,OAAKA,EAAEpR,KAAOs7H,EAAIF,aAAap7H,EAAE,GAEvC,GAAI6iD,EAAQ,EACR,KAAM,CACF5uB,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoC0qI,EAAIF,aAAap7H,KAEpE+6H,EAAAI,gBAAgBr/F,OAAO+mB,EAAO,EAElC,KACH,EAED51D,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,gBAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GAEP,OADekrI,EAAAF,aAEnB,KACH,EAED5tI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,oBAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GACP,IAAM8qB,EAAQogH,EAAAF,cAAc7+G,KAAK,SAAC5K,GAAC,OAAKA,EAAEpR,KAAOnQ,EAAEurI,aAAap7H,EAAE,GAClE,IAAK2a,EACD,KAAM,CACFsZ,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoCf,EAAEurI,aAAap7H,KAElE,OAAO2a,CACX,KACH,EAED1tB,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,gBAClBl7F,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACqd,GACP,IAAM0qG,EAAS1/G,IAAA,GACRgV,EAAQ2B,MAAI,IACftyB,GAAE,YAAApP,UAAc1D,EAAA81E,sBAAqB,QAEzC+3D,SAAAF,cAAc73G,KAAKq4G,GACZA,CACX,KACH,EAEDpuI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,oBAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACgoH,GAAG,OACVC,EAAOR,EAAAF,cAAPU,CAAsBD,EAAIF,aAAap7H,GAAE2b,EAAA,GAAO2/G,EAAIhpG,MAAO,KAClE,EAEDrlC,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,oBAClBl7F,SAAU,GACVgtE,OAAQ,SACRx5F,SAAU,SAACgoH,GACP,IAAMz4E,EAAQk4E,EAAAF,cAAc9+F,UACxB,SAAC3qB,GAAC,OAAKA,EAAEpR,KAAOs7H,EAAIF,aAAap7H,EAAE,GAEvC,GAAI6iD,EAAQ,EACR,KAAM,CACF5uB,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoC0qI,EAAIF,aAAap7H,KAEpE+6H,EAAAF,cAAc/+F,OAAO+mB,EAAO,EAEhC,KACH,EAED51D,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,0BAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GAEP,OADekrI,EAAAS,oBAEnB,KACH,EAEDvuI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,8BAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GACP,IAAM8qB,EAAQogH,EAAAS,qBAAqBx/G,KAC/B,SAAC5K,GAAC,OAAKA,EAAEpR,KAAOnQ,EAAEurI,aAAap7H,EAAE,GAErC,IAAK2a,EACD,KAAM,CACFsZ,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoCf,EAAEurI,aAAap7H,KAElE,OAAO2a,CACX,KACH,EAED1tB,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,0BAClBl7F,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACqd,GACP,IAAM0qG,EAAS1/G,IAAA,GACRgV,EAAQ2B,MAAI,IACftyB,GAAE,mBAAApP,UAAqB1D,EAAA81E,sBAAqB,QAEhD+3D,SAAAS,qBAAqBx4G,KAAKq4G,GACnBA,CACX,KACH,EAEDpuI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,8BAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACgoH,GAAG,OACVC,EAAOR,EAAAS,qBAAPD,CAA6BD,EAAIF,aAAap7H,GAAE2b,EAAA,GAAO2/G,EAAIhpG,MAAO,KACzE,EAEDrlC,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,8BAClBl7F,SAAU,GACVgtE,OAAQ,SACRx5F,SAAU,SAACgoH,GACP,IAAMz4E,EAAQk4E,EAAAS,qBAAqBz/F,UAC/B,SAAC3qB,GAAC,OAAKA,EAAEpR,KAAOs7H,EAAIF,aAAap7H,EAAE,GAEvC,GAAI6iD,EAAQ,EACR,KAAM,CACF5uB,OAAQ,IACR0S,QAAO,yCAAA/1C,OAA2C0qI,EAAIF,aAAap7H,KAE3E+6H,EAAAS,qBAAqB1/F,OAAO+mB,EAAO,EAEvC,KACH,EAED51D,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,WAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GAEP,OADekrI,EAAAU,WAEnB,KACH,EAEDxuI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,eAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GACP,IAAM8qB,EAAQogH,EAAAU,YAAYz/G,KAAK,SAAC5K,GAAC,OAAKA,EAAEpR,KAAOnQ,EAAEurI,aAAap7H,EAAE,GAChE,IAAK2a,EACD,KAAM,CACFsZ,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoCf,EAAEurI,aAAap7H,KAElE,OAAO2a,CACX,KACH,EAED1tB,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,WAClBl7F,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACqd,GACP,IAAM0qG,EAAS1/G,IAAA,GACRgV,EAAQ2B,MAAI,IACftyB,GAAE,UAAApP,UAAY1D,EAAA81E,sBAAqB,QAEvC+3D,SAAAU,YAAYz4G,KAAKq4G,GACVA,CACX,KACH,EAEDpuI,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,eAClBl7F,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACgoH,GAAG,OACVC,EAAOR,EAAAU,YAAPF,CAAoBD,EAAIF,aAAap7H,GAAE2b,EAAA,GAAO2/G,EAAIhpG,MAAO,KAChE,EAEDrlC,EAAAiuI,sBAAqB,CACjB7vI,KAAI,GAAAuF,OAAKoqI,EAAS,eAClBl7F,SAAU,GACVgtE,OAAQ,SACRx5F,SAAU,SAACgoH,GACP,IAAMz4E,EAAQk4E,EAAAU,YAAY1/F,UACtB,SAAC3qB,GAAC,OAAKA,EAAEpR,KAAOs7H,EAAIF,aAAap7H,EAAE,GAEvC,GAAI6iD,EAAQ,EACR,KAAM,CACF5uB,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoC0qI,EAAIF,aAAap7H,KAEpE+6H,EAAAU,YAAY3/F,OAAO+mB,EAAO,EAE9B,GAER,CAtR2Bo4E,GAE3B,IAAMM,EAAS,SAACG,GAAO,OAAK,SAAC17H,EAAI1Q,GAC7B,IAAMuzD,EAAQ64E,EAAQ3/F,UAAU,SAAC3qB,GAAC,OAAKA,EAAEpR,KAAOA,CAAE,GAClD,GAAI6iD,EAAQ,EACR,KAAM,CACF5uB,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoCoP,IAEnD,IAAMq7H,EAAS1/G,EAAA,GAAQrsB,GACvBosI,SAAQ5/F,OAAO+mB,EAAO,EAAGw4E,GAClBA,CACX,CAAC,mHCvBD,IAAAnuI,EAAAzC,EAAA,OAMA4yB,EAAA5yB,EAAA,OACAswI,EAAAtwI,EAAA,OACAkxI,EAAAlxI,EAAA,OAEAmxI,EAAAnxI,EAAA,OACAoxI,EAAApxI,EAAA,OAGIqxI,KAAaz+G,EAAAlV,QAAIkV,EAAA0+G,SAAQ/0H,KAAK8W,MAAO,GAAI,CACzCgY,MAAO,EACPG,QAAS,EACT+lG,QAAS,EACTC,aAAc,IAGZC,EAAgB,WAAyB,IAAxBhtB,EAAIz9G,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACjBzC,KAAOquB,EAAA4N,YAAW6wG,EAA4C,KAA5CA,EAAa5uI,EAAA81E,sBAAqB,GAAK,IAC/D,OAAIksC,IAAM4sB,KAAaz+G,EAAA4N,YAAWj8B,EAAM,MAAE,EACnCquB,EAAAyC,aAAY9wB,EACvB,EAEMmtI,EAAQ,CAAC,OAAQ,UAAW,gBAAiB,UAAW,UACxDC,EAAW,CAAC,aAAc,aAAc,eAEjC7vI,gBAAgB,IAAI2hC,MAAM,KAAK+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,EAAGgzD,IAClDw5E,EAAanvI,EAAA81E,sBAAqB,QADyB,IAAAs5D,EAE3D/iH,EACFqiH,EAAAW,cAAWrvI,EAAA81E,sBAAqB44D,EAAAW,WAAW1qI,UAAa,GACtD0N,EAAO48H,KAAMjvI,EAAA81E,sBAAqBm5D,EAAMtqI,SACxC4T,EAAMo2H,EAAAW,kBAAetvI,EAAA81E,sBAAqB64D,EAAAW,eAAe3qI,SACzD4qI,EAAOZ,EAAAa,YAAYj0H,OAAO,SAAC5Y,GAAC,OAAKA,EAAE2Q,YAAciF,GAAKzF,EAAE,GACxD07C,EAAM+gF,KAAKvvI,EAAA81E,sBAAqBy5D,EAAK5qI,SACrC8qI,EACFhB,EAAAiB,YAAYn0H,OAAO,SAAC5Y,GAAC,OAAKA,EAAEyQ,MAAM7N,SAASipD,GAAK17C,GAAG,IAAK,GACtDo4B,KAAWlrC,EAAA81E,sBAAqB,QAAU,EAC1C65D,EAAWjB,EAAAW,cAAWrvI,EAAA81E,sBAAqB44D,EAAAW,WAAW1qI,SACtDirI,EAAQlB,EAAAmB,eAAY7vI,EAAA81E,sBAAqB44D,EAAAmB,YAAYlrI,SACrDmrI,KAAc9vI,EAAA81E,sBAAqB,EAAG,GACtCj/B,KAAW72C,EAAAgzE,WACZrd,EAAQ,GAAM,EAA6B,IAAzB9sB,KAAKC,MAAM6sB,EAAQ,IACtC,GAEJ,MAAO,CACH7iD,GAAE,WAAApP,OAAaiyD,GACfjrB,cAAeskG,GAAc,GAC7BrkG,YAAaqkG,IACbv+F,QAASpkB,EAAKvZ,GACds6B,UAAW/gB,EAAKrZ,KAChBuxB,WAAYlY,EAAKhmB,MACjBgvC,eAAgBhpB,EAAKrZ,KACrB29B,gBAAiBtkB,EAAKhmB,MACtBmK,SACa,YAAT6B,EACMu9H,EAAMvpI,MACG,YAATgM,EAAkB,QAAA3O,OACVmzC,GAAQ,QAAAnzC,OACR8qD,GAAK17C,GAAE,KAAApP,OAAIiyD,GAC7B5iD,WACa,YAATV,EACMu9H,EAAM58H,KACG,YAATX,EACAwkC,EAAQ,GAAAnzC,OACL8qD,GAAK17C,GAAE,KAAApP,OAAIiyD,GACxBziD,YACa,YAATb,EACMu9H,EAAM58H,KACG,YAATX,EACAwkC,EAAQ,QAAAnzC,OACAiyD,GAClB30D,MAAK,GAAA0C,UAAK1D,EAAAi1C,uBAAsB5iC,GAAK,aAAA3O,OAAYiyD,GACjDtjD,OACAc,aAAcd,EACdk3B,cAAYvpC,EAAA81E,sBAAqB,QAAU,GAAM,EACjDrgC,UAAQz1C,EAAA81E,sBAAqB,QAAU,GAAM,EAC7C5qC,SAAuB,IAAbA,EACVC,SAAuB,IAAbD,EACVoK,YAA0B,IAAbpK,EAAiBykG,EAAS78H,GAAK,GAC5C0iC,cAA4B,IAAbtK,EAAiBykG,EAAS38H,KAAO,GAChDuiC,eAA6B,IAAbrK,EAAiBykG,EAAStpI,MAAQ,GAClD+M,MAAO,CAACmF,GAAKzF,GAAa,YAATT,EAAqB,WAAam8C,GAAK17C,IACxDgiB,eAAgB,CACZ7hB,OAAM,cAAAvP,OAAgBiyD,GACtBo6E,gBAAc/vI,EAAA8mD,cACV,EACA,wCAEJ1vC,OAAQ,IAAI4pB,MAAM8uG,GAAa/tF,KAAK,GAAG1mC,IAAI,SAAC1Y,GAAC,OAAA8rB,IAAA,GACtCo/G,EAAAU,eAAYvuI,EAAA81E,sBAAqBg6D,KAAa,IACjD33G,UAAQn4B,EAAA81E,sBAAqB,EAAG,IAAE,GAEtCk6D,SACiB,IAAb9kG,EACMgkG,KAASlvI,EAAA81E,sBAAqBo5D,EAASvqI,SACvC,aACVgrD,SAA6D,QAArDy/E,EAAEK,KAAWzvI,EAAA81E,sBAAqB25D,EAAW9qI,gBAAQ,IAAAyqI,OAAA,EAAnDA,EAAqDt8H,IAG3E,oHCvGA,IAAA9S,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OAEA0yI,EAAA1yI,EAAA,OAEa8B,gBAEb,SAAS0uI,KACL,EAAAhuI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,yBACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GAYP,OAXestI,EAAAC,cAAc30H,OACzB,SAACkS,GAAK,SACFztB,EAAA60E,uBACKlyE,EAAEs2C,aAAatmB,cACfhwB,EAAEs2C,aAAanmB,WAChBrF,EAAMid,cACNjd,EAAMkd,eAETld,EAAMpb,OAAS1P,EAAEs2C,aAAa5mC,MAC3Bob,EAAMta,eAAiBxQ,EAAEs2C,aAAa5mC,KAAK,EAG3D,KACH,EAEDtS,EAAAiuI,sBAAqB,CACjB7vI,KAAM,6BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GACP,IAAM8qB,EAAQwiH,EAAAC,cAAcphH,KAAK,SAAC5K,GAAC,OAAKA,EAAEpR,KAAOnQ,EAAEurI,aAAap7H,EAAE,GAClE,IAAK2a,EACD,KAAM,CACFsZ,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoCf,EAAEurI,aAAap7H,KAElE,OAAO2a,CACX,KACH,EAED1tB,EAAAiuI,sBAAqB,CACjB7vI,KAAM,yBACNy0C,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACqd,GACP,IAAM0qG,EAAS1/G,IAAA,GACRgV,EAAQ2B,MAAI,IACftyB,GAAE,YAAApP,UAAc1D,EAAA81E,sBAAqB,QAEzCm6D,SAAAC,cAAcp6G,KAAKq4G,GACZA,CACX,IAGJ,IAAMx1F,EAAgB,SAAC7lC,EAAI1Q,GACvB,IAAMuzD,EAAQs6E,EAAAC,cAAcrhG,UAAU,SAAC3qB,GAAC,OAAKA,EAAEpR,KAAOA,CAAE,GACxD,GAAI6iD,EAAQ,EACR,KAAM,CACF5uB,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoCoP,IAEnD,IAAMq7H,EAAS1/G,EAAA,GAAQrsB,GACvB6tI,SAAAC,cAActhG,OAAO+mB,EAAO,EAAGw4E,GACxBA,CACX,GAEA,EAAApuI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,6BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACgoH,GAAG,OAAKz1F,EAAcy1F,EAAIF,aAAap7H,GAAE2b,EAAA,GAAO2/G,EAAIhpG,MAAO,KACzE,EAEDrlC,EAAAiuI,sBAAqB,CACjB7vI,KAAM,6BACNy0C,SAAU,GACVgtE,OAAQ,QACRx5F,SAAU,SAACgoH,GAAG,OAAKz1F,EAAcy1F,EAAIF,aAAap7H,GAAE2b,EAAA,GAAO2/G,EAAIhpG,MAAO,KACzE,EAEDrlC,EAAAiuI,sBAAqB,CACjB7vI,KAAM,qCACNy0C,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACgoH,GAAG,OACVz1F,EAAcy1F,EAAIF,aAAap7H,GAAE2b,IAAA,GAC1B2/G,EAAIhpG,MAAI,IACX8F,UAAU,EACVC,UAAU,IACZ,KACT,EAEDprC,EAAAiuI,sBAAqB,CACjB7vI,KAAM,oCACNy0C,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACgoH,GAAG,OACVz1F,EAAcy1F,EAAIF,aAAap7H,GAAE2b,IAAA,GAC1B2/G,EAAIhpG,MAAI,IACX8F,UAAU,EACVC,UAAU,IACZ,KACT,EAEDprC,EAAAiuI,sBAAqB,CACjB7vI,KAAM,sCACNy0C,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACgoH,GAAG,OACVz1F,EAAcy1F,EAAIF,aAAap7H,GAAE2b,IAAA,GAC1B2/G,EAAIhpG,MAAI,IACXmE,WAAuC,SAA3B6kG,EAAIn1F,aAAa5c,QAC/B,KACT,EAEDt8B,EAAAiuI,sBAAqB,CACjB7vI,KAAM,6BACNy0C,SAAU,GACVgtE,OAAQ,SACRx5F,SAAU,SAACgoH,GACP,IAAMz4E,EAAQs6E,EAAAC,cAAcrhG,UACxB,SAAC3qB,GAAC,OAAKA,EAAEpR,KAAOs7H,EAAIF,aAAap7H,EAAE,GAEvC,GAAI6iD,EAAQ,EACR,KAAM,CACF5uB,OAAQ,IACR0S,QAAO,kCAAA/1C,OAAoC0qI,EAAIF,aAAap7H,KAEpEm9H,EAAAC,cAActhG,OAAO+mB,EAAO,EAEhC,GAER,CAlI6Bo4E,qHCL7B,IAAAhuI,EAAAxC,EAAA,OAEA4yI,EAAA5yI,EAAA,OACAkxI,EAAAlxI,EAAA,OAEAyC,EAAAzC,EAAA,OACAmxI,EAAAnxI,EAAA,OAEa8B,iBAEb,SAAS0uI,KACL,EAAAhuI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,0BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,IAAMpX,EAAOqiH,EAAAW,cAAWrvI,EAAA81E,sBAAqB44D,EAAAW,WAAW1qI,SAClDyrI,EAAQ1B,EAAAW,cAAWrvI,EAAA81E,sBAAqB44D,EAAAW,WAAW1qI,SACnD0rI,EAAQ3B,EAAAW,cAAWrvI,EAAA81E,sBAAqB44D,EAAAW,WAAW1qI,SACzD,MAAO,CACH,CACImO,GAAI47H,EAAA4B,YAAYjqI,MAChBorD,QAASi9E,EAAA4B,YAAYt9H,KACrBw+C,SAAS,EACTE,UAAU,EACV/jB,QAAQ,GAEZ,CACI76B,GAAIuZ,EAAKhmB,MACTorD,QAASplC,EAAKrZ,KACdw+C,SAAS,EACTE,UAAU,EACV/jB,QAAQ,GAEZ,CACI76B,GAAIs9H,EAAM/pI,MACVorD,QAAS2+E,EAAMp9H,KACfw+C,SAAS,EACTE,UAAU,EACV/jB,QAAQ,GAEZ,CACI76B,GAAIu9H,EAAMhqI,MACVorD,QAAS4+E,EAAMr9H,KACfw+C,SAAS,EACTE,UAAU,EACV/jB,QAAQ,GAGpB,IAGJ,IAAM4iG,EAA0B,SAAC9sG,GAC7B,IAAM9U,GAAS8U,EAAQwV,aAAatmB,aAC9B1O,GAAOwf,EAAQwV,aAAanmB,WAC5B1f,GAASqwB,EAAQwV,aAAa4V,UAAY,IAC3CvoD,MAAM,KACNiV,OAAO,SAACoW,GAAC,QAAOA,CAAC,GAChB6+G,GAAW/sG,EAAQwV,aAAa0kE,YAAc,IAC/Cr3G,MAAM,KACNiV,OAAO,SAACoW,GAAC,QAAOA,CAAC,GA4BtB,OA1Be88G,EAAAiB,YAAYn0H,OAAO,SAACW,GAAK,OACpC9I,EAAMzO,OACAyO,EAAM8oB,OACF,SAAC6L,EAAK10B,GAAI,OAAK00B,GAAO7rB,EAAM9I,MAAM7N,SAAS8N,EAAK,GAChD,IAEJm9H,EAAQ7rI,QACR6rI,EAAQjrI,SAAS2W,EAAMpJ,GACnB,GACZyI,OAAO,SAACW,GACN,IAG4Bya,EAHtB5B,EAAWo7G,EAAAM,YAAYl1H,OAAO,SAACkS,GAAK,OACtCA,EAAM1X,UAAU+Y,KAAK,SAACzC,GAAI,OAAKA,EAAKvZ,KAAOoJ,EAAMpJ,EAAE,EAAC,GACtD8jB,EAAAC,EACkB9B,GAAQ,IAA5B,IAAA6B,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAA8B,KAAnBxJ,EAAKkJ,EAAAz1B,MACZ,MACIlB,EAAA60E,sBACIlmD,EACA1K,EACAwJ,EAAMywF,YACNzwF,EAAM0wF,WAGV,OAAO,EACd,OAAAz0F,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACD,OAAO,CACX,EAEJ,GAEA,EAAAn3B,EAAAiuI,sBAAqB,CACjB7vI,KAAM,uCACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GAAO,OACd8sG,EAAwB9sG,GAASpoB,IAAI,SAAC1Y,GAAC,MAAM,CACzCivB,SAAUjvB,EACb,EAAE,KACV,EAED5C,EAAAiuI,sBAAqB,CACjB7vI,KAAM,oCACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GAAO,OACd8sG,EAAwB9sG,GAASpoB,IAAI,SAAC1Y,GAAC,MAAM,CACzCivB,SAAUjvB,EACb,EAAE,GAEf,CAtG8BorI,wICR9B,IAAA/tI,EAAAzC,EAAA,OACA4yB,EAAA5yB,EAAA,OAEa8B,YAAY,CACrB,CACIyT,GAAI,SACJE,KAAM,SACN8sB,WAAY,IACZ9E,SAAU,SACVyzB,KAAM,CAAC,QAAS,gBAAiB,kBACjCpsC,QAAS,CACL,CAAEvP,GAAI,QAASE,KAAM,YAAaukB,MAAO,QACzC,CAAEzkB,GAAI,QAASE,KAAM,QAASukB,MAAO,QACrC,CAAEzkB,GAAI,QAASE,KAAM,UAAWukB,MAAO,SAAUuI,WAAY,IAC7D,CAAEhtB,GAAI,QAASE,KAAM,UAAWukB,MAAO,SAAUuI,WAAY,IAC7D,CAAEhtB,GAAI,QAASE,KAAM,UAAWukB,MAAO,SAAUuI,WAAY,IAC7D,CAAEhtB,GAAI,QAASE,KAAM,UAAWukB,MAAO,SAAUuI,WAAY,MAGrE,CACIhtB,GAAI,SACJE,KAAM,OACN8sB,WAAY,IACZ9E,SAAU,SACVyzB,KAAM,CAAC,SACPpsC,QAAS,CACL,CAAEvP,GAAI,QAASE,KAAM,QAASukB,MAAO,QACrC,CAAEzkB,GAAI,QAASE,KAAM,UAAWukB,MAAO,QACvC,CAAEzkB,GAAI,QAASE,KAAM,OAAQukB,MAAO,QACpC,CAAEzkB,GAAI,QAASE,KAAM,YAAaukB,MAAO,UAGjD,CAAEzkB,GAAI,SAAUE,KAAM,QAAS8sB,WAAY,IAAK9E,SAAU,UAC1D,CACIloB,GAAI,SACJE,KAAM,SACN8sB,WAAY,IACZ9E,SAAU,SACV3Y,QAAS,CACL,CAAEvP,GAAI,QAASE,KAAM,YAAaukB,MAAO,QACzC,CAAEzkB,GAAI,QAASE,KAAM,SAAUukB,MAAO,QACtC,CAAEzkB,GAAI,QAASE,KAAM,YAAaukB,MAAO,UAGjD,CACIzkB,GAAI,SACJE,KAAM,UACN8sB,WAAY,IACZ9E,SAAU,SACV3Y,QAAS,CACL,CAAEvP,GAAI,QAASE,KAAM,YAAaukB,MAAO,QACzC,CAAEzkB,GAAI,QAASE,KAAM,YAAaukB,MAAO,QACzC,CAAEzkB,GAAI,QAASE,KAAM,YAAaukB,MAAO,UAGjD,CACIzkB,GAAI,SACJE,KAAM,eACN8sB,WAAY,IACZ9E,SAAU,eACV3Y,QAAS,CACL,CACIvP,GAAI,QACJE,KAAM,eACNukB,MAAO,QACPuI,WAAY,IAEhB,CAAEhtB,GAAI,QAASE,KAAM,YAAaukB,MAAO,QAASuI,WAAY,IAC9D,CACIhtB,GAAI,QACJE,KAAM,gBACNukB,MAAO,QACPuI,WAAY,IAEhB,CACIhtB,GAAI,QACJE,KAAM,qBACNukB,MAAO,QACPuI,WAAY,MAIxB,CACIhtB,GAAI,SACJE,KAAM,WACN8sB,WAAY,IACZ9E,SAAU,eACV3Y,QAAS,CACL,CAAEvP,GAAI,QAASE,KAAM,eAAgBukB,MAAO,QAC5C,CAAEzkB,GAAI,QAASE,KAAM,UAAWukB,MAAO,QACvC,CAAEzkB,GAAI,QAASE,KAAM,cAAeukB,MAAO,WAKvDl4B,wBAAA,SAAgBqxI,EAAsBjjH,GAClC,IAAMnc,KAAW6e,EAAAwkB,qBAAoBlnB,EAAMywF,YAAazwF,EAAM0wF,WACxDwyB,KAAK3wI,EAAA81E,sBAAqBz2E,EAAAuxI,UAAUjsI,QAC1C,MAAO,CACHmO,GAAE,SAAApP,UAAW1D,EAAA81E,sBAAqB,SAClC3xC,SAAU1W,EAAM3a,GAChB+sB,eAAc,IAAAn8B,UAAM1D,EAAA81E,sBAAqB,SACzClR,YAAW,IAAAlhE,UAAM1D,EAAA81E,sBAAqB,OACtChR,cAAY30C,EAAA4N,YACY,IAApBtQ,EAAMywF,YAC2C,GAD7B,EACpBl+G,EAAA81E,sBAAqBjtC,KAAKC,MAAMx3B,EAAW,KAE/CuzD,SAAO7kE,EAAA81E,sBAAqB,UAAa,GAAM,EAAI,aAAe,GAClEv9C,MAAO,IAAIyI,MAAM,GAAG+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,EAAGivC,GAAG,OAAAnjB,IAAA,GAChCpvB,EAAAuxI,UAAWD,EAAK/+F,EAAOvyC,EAAAuxI,UAAUjsI,SAAO,IAC3C0d,QAAS,GACTg0C,YAAUr2D,EAAA81E,sBAAqB,GAAI,IAAE,GAGjD,wFCjHaz2E,SAAS,aAETA,MAAM,+HCHnB,IAAAW,EAAAzC,EAAA,OACAszI,EAAAtzI,EAAA,OACAuzI,EAAAvzI,EAAA,OACAkxI,EAAAlxI,EAAA,OACAmxI,EAAAnxI,EAAA,OAEIqxI,EAAaiC,IAAQE,QAAQ,KAAK/2H,KAAK,GAErCg1H,EAAgB,WAAyB,IAAxBhtB,EAAIz9G,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACjBzC,EAAO8sI,EAAW/4F,IAAoC,KAApCA,EAAK71C,EAAA81E,sBAAqB,GAAK,GAAS,KAChE,OAAIksC,IACA4sB,EAAa9sI,GAEVA,EAAKkvI,MAChB,EAEMp4B,EAAe,CAAC,YAAa,YAAa,aAC1Cq4B,EAAe,WACjB,IAAMC,KAAMlxI,EAAA81E,sBAAqB,IACjC,OAAOo7D,EAAM,EACPt4B,EAAa,GACbs4B,EAAM,EACNt4B,EAAa,GACbA,EAAa,EACvB,EAEav5G,cAAc,IAAI2hC,MAAM,KAAK+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,EAAGgzD,GACtD,IAAMw7E,EAASzC,EAAAW,WAAW3rI,OAAOgrI,EAAAmB,aAC7B95H,EAAmB,IAAIirB,SAAMhhC,EAAA81E,sBAAqB,EAAG,IACpD/zB,KAAK,GACL1mC,IAAI,kBAAM81H,KAAOnxI,EAAA81E,sBAAqBq7D,EAAOxsI,QAAQ,GAC1DoR,EAAUwG,KACN,SAACgW,EAAGlU,GAAC,OAAMkU,EAAE2qF,eAAiB,GAAI,IAAO7+F,EAAE6+F,eAAiB,GAAI,EAAG,GAEvE,IAAMhhG,EAAQuyH,EAAAiB,eAAY1vI,EAAA81E,sBAAqB24D,EAAAiB,YAAY/qI,SAC3DoR,EAAYA,EAAUrS,OAAM+qB,IAAA,GAAMvS,GAAK,IAAE0V,UAAU,MAAM,EACrD5xB,EAAA81E,sBAAqB,MAAQ,GAAM,EAAG//D,EAAUq7H,QAAQ1C,EAAA4B,aACvDv6H,EAAUq7H,QAAQ1C,EAAAW,cAAWrvI,EAAA81E,sBAAqB44D,EAAAW,WAAW1qI,UAClEoR,KAAY/V,EAAA6sC,QAAO92B,EAAW,UAAY,CAAC,IAC3C,IAAMmoG,EAAc8wB,GAAc,GAC5B7wB,EAAY6wB,IACZ9/D,KACFlvE,EAAA81E,sBAAqB,MAAQ,GAAM,EAAI,0BAA4B,GACvE,MAAO,CACHhjE,GAAE,aAAApP,OAAeiyD,GACjB5uB,OAAQkqG,IACRj9H,KAAM+B,EAAU,GAAG1P,MACnBy2G,SAAU,cACVzyF,QAAS,oBACTtU,cAAY/V,EAAA6sC,QAAO92B,EAAW,UAAY,IAAIsF,IAAI,SAAC1Y,EAAGivC,GAAG,OAAAnjB,IAAA,GAClD9rB,GAAC,IACJ2hH,UAAmB,IAAR1yE,EACXrI,cAAYvpC,EAAA81E,sBAAqB,OAAS,GAAM,EAChD0hC,mBACIx3G,EAAA81E,sBAAqB,OAAS,GAAM,EAC9B,cACA91E,EAAA81E,sBAAqB,OAAS,GAAM,EACpC,WACA,aAAW,GAEzB90E,MAAK,gBAAA0C,OAAkBiyD,GACvBvwB,KAAI,gBACJi5E,SAAS,EACTH,cACAC,YACAvpE,SAAU,mBACV3kB,SAAS,EACT5qB,SAAQ,GAAA3B,OAAKwY,GAAOlJ,MACpB4pG,WAAW,EACXluF,WAAY,GACZywF,YAAa,GACbvmG,OAAQsD,EACRgzD,cACAqvC,WAAYrvC,EAAW,IAAAxrE,UAAO1D,EAAA81E,sBAAqB,OAAU,GAC7D2oC,iBAAkBvvC,EAAc,UAAY,GAC5Cp6C,eAAgB,CACZ5e,YACIlW,EAAA81E,sBAAqB,OAAS,GAAM,EAC9B,IACIg7D,EAAAJ,uBAAsB,CAClB59H,GAAE,aAAApP,OAAeiyD,GACjBuoD,cACAC,eAGR,GACVnjC,MAAiC,GAAjCA,EAAOh7E,EAAA81E,sBAAqB,GAC5BqmC,UAAqC,GAArCA,EAAWn8G,EAAA81E,sBAAqB,IAG5C,GAEA,IAAMu7D,EAAe,GACrBhyI,EAAAoxI,YAAYhoH,QAAQ,SAACgF,GAAS,IAAA6qB,EAAAE,EACWD,EAAhC84F,EAAyB,QAAb/4F,EAAC7qB,EAAM7U,cAAM,IAAA0/B,OAAA,EAAZA,EAAcxlC,MAC5Bu+H,EAAyB,QAAb94F,EAAC9qB,EAAM7U,cAAM,IAAA2/B,OAAA,EAAZA,EAAczlC,IAAM,IAErCu+H,EAAyB,QAAb74F,EAAC/qB,EAAM7U,cAAM,IAAA4/B,OAAA,EAAZA,EAAc1lC,IAAIgjB,KAAKrI,EACxC,qIClGA,IAAAztB,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACA4yI,EAAA5yI,EAAA,OACAmxI,EAAAnxI,EAAA,OAEa8B,cAEb,SAAS0uI,KACL,EAAAhuI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,uBACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACzjB,GACP,IAAIwwB,EAASg9G,EAAAM,YACb,OAAK9tI,EAAEs2C,aAAa4V,WAChB17B,EAASA,EAAO5X,OACZ,SAACkS,GAAK,QACAA,EAAM1X,UAAU+Y,KACd,SAACzC,GAAI,OAAKA,EAAKhmB,QAAUqoI,EAAA4B,YAAYjqI,KAAK,EAC7C,IAGT1D,EAAEs2C,aAAatmB,eACfQ,EAASA,EAAO5X,OAAO,SAAC2I,GAAC,SACrBlkB,EAAA60E,uBACKlyE,EAAEs2C,aAAatmB,cACfhwB,EAAEs2C,aAAanmB,WAChB5O,EAAEg6F,YACFh6F,EAAEi6F,UACL,IAGFhrF,CACX,KACH,EAEDpzB,EAAAiuI,sBAAqB,CACjB7vI,KAAM,uBACNy0C,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACqd,GAAW,IAAA6tG,EAAAC,EACZpD,EAAS1/G,IAAA,GACRgV,EAAQ2B,MAAI,IACftyB,GAAE,cAAApP,UAAgB1D,EAAA81E,sBAAqB,QAE3Cq4D,EAAUp4H,UAAS,CACf24H,EAAAW,WAAWvgH,KAAK,SAACnsB,GAAC,OAAKA,EAAE0D,QAAU8nI,EAAUn6H,IAAI,IAACtQ,OAAA+e,EAC9C0rH,EAAUp4H,WAAa,KAE/Bo4H,EAAUp4H,UAAU0S,QAAQ,SAAC4D,GACrBA,EAAKjZ,QAAOiZ,EAAKuF,UAAW,EACpC,GAEIu8G,EAAUv1H,SACVu1H,EAAUp4H,UAAS,GAAArS,OAAA+e,EACX0rH,EAAUp4H,WAAa,IAAE,CAAA0Y,IAAA,GACxB0/G,EAAUv1H,QAAM,IAAEgZ,UAAU,OAGzCu+G,EAAAM,YAAY36G,KAAKq4G,GAEjB,IAAMv1H,KAAS7Y,EAAAyxI,YAA2B,QAAjBF,EAACnD,EAAUv1H,cAAM,IAAA04H,OAAA,EAAhBA,EAAkBx+H,IAC5C8F,OAAM,MAANA,GAAmB,QAAb24H,EAAN34H,EAAQ64H,SAAS,UAAE,IAAAF,GAAnBA,EAAqBG,iBACdvD,CACX,KACH,EAEDpuI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,2BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,IAAMjoB,EAAO20H,EAAAM,YAAY3hH,KACrB,SAACrB,GAAK,OAAKA,EAAM3a,KAAO2wB,EAAQyqG,aAAap7H,EAAE,GAEnD,GAAI0I,EACA,OAAOA,EAEX,KAAM,CAAEurB,OAAQ,IAAK0S,QAAS,kBAClC,KACH,EAED15C,EAAAiuI,sBAAqB,CACjB7vI,KAAM,2BACNy0C,SAAU,GACVgtE,OAAQ,SACRx5F,SAAU,SAACqd,GACP,IAAMkyB,EAAQw6E,EAAAM,YAAY5hG,UACtB,SAACphB,GAAK,OAAKA,EAAM3a,KAAO2wB,EAAQyqG,aAAap7H,EAAE,GAEnD,KAAI6iD,EAAQ,GAWZ,KAAM,CAAE5uB,OAAQ,IAAK0S,QAAS,mBAVtB02F,EAAAM,YAAY96E,GAAO3hD,OAAS06H,EAAA4B,YAAYjqI,MACxC8pI,EAAAM,YAAY7hG,OAAO+mB,EAAO,GAEbw6E,EAAAM,YAAY96E,GAAO5/C,UAAU+Y,KACtC,SAACnsB,GAAC,OAAKA,EAAE0D,QAAUqoI,EAAA4B,YAAYjqI,KAAK,GAEnCmxG,gBAAkB,UAKnC,KACH,EAEDz3G,EAAAiuI,sBAAqB,CACjB7vI,KAAM,2BACNy0C,SAAU,GACVgtE,OAAQ,QACRx5F,SAAU,SAACqd,GACP,IAAMkyB,EAAQw6E,EAAAM,YAAY5hG,UACtB,SAACphB,GAAK,OAAKA,EAAM3a,KAAO2wB,EAAQyqG,aAAap7H,EAAE,GAEnD,GAAI6iD,GAAS,EACT,OAAOw6E,EAAAM,YAAY7hG,OAAO+mB,EAAO,EAAGlyB,EAAQ2B,MAEhD,KAAM,CAAE2B,OAAQ,IAAK0S,QAAS,kBAClC,KACH,EAED15C,EAAAiuI,sBAAqB,CACjB7vI,KAAM,iDACNy0C,SAAU,GACVgtE,OAAQ,OACRx5F,SAAU,SAACqd,GACP,IAAMhW,EAAQ0iH,EAAAM,YAAY3hH,KACtB,SAACrB,GAAK,OAAKA,EAAM3a,KAAO2wB,EAAQyqG,aAAap7H,EAAE,GAEnD,GAAI2a,EAGCA,SAAMqH,eAAuByU,YADzB9b,EAAMqH,eAAuByU,YAAc,IACM7lC,OAAO,CACzD+/B,EAAQyqG,aAAa7nI,QAElBonB,EAEX,KAAM,CAAEsZ,OAAQ,IAAK0S,QAAS,kBAClC,GAER,CAtI2Bs0F,kHCL3B,IAAA/tI,EAAAzC,EAAA,OACA2yB,EAAA3yB,EAAA,OAEMo0I,EAAsB,WAIxB,QAHMz6G,EAAI,CAAC,aAAc,UAAW,YAAa,SAC3C06G,KAAc5xI,EAAA81E,sBAAqB5+C,EAAEvyB,OAAS,GAC9C+vE,EAAM,GACH/iD,EAAI,EAAGA,EAAIigH,EAAajgH,IAC7B+iD,EAAI5+C,KAAKoB,KAAEl3B,EAAA81E,sBAAqB5+C,EAAEvyB,UAEtC,OAAO+vE,EAAIn5D,OAAO,SAACu3D,EAAInhD,EAAGyrD,GAAC,OAAKA,EAAExnB,QAAQkd,KAAQnhD,CAAC,EACvD,EAEatyB,cAAc,CACvB,CACI2T,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,wBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,kBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,YACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,kBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAGtB,CACIJ,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClBmD,MAAO,CACHzD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNgC,aAAc,UACdqK,SAAU,EACVwyH,OAAQ,GACR5+H,OAAQ,2BACRw7C,KAAM,CAAC,IACPqjF,QAAS,GACTxnH,OAAQ,CAAC,IACT+4E,UAAW,CAAEvwF,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClBmD,MAAO,CACHzD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNgC,aAAc,UACdqK,SAAU,EACVwyH,OAAQ,GACR5+H,OAAQ,2BACRw7C,KAAM,CAAC,IACPqjF,QAAS,GACTxnH,OAAQ,CAAC,IACT+4E,UAAW,CAAEvwF,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClBmD,MAAO,CACHzD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNgC,aAAc,UACdqK,SAAU,EACVwyH,OAAQ,GACR5+H,OAAQ,2BACRw7C,KAAM,CAAC,IACPqjF,QAAS,GACTxnH,OAAQ,CAAC,IACT+4E,UAAW,CAAEvwF,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClBmD,MAAO,CACHzD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNgC,aAAc,UACdqK,SAAU,EACVwyH,OAAQ,GACR5+H,OAAQ,2BACRw7C,KAAM,CAAC,IACPqjF,QAAS,GACTxnH,OAAQ,CAAC,IACT+4E,UAAW,CAAEvwF,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,gBAClBmD,MAAO,CACHzD,GAAI,eACJQ,UAAW,SACXN,KAAM,UACNgC,aAAc,UACdqK,SAAU,EACVwyH,OAAQ,GACR5+H,OAAQ,2BACRw7C,KAAM,CAAC,IACPqjF,QAAS,GACTxnH,OAAQ,CAAC,IACT+4E,UAAW,CAAEvwF,GAAI,GAAIE,KAAM,MAGnC,CACIA,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,cACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,2BACRG,MAAO,CAAC,SAAU,kBAExBiI,IAAI,SAACjD,GAAC,SACJ8X,EAAA6hH,mBAAiBtjH,IAAA,GACVrW,GAAC,IACJ1P,SAAUipI,IACVrnH,OAAQ,CACJ,2GAEN,mHC1MN,IAAAtqB,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACAoxI,EAAApxI,EAAA,OACA4yB,EAAA5yB,EAAA,OAEa8B,eA0Db,SAAS0uI,KACL,EAAAhuI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,wBACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GAAW,IAAAuuG,EAClB,OAA2B,QAApBA,EAAAvuG,EAAQwV,oBAAY,IAAA+4F,GAApBA,EAAsBC,YACvBC,EAAa32H,OACT,SAAC5Y,GAAC,OAAKA,EAAEo+B,UAAY0C,EAAQwV,aAAag5F,WAAW,GAEzDC,CACV,KACH,EAEDnyI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,gCACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GAAW,IAAA0uG,EAClB,OAA2B,QAApBA,EAAA1uG,EAAQwV,oBAAY,IAAAk5F,GAApBA,EAAsBC,UACvBC,EAAoB92H,OAChB,SAAC5Y,GAAC,OAAKA,EAAEyvI,YAAc3uG,EAAQwV,aAAam5F,SAAS,GAEzDC,CACV,KACH,EAEDtyI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,kCACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GAAW,IAAA6uG,EAClB,OAA2B,QAApBA,EAAA7uG,EAAQwV,oBAAY,IAAAq5F,GAApBA,EAAsBx/H,GACvBy/H,EAAsBh3H,OAClB,SAAC5Y,GAAC,OAAKA,EAAEmQ,MAAQ2wB,EAAQwV,aAAanmC,EAAE,GAE5Cy/H,CACV,KACH,EAEDxyI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,4BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP1hC,QAAQO,IAAI,WAAY4vI,GACxB,IAAMM,EAASN,EAAapjH,KACxB,SAACnsB,GAAC,OAAKA,EAAEmQ,MAAQ2wB,EAAQyqG,aAAap7H,EAAE,GAE5C,IAAK0/H,EAAQ,KAAM,CAAEzrG,OAAQ,KAC7B,OAAOyrG,CACX,GAER,CA/G4BzE,GAE5B,IAAMmE,EAAe,IAAIlxG,MAAM,IAAI+gB,KAAK,GAAG1mC,IAAI,kBAU/C,SAASo3H,EAAiBD,GACtB,IAAM1/H,KAAK9S,EAAA81E,sBAAqB,OAAS,GACnCv9D,EAAMo2H,EAAAW,kBAAetvI,EAAA81E,sBAAqB64D,EAAAW,eAAe3qI,OAAQ,IACvE,OAAA8pB,EAAA,CACI3b,KACA9R,MAAK,UAAA0C,OAAYoP,GACjBI,YAAa,GACbu3D,QAAS,OACTioE,MAAO,GACP3xG,QAASxoB,GAAKzF,GACdm/H,YAAa15H,GAAKzF,GAClB2rB,cAAYtO,EAAAyC,aAAY9Y,KAAK8W,OAC7B8N,cAAYvO,EAAAyC,aAAY9Y,KAAK8W,QACzB4hH,GAAU,GAEtB,CAzBqDC,EAAkB,GACjEF,EAAwB,IAAIvxG,MAAM,IACnC+gB,KAAK,GACL1mC,IAAI,kBAqCT,SAASs3H,IACL,IAAM7/H,KAAK9S,EAAA81E,sBAAqB,OAAS,GACzC,MAAO,CACHhjE,KACAT,KAAM,OACNrR,MAAK,YAAA0C,OAAcoP,GACnBuP,QAAS,GACTmd,UAAU,EACVozG,QAAS,GACTnkF,KAAM,GACNtZ,SAAS,EACT1W,cAAYtO,EAAAyC,aAAY9Y,KAAK8W,OAC7B8N,cAAYvO,EAAAyC,aAAY9Y,KAAK8W,OAErC,CAnDe+hH,EAA0B,GACnCN,KAAsBryI,EAAAgyB,SACxBkgH,EAAa72H,IAAI,SAAC1Y,GAAC,OACf,IAAIq+B,MAAM,IAAI+gB,KAAK,GAAG1mC,IAAI,kBAqBlC,SAASw3H,EAAuBL,GAE5B,MAAO,CACH1/H,IAFEA,EAAK9S,EAAA81E,sBAAqB,OAAS,GAGrCs8D,UAAWI,EAAO1/H,GAClBggI,eAAa9yI,EAAA81E,sBAAqB,OAAS,GAC3Ci9D,eAAa/yI,EAAA81E,sBAAqB,GAAI,GACtCzjE,KAAM,SACNosB,cAAYtO,EAAAyC,aAAY9Y,KAAK8W,OAC7B8N,cAAYvO,EAAAyC,aAAY9Y,KAAK8W,OAErC,CAhCwCiiH,CAAuBlwI,EAAE,EAAC,6FCblE,IAAA5C,EAAAxC,EAAA,OAEAy1I,EAAAz1I,EAAA,OACAkxI,EAAAlxI,EAAA,OAEa8B,eAEb,SAAS0uI,IACLU,EAAAiB,YAAYjnH,QAAQ,SAACvM,EAAYy5C,GAAK,SAAKq9E,EAAAC,cAAa/2H,EAAM,MAE9Dnc,EAAAiuI,sBAAqB,CACjB7vI,KAAM,yBACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GAAW,IAAAuuG,EAClB,OAA2B,QAApBA,EAAAvuG,EAAQwV,oBAAY,IAAA+4F,GAApBA,EAAsBjxG,QACvB0tG,EAAAiB,YAAYn0H,OAAO,SAAC5Y,GAAC,OACjBA,EAAEyQ,MAAM7N,SAASk+B,EAAQwV,aAAalY,QAAQ,GAElD0tG,EAAAiB,WACV,KACH,EAED3vI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,6BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,IAAMvnB,EAAQuyH,EAAAiB,YAAY5gH,KAAK,SAAAnsB,GAAC,OAAIA,EAAEmQ,KAAO2wB,EAAQyqG,aAAap7H,EAAE,GACpE,IAAKoJ,EAAO,KAAM,CAAE6qB,OAAQ,KAC5B,OAAO7qB,CACX,GAER,CA5B4B6xH,sHCL5B,IAAA/tI,EAAAzC,EAAA,OACA21I,EAAA31I,EAAA,MAEM41I,EAAe,CACjB,qBACA,gBACA,UACA,kBACA,cACA,aACA,cACA,WACA,gBACA,cACA,gBACA,qBACA,iBACA,iBAGS9zI,cAAc,CACvByT,GAAI,UACJE,KAAM,sBACN3M,MAAO,iBACPo6B,OAAQ,CAAC,QAAS,QAClB2yG,WAAW,GAGF/zI,aAAa8zI,EAAa93H,IAAI,SAACrI,EAAM2e,GAAC,MAAM,CACrD7e,GAAE,QAAApP,OAAUiuB,EAAI,GAChB3e,KAAI,GAAAtP,OAAKsP,EAAI,cACb3M,MAAK,GAAA3C,OAAKsP,EAAK1M,MAAM,KAAK8N,KAAK,KAAKke,cAAa,KAAA5uB,OAAIwvI,EAAAG,QACxD,GAAG3vI,OAAO,CAACrE,EAAAixI,cAECjxI,cAAc8zI,EAAa93H,IAAI,SAACrI,EAAM2e,GAAC,MAAM,CACtD7e,GAAE,SAAApP,OAAWiuB,EAAI,GACjB3e,KAAI,GAAAtP,OAAKsP,EAAI,eACb3M,MAAK,GAAA3C,OAAKsP,EAAK1M,MAAM,KAAK8N,KAAK,KAAKke,cAAa,WAAA5uB,OAAUwvI,EAAAG,QAC3Dn2B,kBAAgBl9G,EAAA81E,sBAAqB,OAAS,GAAM,EACpDhhD,kBACI90B,EAAA81E,sBAAqB,OAAS,GAAM,EAC9B,CACIw9D,kBAAmB,CACfpmI,IAAK,qEAETqmI,QAAS,CACLrmI,IAAK,yEAGb,GACb,iHClDD,IAAAnN,EAAAxC,EAAA,OAEAyC,EAAAzC,EAAA,OACAmxI,EAAAnxI,EAAA,OACAoxI,EAAApxI,EAAA,OACAkxI,EAAAlxI,EAAA,OAEAszI,EAAAtzI,EAAA,OACA4yI,EAAA5yI,EAAA,OAEa8B,aAEb,SAAS0uI,KACL,EAAAhuI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,2BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,GAAgC,YAA5BA,EAAQyqG,aAAap7H,GACrB,OAAO47H,EAAA4B,YAEX,IAAMkD,EAAS9E,EAAAW,WAAWvgH,KACtB,SAACzC,GAAI,OAAKA,EAAKhmB,QAAUo9B,EAAQyqG,aAAap7H,EAAE,GAEpD,GAAI0gI,EACA,OAAOA,EAEX,KAAM,CAAEzsG,OAAQ,IAAK0S,QAAS,iBAClC,KACH,EAED15C,EAAAiuI,sBAAqB,CACjB7vI,KAAM,uBACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,GAAIA,EAAQwV,aAAa9W,EAAG,CACxB,IAAMlF,EAASwG,EAAQwV,aAAa9W,EAAE7P,cACtC,OAAOo8G,EAAAW,WAAW9zH,OAAO,SAAA3V,GAAoB,IAAXS,EAAKT,EAALS,MAC9B,OAD4BT,EAAJoN,KAEfsf,cAAc/sB,SAAS03B,IAC5B52B,EAAMisB,cAAc/sB,SAAS03B,EAErC,GAEJ,OAAOyxG,EAAAW,UACX,KACH,EAEDtvI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,2BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,IAAM3wB,EAAKuhE,mBAAmB5wC,EAAQyqG,aAAap7H,IAC7C0gI,EAAS9E,EAAAW,WAAWvgH,KAAK,SAACzC,GAAI,OAAKA,EAAKhmB,QAAUyM,CAAE,GAC1D,GAAI0gI,EACA,OAAA/kH,IAAA,GACO+kH,GAAM,IACTnuI,SAAUouI,MAGlB,KAAM,CAAE1sG,OAAQ,IAAK0S,QAAS,iBAClC,KACH,EAED15C,EAAAiuI,sBAAqB,CACjB7vI,KAAM,uBACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,GAAIA,EAAQwV,aAAa9W,EAAG,CACxB,IAAMlF,EAASwG,EAAQwV,aAAa9W,EAAE7P,cACtC,OAAOo8G,EAAAmB,YAAYt0H,OACf,SAAC8Q,GAAI,OACDA,EAAKrZ,KAAKsf,cAAc/sB,SAAS03B,IACjC5Q,EAAKhmB,MAAMisB,cAAc/sB,SAAS03B,EAAO,GAGrD,OAAOyxG,EAAAW,UACX,KACH,EAEDtvI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,8BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,IAAMp9B,EAAQguE,mBAAmB5wC,EAAQyqG,aAAa7nI,OAChDmtI,EAAS9E,EAAAmB,YAAY/gH,KAAK,SAACzC,GAAI,OAAKA,EAAKhmB,QAAUA,CAAK,GAC9D,GAAImtI,EAAQ,OAAOA,EACnB,KAAM,CAAEzsG,OAAQ,IAAK0S,QAAS,kBAClC,KACH,EAED15C,EAAAiuI,sBAAqB,CACjB7vI,KAAM,uCACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,GAAIA,EAAQyqG,aAAa7nI,MAAO,CAC5B,IAAMA,EAAQo9B,EAAQyqG,aAAa7nI,MAAMisB,cAMzC,OALe69G,EAAAM,YAAYl1H,OAAO,SAACkS,GAAK,OACpCA,EAAM1X,UAAU+Y,KACZ,SAACzC,GAAI,OAAKA,EAAKhmB,MAAMisB,gBAAkBjsB,CAAK,EAC/C,GAIT,KAAM,CACF0gC,OAAQ,IACR0S,QAAO,iDAAA/1C,OAAmD+/B,EAAQyqG,aAAa7nI,OAEvF,IAGJ,IAAMqtI,EAAiB,CACnB,UACA,UACA,SACA,SACA,MACA,QAGJ,SAASD,IACL,IAAMphI,EACFqhI,KAAe1zI,EAAA81E,sBAAqB49D,EAAe/uI,SACjD4R,EAAQo4H,EAAAa,eAAYxvI,EAAA81E,sBAAqB64D,EAAAa,YAAY7qI,SACrDgvI,EAAelF,EAAAiB,YAAYn0H,OAAO,SAACmN,GAAC,OACtCA,EAAEtV,MAAM7N,SAASgR,EAAMzD,GAAG,GAExBoJ,EACFy3H,KAAa3zI,EAAA81E,sBAAqB69D,EAAahvI,UAAY,GACzDU,EAAoB,GAC1B,OAAQgN,GACJ,IAAK,UACDhN,EAASuuI,QAAU,CACfr+H,SAAUgB,EAAMjD,UAChBiD,MAAOA,EAAMzD,GACb8F,OAAQsD,EAAMpJ,GACdG,OAAQiJ,EAAMjJ,OACdkxB,SAAU,IAEd,MACJ,IAAK,UACD9+B,EAASuuI,QAAU,CACfr+H,SAAUgB,EAAMjD,UAChBiD,MAAOA,EAAMzD,GACbG,OAAQiJ,EAAMjJ,OACds2B,WAAYsnG,IAAQG,QAExB,MACJ,IAAK,SACL,IAAK,SACD3rI,EAASgN,GAAQ,CACbkD,SAAUgB,EAAMjD,UAChBiD,MAAOA,EAAMzD,GACb0jC,IAAG,EAACx2C,EAAA81E,sBAAqB,KACzBr/B,IAAG,EAACz2C,EAAA81E,sBAAqB,KACzBk3B,UAAW6jC,IACNgD,YAAS7zI,EAAA81E,sBAAqB,IAAK,KACnCk7D,QAET,MACJ,IAAK,MACD3rI,EAASyuI,IAAM,CACXzzC,OAAKrgG,EAAA81E,sBAAqB,KAAO,GACjCi+D,OAAK/zI,EAAA81E,sBAAqB,KAAO,IACjCk3B,UAAW6jC,IACNgD,YAAS7zI,EAAA81E,sBAAqB,IAAK,KACnCk7D,QAIjB,OAAO3rI,CACX,CACJ,CAvK0B0oI,sHCVb1uI,YAAY,CACrB,CACIo/B,WAAY,WACZC,WAAY,WACZ1rB,KAAM,UACNE,YAAa,GACbu7C,KAAM,MACNnyB,MAAO,EACPjd,SAAU,EACV/L,UAAW,GACX0gI,SAAU,GACVlhI,GAAI,qBAICzT,iBAAiB,CAC1B,CACI2T,KAAM,SACNE,YAAa,GACbu7C,KAAM,WACNnyB,MAAO,EACPjd,SAAU,EACV/L,UAAW,mBACX0gI,SAAU,GACVlhI,GAAI,SACJqP,OAAQ,CAAC,QAAS,UAEtB,CACInP,KAAM,WACNE,YAAa,GACbu7C,KAAM,WACNnyB,MAAO,EACPjd,SAAU,EACV/L,UAAW,mBACX0gI,SAAU,GACVlhI,GAAI,SACJqP,OAAQ,CAAC,QAAS,WA4Bb9iB,cAAcA,EAAAiwI,eAAej0H,IAAI,SAAC9C,GAAG,OAC9CA,EAAI4J,OAAO9G,IAAI,SAAC9E,EAAOq7B,GAAG,OAzBZ,SACd9+B,EACA8+B,EACAr8B,GAEK,IADL0+H,EAAA1vI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,KAEV0O,EAASH,EAAG6gG,OAAO,GACvB1gG,SAAM,qBAAAvP,OAAwBuwI,EAAG,QAC1B,CACHnhI,GAAE,GAAApP,OAAK6R,EAASzC,GAAE,KAAApP,OAAIoP,GACtBE,KAAI,SAAAtP,OAAWoP,EAAGk5H,SAAS,MAAQ,IAAMl5H,EAAGxM,MAAM,KAAK,IACvDgN,UAAWiC,EAASzC,GACpBI,YAAa,GACbu7C,KAAM,QACNx7C,SACAspD,KAAM,gBACNlqD,KAAM,cACNiqB,MAAO,EACPjd,SAAU,GACVha,SAAU,oBACV2P,aAAc,GAEtB,CAIQk/H,CAAU39H,EAAOq7B,EAAKr5B,EAAKhC,EAAMjQ,MAAM,KAAK,GAAG,EAClD,GACH41B,OAAO,SAAChH,EAAGg9B,GAAC,OAAKh9B,EAAExxB,OAAOwuD,EAAE,EAAE,CAO5B,CACIp/C,GAAI,WACJQ,UAAW,SACXN,KAAM,WACNy7C,KAAM,CAAC,QAAS,WAChBx7C,OAAQ,gJChFhB,IAAAjT,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OACAuzI,EAAAvzI,EAAA,OACAmxI,EAAAnxI,EAAA,OACAoxI,EAAApxI,EAAA,OAEM42I,EAAgB,CAClB5hG,QAAS,CACLggF,SAAU,CACNv/G,KAAM,WACNE,YAAa,GACbyD,QAAS,CACL,CACI7D,GAAI,SACJE,KAAM,+BACN3M,MAAO,iBACPulI,WAAY,WACZC,UAAW,aAEf,CACI/4H,GAAI,SACJE,KAAM,0BACN3M,MAAO,kBACPulI,WAAY,OACZC,UAAW,gBAOlBxsI,iBAAiB,GACjBA,UAAU,GAEVA,aAEb,SAAS0uI,KACL,EAAAhuI,EAAAiuI,sBAAqB,CACjB7vI,KAAM,uBACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,GAAkC,QAA9BA,EAAQwV,aAAawV,KACrB,OAAOkgF,EAAAyF,UACJ,GAAkC,WAA9B3wG,EAAQwV,aAAawV,KAC5B,MAAO,GACJ,GAAkC,aAA9BhrB,EAAQwV,aAAawV,KAC5B,OAAOkgF,EAAAW,eACJ,GAAkC,UAA9B7rG,EAAQwV,aAAawV,KAC5B,OAAOkgF,EAAAa,YAEX,KAAM,CAAEzoG,OAAQ,IAAK0S,QAAS,kBAClC,KACH,EAED15C,EAAAiuI,sBAAqB,CACjB7vI,KAAM,8BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,GAAkC,aAA9BA,EAAQwV,aAAajmC,KACrB,MAAO,CACHqhI,SAAU,CACN19H,QAAS,CACL29H,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjB3gH,QAAS,aAMzB,GAAkC,aAA9B4P,EAAQwV,aAAajmC,KACrB,MAAO,CACHkD,SAAU,CACNS,QAASm6H,EAAAF,YAIrB,GAAkC,mBAA9BntG,EAAQwV,aAAajmC,KAA2B,CAChD,IAAMm6D,EAAQ1pC,EAAQyqG,aAAap7H,GAAGxM,MAAM,KAE5C,OAAOmuI,EADItnE,EAAMA,EAAMxoE,OAAS,IAGpC,GAAkC,YAA9B8+B,EAAQwV,aAAajmC,KAAoB,CACzC,IAAMm6D,EAAQ1pC,EAAQyqG,aAAap7H,GAAGxM,MAAM,KAE5C,OAAOouI,EADIvnE,EAAMA,EAAMxoE,OAAS,IAGpC,GAAkC,UAA9B8+B,EAAQwV,aAAajmC,KAAkB,CACvC,IAAMm6D,EAAQ1pC,EAAQyqG,aAAap7H,GAAGxM,MAAM,KAE5C,OAAOquI,EADIxnE,EAAMA,EAAMxoE,OAAS,IAGpC,MAAkC,iBAA9B8+B,EAAQwV,aAAajmC,MACPywB,EAAQyqG,aAAap7H,GAAGxM,MAAM,KAErC,CACHk9D,aAAc,CACV7sD,QAAS,IAAIqqB,MAAM,IACd+gB,KAAK,GACL1mC,IAAI,SAAC1Y,EAAGivC,GAAG,WAAAluC,OAAUkuC,EAAG,MAIP,gBAA9BnO,EAAQwV,aAAajmC,KACd,CACH4hI,YAAa,CACTj+H,QAAS,CACLghH,MAAO,CACH,CACI7kH,GAAI,YACJ0rF,WAAY,CACRn/E,SAAU,IACVy4G,eAAgB,CAAEthF,EAAG,IAAMC,EAAG,MAGlCuhF,SAAU,CACN/4B,YAAa,CACT,CAAC,EAAK,GACN,CAAC,EAAK,IACN,CAAC,GAAK,IACN,CAAC,GAAK,MAIlB,CACInsF,GAAI,YACJ0rF,WAAY,CACRn/E,SAAU,IACVy4G,eAAgB,CAAEthF,EAAG,IAAMC,EAAG,OAGtC,CACI3jC,GAAI,YACJ0rF,WAAY,CACRn/E,SAAU,IACVy4G,eAAgB,CAAEthF,EAAG,IAAMC,EAAG,WAStD09F,EAAc1wG,EAAQyqG,aAAap7H,KACnCqhI,EAAc1wG,EAAQyqG,aAAap7H,IAC/B2wB,EAAQwV,aAAajmC,MAGlBmhI,EAAc1wG,EAAQyqG,aAAap7H,IAE1CqhI,EAAc1wG,EAAQyqG,aAAap7H,MAClC2wB,EAAQwV,aAAajmC,MAEfmhI,EAAc1wG,EAAQyqG,aAAap7H,KAEvC,EACX,KACH,EAED/S,EAAAiuI,sBAAqB,CACjB7vI,KAAM,8BACNy0C,SAAU,GACVgtE,OAAQ,QACRx5F,SAAU,SAACqd,GACP,OAAK0wG,EAAc1wG,EAAQyqG,aAAap7H,MACpCqhI,EAAc1wG,EAAQyqG,aAAap7H,IAAM,IAC7CqhI,EAAc1wG,EAAQyqG,aAAap7H,IAAI2wB,EAAQ2B,KAAKpyB,MAChDywB,EAAQ2B,KACL3B,EAAQ2B,IACnB,KACH,EAEDrlC,EAAAiuI,sBAAqB,CACjB7vI,KAAM,8BACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,OAAK0wG,EAAc1wG,EAAQyqG,aAAap7H,MACpCqhI,EAAc1wG,EAAQyqG,aAAap7H,IAAM,IAC7CqhI,EAAc1wG,EAAQyqG,aAAap7H,IAAI2wB,EAAQ2B,KAAKpyB,MAChDywB,EAAQ2B,KACL3B,EAAQ2B,IACnB,IAGJ,IAAMyvG,EAAgB,CAAC,eAAgB,iBAAkB,gBAEzD,SAASF,EAAyB7hI,GAC9B,MAAO,CACH0gB,MAAO,CACH7c,QAAS,IAAIqqB,MAAM,IAAI+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,EAAGivC,GAAG,MAAM,CAC5C9+B,GAAE,SAAApP,UAAW1D,EAAAgzE,WAAUlgE,EAAI,GAAE,KAAApP,UAAI1D,EAAAgzE,WAAUphC,EAAM,EAAG,IACpD5+B,KAAI,QAAAtP,OAAUoP,EAAE,KAAApP,UAAI1D,EAAAgzE,WAAUphC,EAAM,EAAG,IACvC/D,YAAU7tC,EAAA81E,sBAAqB,MAAQ,GAAM,EAC7Cr1C,UACIzgC,EAAA81E,sBAAqB,MAAQ,GAAM,EAAI,CAAC,UAAY,GACxDptE,SAAUmsI,EAAct5H,OACpB,SAAC5Y,GAAC,SAAK3C,EAAA81E,sBAAqB,OAAS,GAAM,CAAC,GAEnD,IAGb,CAEA,SAAS2+D,EAAsB3hI,GAC3B,OAAKzT,EAAAy1I,eAAehiI,KAChBzT,EAAAy1I,eAAehiI,GAAM,CACjB,iBAAkB,CACd6D,QAAS,IAAIqqB,MAAM,KAAQ+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,EAAGivC,GACvC,IAAMiF,KAAW72C,EAAAgzE,WACZphC,EAAM,GAA6B,IAAvB/I,KAAKC,MAAM8I,EAAM,IAC9B,GAEEmjG,KACF/0I,EAAA81E,sBAAqB,MAAQ,GAAM,EAC7B44D,EAAAW,cACIrvI,EAAA81E,sBAAqB44D,EAAAW,WAAW1qI,SAEnC,GACX,MAAO,CACHmO,GAAE,QAAApP,OAAUmzC,GACZ5jC,OAAM,QAAAvP,OAAUmzC,GAChB7jC,KAAI,GAAAtP,OAAKmzC,GACThJ,YAAU7tC,EAAA81E,sBAAqB,MAAQ,GAAM,EAC7C+0C,YAAakqB,EAAS1uI,OAAS,GAC/B2uI,cAAeD,EAAS/hI,MAAQ,GAExC,MAIL3T,EAAAy1I,eAAehiI,EAC1B,CAEA,SAAS4hI,EAAgB5hI,GACrB,OAAKzT,EAAA41I,QAAQniI,KACTzT,EAAA41I,QAAQniI,GAAM,CACV+gB,QAAS,CACLld,QAAS,IAAIqqB,MAAM,GAAG+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,EAAGivC,GAClC,IAAMiF,KAAW72C,EAAAgzE,WAAUphC,EAAM,EAAG,GAOpC,OANMmjG,EACF/0I,EAAA81E,sBAAqB,MAAQ,GAAM,IAC7Bu5D,EACIrvI,EAAA81E,sBAAqB44D,EAAAW,WAAW1qI,QAGvC,CACHmO,GAAE,eAAApP,OAAiBoP,EAAE,KAAApP,OAAImzC,GACzB5jC,OAAM,QAAAvP,OAAUoP,EAAE,KAAApP,OAAImzC,GACtBniB,SAAQ,SACR1hB,KAAI,QAAAtP,OAAUmzC,GACdhwC,OAAQ,EACRgtB,QAAS,IAAImN,MAAM,IAAI+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,EAAGuyI,GAAI,MAAM,CAC7CpiI,GAAE,UAAApP,OAAYmzC,EAAQ,KAAAnzC,UAAI1D,EAAAgzE,WACtBkiE,EAAO,EACP,IAEJliI,KAAI,UAAAtP,OAAYwxI,EAAO,GACvBtsF,cACI5oD,EAAA81E,sBAAqB,MAAQ,GAAM,EACvCjoC,YAAU7tC,EAAA81E,sBAAqB,MAAQ,GAAM,EAC7Cj/B,SAAU,CAACq+F,EAAO,EAAGrsG,KAAKC,MAAMosG,EAAO,IACvCptF,KAAM,CAAC,EAAG,GACb,GAET,MAILzoD,EAAA41I,QAAQniI,EACnB,EAEA,EAAA/S,EAAAiuI,sBAAqB,CACjB7vI,KAAM,uCACNy0C,SAAU,GACVgtE,OAAQ,MACRx5F,SAAU,SAACqd,GACP,IAAMpwB,EAAOs7H,EAAAW,eAAexgH,KACxB,SAACnsB,GAAC,OAAKA,EAAEmQ,KAAO2wB,EAAQyqG,aAAap7H,EAAE,GAE3C,IAAKO,EACD,KAAM,CACF0zB,OAAQ,IACR0S,QAAO,gCAAA/1C,OAAkC+/B,EAAQyqG,aAAap7H,GAAE,MAExE,OAAO67H,EAAAa,YAAYj0H,OAAO,SAAC5Y,GAAC,OAAKA,EAAE2Q,YAAcD,EAAKP,EAAE,GAAEuI,IACtD,SAACmzC,GACG,IAAM2e,EAAQ3e,EAAI17C,GAAGxM,MAAM,KACrBwM,EAAKq6D,EAAMA,EAAMxoE,OAAS,GAChC,MAAO,CACH0O,KAAMm7C,EACN5b,SACkC,mBAA9BnP,EAAQwV,aAAajmC,KACfyhI,EAAsB3hI,GACQ,YAA9B2wB,EAAQwV,aAAajmC,KACrB0hI,EAAgB5hI,GAChB6hI,EAAyB7hI,GAE3C,EAER,GAER,CAhR0Bi7H,wLChC1B,IAAYoH,EAAZ,SAAYA,GACRA,WAAAC,KAAA,UACAD,IAAAE,GAAA,QACAF,IAAAG,KAAA,UAHQH,CAIZ,CAJA,CAAYA,IAAU91I,aAAV81I,EAAU,KAMVI,EAAZ,SAAYA,GACRA,WAAAC,KAAA,UACAD,IAAAE,MAAA,WACAF,IAAAD,KAAA,UAHQC,CAIZ,CAJA,CAAYA,IAASl2I,YAATk2I,EAAS,KAMfG,EAAY,WAWd,SAAAA,EAAY/yI,GAAClD,EAAAC,KAAAg2I,GACTh2I,KAAKi2I,QAAU,CAAC,aAAc,WAAY,eAC9C,CAACn2I,SAAAk2I,EAAA,EAAAz0I,IAAA,OAAAC,MAED,SAAK00I,GAAiB,GAAC,CAAA30I,IAAA,QAAAC,MAEvB,SAAM20I,GAAmB,GAAC,CAAA50I,IAAA,UAAAC,MAE1B,SAAQ8R,GAAe,GAAC,CAAA/R,IAAA,eAAAC,MAExB,SAAa8R,GAAe,KAAC0iI,CAAA,CArBf,GAwBLr2I,qBAAqB,SAAC6c,GAAc,IAAE45H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtE,IAAImxI,EAAYjnH,IAAA,GAAMvS,GAAU45H,GAAY,+KCvChD,IAEIpgH,EAFJ11B,EAAAzC,EAAA,OAIaw4I,EAAa,WAStB,SAAAA,EAAYpzI,GAAClD,EAAAC,KAAAq2I,GAPbr2I,KAAAqnC,OAA2C,UAE3CrnC,KAAAs2I,MAAgB,EAMZt2I,KAAKu2I,aAAYj2I,EAAA61D,WAAU,MAC/B,CAACr2D,SAAAu2I,EAAA,EAAA90I,IAAA,SAAAC,MAED,WAAM,IAAAJ,EAAApB,KACFA,KAAKqnC,OAAS,UACdrR,EAAW81C,YAAY,WACf1qE,EAAKm1I,UAAY,GAAGrgH,cAAcF,GACtC50B,EAAKm1I,UAAYn1I,EAAKm1I,UAAY,EAClCn1I,EAAKyxC,QAAUzxC,EAAKyxC,QAAU,CAClC,EAAG,IACP,GAAC,CAAAtxC,IAAA,SAAAC,MAED,WACIxB,KAAKqnC,OAAS,SACdnR,cAAcF,EAClB,GAAC,CAAAz0B,IAAA,UAAAC,MAED,WACIxB,KAAKw2I,QACT,GAAC,CAAAj1I,IAAA,QAAAC,MAED,WACIxB,KAAKqnC,OAAS,UACdrnC,KAAK6yC,QAAU,EACf3c,cAAcF,EAClB,KAACqgH,CAAA,CAnCqB,GAA1B12I,gBAAA02I,EAuCa12I,sBAAsB,SAAC6c,GAAc,IAAE45H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACvE,IAAIwxI,EAAatnH,IAAA,GAAMvS,GAAU45H,GAAY,qKC5CjD,IAAA91I,EAAAzC,EAAA,OAMA4yB,EAAA5yB,EAAA,OACAmxI,EAAAnxI,EAAA,OAEM44I,EAAiB,GAEjBC,EAAW,SAACznH,EAAO1K,GAAG,OAAK,SAACu6C,GAC9B,SAAOx+D,EAAA60E,sBAAqBlmD,EAAO1K,EAAKu6C,EAAI63E,aAAc73E,EAAI63E,aAClE,CAAC,EAEKC,EAAoB,WACtB,SAAAA,EAAY3zI,GAAClD,EAAAC,KAAA42I,EAAG,CAAC92I,SAAA82I,EAAA,EAAAr1I,IAAA,kBAAAC,MAEjB,SAAgBmF,EAAegmB,EAAcsC,EAAe1K,GAExD,GADKkyH,EAAe9vI,KAAQ8vI,EAAe9vI,GAAS,IAChD8vI,EAAe9vI,GAAO1B,OACtB,OAAOwxI,EAAe9vI,GAAOkV,OAAO66H,EAASznH,EAAO1K,IAKxD,QAJMkP,EAAS,GACTojH,KAAYpmH,EAAAkvB,SAAgB,IAAR1wB,GAAc,IAClC6nH,KAASrmH,EAAAkvB,SAAc,IAANp7B,EAAY,IAC/B5S,EAAO,IAAIyI,KAAKy8H,IAAS,EACtBpmH,EAAAsR,UAASpwB,EAAMmlI,IAClB,IAAIx1G,SAAMhhC,EAAA61D,WAAU,IACf9T,KAAK,GACL1mC,IAAI,SAAC1Y,GAAC,MAAM,CACT8zI,eAAaz2I,EAAA8mD,cAAa,IAC1BuvF,gBAAclmH,EAAAyC,gBACVzC,EAAAyR,UAASvwB,KAAMrR,EAAA61D,WAAU,IAAM,IAEnCvkD,SAA0B,IAA1BA,EAAUtR,EAAA61D,WAAU,IACpB60C,SAAUgkC,EAAAW,cAAWrvI,EAAA61D,WAAU64E,EAAAW,WAAW1qI,SAAS0B,MACtD,GACAoiB,QAAQ,SAACvE,GAAC,OAAKiP,EAAO2C,KAAK5R,EAAE,GAClC7S,KAAO8e,EAAAkvB,SAAQhuC,EAAM,GAEzB8kI,SAAe9vI,GAAS8sB,EACjBgjH,EAAe9vI,GAAOkV,OAAO66H,EAASznH,EAAO1K,GACxD,KAACqyH,CAAA,CA3BqB,GA8Bbj3I,6BAA6B,SACtC6c,GAAc,IACd45H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtB,IAAI+xI,EAAoB7nH,IAAA,GAAMvS,GAAU45H,GAAY,iLChDzD,IAAA91I,EAAAzC,EAAA,OAmCMm5I,EAAU,WA+DZ,SAAAA,EAAY/7F,GAA0B,IAAAg8F,EAAA71I,EAAApB,KAAAD,EAAAC,KAAAg3I,GAjDtBh3I,KAAAghF,KAAO,CACnBA,KAAM,CACF1/E,MAAO,OACP6lB,QAAO,qwBAsBX,cAAe,CACXoH,KAAM,YACNjtB,MAAO,gBACP6lB,QAAO,aAIRnnB,KAAAk3I,KAAO,CACV,CACI3oH,KAAM,SACNjb,KAAM,SACNX,KAAM,UAEV,CACI4b,KAAM,OACNjb,KAAM,KACNiM,OAAQ,CAAC,aACTyhE,KAAM,eACN38D,SAAU,qBAIXrkB,KAAAm3I,OAAS,EAGZn3I,KAAKsT,KAAO2nC,EAAM3nC,MAAQ,cAC1BtT,KAAK6wF,UAA2B,QAAlBomD,EAAGh8F,EAAM41C,iBAAS,IAAAomD,KAChCj3I,KAAKw6B,OAASygB,EAAMzgB,SAAU,EAC9Bx6B,KAAKo3I,WAAan8F,EAAMm8F,WACxBp3I,KAAKq3I,YAAcp8F,EAAMo8F,YACzBr3I,KAAKs3I,YAAcr8F,EAAMq8F,aAAe,GACxCt3I,KAAKuf,OAASkK,OAAOC,KAAK1pB,KAAKo3I,YAAc,KAAO,GACpDp3I,KAAKwf,QAAUiK,OAAOC,KAAK1pB,KAAKq3I,aAAe,KAAO,GACtDr3I,KAAKu3I,kBAAoBv3I,KAAKwf,UACxBk7C,EAAQp6D,EAAA6sC,QAAOntC,KAAKs3I,YAAY37H,IAAI,SAAC1Y,GAAC,OAAKA,EAAE0P,IAAI,KAAM,IACvDoW,QACF,SAAC0T,GAAC,OACGr7B,EAAI,GAAA4C,OAAIy4B,IAAOr7B,EAAKk2I,YAChBz7H,OAAO,SAAC5Y,GAAC,OAAKA,EAAE0P,OAAS8pB,CAAC,GAC1B9gB,IAAI,SAAC1Y,GAAC,OAAKA,EAAEmQ,EAAE,EAAC,GAE7BpT,KAAKs3I,YAAYvuH,QACb,SAACijE,GAAM,OAAM5qF,EAAI,GAAA4C,OAAIgoF,EAAOr5E,KAAI,KAAA3O,OAAIgoF,EAAO54E,KAAQ44E,CAAM,GAE7DhsF,KAAKuf,OAAOwJ,QACR,SAACxnB,GAAG,OAAMH,EAAI,SAAA4C,OAAUzC,IAASH,EAAKg2I,WAAW71I,EAAI,GAEzDvB,KAAKwf,QAAQuJ,QACT,SAACxnB,GAAG,OAAMH,EAAI,UAAA4C,OAAWzC,IAASH,EAAKi2I,YAAY91I,EAAI,EAE/D,CAACzB,SAAAk3I,EAAA,EAAAz1I,IAAA,SAAAC,MAED,WACIxB,KAAKw6B,SADG31B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,EAEZ,GACA,CAAAtD,IAAA,SAAAC,MACA,WAAU,GACV,CAAAD,IAAA,SAAAC,MAUA,SAAOu0D,EAAe0nB,GACdz9E,KAAKuf,OAAO1Z,SAASkwD,IAAU/1D,KAAKwf,QAAQ3Z,SAAS43E,KACrDz9E,KAAKw3I,aAAazhF,EAAO,CACrBv3D,UAAQ8B,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EACN/iB,KAAKo3I,WAAWrhF,GAAOv3D,QAAU,IAAE,CACvCi/E,OAGRz9E,KAAKw3I,aAAa/5D,EAAQ,CACtBuO,OAAQj2B,EACR0hF,UAAW1hF,IAGvB,GACA,CAAAx0D,IAAA,WAAAC,MAKA,WAAY,GACZ,CAAAD,IAAA,WAAAC,MAIA,WAAY,GACZ,CAAAD,IAAA,cAAAC,MACA,WAAe,GACf,CAAAD,IAAA,QAAAC,MAKA,WAAS,GACT,CAAAD,IAAA,SAAAC,MAIA,WAAU,GACV,CAAAD,IAAA,SAAAC,MACA,WAAU,GACV,CAAAD,IAAA,UAAAC,MAKA,WAAW,GACX,CAAAD,IAAA,UAAAC,MAMA,WAAW,GACX,CAAAD,IAAA,UAAAC,MAKA,SAAQA,GACW,SADIqD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,SAEhC7E,KAAKm3I,OAAS31I,EAEtB,GACA,CAAAD,IAAA,QAAAC,MACA,WACIxB,KAAKw3I,aADoB3yI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,MAChB,CAAE6yI,OAD1B7yI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,IAEN,GACA,CAAAtD,IAAA,UAAAC,MAIA,WACIxB,KAAK23I,OAAM,EADP9yI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,MAEzB,GACA,CAAAtD,IAAA,eAAAC,MAQA,SAAa4R,EAAYupB,GACrB,IAAMqvD,EAAShsF,KAAKs3I,YAAYloH,KAAK,SAACnsB,GAAC,OAAKA,EAAEmQ,KAAOA,CAAE,GACnD44E,IACAhsF,KAAI,GAAAgE,OAAIgoF,EAAOr5E,KAAI,KAAA3O,OAAIgoF,EAAO54E,KAAK2b,IAAA,GAAQi9D,GAAM,IAAErvD,UAE3D,GACA,CAAAp7B,IAAA,QAAAC,MACA,SAAMwqF,GACFhsF,KAAKw3I,aAAaxrD,EAAQ,CAAE4rD,QAAQ,GACxC,GACA,CAAAr2I,IAAA,UAAAC,MACA,SAAQwqF,GACJhsF,KAAKw3I,aAAaxrD,EAAQ,CAAE4rD,QAAQ,GACxC,GAAC,CAAAr2I,IAAA,eAAAC,MAED,SAAawqF,EAAgBtpF,GACrB1C,KAAI,SAAAgE,OAAUgoF,KACdhsF,KAAI,SAAAgE,OAAUgoF,IAASj9D,IAAA,GAAQ/uB,KAAI,SAAAgE,OAAUgoF,KAActpF,GAC3D1C,KAAKo3I,WAAWprD,GAAOj9D,IAAA,GAAQ/uB,KAAI,SAAAgE,OAAUgoF,KAActpF,IACpD1C,KAAI,UAAAgE,OAAWgoF,MACtBhsF,KAAI,UAAAgE,OAAWgoF,IAASj9D,IAAA,GAAQ/uB,KAAI,UAAAgE,OAAWgoF,KAActpF,GAC7D1C,KAAKq3I,YAAYrrD,GAAOj9D,IAAA,GAAQ/uB,KAAI,UAAAgE,OAAWgoF,KAActpF,GAErE,KAACs0I,CAAA,CAnNW,GAsNVI,EAAsB,CACxBS,KAAM,CACFvkI,KAAM,cACNX,KAAM,aACN6hB,IAAK,gBAETsjH,KAAM,CACFxkI,KAAM,YACNX,KAAM,aACN6hB,IAAK,gBAETujH,KAAM,CACFzkI,KAAM,eACNX,KAAM,aACN6hB,IAAK,gBAETwjH,IAAK,CACD1kI,KAAM,OACNX,KAAM,MAEVslI,IAAK,CACD3kI,KAAM,OACNX,KAAM,MAEVulI,IAAK,CACD5kI,KAAM,OACNX,KAAM,MAEVwlI,IAAK,CACD7kI,KAAM,OACNX,KAAM,MAEVylI,KAAM,CACF9kI,KAAM,cACNX,KAAM,UAEV0lI,IAAK,CACD/kI,KAAM,aACNX,KAAM,UAEV2lI,QAAS,CACLhlI,KAAM,cACNX,KAAM,SACN6hB,IAAK,YAET+jH,QAAS,CACLjlI,KAAM,eACNX,KAAM,SACN6hB,IAAK,YAETgkH,QAAS,CACLllI,KAAM,gBACNX,KAAM,SACN6hB,IAAK,YAETikH,QAAS,CACLnlI,KAAM,iBACNX,KAAM,SACN6hB,IAAK,YAETkkH,IAAK,CACDplI,KAAM,SACNX,KAAM,KACN6hB,IAAK,UAETmkH,IAAK,CACDrlI,KAAM,qBACNX,KAAM,KACN6hB,IAAK,cAIP6iH,EAAuB,CACzBuB,SAAU,CACNtlI,KAAM,WACNX,KAAM,UACNq5E,OAAQ,MACRx3D,IAAK,aAETqkH,SAAU,CACNvlI,KAAM,WACNX,KAAM,UACN6hB,IAAK,aAETskH,SAAU,CACNxlI,KAAM,OACNX,KAAM,UACN6hB,IAAK,YACLw3D,OAAQ,QAIVsrD,EAAqB,CACvB,CACIlkI,GAAI,SACJE,KAAM,WACNX,KAAM,SACNomI,OAAQ,CAAC,MAAO,eAAgB,UAAW,QAC3Cp8G,MAAO,OAEX,CACIvpB,GAAI,SACJE,KAAM,SACNX,KAAM,SACNomI,OAAQ,CAAC,MAAO,eAAgB,WAChCp8G,MAAO,OAEX,CACIvpB,GAAI,UACJE,KAAM,SACNX,KAAM,SACNomI,OAAQ,CAAC,KAAM,QACfp8G,MAAO,SAIFh9B,qBAAqB,SAAC6c,GAAc,IAAE45H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtE,IAAImyI,EAAUjoH,IAAA,GACPvS,GAAK,IACR46H,aACAC,cACAC,eACGlB,GACL,qRCpXN,IAAA4C,EAAAn7I,EAAA,OACAyC,EAAAzC,EAAA,OACAoxI,EAAApxI,EAAA,OACAmxI,EAAAnxI,EAAA,OAoBao7I,EAAwB,WAArC,SAAAA,IAAAl5I,EAAAC,KAAAi5I,GAEIj5I,KAAAk5I,SAAkC,GAElCl5I,KAAA2yH,mBAAqB,CACjB,YAAaqc,EAAAW,WAAW9zH,OACpB,SAAC5Y,GAAC,SAAK3C,EAAA81E,sBAAqB,MAAQ,GAAM,CAAC,GAE/C,cAAe44D,EAAAW,WAAW9zH,OACtB,SAAC5Y,GAAC,SAAK3C,EAAA81E,sBAAqB,MAAQ,GAAM,CAAC,GASvD,CAACt2E,SAAAm5I,EAAA,EAAA13I,IAAA,eAAAC,MALG,SAAamF,EAAeqkG,GAAmB,GAAC,CAAAzpG,IAAA,UAAAC,MAEhD,WACI23I,EAAgBn5I,KAAMivI,EAAAa,YAC1B,KAACmJ,CAAA,CAjBgC,GAArCt5I,2BAAAs5I,EAoBA,IAAMG,EAAa,GA8FnB,SAAgBD,EACZ3kH,EACA/R,GAAiB,IAEOwZ,EAFPC,EAAA/E,EAEC1U,GAAM,QAAA2jB,EAAA,WAAE,IAAf0oB,EAAG7yB,EAAAz6B,MACVgzB,EAAIs6B,EAAI17C,IAAM,CACV5R,MAAO,IAAI8/B,SAAMhhC,EAAA81E,sBAAqB,KACjC/zB,KAAK,GACL1mC,IAAI,kBAAMo4H,EAAiBjlF,EAAKt6B,EAAG,GAAAxwB,OAAI8qD,EAAI17C,GAAE,cAAa,IACjE,IAC6CutD,EAD7CC,EAAAzpC,EACiB3C,EAAG,GAAAxwB,OAAI8qD,EAAI17C,GAAE,WAAU5R,OAAK,IAA/C,IAAAo/D,EAAA53C,MAAA23C,EAAAC,EAAAtpC,KAAAC,MAAeopC,EAAAn/D,MACNo7B,SAAQt8B,EAAA61D,WAAU,IAC1B,OAAAnsC,GAAA42C,EAAAp8C,EAAAwF,EAAA,SAAA42C,EAAAppC,GAAA,CACDhD,EAAG,GAAAxwB,OAAI8qD,EAAI17C,GAAE,WAAS2b,EAAA,GAAQyF,EAAG,GAAAxwB,OAAI8qD,EAAI17C,GAAE,aAT/C,IAAA8oB,EAAAlT,MAAAiT,EAAAC,EAAA5E,KAAAC,MAAA6O,GAUC,OAAApc,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAA1E,GAAA,CACL,CAEA,SAAgBu8G,EACZjlF,EACAh7B,GACkB,IAAA5tB,EAAA6B,EAAAsxI,EAAAC,EAAlB/gI,EAAK1T,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAGmqI,EAAAW,WAEF4J,KAAQj5I,EAAA81E,sBAAqB,MAAQ,GAAM,EAC3CojE,EAAgE,QAA7DtzI,GAAIqS,GAAS,OAAIjY,EAAA81E,sBAAiC,QAAbruE,EAAEwQ,GAAS,UAAE,IAAAxQ,OAAA,EAAZA,EAAe9C,gBAAQ,IAAAiB,OAAA,EAA1DA,EAA4DS,MACxE,OAAO4yI,EACD,CACI5zI,SAAU,OACVyiH,eAAa9nH,EAAA81E,sBAAqB,MAAQ,GAAM,EAChD7iE,OAAQugB,KAAMxzB,EAAA81E,sBAAqBtiD,EAAM7uB,SACzC+kH,IAAQ,QAALqvB,EAAEL,EAAAS,WAAG,IAAAJ,OAAA,EAAHA,EAAKK,QAAQF,GAAO,IACzB3iI,MAAOi4C,EAAI17C,GACXyC,SAAUi5C,EAAIl7C,WAElB,CACIjO,SAAU,WACVmjH,iBAAkB,cAClBhyE,KAAGx2C,EAAA81E,sBAAqB,KAAQ,GAChCr/B,KAAGz2C,EAAA81E,sBAAqB,KAAQ,GAChCi+D,IAAK,kBACL1zC,IAAK,kBACLg5C,WAAY,eACZ3vB,IAAQ,QAALsvB,EAAEN,EAAAS,WAAG,IAAAH,OAAA,EAAHA,EAAKI,QAAQF,GAAO,IACzB7uB,SAAU,iBACVrd,UAAWnkE,KAAKC,WAAUhvB,MAAO8a,UAAY,KAC7C0zF,UAAW,IACXC,WAAY,IAE1B,CA3IAlpH,6BAAuC,oBAAAi6I,IAAA75I,EAAAC,KAAA45I,EAAA,CAAA95I,SAAA85I,EAAA,EAAAr4I,IAAA,sBAAAC,MACnC,SAAoBu1I,GAChB,IAAKqC,EAAWrC,GAAc,CAC1B,IAAMxL,KACFjrI,EAAA61D,WAAU,QAAW,GAAM,EACrB64E,EAAAW,cAAWrvI,EAAA61D,WAAU64E,EAAAW,WAAW1qI,SAChC,CAAEqO,KAAM,IAClB8lI,EAAWrC,GAAe,CAAE5rB,YAAaogB,EAAMj4H,MAEnD,OAAO8lI,EAAWrC,EACtB,GAAC,CAAAx1I,IAAA,eAAAC,MAED,SAAamF,EAAeqkG,GACxB,MAAO,CAAC,CACJr4F,KAAM,WACNwkC,SAAU,CAAEL,EAAG,GAAKC,EAAG,IACvBlgC,MAAOo4H,EAAAa,eAAYxvI,EAAA61D,WAAU84E,EAAAa,YAAY7qI,SAASmO,GAClDu2G,SAAU,GAElB,KAACiwB,CAAA,CAnBkC,GA8BvCj6I,6BAAA,SAAgBk6I,EACZr9H,GACuB,IAGMya,EADvBzC,EAAM,IAAIykH,EAA2B/hH,EAAAC,EACzB83G,EAAAa,aAAW,QAAA14G,EAAA,WAAE,IAApB03B,EAAG73B,EAAAz1B,MACVgzB,EAAI0kH,SAASpqF,EAAI17C,IAAM,CACnB0mI,WAAY,IACZC,WAAY,EACZC,gBAAiB,IACjBC,aAAc,EACdC,iBAAkB,EAClBC,eAAgB,EAChBC,eAAgB,KAEpB5lH,EAAG,GAAAxwB,OAAI8qD,EAAI17C,GAAE,cAAe,IAAIkuB,MAAM9M,EAAI0kH,SAASpqF,EAAI17C,IAAI0mI,YACtDz3F,KAAK,GACL1mC,IAAI,SAAC1Y,EAAGivC,GAAG,eAAAluC,OAAc8qD,EAAIqjF,OAAM,KAAAnuI,OAzBhD,SAASq2I,EAAQC,GAEb,QAFyBC,EAAA11I,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,EACnCumE,EAAG,GAAApnE,OAAMs2I,GACNlvE,EAAInmE,OAASs1I,GAChBnvE,EAAM,IAAMA,EAEhB,OAAOA,CACX,CAmBoDivE,CAAQnoG,GAAI,GACxD1d,EAAG,GAAAxwB,OAAI8qD,EAAI17C,KAAQ,CAAE5R,MAAO,IAC5BgzB,EAAG,GAAAxwB,OAAI8qD,EAAI17C,GAAE,WAAY,CACrB5R,MAAO,CACH,CACIg3H,QAAS,YACT57F,SAAOt8B,EAAA61D,WAAU,KACjB7iD,KAAM,cAEV,CACIklH,QAAS,YACT57F,SAAOt8B,EAAA61D,WAAU,KACjB7iD,KAAM,cAEV,CACIklH,QAAS,YACT57F,SAAOt8B,EAAA61D,WAAU,IACjB7iD,KAAM,cAEV,CACIklH,QAAS,YACT57F,SAAOt8B,EAAA61D,WAAU,KACjB7iD,KAAM,cAEV,CACIklH,QAAS,YACT57F,SAAOt8B,EAAA61D,WAAU,KACjB7iD,KAAM,kBAEV,CACIklH,QAAS,YACT57F,SAAOt8B,EAAA61D,WAAU,KACjB7iD,KAAM,kBAEV,CACIklH,QAAS,YACT57F,SAAOt8B,EAAA61D,WAAU,IACjB7iD,KAAM,kBAjDtB,IAAA4jB,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAAAH,GAqDC,OAAApN,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACD,OAAOhD,CACX,EAEA70B,kBAAAw5I,EAiBAx5I,mBAAAo0I,+JC1JA,IAAAzzI,EAAAzC,EAAA,OAEM28I,EAAa,WAYf,SAAAA,EAAYv3I,GAAClD,EAAAC,KAAAw6I,GACTx6I,KAAKm3I,UAAS72I,EAAA61D,WAAU,IAC5B,CAACr2D,SAAA06I,EAAA,EAAAj5I,IAAA,QAAAC,MAVD,WACIxB,KAAK03I,OADH7yI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,EAEN,GAAC,CAAAtD,IAAA,UAAAC,MAED,SAAQA,GACJxB,KAAKm3I,OAAS31I,CAClB,KAACg5I,CAAA,CAVc,GAiBN76I,sBAAsB,SAAC6c,GAAc,IAAE45H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACvE,IAAI21I,EAAazrH,IAAA,GAAMvS,GAAU45H,GAAY,iKCpBjD,IAAA3lH,EAAA5yB,EAAA,OAEAyC,EAAAzC,EAAA,OACA4yI,EAAA5yI,EAAA,OAEa48I,EAAiB,WAwB1B,SAAAA,EAAYj+H,EAAOy+B,GAAiCl7C,EAAAC,KAAAy6I,GAtBpDz6I,KAAA06I,UAAY,mBAEZ16I,KAAA26I,kBAAmB,EAEnB36I,KAAA46I,qBAAsB,EAEtB56I,KAAAq1B,SAAsB,GACtBr1B,KAAA66I,eAAiB,EACjB76I,KAAA86I,eAAiB,EAEjB96I,KAAA+6I,WAAa,GAEb/6I,KAAAg7I,YAAc,GAEdh7I,KAAAi7I,qBAAuB,EACvBj7I,KAAAk7I,gBAAkB,KAClBl7I,KAAAm7I,aAAe,KAEfn7I,KAAAo7I,WAAa,uBACbp7I,KAAAqnC,OAAS,OACTrnC,KAAA4uB,OAAS,KAE+C5uB,KAAK4uB,OAASpS,CAAM,CAE5E1c,SAAA26I,EAAA,EAAAl5I,IAAA,iBAAAC,MACA,SAAei7B,GACXz8B,KAAKi7I,qBAAuBx+G,CAChC,GACA,CAAAl7B,IAAA,eAAAC,MACA,SAAai7B,GAAY,GACzB,CAAAl7B,IAAA,YAAAC,MACA,SAAU+4I,EAAa99G,EAAYvZ,GAAa,GAAC,CAAA3hB,IAAA,iBAAAC,MAEjD,YAUJ,SAAS65I,EAAe7+H,EAAgBgY,GAAY,IAAAtuB,EAC1CmvB,EACFo7G,EAAAM,YAAYl1H,OAAO,SAACkS,GAAK,IAAAutH,EAAA,OACN,QADMA,EACrBvtH,EAAM1X,iBAAS,IAAAilI,OAAA,EAAfA,EAAiBlsH,KACb,SAACy3D,GAAC,IAAAjuC,EAAA,OACEiuC,EAAElgF,QAAU6V,EAAM7V,OAClBkgF,EAAEzzE,KAAOoJ,EAAMpJ,KACH,QAAZwlC,EAAA7qB,EAAM7U,cAAM,IAAA0/B,OAAA,EAAZA,EAAcxlC,MAAOoJ,EAAMpJ,EAAE,EACpC,IACA,GACTiiB,EAASxY,KAAK,SAACgW,EAAGlU,GAAC,OAAKkU,EAAE2rF,YAAc7/F,EAAE6/F,WAAW,GACrDhqF,EAAIa,SAAWA,EACfb,EAAI0mH,gBAAkB7lH,EAASjG,KAAK,SAACnsB,GAAC,SAClC3C,EAAA60E,sBACI/6D,KAAK8W,MACL9W,KAAK8W,MACW,IAAhBjuB,EAAEu7G,YACY,IAAdv7G,EAAEw7G,UACL,GAELjqF,EAAI2mH,aAAe9lH,EAASjG,KAAK,SAACnsB,GAAC,OAAqB,IAAhBA,EAAEu7G,YAAqBpkG,KAAK8W,KAAK,GACzE,IAAMvf,EAAO,IAAIyI,KACT8gI,EAAkC1mH,EAAlC0mH,gBACFjsH,EAAQ,IAAI7U,KAAqC,QAAjClU,EAAEg1I,GADkB1mH,EAAjB2mH,oBAC8B,IAAAj1I,OAAA,EAAhCA,EAAmCs4G,aACpD6W,KAAU/0H,EAAA60E,sBACZxjE,EAAKujB,UACLvjB,EAAKujB,WAAO,EACZzE,EAAA8qH,YAAWtsH,EAAOuF,EAAIsmH,gBAAgB5lH,WAAO,EAC7CzE,EAAA2xF,YAAWnzF,EAAOuF,EAAIqmH,gBAAgB3lH,WAE1CV,EAAI6S,OAAc,MAAL7qB,KAAO2xB,SACd+sG,EACI,OACA7lB,EACA,UACA,OACJ,cACV,CA9CQgmB,CAAer7I,KAAK4uB,OAAQ5uB,KAChC,KAACy6I,CAAA,CArCyB,GAA9B96I,oBAAA86I,EAwCa96I,uBAAuB,SAChC6c,GAC0C,OACzC,IAAIi+H,EAAkBj+H,EADvB3X,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAwC,GACA,2KC9CtC22I,EAAqB,WACvB,SAAAA,EAAY94I,GAAS3C,EAAAC,KAAAw7I,EAAG,CAAC17I,SAAA07I,EAAA,EAAAj6I,IAAA,2BAAAC,MAEzB,WACI,MAAO,CACH,CACImE,SAAU,SACVytC,QAAS,uCACTre,UAAW,uCACXI,YAAa,QACbk3F,WAAW,EACX10F,SAAU,wCAGtB,KAAC6jH,CAAA,CAdsB,GAiBd77I,8BAA8B,SACvCsX,GAAiB,IACjBm/H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OAEvB,IAAI22I,EAAqBzsH,IAAA,GAClB9X,GACAm/H,GACL,uKCxBAqF,EAAiB,WAGnB,SAAAA,EAAY/4I,GAAS3C,EAAAC,KAAAy7I,GAFdz7I,KAAA07I,sBAAwB,eAEP,CAAC57I,SAAA27I,EAAA,EAAAl6I,IAAA,YAAAC,MAEzB,WAA2B,KAACi6I,CAAA,CALT,GAQV97I,0BAA0B,SACnCsX,GAAiB,IACjBm/H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OAEvB,IAAI42I,EAAiB1sH,IAAA,GACd9X,GACAm/H,GACL,kKCjBN,IAAA91I,EAAAzC,EAAA,OAEM89I,EAAgB,WAYlB,SAAAA,EAAY14I,GAAClD,EAAAC,KAAA27I,GACT37I,KAAKm3I,UAAS72I,EAAA61D,WAAU,IAC5B,CAACr2D,SAAA67I,EAAA,EAAAp6I,IAAA,QAAAC,MAVD,WACIxB,KAAK03I,OADH7yI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,EAEN,GAAC,CAAAtD,IAAA,UAAAC,MAED,SAAQA,GACJxB,KAAKm3I,OAAS31I,CAClB,KAACm6I,CAAA,CAViB,GAiBTh8I,yBAAyB,SAClC6c,GAAc,IACd45H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtB,IAAI82I,EAAgB5sH,IAAA,GAAMvS,GAAU45H,GAAY,gKCtBrD,IAAA91I,EAAAzC,EAAA,OAEMgO,EAAc,WA6BhB,SAAAA,EAAY5I,GAAClD,EAAAC,KAAA6L,EAAG,CAAC/L,SAAA+L,EAAA,EAAAtK,IAAA,wBAAAC,MA3BjB,SAAsBmR,GAEtB,GAAC,CAAApR,IAAA,sBAAAC,MAED,SAAoBmR,EAAcsE,GAElC,GAAC,CAAA1V,IAAA,sBAAAC,MAED,SAAoB4R,EAAYk0B,GAC5B,MAAO,CAAC,KAAO,GACnB,GAAC,CAAA/lC,IAAA,yBAAAC,MAED,SAAuBi3B,EAAgBuzD,GACnC,SAAO1rF,EAAA8mD,cAAa,GACxB,GAAC,CAAA7lD,IAAA,0BAAAC,MAED,SAAwB4R,GAExB,GAAC,CAAA7R,IAAA,yBAAAC,MAED,SAAuB4R,GACvB,GAAC,CAAA7R,IAAA,mBAAAC,MAED,WACI,gBAAAwC,UAAiB1D,EAAA61D,WAAU,QAAW,KAC1C,KAACtqD,CAAA,CA3Be,GAgCPlM,uBAAuB,SAAC6c,GAAc,IAAE45H,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACxE,IAAIgH,EAAckjB,IAAA,GAAMvS,GAAU45H,GAAY,2KCA5CwF,EAAqB,WAiDvB,SAAAA,EAAY34I,GAAClD,EAAAC,KAAA47I,GAhDb57I,KAAA67I,UAAoB,EACpB77I,KAAA87I,UAAoB,EACpB97I,KAAA+7I,aAA4B,OAC5B/7I,KAAAg8I,kBAAiD,OAEjDh8I,KAAAi8I,MAA0C,CACtCpR,KAAM,CACFqR,OAAQ,aAyCA,CAACp8I,SAAA87I,EAAA,EAAAr6I,IAAA,mBAAAC,MArCjB,SAAiB4kG,GACbpmG,KAAK87I,SAAW11C,CACpB,GAAC,CAAA7kG,IAAA,YAAAC,MAED,SAAU4kG,GACNpmG,KAAK67I,SAAWz1C,CACpB,GAAC,CAAA7kG,IAAA,qBAAAC,MACD,SAAmBm7B,GACf38B,KAAKg8I,kBAAoBr/G,CAC7B,GAAC,CAAAp7B,IAAA,UAAAC,MACD,WAAW,GAAC,CAAAD,IAAA,sBAAAC,MACZ,WACI,QAAWD,KAAOvB,KAAKi8I,MACnB,GAAIj8I,KAAKi8I,MAAM16I,GAAK26I,OAGhB,OAFAl8I,KAAKi8I,MAAM16I,GAAK26I,OAAS,cACzBl8I,KAAKi8I,MAAKltH,EAAA,GAAQ/uB,KAAKi8I,OAInC,GAAC,CAAA16I,IAAA,eAAAC,MACD,WACI,QAAWD,KAAOvB,KAAKi8I,MACnB,GAAIj8I,KAAKi8I,MAAM16I,GAAK26I,OAGhB,OAFAl8I,KAAKi8I,MAAM16I,GAAK26I,OAAS,YACzBl8I,KAAKi8I,MAAKltH,EAAA,GAAQ/uB,KAAKi8I,OAInC,GAAC,CAAA16I,IAAA,gBAAAC,MACD,SAAc26I,GACVn8I,KAAK+7I,aAAeI,CACxB,GAAC,CAAA56I,IAAA,aAAAC,MACD,SAAW46I,GAAgB,GAAC,CAAA76I,IAAA,QAAAC,MAC5B,SAAM66I,GACF,OAAO,IAAIz4I,QAAc,SAAC85E,GAAC,OAAKjR,WAAW,kBAAMiR,GAAG,EAAE,IAAK,EAC/D,KAACk+D,CAAA,CA/CsB,GAoDdj8I,8BAA8B,WAAH,IAEpCy2I,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OACtB,IAAI+2I,EAAqB7sH,IAAA,GAF1BlqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,IAEyBuxI,GAAY,2FC1F1D,IAAA/1I,EAAAxC,EAAA,OAGAy+I,EAAAz+I,EAAA,OACA+Q,EAAA/Q,EAAA,OACA0+I,EAAA1+I,EAAA,MAIA2+I,EAAA3+I,EAAA,OACA4+I,EAAA5+I,EAAA,OACA6+I,EAAA7+I,EAAA,OACA8+I,EAAA9+I,EAAA,OACA++I,EAAA/+I,EAAA,OACAg/I,EAAAh/I,EAAA,OACAi/I,EAAAj/I,EAAA,MACAkM,EAAAlM,EAAA,OACAk/I,EAAAl/I,EAAA,OAEA8B,eAAA,SAAgB4zI,EAAa/2H,IACzB,EAAAnc,EAAA28I,gBAAexgI,EAAMpJ,GAAI,CACrB6pI,OAAQ,IAACX,EAAAY,oBAAmB1gI,IAC5Bu1H,SAAU,IAACnjI,EAAAuuI,sBAAqB3gI,IAChC4gI,eAAgB,IAACN,EAAAO,4BAA2B7gI,IAC5C8gI,eAAgB,IAACf,EAAA1C,4BAA2Br9H,IAC5C+gI,iBAAkB,CAAC,IAAIhB,EAAA3C,4BACvB4D,OAAQ,IAAIl8G,MAAM,IAAI+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,GAAC,SAAKu5I,EAAAiB,oBAAmBjhI,EAAM,GAClEkhI,QAAS,IAAIp8G,MAAM,IAAI+gB,KAAK,GAAG1mC,IAAI,SAAC1Y,GAAC,SAAKw5I,EAAAkB,qBAAoBnhI,EAAM,GACpEohI,WAAY,IAAIt8G,MAAM,IACjB+gB,KAAK,GACL1mC,IAAI,SAAC1Y,GAAC,SAAKy5I,EAAAmB,wBAAuBrhI,EAAM,GAC7CshI,QAAS,IAACnB,EAAAoB,qBAAoBvhI,IAC9BwhI,YAAa,IAACpB,EAAAqB,4BACdC,QAAS,IAACrB,EAAAsB,gCACVC,QAAS,IAACr0I,EAAAs0I,sBAAqB7hI,IAC/B8hI,gBAAiB,IAACvB,EAAAwB,kCAGtB,IAAMrlI,KAAS7Y,EAAAyxI,YAAWt1H,EAAMpJ,IAEhC8F,EAAO64H,SAAS,GAAGC,iBACnBlmE,YAAY,kBAAM5yD,EAAO64H,SAAS,GAAGC,gBAAgB,EAAE,KAEvD94H,EAAOokI,eAAe,GAAGkB,UACzB1yE,YAAY,kBAAM5yD,EAAOokI,eAAe,GAAGkB,SAAS,EAAE,IAC1D,qEC7CA,IAAAl+I,EAAAzC,EAAA,OAEA4gJ,EAAA5gJ,EAAA,OACA6gJ,EAAA7gJ,EAAA,OACA8gJ,EAAA9gJ,EAAA,OACA+gJ,EAAA/gJ,EAAA,OACAghJ,EAAAhhJ,EAAA,OACAihJ,EAAAjhJ,EAAA,OACAkhJ,EAAAlhJ,EAAA,MACAmhJ,EAAAnhJ,EAAA,OAEA8B,UAAe,CACXs/I,WAAAR,EAAAQ,WACAC,WAAAR,EAAAQ,WACAC,aAAAR,EAAAQ,aACAC,YAAAR,EAAAQ,YACAC,eAAAR,EAAAQ,eACAC,cAAAR,EAAAQ,cACAC,YAAAR,EAAAQ,YACAC,aAAAR,EAAAQ,iBAGJl/I,EAAAsC,KAAI,QAAS,qHCtBb4zB,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,uKCPA,IAAA62G,EAAA34G,EAAA,OA0DA8B,WAAqB,WA2DjB,SAAAi4G,IAAoD,IAAAx2G,EAAApB,KAAxCy/I,EAAA56I,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsC,GAAE9E,EAAAC,KAAA43G,GAChD53G,KAAKoT,GAAKqsI,EAASrsI,IAAM,GACzBpT,KAAK4T,UAAY6rI,EAAS7rI,WAAa,GACvC5T,KAAKsT,KAAOmsI,EAASnsI,MAAQ,GAC7B,IAAMlO,EAAWq6I,EAASr6I,UAAY,GACtCpF,KAAKsV,aAAemqI,EAASnqI,aAC7BtV,KAAK4qB,OAAS5qB,KAAK4qB,QAAU,GAC7B,IAAM80H,EAAYt6I,EAASu6I,gBAAkBv6I,EAC7CpF,KAAKqhC,QAAUo+G,EAASp+G,SAAWo+G,EAAS9rI,KAC5C3T,KAAK4/I,QAAUH,EAASG,QAAUF,EAAUE,QAAU,IAAIjkI,IAAI,SAACsW,GAAC,MAAM,CAClE7e,GAAI6e,EAAE4tH,UAAY5tH,EAAE7e,GACpBE,KAAM2e,EAAE6tH,YAAc7tH,EAAE3e,KAC3B,GACDtT,KAAK+/I,YACDN,EAASM,YACTL,EAAUK,YACV,IACFpkI,IAAI,SAACsW,GAAC,MAAM,CACV7e,GAAI6e,EAAE4tH,UAAY5tH,EAAE7e,GACpBE,KAAM2e,EAAE6tH,YAAc7tH,EAAE3e,KAC3B,GACDtT,KAAKyiB,QAAUg9H,EAASh9H,QAAUi9H,EAAUj9H,QAAU,IAAI9G,IACtD,SAACsW,GAAC,OAAK,IAAIukF,EAAAmB,cAAa5oF,IAAA,GAAMkD,GAAC,IAAEsgH,YAAanxI,EAAKgS,KAAK,GAE5DpT,KAAKggJ,OAASP,EAASnsB,OAASosB,EAAUpsB,OAAS,GACnDtzH,KAAK2wB,SACD8uH,EAAStrH,SACTsrH,EAASQ,kBACTP,EAAUO,kBACV,GACJjgJ,KAAKkgJ,SAAWT,EAAS3O,SAAW4O,EAAU5O,SAAW,GACzD9wI,KAAKmgJ,eACDV,EAASW,eAAiBV,EAAUU,eAAiB,GACzDpgJ,KAAK2F,SAAW85I,EAAS95I,UAAY+5I,EAAU/5I,UAAY,MAC3D3F,KAAKqgJ,oBACDZ,EAASY,qBAAuBX,EAAUW,qBAAuB,GACrErgJ,KAAKsgJ,WAAab,EAASa,YAAcZ,EAAUY,YAAc,GACjE,IAAMC,EAAc,GACpB,GAAId,EAASe,eACT,QAAW1xF,KAAO2wF,EAASe,eACvB,GAAI1xF,KAAO2wF,EAASe,eAAgB,CAChC,IAAMC,EAAehB,EAASe,eAAe1xF,IAAQ,GACrD,QAAWtzC,KAAWilI,EACdjlI,KAAWilI,GACXF,EAAYnqH,KAAK,CACbhjB,GAAIqtI,EAAajlI,GACjBlI,KAAMkI,EACNwZ,SAAU85B,IAOlC9uD,KAAK20I,SAAW8K,EAAS9K,UAAY,GACrC30I,KAAKugJ,YAAcA,EACnBvgJ,KAAKk1C,SACDuqG,EAASvqG,UAAYwqG,EAAUxqG,UAAY9vC,EAAS8vC,UAAY,GACpEl1C,KAAK0gJ,eAAiBjB,EAASiB,gBAC3BhB,EAAUgB,gBACVt7I,EAASs7I,gBAAkB,CAAEzxH,MAAO,EAAG1K,IAAK,IAChDvkB,KAAK2gJ,cACDlB,EAASkB,eACTjB,EAAUiB,eACVv7I,EAASu7I,eACT,GACJ3gJ,KAAK4gJ,YACDnB,EAASmB,aACTlB,EAAUkB,aACVx7I,EAASw7I,aACT,GACJ5gJ,KAAK68D,KAAO4iF,EAAS5iF,MAAQ6iF,EAAU7iF,MAAQz3D,EAASy3D,MAAQ,GAChE78D,KAAKqvB,QACDowH,EAASpwH,SAAWqwH,EAAUrwH,SAAWjqB,EAASiqB,SAAW,GACjErvB,KAAK6gJ,aACDpB,EAASoB,cACTnB,EAAUmB,cACVz7I,EAASy7I,cACT,GACJ7gJ,KAAK8gJ,gBACDrB,EAASqB,iBACTpB,EAAUoB,iBACV17I,EAAS07I,iBACT,KACJ9gJ,KAAK+gJ,yBACDtB,EAASsB,0BACTrB,EAAUqB,0BACV37I,EAAS27I,2BACT,KACJ/gJ,KAAKm5D,SACDsmF,EAAStmF,UACTumF,EAAUvmF,UACV/zD,EAAS+zD,UACT,KACR,CAEAr5D,SAAA83G,EAAA,EAAAr2G,IAAA,OAAAC,MAIO,SAAK8R,GACR,OAAAyP,EAAY/iB,KAAKggJ,OAAO1sI,IAAS,GACrC,GACA,CAAA/R,IAAA,aAAAgE,IAGA,WAAqB,IAAAR,EAAA/E,KACjB,OAAOypB,OAAOC,KAAK1pB,KAAKggJ,QAAQnkI,OAAO,SAACoW,GAAC,OAAKA,KAAKltB,EAAKi7I,MAAM,EAClE,GACA,CAAAz+I,IAAA,UAAAgE,IACA,WACI,OAAAwpB,EAAA,GAAa/uB,KAAK2wB,UAAY,GAClC,GACA,CAAApvB,IAAA,UAAAgE,IACA,WACI,OAAAwpB,EAAA,GAAa/uB,KAAKkgJ,UAAY,GAClC,GACA,CAAA3+I,IAAA,gBAAAgE,IACA,WACI,OAAAwpB,EAAA,GAAa/uB,KAAKmgJ,gBAAkB,GACxC,GAEA,CAAA5+I,IAAA,mBAAAC,MAIO,SAAiBwzB,GACpB,OAAQh1B,KAAKugJ,aAAe,IAAI1kI,OAAO,SAACoW,GAAC,OAAKA,EAAE+C,WAAaA,CAAQ,EACzE,KAAC4iF,CAAA,CA3LgB,+ICzDrB,IAAIopC,EAAY,EACZC,EAAY,EA+EhB,SAAgBC,EAAkB9tI,EAAamgC,GAC3C,OAAKngC,IACDA,EAAE,YAAApP,OAAei9I,MAEd,CACHjsH,SAAU5hB,EACV+tI,WAAU,SAAAn9I,OAAWi9I,GACrB1tG,UAER,CAjFA5zC,uBAAA,SAAgByhJ,EAAqBhuI,GAC5BA,IACDA,EAAE,YAAApP,OAAeg9I,MAErB,IAIwB/pH,EAJlBxU,EAAS6e,MAAM,IAChB+gB,KAAK,GACL1mC,IAAI,SAACsW,GAAC,OAAKivH,GAAmB,GAC7Bl4I,EAAgB,GAAGkuB,EAAAC,EACP1U,GAAM,IAAxB,IAAAyU,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAA0B,KAAfu3B,EAAG73B,EAAAz1B,MACJo7B,EAAQuM,KAAKC,MAAsB,EAAhBD,KAAKgpC,SAAe,GAC7CnpE,EAAS8lD,EAAI95B,UAAY,GACzB,QAAS/C,EAAI,EAAGA,EAAI2K,EAAO3K,IACvBjpB,EAAS8lD,EAAI95B,UAAS,aAAAhxB,OAAciuB,EAAI,IAAI,WAAAjuB,OAAciuB,EAAI,GAErE,OAAAjI,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACD,MAAO,CACHpkB,KACAiuB,QAASjuB,EACTwsI,OAAQt+G,MAAM,IACT+gB,KAAK,GACL1mC,IAAI,SAAC1Y,EAAGivC,GACL,IAAM5+B,EAAI,YAAAtP,OAAekuC,EAAM,GAC/B,MAAO,CACH2tG,SAAUvsI,EAAK1M,MAAM,KAAK8N,KAAK,KAAKke,cACpCktH,WAAYxsI,EAEpB,GACJysI,WAAYz+G,MAAM,IACb+gB,KAAK,GACL1mC,IAAI,SAAC1Y,EAAGivC,GACL,IAAM5+B,EAAI,YAAAtP,OAAekuC,EAAM,GAC/B,MAAO,CACH2tG,SAAUvsI,EAAK1M,MAAM,KAAK8N,KAAK,KAAKke,cACpCktH,WAAYxsI,EAEpB,GACJmP,SACA6wG,MAAO,CACH,eAAgBhyF,MAAM,IACjB+gB,KAAK,GACL1mC,IAAI,SAACsW,GAAC,MAAM,CAAE3e,KAAM,OAAQ,IAErCktI,eAAgBx3I,EAChB5D,SAAU,CACNylI,KAAM,CACFwW,OAAQ,CACJC,QAAQ,EACR3uF,KAAK,KAIjB0tF,oBAAqB,CACjB,CACIjtI,GAAI,YACJE,KAAM,YACNE,YAAa,uBAEjB,CACIJ,GAAI,WACJE,KAAM,WACNE,YAAa,uBAI7B,EAQA7T,oBAAAuhJ,gJCjFA,IAAA7gJ,EAAAxC,EAAA,OAEM0jJ,EAAc,CAAC,OAAQ,UAAW,UAExC5hJ,OAAiB,WAsBb,SAAAwnH,IAAoC,IAAAq6B,EAAApgJ,EAAApB,KAAxB0C,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsB,GAU9B,QAAWtD,KAVqBxB,EAAAC,KAAAmnH,GAwBpBnnH,KAAAymE,OAAS,kBAAMrlE,EAAKsnC,QAAQ,EAvBxC1oC,KAAKoT,GAAK1Q,EAAK0Q,IAAM,GACrBpT,KAAKuT,OAAS7Q,EAAK6Q,QAAU7Q,EAAK0Q,IAAM,GACxCpT,KAAKsT,KAAO5Q,EAAK4Q,MAAQ,GACzBtT,KAAKmuC,SAAwB,QAAhBqzG,EAAG9+I,EAAKyrC,gBAAQ,IAAAqzG,KAC7BxhJ,KAAK2T,KAAOjR,EAAKiR,MAAQ,IAAItT,EAAAohJ,UAC7BzhJ,KAAK+gC,OAASr+B,EAAKq+B,QAAU,GAC7B/gC,KAAKmlH,QAAUziH,EAAKyiH,SAAW,GAC/BnlH,KAAKgJ,SAAWtG,EAAKsG,UAAY,GACjChJ,KAAK4qB,OAASloB,EAAKkoB,QAAU,GACXloB,EACRnB,KAAOvB,OAAOA,KAAKuB,GAAOmB,EAAKnB,GAE7C,CAACzB,SAAAqnH,EAAA,EAAA5lH,IAAA,SAAAC,MAEM,WAEH,QADMkB,EAAIqsB,EAAA,GAAQ/uB,MAClBihC,EAAA,EAAAygH,EAAkBH,EAAWtgH,EAAAygH,EAAAz8I,OAAAg8B,WAClBv+B,EADGg/I,EAAAzgH,IAGd,SAAA5gC,EAAAwiC,aAAYngC,EAAM,MAACwC,EAAW,KAAM,KAC7BxC,CACX,KAACykH,CAAA,CA5CY,uICFjBxnH,gBAA0BG,EAwBtB,SAAA63G,IAA8C,IAAAzxG,EAAlC+0C,EAAAp2C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgC,GAAE9E,EAAAC,KAAA23G,GAN9B33G,KAAAoF,SAAgC,GAO5CpF,KAAKoT,GAAK6nC,EAAM7nC,IAAM,GACtBpT,KAAK4T,UAAYqnC,EAAMrnC,WAAa,GACpC5T,KAAKsT,KAAO2nC,EAAM3nC,MAAQ,GAC1BtT,KAAKsV,aAAe2lC,EAAM3lC,cAAgB,GAC1CtV,KAAKuT,OAAS0nC,EAAM1nC,QAAU,GAC9BvT,KAAK2f,SAAWs7B,EAAMt7B,UAAY,EAClC3f,KAAK2jG,UAAY1oD,EAAM0oD,WAAa,GACpC3jG,KAAK+uD,KAAO9T,EAAM8T,MAAQ,GAC1B/uD,KAAK4qB,OAASqwB,EAAMrwB,QAAU,GAC9B,IAAM6iD,EAAQztE,KAAKsV,aAAa1O,MAAM,KACtC5G,KAAKmyI,QAGyB,QAF1BjsI,EAACunE,EAAMxoE,QAAU,EACXwoE,EAAMA,EAAMxoE,OAAS,GACrBjF,KAAKsV,aAAa,UAAE,IAAApP,OAAA,EAF1BA,EAGG6rE,gBAAiB,EAC5B,sIC1CJ,IAAA7tB,EAAArmD,EAAA,OAMA8B,eAAyB,WAkBrB,SAAAgiJ,IAAwD,IAA5ClC,EAAA56I,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0C,GAAE9E,EAAAC,KAAA2hJ,GACpD3hJ,KAAKoT,GAAKqsI,EAASrsI,IAAM,GACzBpT,KAAKsT,KAAOmsI,EAASnsI,MAAQ,GAC7BtT,KAAKwT,YAAcisI,EAASjsI,aAAe,GAC3CxT,KAAK+uD,KAAO0wF,EAAS1wF,MAAQ,GAC7B/uD,KAAK48B,MAAQ6iH,EAAS7iH,OAAS,EAC/B58B,KAAK2f,SAAW8/H,EAAS9/H,UAAY,EACrC3f,KAAK20I,SAAW8K,EAAS9K,UAAY,GACrC30I,KAAKgB,UAAYy+I,EAASr6I,UAAY,EAC1C,CAEAtF,SAAA6hJ,EAAA,EAAApgJ,IAAA,UAAAC,MAIO,SAAQD,GACX,IAAMmoB,EAAOnoB,EAAIqF,MAAM,KAEvB,OADMpF,EAAQ0iD,EAAAivB,iBAAgBzpD,EAAM1pB,KAAKgB,UAE7C,KAAC2gJ,CAAA,CArCoB,+PCLzB9jJ,EAAA,WACAwC,EAAAxC,EAAA,OAQA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAEAomD,EAAApmD,EAAA,OAIA04G,GAHA14G,EAAA,OAGAA,EAAA,OACA24G,EAAA34G,EAAA,OACA+jJ,EAAA/jJ,EAAA,OACAgkJ,EAAAhkJ,EAAA,OACAyC,EAAAzC,EAAA,wCAEA8B,sBAGgC,eAAAC,EAAnB8I,EAAmB,WAmK5B,SAAAA,EAAoByH,EAAmCC,GAAe,IAAAhP,EAAApB,KAAAD,EAAAC,KAAA0I,GAAlD1I,KAAAmQ,WAAmCnQ,KAAAoQ,UAjKpCpQ,KAAAmsE,aAAe,IAAIxyD,EAAAqB,iBAAyB,GAE/Chb,KAAA8C,YAAc9C,KAAKmsE,aAAahxD,eAC/Bnb,KAAA8hJ,SAAW,IAAInoI,EAAAqB,gBAA0B,IACzChb,KAAA+hJ,eAAiB,IAAIpoI,EAAAqB,gBAAwB,MAC7Chb,KAAAgiJ,WAAa,IAAIroI,EAAAqB,gBAA4B,IAC7Chb,KAAAiiJ,iBAAmB,IAAItoI,EAAAqB,gBAA0B,MACjDhb,KAAAkiJ,QAAU,IAAIvoI,EAAAqB,gBAAiC,IAC/Chb,KAAAmiJ,aAAyB,GAE1BniJ,KAAAoiJ,QAAO,GAAAp+I,QACnBhE,KAAKmQ,SAAS0iE,UAAY,aAC5BjgD,cAAa,QAEC5yB,KAAA0uG,YAAc1uG,KAAK8hJ,SAAS3mI,eAE5Bnb,KAAAmY,cAAgBnY,KAAKgiJ,WAAW7mI,eAEhCnb,KAAAm3H,WAAan3H,KAAKkiJ,QAAQ/mI,eAE1Bnb,KAAA4uG,cAAgB5uG,KAAK+hJ,eAAe5mI,eAEpCnb,KAAAkY,gBAAkBlY,KAAKiiJ,iBAAiB9mI,eAExCnb,KAAAu/C,oBAAmB5lC,EAAA+I,eAAc,CAC7C1iB,KAAKgiJ,WACLhiJ,KAAK+hJ,iBACNh/I,QACC3C,EAAAub,KAAI,SAAAzV,GAAA,IAAKyoG,EAAL/rF,EAAA1c,EAAA,GAAW,UACXyoG,EAASvtG,EAAKihJ,mBAAmB1zC,GAAUvtG,EAAK2U,SAAS,IAIjD/V,KAAAw/C,iBAAgB7lC,EAAA+I,eAAc,CAC1C1iB,KAAKkiJ,QACLliJ,KAAKiiJ,mBACNl/I,QACC3C,EAAAub,KAAI,SAAAkH,GAAA,IAAKhK,EAAL+J,EAAAC,EAAA,GAAQ,UAAOhK,EAAMzX,EAAK4hB,kBAAkBnK,GAAO,EAAE,IAAC,EAC1DzY,EAAAmyB,gBAKIvyB,KAAAgB,UAAmC,GAEnChB,KAAAsiJ,iBAAwD,GAExDtiJ,KAAAuiJ,mBAA0D,MAmH9DliJ,EAAA0sF,eACKhqF,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACnB6P,UAAU,kBAAM25D,WAAW,kBAAMrrE,EAAKs9E,MAAM,EAAE,IAAK,GACxD1+E,KAAKkY,gBAAgBpF,UAAU,SAAC+F,GACxBA,IACAzX,EAAK+O,SAASimI,UAAS,GAAApyI,OAAA+e,EAChB3hB,EAAKJ,WAAS,CACjBI,EAAKohJ,iBAAiB3pI,EAAIzF,MAGtC,EACJ,CAEAtT,SAAA4I,EAAA,EAAAnH,IAAA,WAAAgE,eA5HI,OAAOvF,KAAKgB,SAChB,GAEA,CAAAO,IAAA,kBAAAgE,IACA,WACI,OAAOvF,KAAKsiJ,gBAChB,GAEA,CAAA/gJ,IAAA,oBAAAgE,IACA,WACI,OAAOvF,KAAKuiJ,kBAChB,GAEA,CAAAhhJ,IAAA,iBAAAC,MACO,WAA8B,IAAf4R,EAAAvO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,GACzB8pG,EAAS3uG,KAAK+hJ,eAAenpI,WACnC,OAAKxF,GAAMu7F,IAAQv7F,EAAKu7F,GAAQv7F,IACzBpT,KAAKsiJ,kBAAmBtiJ,KAAKsiJ,iBAAiBlvI,IAAY,EACrE,GAEA,CAAA7R,IAAA,mBAAAC,MACO,WAAoC,IACTihJ,EADVC,EAAA79I,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,GAIrC,OAHK69I,GAAU1iJ,KAAK6V,WAChB6sI,EAAsB,QAAhBD,EAAGziJ,KAAK6V,gBAAQ,IAAA4sI,OAAA,EAAbA,EAAervI,IAErBpT,KAAKuiJ,oBACNviJ,KAAKuiJ,mBAAmBG,IACxB,EACV,GAEA,CAAAnhJ,IAAA,eAAAgE,IACA,WACI,OAAOvF,KAAK2iJ,aAChB,GAEA,CAAAphJ,IAAA,UAAAgE,IACA,WACI,OAAOvF,KAAK8hJ,SAASlpI,UACzB,GAEA,CAAArX,IAAA,SAAAgE,IACA,WACI,OAAOvF,KAAK+hJ,eAAenpI,UAC/B,EAAC2C,IACD,SAAkBO,GACd9b,KAAKuuG,UAAUzyF,EACnB,GAAC,CAAAva,IAAA,YAAAC,OAAAohJ,EAAAnhJ,EAAAC,IAAAC,KAEM,SAAAC,EAAgBka,GAAY,IAAA+mI,EAAA,OAAAnhJ,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC1B0Z,EAAI,CAAA5Z,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBACT,OAAAvD,KAAK+hJ,eAAe3/I,KAAK0Z,GAAM5Z,EAAAE,KAAA,EACzBpC,KAAK8iJ,eAAehnI,GAAK,OAC/B9b,KAAK+iJ,4BAEY,QAAbF,EAAA7iJ,KAAK6V,gBAAQ,IAAAgtI,OAAA,EAAbA,EAAejvI,aAAckI,EAAK1I,IAClCpT,KAAKqiJ,mBAAmBvmI,GAAM7W,OAE9BjF,KAAK6V,SAAW7V,KAAKqiJ,mBAAmBvmI,GAAM,GAC3C9b,KAAKgjJ,0BAA0B,wBAAA9gJ,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACzC,SAAAuuG,EAAAvxF,GAAA,OAAA4lI,EAAAh+I,MAAA5E,KAAA6E,UAAA,IAED,CAAAtD,IAAA,YAAAgE,IACA,WACI,OAAOvF,KAAKgiJ,WAAWppI,YAAc,EACzC,GAEA,CAAArX,IAAA,WAAAgE,IACA,WACI,OAAOvF,KAAKiiJ,iBAAiBrpI,UACjC,EAAC2C,IACD,SAAoB1C,GAAa,IAAAoqI,EAAAl+I,EAAA/E,KACxB6Y,IACL7Y,KAAKiiJ,iBAAiB7/I,KAAKyW,GAC3B7Y,KAAKkjJ,iBAAiBrqI,GAAKomD,KAAK,kBAAMl6D,EAAKi+I,yBAAyB,GAChEhjJ,KAAKyuG,QAAQxpG,SAAqB,QAAXg+I,EAAAjjJ,KAAK2uG,cAAM,IAAAs0C,OAAA,EAAXA,EAAa7vI,MAAOyF,EAAIjF,YAC/C5T,KAAK2uG,OAAS3uG,KAAKyuG,QAAQr/E,KACvB,SAACnsB,GAAC,OAAKA,EAAEmQ,KAAOrO,EAAK8Q,SAASjC,SAAS,IAGnD,GAAC,CAAArS,IAAA,WAAAgE,IAED,WACI,OAAO4vC,KAAKC,iBAAiBC,kBAAkBC,QACnD,GAAC,CAAA/zC,IAAA,gBAAAgE,IAED,WAAwB,IAAA49I,EACpB,OACInjJ,KAAKmQ,SAAS5K,IAAI,kBACL,QADoB49I,EACjCnjJ,KAAK6V,gBAAQ,IAAAstI,OAAA,EAAbA,EAAehqF,WACf,KAER,GAEA,CAAA53D,IAAA,UAAAC,MACO,SAAQ8R,GAAY,IAAA8vI,EAAAC,EACvB,OACiB,QAAbD,EAAApjJ,KAAK6V,gBAAQ,IAAAutI,OAAA,EAAbA,EAAezO,SAASrhI,MAA2B,QAAtB+vI,EAAIrjJ,KAAK2iJ,qBAAa,IAAAU,OAAA,EAAlBA,EAAoB1O,SAASrhI,GAEtE,GAEA,CAAA/R,IAAA,OAAAC,MACO,SAAK4R,GACR,OAAOpT,KAAK+V,UAAUqZ,KAAK,SAAC6C,GAAC,OAAKA,EAAE7e,KAAOA,CAAE,EACjD,GAEA,CAAA7R,IAAA,SAAAgE,IACA,WACI,OAAOvF,KAAKkiJ,QAAQtpI,UACxB,GAAC,CAAArX,IAAA,cAAAC,MAoBM,SAAYgoB,GACf,OAAOxpB,KAAKyiB,OAAO2M,KAAK,SAAC0/B,GAAG,OAAKtlC,GAAS3jB,SAASipD,EAAI17C,GAAG,EAC9D,GAEA,CAAA7R,IAAA,oBAAAC,MAIO,WAA+C,IAA7BqX,EAAAhU,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB7E,KAAK6V,SAC1C,OAAO7V,KAAKyiB,OAAO5G,OACf,SAACizC,GAAG,OAAKA,EAAIl7C,WAAak7C,EAAIl7C,YAAciF,GAAKzF,EAAE,EAE3D,GAEA,CAAA7R,IAAA,qBAAAC,MAIO,WAA+C,IAA5BmtG,EAAA9pG,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB7E,KAAK2uG,OAC5C,OAAO3uG,KAAK+V,UAAU8F,OAAO,SAAChD,GAAG,OAAKA,EAAIjF,YAAc+6F,GAAQv7F,EAAE,EACtE,GAAC,CAAA7R,IAAA,UAAAC,MAEM,SAAQmS,GACX,GAAIA,EAAKo7C,KAAKlpD,SAAS,UAAW,CAC9B,IAAM8oG,EAAS,IAAIkzC,EAAAyB,OAAO3vI,GACpB86F,EAAUzuG,KAAK8hJ,SAChBlpI,WACAiD,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAOu7F,EAAOv7F,EAAE,GACrCq7F,EAAQr4E,KAAKu4E,GACb3uG,KAAK8hJ,SAAS1/I,KAAKqsG,WACZ96F,EAAKo7C,KAAKlpD,SAAS,YAAa,CACvC,IAAMgT,EAAM,IAAI09F,EAAAqB,SAASjkG,GACnBoC,EAAY/V,KAAKgiJ,WAClBppI,WACAiD,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAOyF,EAAIzF,EAAE,GAClC2C,EAAUqgB,KAAKvd,GACf7Y,KAAKgiJ,WAAW5/I,KAAK2T,WACdpC,EAAKo7C,KAAKlpD,SAAS,SAAU,CACpC,IAAMipD,EAAM,IAAI0nD,EAAAmB,cAAchkG,GACxB8O,EAASziB,KAAKkiJ,QACftpI,WACAiD,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAO07C,EAAI17C,EAAE,GAClCqP,EAAO2T,KAAK04B,GACZ9uD,KAAKkiJ,QAAQ9/I,KAAKqgB,QAElBpgB,QAAQ63E,KACJ,wDACAvmE,EAAKP,GAGjB,GAAC,CAAA7R,IAAA,aAAAC,MAEM,SAAWmS,GACd,GAAIA,EAAKo7C,KAAKlpD,SAAS,UAAW,CAC9B,IAAM4oG,EAAUzuG,KAAK8hJ,SAChBlpI,WACAiD,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAOO,EAAKP,EAAE,GACnCpT,KAAK8hJ,SAAS1/I,KAAKqsG,WACZ96F,EAAKo7C,KAAKlpD,SAAS,YAAa,CACvC,IAAMkQ,EAAY/V,KAAKgiJ,WAElBppI,WACAiD,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAOO,EAAKP,EAAE,GACnCpT,KAAKgiJ,WAAW5/I,KAAK2T,WACdpC,EAAKo7C,KAAKlpD,SAAS,SAAU,CACpC,IAAM4c,EAASziB,KAAKkiJ,QACftpI,WACAiD,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAOO,EAAKP,EAAE,GACnCpT,KAAKkiJ,QAAQ9/I,KAAKqgB,QAElBpgB,QAAQ63E,KACJ,2DACAvmE,EAAKP,GAGjB,GAAC,CAAA7R,IAAA,OAAAC,MAAA,eAAAs8E,EAAAr8E,EAEO,eAAA0E,EAAAnG,KAAWgmH,EAAAnhH,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EAAC,OAAAnD,IAAAC,KAAA,SAAAwD,IAAA,OAAAzD,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAChC+D,SAAKgmE,aAAa/pE,MAAK,GAAOiD,EAAAjD,KAAA,EACxB+D,EAAKojF,OAAMnlF,MAAO,SAAC4lB,GACrB,QAAAi6B,EAAAzvC,aAAY,gDACZi4D,WAAW,kBAAMtmE,EAAKu4E,KAAKsnC,EAAM,EAAE78E,KAAK0Z,IAAI,IAAQ,MAAQmjE,IACtDh8F,CACV,GAAE,OACF7jB,EAAKgmE,aAAa/pE,MAAK,GACnBG,OAAOwwE,QACFxwE,OAAO08E,cAAa18E,OAAO08E,YAAc,IAC9C18E,OAAO08E,YAAYskE,KAAOp9I,GAC7B,wBAAAd,EAAAX,OAAA,EAAAS,EAAA,EAX+BzD,EAW/B,GACJ,gBAAAg9E,IAAA,OAAAZ,EAAAl5E,MAAA5E,KAAA6E,UAAA,EAdA,IAgBD,CAAAtD,IAAA,OAAAC,MAAA,eAAA8nF,EAAA7nF,EAAAC,IAAAC,KAGQ,SAAAsE,IAAA,IAAAu9I,EAAAtsH,EAAAD,EAAA03E,EAAA80C,EAAA,OAAA/hJ,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,EACEpC,KAAK0jJ,mBAAkB,OAAAt9I,SAAAhE,KAAA,EACvBpC,KAAK2jJ,cAAa,UACnB3jJ,KAAK8hJ,SAASlpI,WAAW3T,OAAM,CAAAmB,EAAAhE,KAAA,SAAAgE,SAAAjC,GAChCnE,KAAKgiJ,WAAU57I,EAAAhE,KAAA,EAAYpC,KAAK4jJ,gBAAe,OAAAx9I,EAAA0rC,GAAA1rC,EAAAtC,KAAAsC,EAAAjC,GAA/B/B,KAAIf,KAAA+E,EAAAjC,GAAAiC,EAAA0rC,IAAA1rC,EAAAhE,KAAA,iBAAA80B,EAAAC,EAECn3B,KAAK8hJ,SAASlpI,YAAUxS,EAAAjE,KAAA,GAAA+0B,EAAAlO,IAAA,YAAAiO,EAAAC,EAAAI,KAAAC,KAAA,CAAAnxB,EAAAhE,KAAA,SAAlCusG,SAAM13E,EAAAz1B,MAAA4E,EAAAhE,KAAA,GACMpC,KAAK4jJ,cAAcj1C,EAAOv7F,IAAG,QAAtC,KAAJqwI,EAAIr9I,EAAAtC,MACDmB,OAAM,CAAAmB,EAAAhE,KAAA,SACX,OAAApC,KAAKgiJ,WAAW5/I,KAAKqhJ,GAAMr9I,EAAA7C,OAAA,oBAAA6C,EAAAhE,KAAA,iBAAAgE,EAAAhE,KAAA,iBAAAgE,EAAAjE,KAAA,GAAAiE,EAAA4rC,GAAA5rC,EAAAhC,MAAA,IAAA8yB,EAAA1S,EAAApe,EAAA4rC,IAAA,QAAA5rC,SAAAjE,KAAA,GAAA+0B,EAAAM,IAAApxB,EAAAihD,OAAA,YAAAjhD,SAAAhE,KAAA,GAKjCpC,KAAK6jJ,eAAc,QACzB,OAA+B,QAA3BL,EAACxjJ,KAAKgiJ,WAAWppI,kBAAU,IAAA4qI,GAA1BA,EAA4Bv+I,YAC7B3E,EAAAsC,KAAI,MAAO,qCACX5C,KAAKoQ,QAAQK,SAAS,CAAC,oBAC1BrK,EAAAhE,KAAA,GACKpC,KAAK8jJ,aAAY,yBAAA19I,EAAA1B,OAAA,EAAAuB,EAAAjG,KAAA,oBAC1B,gBAAAupF,IAAA,OAAAD,EAAA1kF,MAAA5E,KAAA6E,UAAA,EAvBD,IAyBA,CAAAtD,IAAA,mBAAAC,MAAA,eAAAuiJ,EAAAtiJ,EAAAC,IAAAC,KAGO,SAAAmF,IAAA,IAAAk9I,EAAAC,EAAAvgJ,EAAAivD,EAAAgiF,EAAA,OAAAjzI,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAAA4E,SAAA5E,KAAA,KACoB/B,EAAAy6H,YAAW,CAAE/rE,KAAM,QACrChsD,QAAK3C,EAAAub,KAAI,SAACsW,GAAC,OAAKA,EAAEvvB,IAAI,IACtBQ,YAAW,OAFF,KAAR8gJ,EAAQh9I,EAAAlD,MAGDmB,OAAM,CAAA+B,EAAA5E,KAAA,SACTsB,YAAOrD,EAAA8rF,aACPx5B,EACFqxF,EAAS50H,KACL,SAACrc,GAAI,IAAAmxI,EAAA,SAAK7jJ,EAAA2H,WAAY+K,EAAKK,MAAW,MAAJ1P,GAAY,QAARwgJ,EAAJxgJ,EAAMykE,cAAM,IAAA+7E,OAAA,EAAZA,EAAcC,SAAQ,IACvDH,EAAS,GAAEh9I,EAAA5E,KAAA,KAEV/B,EAAAs+B,cAAag0B,EAAIv/C,GAAI,YAAYlQ,YAAW,UAAA8D,EAAA8qC,GAAAmyG,EAAAj9I,EAAAlD,KAAAkD,EAAA7C,GAAA,OAAA6C,EAAA8qC,GAAA9qC,EAAA7C,GAAA,CAAA6C,EAAA5E,KAAA,SAAA4E,EAAA7C,QAAA,IAAA8/I,EAAA,YAAAj9I,EAAA7C,GAAA,CAAA6C,EAAA5E,KAAA,SAAA4E,EAAAgrC,QAAA,EAAAhrC,EAAA5E,KAAA,iBAAA4E,EAAAgrC,GADhBiyG,EAEnChtI,QAAO,QAFJ09H,EAAQ3tI,EAAAgrC,GAGdhyC,KAAK2iJ,cAAgB,IAAIf,EAAAD,aAAY5yH,IAAA,GAAM4jC,GAAG,IAAEgiF,cAAY3tI,EAAA5E,KAAA,kBAE5D,EAAA9B,EAAAsC,KAAI,MAAO,+BACX5C,KAAKoQ,QAAQK,SAAS,CAAC,mBAAmB,yBAAAzJ,EAAAtC,OAAA,EAAAoC,EAAA9G,KAAA,IAEjD,gBAAA0jJ,IAAA,OAAAK,EAAAn/I,MAAA5E,KAAA6E,UAAA,EArBD,IAuBA,CAAAtD,IAAA,cAAAC,MAAA,eAAA4iJ,EAAA3iJ,EAAAC,IAAAC,KAGO,SAAA+wC,IAAA,IAAA2xG,EAAA,OAAA3iJ,IAAAO,KAAA,SAAA6wC,GAAA,cAAAA,EAAA3wC,KAAA2wC,EAAA1wC,MAAA,OAAA0wC,SAAA1wC,KAAA,KACgB/B,EAAAy6H,YAAW,CAC1B/rE,KAAM,SACNn7C,WAA6B,QAAlBywI,EAAArkJ,KAAK2iJ,qBAAa,IAAA0B,OAAA,EAAlBA,EAAoBjxI,KAAM,GACrC4yB,MAAO,MAENjjC,QACG3C,EAAAub,KAAI,SAACsW,GAAC,OAAKA,EAAEvvB,KAAKiZ,IAAI,SAAC1Y,GAAC,OAAK,IAAI4+I,EAAAyB,OAAOrgJ,EAAE,EAAC,MAC3C7C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,GAAG,IAE1BhX,YAAW,OAChBlD,KAAK8hJ,SAAS1/I,KAVJ0wC,EAAAhvC,MAUe,wBAAAgvC,EAAApuC,OAAA,EAAAguC,EAAA1yC,KAAA,IAC5B,gBAAA2jJ,IAAA,OAAAS,EAAAx/I,MAAA5E,KAAA6E,UAAA,EAfD,IAeC,CAAAtD,IAAA,iBAAAC,MAAA,eAAA8iJ,EAAA7iJ,EAAAC,IAAAC,KAEM,SAAA2xC,EAAqBq7D,GAAc,IAAA41C,EAAAn/I,EAAAuvI,EAAA5+H,EAAA,OAAArU,IAAAO,KAAA,SAAAyxC,GAAA,cAAAA,EAAAvxC,KAAAuxC,EAAAtxC,MAAA,WAClCpC,KAAKmiJ,aAAaxzC,EAAOv7F,IAAG,CAAAsgC,EAAAtxC,KAAA,eAAAsxC,EAAAnwC,OAAA,iBAAAmwC,SAAAtxC,KAAA,EACmBwB,QAAQ+lB,IAAI,IAC3DtpB,EAAAs+B,cAAagwE,EAAOv7F,GAAIpT,KAAKoiJ,SACxBr/I,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,GAAGgU,OAAO,IAC1B/T,aAAS,EACd7C,EAAAs+B,cAAagwE,EAAOv7F,GAAI,YACnBrQ,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,GAAGgU,OAAO,IAC1B/T,YACLlD,KAAK4jJ,cAAcj1C,EAAOv7F,MAC5B,OAAAmxI,EAAA3hI,EAAA8wB,EAAA5vC,KAAA,GARKsB,EAAQm/I,EAAA,GAAE5P,EAAQ4P,EAAA,GAAExuI,EAASwuI,EAAA,GASpCvkJ,KAAKgiJ,WAAW5/I,QACZ9B,EAAA6sC,QAAM,GAAAnpC,OAAA+e,EAAK/iB,KAAKgiJ,WAAWppI,YAAUmK,EAAKhN,IAAY,OAE1D/V,KAAKmiJ,aAAaxzC,EAAOv7F,KAAM,EAC9Bu7F,EAAegmC,SAAWA,EAC3B30I,KAAKsiJ,iBAAiB3zC,EAAOv7F,IAAMhO,EAAS,yBAAAsuC,EAAAhvC,OAAA,EAAA4uC,EAAAtzC,KAAA,IAC/C,gBAAA8iJ,EAAAxsH,GAAA,OAAAguH,EAAA1/I,MAAA5E,KAAA6E,UAAA,EAnBA,IAqBD,CAAAtD,IAAA,gBAAAC,MAAA,eAAAgjJ,EAAA/iJ,EAGO,eAAAgjJ,EACH7wI,EAAA/O,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsC,QAAtC4/I,EAAoBzkJ,KAAK2iJ,qBAAa,IAAA8B,OAAA,EAAlBA,EAAoBrxI,GAAE,OAAA1R,IAAAC,KAAA,SAAAmmE,IAAA,OAAApmE,IAAAO,KAAA,SAAAwxC,GAAA,cAAAA,EAAAtxC,KAAAsxC,EAAArxC,MAAA,OAAAqxC,SAAArxC,KAAA,KAEd/B,EAAAy6H,YAAW,CACnC/rE,KAAM,WACNn7C,YACAoyB,MAAO,MAENjjC,QAAK3C,EAAAub,KAAI,SAACsW,GAAC,OAAKA,EAAEvvB,KAAKiZ,IAAI,SAAC1Y,GAAC,OAAK,IAAIszG,EAAAqB,SAAS30G,EAAE,EAAC,IAClDC,YAAW,OANViV,OAAas7B,EAAAlwC,OAAA,SAAAkwC,EAAA3vC,MAOC,wBAAA2vC,EAAA/uC,OAAA,EAAAojE,EAAA,EATsBpmE,EAStB,GACvB,gBAAAkiJ,IAAA,OAAAY,EAAA5/I,MAAA5E,KAAA6E,UAAA,EAdD,IAcC,CAAAtD,IAAA,mBAAAC,MAAA,eAAAkjJ,EAAAjjJ,EAAAC,IAAAC,KAEM,SAAAumE,EAAuBrvD,GAAa,IAAA8rI,EAAAhQ,EAAAvnG,EAAA,OAAA1rC,IAAAO,KAAA,SAAAomE,GAAA,cAAAA,EAAAlmE,KAAAkmE,EAAAjmE,MAAA,UAClCyW,IAAO7Y,KAAKmiJ,aAAatpI,EAAIzF,IAAG,CAAAi1D,EAAAjmE,KAAA,eAAAimE,EAAA9kE,OAAA,iBAAA8kE,SAAAjmE,KAAA,EACkBwB,QAAQ+lB,IAAI,IAC/DtpB,EAAAs+B,cAAa9lB,EAAIzF,GAAIpT,KAAKoiJ,SACrBr/I,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,GAAGgU,OAAO,IAC1B/T,aAAS,EACd7C,EAAAs+B,cAAa9lB,EAAIzF,GAAI,YAChBrQ,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,GAAGgU,OAAO,IAC1B/T,aAAS,EACd7C,EAAAs+B,cAAa9lB,EAAIzF,GAAI,iBAChBrQ,QAAK3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAKA,GAAGgU,OAAO,IAC1B/T,cACP,OAAAyhJ,EAAA/hI,EAAAylD,EAAAvkE,KAAA,GAVe6wI,EAAQgQ,EAAA,GAAEv3G,EAAau3G,EAAA,GAWxC3kJ,KAAKuiJ,mBAAmB1pI,EAAIzF,IAXbuxI,EAAA,IAW+B,GAC7C9rI,EAAY87H,SAAWA,EACvB97H,EAAYu0B,cAAgBA,EAC7BptC,KAAKmiJ,aAAatpI,EAAIzF,KAAM,EAAK,yBAAAi1D,EAAA3jE,OAAA,EAAAwjE,EAAAloE,KAAA,IACpC,gBAAAkjJ,EAAA38G,GAAA,OAAAm+G,EAAA9/I,MAAA5E,KAAA6E,UAAA,EAnBA,IAqBD,CAAAtD,IAAA,aAAAC,MAAA,eAAAojJ,EAAAnjJ,EAAAC,IAAAC,KAGO,SAAAknE,IAAA,IAAAsuD,EAAA10G,EAAA,OAAA/gB,IAAAO,KAAA,SAAA8mE,GAAA,cAAAA,EAAA5mE,KAAA4mE,EAAA3mE,MAAA,OAAA2mE,SAAA3mE,KAAA,KACsB/B,EAAAy6H,YAAW,CAChC/rE,KAAM,QACN/oB,MAAO,OAENjjC,QAAK3C,EAAAub,KAAI,SAACsW,GAAC,OAAKA,EAAEvvB,IAAI,IACtBQ,YAAW,OAED,OAPTi0H,EAAUpuD,EAAAjlE,OAOXqzH,EAAYlyH,QACbjF,KAAKoQ,QAAQK,SAAS,CAAC,oBAErBgS,EAAS00G,EAAWx7G,IAAI,SAACmzC,GAAG,OAAK,IAAI0nD,EAAAmB,cAAc7oD,EAAI,IACtDjyC,KAAK,SAACgW,EAAGlU,GAAC,OAAMkU,EAAEvf,MAAQ,IAAIgrB,cAAc3f,EAAErL,MAAQ,GAAG,GAChEtT,KAAKkiJ,QAAQ9/I,KAAKqgB,GAAQ,wBAAAsmD,EAAArkE,OAAA,EAAAmkE,EAAA7oE,KAAA,IAC7B,gBAAA8jJ,IAAA,OAAAc,EAAAhgJ,MAAA5E,KAAA6E,UAAA,EAjBD,IAiBC,CAAAtD,IAAA,yBAAAgE,IAED,WACI,OAAOvF,KAAK+V,UACP4F,IAAI,SAACirE,GAAC,OAAA7jE,EAAS6jE,EAAEy5D,oBAAmB,GACpC7jH,OAAO,SAACr6B,EAAM0iJ,GAAI,OAAK1iJ,EAAK6B,OAAO6gJ,EAAK,EAAE,IAC1ChoI,KAAK,SAACgW,EAAGlU,GAAC,OAAKkU,EAAEvf,KAAKgrB,cAAc3f,EAAErL,KAAK,EACpD,GAAC,CAAA/R,IAAA,eAAAC,MAAA,eAAAsjJ,EAAArjJ,EAAAC,IAAAC,KAEM,SAAAunE,IAAA,IAAA67E,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzjJ,IAAAO,KAAA,SAAAmnE,GAAA,cAAAA,EAAAjnE,KAAAinE,EAAAhnE,MAAA,UACEpC,KAAK2iJ,cAAa,CAAAv5E,EAAAhnE,KAAA,eAAAgnE,EAAA7lE,OAAA,iBAAA6lE,SAAAhnE,KAAA,KAEb/B,EAAAs+B,cAA+B,QAAnBqmH,EAAChlJ,KAAK2iJ,qBAAa,IAAAqC,OAAA,EAAlBA,EAAoB5xI,GAAIpT,KAAKoiJ,SAASl/I,YAAW,UAAAkmE,EAAAt3B,GAAAizG,EAAA37E,EAAAtlE,KAAAslE,EAAAjlE,GAAA,OAAAilE,EAAAt3B,GAAAs3B,EAAAjlE,GAAA,CAAAilE,EAAAhnE,KAAA,QAAAgnE,EAAAjlE,QAAA,IAAA4gJ,EAAA,WAAA37E,EAAAjlE,GAAA,CAAAilE,EAAAhnE,KAAA,SAAAgnE,EAAAp3B,QAAA,EAAAo3B,EAAAhnE,KAAA,iBAAAgnE,EAAAp3B,GADnD+yG,EAElB9tI,QAAO,QAFJkuI,SAAY/7E,EAAAp3B,GAAAo3B,EAAAhnE,KAAA,MAIR/B,EAAAs+B,cAA+B,QAAnBumH,EAACllJ,KAAK2iJ,qBAAa,IAAAuC,OAAA,EAAlBA,EAAoB9xI,GAAI,YAAYlQ,YAAW,WAAAkmE,EAAAmJ,GAAA0yE,EAAA77E,EAAAtlE,KAAAslE,EAAAn3B,GAAA,OAAAm3B,EAAAmJ,GAAAnJ,EAAAn3B,GAAA,CAAAm3B,EAAAhnE,KAAA,SAAAgnE,EAAAn3B,QAAA,IAAAgzG,EAAA,YAAA77E,EAAAn3B,GAAA,CAAAm3B,EAAAhnE,KAAA,SAAAgnE,EAAAoJ,QAAA,EAAApJ,EAAAhnE,KAAA,iBAAAgnE,EAAAoJ,GAD9CyyE,EAErBhuI,QAAO,QAFJmuI,OAGNplJ,KAAKgB,UAAY,CAHIooE,EAAAoJ,GAGc2yE,GACnCnlJ,KAAKmQ,SAASimI,UAASrzH,EAAO/iB,KAAKgB,WAAWooE,EAAAhnE,KAAA,GACxCpC,KAAKqlJ,4BAA2B,QACtCrlJ,KAAKgjJ,0BAA0B,yBAAA55E,EAAA1kE,OAAA,EAAAwkE,EAAAlpE,KAAA,IAClC,gBAAA6jJ,IAAA,OAAAiB,EAAAlgJ,MAAA5E,KAAA6E,UAAA,EAdA,IAgBD,CAAAtD,IAAA,eAAAC,MACO,SAAa4R,GAAU,IAAAkyI,EACpBC,EAE2B,QAFlBD,EAAGtlJ,KAAKgiJ,WAClBppI,WACAwW,KAAK,SAACvW,GAAG,OAAKA,EAAIzF,KAAOA,CAAE,UAAC,IAAAkyI,OAAA,EAFfA,EAEiB1xI,UAC/B2xI,GAAaA,IAAcvlJ,KAAK2iJ,cAAcvvI,IAC9CnP,eAAeC,QAAO,iBAAmBqhJ,GAE7CthJ,eAAeC,QAAO,mBAAqBkP,EAC/C,GAAC,CAAA7R,IAAA,4BAAAC,MAEO,WAAyB,IAAAuF,EAAA/G,KAC7B,OAAO,IAAI4D,QAAc,SAACC,GAAW,IAAA2hJ,EAC3BpyI,EAAKnP,eAAe4D,QAAO,oBACjC,GAAIuL,GAAMrM,EAAKgP,UAAUqZ,KAAK,SAACvW,GAAG,OAAKA,EAAIzF,KAAOA,CAAE,GAChDrM,SAAKk7I,iBAAiB7/I,KAClB2E,EAAKgP,UAAUqZ,KAAK,SAACvW,GAAG,OAAKA,EAAIzF,KAAOA,CAAE,IAEvCvP,IAEYkD,EAAKoJ,SAAS5K,IAAI,wBACrB,gBAAiB2wE,UACjCA,UAAUiuB,YAAYC,mBAClB,SAACjtD,GAAY,IAAAsuG,EAGuBxpH,EAFhCypH,EAAgCvuG,EAAS4sD,OAAjCC,EAAQ0hD,EAAR1hD,SAAUC,EAASyhD,EAATzhD,UACd0hD,EAAc,KAAKzpH,EAAA/E,EACLpwB,EAAKgP,WAAS,IAAhC,IAAAmmB,EAAAlT,MAAAiT,EAAAC,EAAA5E,KAAAC,MAAkC,KAAvB1e,EAAGojB,EAAAz6B,MACV,GAAKqX,EAAIlT,UAA6B,QAAjBkT,EAAIlT,SAEzB,GAAKggJ,EACA,CACD,IAAAC,GACID,EAAYhgJ,UAAY,OAC1BiB,MAAM,KAAIi/I,EAAAjjI,EAAAgjI,EAAA,GAFLE,EAAKD,EAAA,GAAEE,EAAMF,EAAA,GAGpBG,GACIntI,EAAIlT,UAAY,OAClBiB,MAAM,KAAIq/I,EAAArjI,EAAAojI,EAAA,GAFEE,EAAMD,EAAA,GAGL98G,KAAKsO,KAChBtO,KAAKg9G,IAAIniD,GAJDiiD,EAAA,GAIoB,GACxB98G,KAAKg9G,IAAIliD,GAAaiiD,EAAQ,IAEvB/8G,KAAKsO,KAChBtO,KAAKg9G,IAAIniD,GAAY8hD,EAAO,GACxB38G,KAAKg9G,IAAIliD,GAAa8hD,EAAQ,MAEjBJ,EAAc9sI,QAhBrB8sI,EAAc9sI,EAkBnC,OAAAmR,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAA1E,GAAA,CACGmuH,IAAa5+I,EAAK8O,SAAW8vI,GACf,QAAdF,EAAC1+I,EAAK8O,gBAAQ,IAAA4vI,GAAbA,EAAeryI,IAAIrM,EAAKq/I,sBAC7BviJ,GACJ,EACA,WAAK,IAAAwiJ,EACiB,QAAdA,EAACt/I,EAAK8O,gBAAQ,IAAAwwI,GAAbA,EAAejzI,IAAIrM,EAAKq/I,sBAC7BviJ,GACJ,GAEiB,QAAd2hJ,EAACz+I,EAAK8O,gBAAQ,IAAA2vI,GAAbA,EAAepyI,KACvBrM,EAAKq/I,sBACLviJ,IAER,EACJ,GAAC,CAAAtC,IAAA,sBAAAC,MAAA,eAAA8kJ,EAAA7kJ,EAAAC,IAAAC,KAEO,SAAA4nE,IAAA,IAAAg8E,EAAA7C,EAAA,OAAAhhJ,IAAAO,KAAA,SAAAunE,GAAA,cAAAA,EAAArnE,KAAAqnE,EAAApnE,MAAA,UACCpC,KAAK+V,UAAU9Q,OAAM,CAAAukE,EAAApnE,KAAA,eAAAonE,EAAAjmE,OAAA,iBACpBgiJ,SAAYthJ,eAAe4D,QAAO,kBAAkB2hE,EAAApnE,KAAA,EACnDmjJ,EACDvlJ,KAAKuuG,UACDvuG,KAAK8hJ,SAASlpI,WAAWwW,KAAK,SAACnsB,GAAC,OAAKA,EAAEmQ,KAAOmyI,CAAS,IAE3DvlJ,KAAKumJ,yBAAwB,OAEK,GADxCvmJ,KAAK+iJ,2BACL1gJ,QAAQO,IAAI,YAAa5C,KAAK6V,WAC1B7V,KAAK6V,SAAQ,CAAA2zD,EAAApnE,KAAA,eAAAonE,EAAAjmE,OAAA,kBACXm/I,EAAS1iJ,KAAKmQ,SAAS5K,IAAI,2BAE7BvF,KAAK6V,SAAW7V,KAAK+V,UAAUqZ,KAAK,SAAA0O,GAAK,OAAAA,EAAF1qB,KAAgBsvI,CAAM,IAE5D1iJ,KAAK6V,WAAU7V,KAAK6V,SAAW7V,KAAK+V,UAAU,IACnD1T,QAAQO,IAAI,YAAa5C,KAAK6V,UAAU,yBAAA2zD,EAAA9kE,OAAA,EAAA6kE,EAAAvpE,KAAA,IAC3C,gBAAAomJ,IAAA,OAAAE,EAAA1hJ,MAAA5E,KAAA6E,UAAA,EAnBA,IAmBA,CAAAtD,IAAA,yBAAAC,MAAA,eAAAglJ,EAAA/kJ,EAAAC,IAAAC,KAEO,SAAAgoE,IAAA,IAAA+kC,EAAAx5D,EAAA0rB,EAAAD,EAAAguC,EAAA83C,EAAAv9B,EAAAD,EAAAy9B,EAAA,OAAAhlJ,IAAAO,KAAA,SAAA2nE,GAAA,cAAAA,EAAAznE,KAAAynE,EAAAxnE,MAAA,OAEE8yC,EAAWl1C,KAAKk1C,SAAQ0rB,EAAAzpC,EADxBu3E,EAAc1uG,KAAKyuG,SAEO7kC,EAAAznE,KAAA,EAAAy+D,EAAA53C,IAAA,WAAA23C,EAAAC,EAAAtpC,KAAAC,KAAA,CAAAqyC,EAAAxnE,KAAA,SAAf,IAANusG,EAAMhuC,EAAAn/D,OACF0zC,WAAaA,EAAQ,CAAA00B,EAAAxnE,KAAA,SAAAwnE,SAAAxnE,KAAA,GACfpC,KAAKuuG,UAAUI,GAAO,eAAA/kC,EAAArmE,OAAA,SAAAqmE,EAAA9lE,MAAA,QAAA8lE,EAAAxnE,KAAA,gBAAAwnE,EAAAxnE,KAAA,iBAAAwnE,EAAAznE,KAAA,GAAAynE,EAAAzlE,GAAAylE,EAAAxlE,MAAA,GAAAw8D,EAAAp8C,EAAAolD,EAAAzlE,IAAA,QAAAylE,SAAAznE,KAAA,GAAAy+D,EAAAppC,IAAAoyC,EAAAviB,OAAA,YAGrCo/F,EAAWvxG,EAAStuC,MAAM,KAAK,GAAEsiH,EAAA/xF,EAClBu3E,GAAW9kC,EAAAznE,KAAA,GAAA+mH,EAAAlgG,IAAA,YAAAigG,EAAAC,EAAA5xF,KAAAC,KAAA,CAAAqyC,EAAAxnE,KAAA,SAAf,KAANusG,EAAMsa,EAAAznH,OACF0zC,SAASqoC,WAAWkpE,GAAS,CAAA78E,EAAAxnE,KAAA,SAAAwnE,SAAAxnE,KAAA,GACvBpC,KAAKuuG,UAAUI,GAAO,eAAA/kC,EAAArmE,OAAA,SAAAqmE,EAAA9lE,MAAA,QAAA8lE,EAAAxnE,KAAA,iBAAAwnE,EAAAxnE,KAAA,iBAAAwnE,EAAAznE,KAAA,GAAAynE,EAAA93B,GAAA83B,EAAAxlE,MAAA,IAAA8kH,EAAA1kG,EAAAolD,EAAA93B,IAAA,QAAA83B,SAAAznE,KAAA,GAAA+mH,EAAA1xF,IAAAoyC,EAAAviB,OAAA,6BAAAuiB,EAAAllE,OAAA,EAAAilE,EAAA3pE,KAAA,iCAG9C,gBAAAumJ,IAAA,OAAAC,EAAA5hJ,MAAA5E,KAAA6E,UAAA,EAhBA,IAgBA,CAAAtD,IAAA,2BAAAC,MAEO,WAAwB,IAKFmlJ,EALEl0G,EAAAzyC,KACtB4mJ,EAAW5mJ,KAAK+V,UAAU8F,OAC5B,SAAChD,GAAG,IAAAguI,EAAA,OAAMp0G,EAAKk8D,QAAU91F,EAAIjF,aAAyB,QAAhBizI,EAAKp0G,EAAKk8D,cAAM,IAAAk4C,OAAA,EAAXA,EAAazzI,GAAE,GAExD8hC,EAAWl1C,KAAKk1C,SAAS4xG,EAAA3vH,EACbyvH,GAAQ,IAA1B,IAAAE,EAAA99H,MAAA29H,EAAAG,EAAAxvH,KAAAC,MAA4B,KAAjB1e,EAAG8tI,EAAAnlJ,MACV,GAAIqX,EAAIq8B,WAAaA,EAEjB,YADAl1C,KAAK6V,SAAWgD,GAGvB,OAAAmR,GAAA88H,EAAAtiI,EAAAwF,EAAA,SAAA88H,EAAAtvH,GAAA,CACD,IAC0BuvH,EADpBN,EAAWvxG,EAAStuC,MAAM,KAAK,GAAGogJ,EAAA7vH,EACtByvH,GAAQ,IAA1B,IAAAI,EAAAh+H,MAAA+9H,EAAAC,EAAA1vH,KAAAC,MAA4B,KAAjB1e,EAAGkuI,EAAAvlJ,MACV,GAAIqX,EAAIq8B,SAASqoC,WAAWkpE,GAExB,YADAzmJ,KAAK6V,SAAWgD,GAGvB,OAAAmR,GAAAg9H,EAAAxiI,EAAAwF,EAAA,SAAAg9H,EAAAxvH,GAAA,CACL,GAAC,CAAAj2B,IAAA,0BAAAC,MAEO,WAAuB,IAAAylJ,EAAAC,EAC3BlnJ,KAAKmQ,SAASimI,UAAS,CACnBp2I,KAAKwiJ,iBAA8B,QAAdyE,EAACjnJ,KAAK6V,gBAAQ,IAAAoxI,OAAA,EAAbA,EAAe7zI,IACrCpT,KAAKmnJ,eAA0B,QAAZD,EAAClnJ,KAAK2uG,cAAM,IAAAu4C,OAAA,EAAXA,EAAa9zI,KAAGpP,OAAA+e,EACjC/iB,KAAKgB,WAEhB,KAAC0H,EAzcA,IAAAk6I,CAycA,CA5iB2B,GA4iB3BhjJ,SA5iBQ8I,0CAAmBL,EAAAgV,mBAAA9U,EAAAC,iBAAAH,EAAAgV,mBAAA5U,EAAAwE,QAAA,qDAAnBvE,EAAmB4U,QAAnB5U,EAAmB6U,UAAAC,WAFhB,SAEH9U,CAAmB,6HC1BhC,IAAArI,EAAAxC,EAAA,OACAupJ,EAAAvpJ,EAAA,OAEIwpJ,EAAY,EAEhB1nJ,2BAAA,SAAgB2nJ,IACZ,MAAO,CACHl0I,GAAE,YAAApP,OAAcqjJ,KAChB/zI,KAAI,gBAAAtP,OAAkBqjJ,GACtBtxI,UAAWurB,MAAM,GACZ+gB,KAAK,GACL1mC,IAAI,SAACsW,GAAC,SAAKm1H,EAAAhG,uBAAsB,GACtCh8I,SAAU,CACNylI,KAAM,CACFwW,OAAQ,CACJ1uF,KAAK,KAKzB,EAMAhzD,qBAAA,SAAgBi0H,EACZpyH,EACA+lJ,GAEA,OAAK/lJ,EACEA,aAAiBioB,UAClBppB,EAAAwxB,WAAUrwB,EAAM+yB,UAAW/yB,EAAMs4E,QAAUytE,IAAc,EACzDlnJ,EAAAwxB,WAAUrwB,EAAO+lJ,GAHJ,IAIvB,+HClCA5nJ,SAAmBG,EAcf,SAAAwjJ,EAAYroG,GAAsBl7C,EAAAC,KAAAsjJ,GAC9BtjJ,KAAKoT,GAAK6nC,EAAM7nC,IAAM,GACtBpT,KAAKsT,KAAO2nC,EAAM3nC,MAAQ,GAC1BtT,KAAKsV,aAAe2lC,EAAM3lC,cAAgB,GAC1CtV,KAAKk1C,SAAW+F,EAAM/F,UAAY,GAClCl1C,KAAK4qB,OAASqwB,EAAMrwB,QAAU,GAC9B5qB,KAAK20I,SAAW15F,EAAM05F,UAAY,EACtC,qFCrBJn+G,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,wNCFA,IAAAW,EAAAzC,EAAA,OACAgM,EAAAhM,EAAA,OACA2L,EAAA3L,EAAA,OAOA8pB,EAAA9pB,EAAA,OACA4yB,EAAA5yB,EAAA,wHAiCoBwK,EAAAkB,oBAAA,mDAEIlB,EAAAwI,qBAAA,sBAAA+E,EAAA4xI,UAAA,OAAAn/I,EAAAksC,mDAyBIlsC,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAA24H,EAAA,IAEAnhI,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAA8pH,EAAA,QAAAA,EAAA,mCAaJnhI,EAAA8E,yBAAA,mBAGK9E,EAAAgF,iBAAA,GAAUhF,EAAA+E,iDADX/E,EAAAwI,qBAAA,QAAA0oD,GACClxD,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAslD,IAtEjC,IAAMkuF,EAAa,CAAEC,YAAa,mBAAoBC,WAAY,GAAIC,IAAK,IACrEC,EAAY,IAAIvnJ,EAAAs1F,SAAS,QAAS,IAExCj2F,0BAyGI,eAAAC,EADSkoJ,EACT,SAAAC,GAAAnnJ,EAAAknJ,EAAAC,GAAA,IAAAjnJ,EAAAC,EAAA+mJ,GAzGJ,SAAAA,IAAA,IAAA1mJ,EAAArB,SAAAC,KAAA8nJ,+BA4GW7wI,QAAU,IAAIzN,EAAAm2B,UAAU,CAC3B+nH,YAAa,IAAIl+I,EAAAo2B,YAAY0B,MAAM,IAAI+gB,KAAK,KAAK3tC,QACjDizI,WAAY,IAAIn+I,EAAAo2B,YAAY,IAC5BooH,UAAW,IAAIx+I,EAAAo2B,YAAY,IAC3BqoH,SAAU,IAAIz+I,EAAAo2B,YAAY,IAC1BgoH,IAAK,IAAIp+I,EAAAo2B,YAAY,GAAI,CACrBp2B,EAAAq2B,WAAWqoH,UAAU,GACrB1+I,EAAAq2B,WAAWsoH,UAAU,OAGtB/mJ,EAAA03B,UAAW,EAEF13B,EAAA+rE,OAAS7rC,MAAM,IAC1B+gB,KAAK,GACL1mC,IAAI,SAAC1Y,EAAGivC,GAAG,MAAK,CACb21G,EAAUj+H,aAAU6G,EAAA23H,UAAShuI,KAAK8W,MAAOghB,GAAM,MAC/C21G,EAAUj+H,aAAU6G,EAAA23H,UAAShuI,KAAK8W,MAAOghB,GAAM,OAClD,GACW9wC,EAAAinJ,MAAQ/mH,MAAM,IACzB+gB,KAAK,GACL1mC,IAAI,SAAC1Y,EAAGivC,GAAG,OACR21G,EAAUj+H,aAAU6G,EAAAuxF,UAAS5nG,KAAK8W,MAAOghB,GAAM,OAAO,GAE9C9wC,EAAAknJ,OAAShnH,MAAM,IAAI+gB,KAAK,GAChCjhD,EAAAmnJ,OAAS,EA+GDnnJ,EAAA23B,iBAAmB,SAACC,GAAmC,OAClE53B,EAAK63B,UAAYD,CAAE,EACR53B,EAAA83B,kBAAoB,SAACF,GAAmC,OACnE53B,EAAK+3B,SAAWH,CAAE,EACP53B,EAAAg4B,iBAAmB,SAACpQ,GAAU,OAAM5nB,EAAK03B,SAAW9P,CAAC,EAAE5nB,EAC1EtB,SAAAgoJ,EAAA,EAAAvmJ,IAAA,UAAAgE,IA5GG,WAAkB,IAAAijJ,EAEd,QAD6B,QAAlBA,EAAAxoJ,KAAKiX,QAAQzV,aAAK,IAAAgnJ,OAAA,EAAlBA,EAAoBd,cAAe,IACpCnqE,WAAW,IACzB,GAAC,CAAAh8E,IAAA,YAAAgE,IAED,WAAoB,IAAAkjJ,EACVnO,GAAuB,QAAlBmO,EAAAzoJ,KAAKiX,QAAQzV,aAAK,IAAAinJ,OAAA,EAAlBA,EAAoBf,cAAe,GAC9C,OAAIpN,EAAG/8D,WAAW,KAAa,OAC3B+8D,EAAG/8D,WAAW,KAAa,OAC3B+8D,EAAG/8D,WAAW,KAAa,aACxB,EACX,GAAC,CAAAh8E,IAAA,eAAAgE,IAED,WAAuB,IAAAmjJ,EACfpO,GAAuB,QAAlBoO,EAAA1oJ,KAAKiX,QAAQzV,aAAK,IAAAknJ,OAAA,EAAlBA,EAAoBhB,cAAe,GAC5C,OAAI1nJ,KAAK2oJ,eACLrO,EACIA,EAAG7jE,UAAU,EAAGz2E,KAAKuoJ,QACrB,SACAjO,EAAG7jE,UAAUz2E,KAAKuoJ,OAAS,IAC5BvoJ,KAAK4oJ,QAAO,GAAA5kJ,OACVs2I,EAAG7jE,UAAU,EAAG,GAAE,KAAAzyE,OAAIs2I,EAAG7jE,UAAU,EAAG,IAAG,KAAAzyE,OAAIs2I,EAAG7jE,UAAU,KAAG,GAAAzyE,OAC7Ds2I,EAAG7jE,UAAU,EAAG,GAAE,KAAAzyE,OAAIs2I,EAAG7jE,UAAU,EAAG,GAAE,KAAAzyE,OAAIs2I,EAAG7jE,UAC9C,EACA,IACH,KAAAzyE,OAAIs2I,EAAG7jE,UAAU,IAC5B,GAAC,CAAAl1E,IAAA,eAAAgE,IAED,WACI,OACIyxC,SAAS6xG,gBAAkB7oJ,KAAK+wF,UAAU3E,eAC1Cp1C,SAAS6xG,gBACL7oJ,KAAK+wF,UAAU3E,cAAc85B,aAEzC,GAAC,CAAA3kH,IAAA,WAAAC,MAEM,WAAQ,IAAAuD,EAAA/E,KACXA,KAAK4S,aACD,UACA5S,KAAKiX,QAAQpE,aAAaC,UAAU,SAACuQ,GAAC,OAClCte,EAAKtB,QAAQ,SAAU,kBACnBsB,EAAK00B,SAAS10B,EAAKkS,QAAQiY,cAAc,EAC5C,GAGb,GAAC,CAAA3tB,IAAA,aAAAC,MAEM,WACHxB,KAAK+wF,UAAU3E,cAAcllE,QAC7BlnB,KAAKuoJ,OAASvoJ,KAAK+wF,UAAU3E,cAAc4nB,gBAAkB,CACjE,GAAC,CAAAzyG,IAAA,UAAAC,MAEM,SAAQusB,GACX,GAAKA,GAAU/tB,KAAK2oJ,aACpB,KAAMz2G,EAAMlyC,KAAKuoJ,OACjB,KAAIr2G,EAAM,GAAKA,EAAM,IACrB,KAAIw1G,EAAc1nJ,KAAKiX,QAAQzV,MAAMkmJ,YACrC,IACK35H,EAAM8uC,KAAK0gB,WAAW,UACnBxvD,EAAM8uC,KAAK0gB,WAAW,YAC1BrrC,GAAOlyC,KAAK4oJ,QAAU,GAAK,IAE3BlB,EACIA,EAAYjxE,UAAU,EAAGvkC,GACzBnkB,EAAMxsB,IACNmmJ,EAAYjxE,UAAUvkC,EAAM,GAChClyC,KAAKiX,QAAQ5F,WAAW,CAAEq2I,gBAC1B1nJ,KAAK8oJ,aAAa52G,EAAK,QAAC,GACF,cAAfnkB,EAAM8uC,MAAwB3qB,EAAM,EAAG,CAC9C,IAAIw1G,EAAc1nJ,KAAKiX,QAAQzV,MAAMkmJ,YACrCA,EACIA,EAAYjxE,UAAU,EAAGvkC,GACzB,IACAw1G,EAAYjxE,UAAUvkC,EAAM,GAChClyC,KAAKiX,QAAQ5F,WAAW,CAAEq2I,gBAC1B1nJ,KAAK8oJ,aAAa52G,GAAK,OACD,cAAfnkB,EAAM8uC,KACb78D,KAAK8oJ,aAAa52G,GAAK,GACD,eAAfnkB,EAAM8uC,MAA8C,MAArB6qF,EAAYx1G,IAClDlyC,KAAK8oJ,aAAa52G,EAAK,EAAC,EAEhC,GAAC,CAAA3wC,IAAA,eAAAC,MAEO,SAAa0wC,EAAagkG,GAC9Bl2I,KAAKuoJ,OAASp/G,KAAK0Z,IAAI,GAAI1Z,KAAKyZ,IAAI,EAAG1Q,EAAMgkG,GACjD,GAEA,CAAA30I,IAAA,WAAAC,MAIO,SAAS83B,GACRt5B,KAAKi5B,WAAWj5B,KAAKi5B,UAAUK,EACvC,GAEA,CAAA/3B,IAAA,aAAAC,MAIO,SAAWA,GACdxB,KAAKiX,QAAQ5F,WAAW7P,GAASimJ,EACrC,KAACK,CAAA,CAxID,CAAQngI,EAAAvf,cAAYxI,SADXkoJ,qGAAuBrrH,GAAvBqrH,EAAuB,qDAAvBA,EAAuB/+I,UAAA,uBAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,8JATrB,CACP,CACIiD,QAAS9C,EAAAwwB,kBAETC,eAAapwB,EAAAqwB,YAAW,kBAAM4tH,CAAuB,GACrD3tH,OAAO,KAEd9xB,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,sFAjGyCsiB,UAAAC,MAAAC,EAAA,sdAuBDF,UAAAG,MAAAD,EAAA,uNAQTF,UAAAI,MAAAF,EAAA,wLAKaF,UAAAM,MAAAJ,EAAA,gLAaTF,UAAAO,MAAAL,EAAA,6JAgBAF,UAAA0rB,MAAAxrB,EAAA,6NAYAF,UAAAowB,MAAAlwB,EAAA,kKA/EhCrnB,EAAA8E,yBAAA,YAA4B9E,EAAAuI,qBAAA,iBAAAG,GAAA,OAAgBzH,EAAAy/I,QAAAh4I,EAAe,KAAA1I,EAAAuhG,2BACvDvhG,EAAA8E,yBAAA,UAAA9E,CAA2B,aACvBA,EAAAulB,iBAAA,KAAyCvlB,EAAA+E,yBACzC/E,EAAA8E,yBAAA,WAGI9E,EAAAuI,qBAAA,0BAAStH,EAAAupG,YAAY,GAErBxqG,EAAA8E,yBAAA,WAAoB9E,EAAAgF,iBAAA,GAAkBhF,EAAA+E,yBACtC/E,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,4BAAY,CAAK,GALrBvI,EAAA+E,yBAQA/E,EAAA0J,qBAAA,EAAAi3I,EAAA,aAKJ3gJ,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,WAAA9E,CAAkC,eAC9BA,EAAAulB,iBAAA,OAAyCvlB,EAAA+E,yBACzC/E,EAAA8E,yBAAA,wBACI9E,EAAAkB,oBAAA,eAMAlB,EAAA8E,yBAAA,gBAAA9E,EAAAulB,iBAAA,OAA2CvlB,EAAA+E,wBAAA/E,KAGnDA,EAAA8E,yBAAA,YAAA9E,CAAyC,YAAzCA,CAAyC,eAEjCA,EAAAulB,iBAAA,OAAyCvlB,EAAA+E,yBACzC/E,EAAA8E,yBAAA,uBAAA9E,CAAqC,oBAK7BA,EAAA0J,qBAAA,GAAAk3I,EAAA,qBAMJ5gJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAAA9E,EAAAulB,iBAAA,OAAwCvlB,EAAA+E,wBAAA/E,KAGhDA,EAAA8E,yBAAA,YAAA9E,CAAwC,eACZA,EAAAgF,iBAAA,kBAAWhF,EAAA+E,yBACnC/E,EAAA8E,yBAAA,uBAAA9E,CAAqC,oBAK7BA,EAAA0J,qBAAA,GAAAm3I,EAAA,qBAKJ7gJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAAA9E,EAAAulB,iBAAA,OAAuCvlB,EAAA+E,wBAAA/E,KAG/CA,EAAA8E,yBAAA,WAAA9E,CAA2B,eACNA,EAAAgF,iBAAA,UAAGhF,EAAA+E,yBACpB/E,EAAA8E,yBAAA,wBACI9E,EAAAkB,oBAAA,eAMAlB,EAAA8E,yBAAA,gBAAA9E,EAAAulB,iBAAA,OAAqCvlB,EAAA+E,wBAAA/E,gBA/E/CA,EAAAwI,qBAAA,YAAAvH,EAAA2N,SAQ0B5O,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,EAAA6/I,cAKhB9gJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAvH,EAAA2N,QAAAzV,MAAAkmJ,YAAA,KAAAp+I,EAAA2N,QAAAzV,MAAAkmJ,YAAAlyG,QAKCntC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAk+I,WA2BwBn/I,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA6jE,QAiBA9kE,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA++I,yYAuCpCP,CACT,2NChIJ,IAAAj+I,EAAAhM,EAAA,OACA+P,EAAA/P,EAAA,UACAA,EAAA,qFAkCwBwK,EAAAs9C,6BAAA,kZAVZt9C,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,WAAA9E,CAEC,UACGA,EAAAulB,iBAAA,KAAqDvlB,EAAA+E,yBACrD/E,EAAAkB,oBAAA,WACAlB,EAAA8E,yBAAA,SAAA9E,EAAAgwB,sBAAA,mCAIIhwB,EAAA0J,qBAAA,EAAAq3I,EAAA,uBAOJ/gJ,EAAAiwB,sBAAAjwB,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,EAAAulB,iBAAA,OAA8CvlB,EAAA+E,yBAC9C/E,EAAA8E,yBAAA,UAAA9E,CAA2C,aAC/BA,EAAAgF,iBAAA,sCAENhF,EAAA+E,wBAAA/E,GAENA,EAAA8E,yBAAA,0BAEI9E,EAAAuI,qBAAA,yBAAAG,GAAA1I,EAAA2I,wBAAA0sC,GAAA,IAAAh8B,EAAArZ,EAAA8I,wBAAA,UAAA9I,EAAA+I,sBAAAsQ,EAAA2nI,aAAAt4I,EAAA,GACH1I,EAAA+E,wBAAA/E,GAELA,EAAA8E,yBAAA,eAAA9E,CAAoB,gBAIZA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA0sC,GAAA,IAAAloC,EAAAnN,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAAoE,EAAA8zI,iBAAgB,GAH7BjhJ,EAAAulB,iBAAA,OAOAvlB,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,eAAA9E,CAKC,WACsCA,EAAAgF,iBAAA,YAAKhF,EAAA+E,wBAAA/E,GAEhDA,EAAAoZ,6EArC2BpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAA4F,EAAAQ,QAAAsZ,SAOnBloB,EAAAylB,oBAAArX,EAAAQ,QAAAtE,KAAAtK,CAAIoO,EAAAQ,QAAAy5B,cAAJroC,CAAIA,EAAA8L,sBAAA,IAAAsC,EAAAQ,QAAAtF,KAAA,eAAJtJ,EAAA2lB,sBAAA,GAGY3lB,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA5L,EAAA8L,sBAAA,KAAAsC,EAAAQ,QAAAwhB,OAAA,IAAAhiB,EAAAomD,OAMRx0D,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA4F,EAAA4yI,wCA9BhBhhJ,EAAA8E,yBAAA,WAII9E,EAAA0J,qBAAA,EAAAw3I,EAAA,wBAgDJlhJ,EAAA+E,8FAhDmB/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAsB,EAAAw+B,QAAAtoC,CAAgB,WAAAokB,6BAkD/BpkB,EAAA8E,yBAAA,YAGI9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,iCAAqBhF,EAAA+E,wBAAA/E,2CAArBA,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA5L,EAAAsN,sBAAA,IAAAC,EAAAqN,oCAIP5a,EAAA8E,yBAAA,YAAA9E,CAAyD,UACrDA,EAAAulB,iBAAA,MAAwDvlB,EAAA+E,yBACxD/E,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,OAAA9E,EAAAulB,iBAAA,uCAAyDvlB,EAAA+E,yBACzD/E,EAAA8E,yBAAA,OAAA9E,EAAAulB,iBAAA,MAA2CvlB,EAAA+E,yBAC3C/E,EAAA8E,yBAAA,QAAG9E,EAAAgF,iBAAA,kCAAuChF,EAAA+E,yBAC1C/E,EAAA8E,yBAAA,QAAA9E,EAAAulB,iBAAA,mEAMAvlB,EAAA+E,wBAAA/E,GAEJA,EAAAkB,oBAAA,aACAlB,EAAA8E,yBAAA,eAAA9E,CAA6C,gBACzCA,EAAAulB,iBAAA,OAEAvlB,EAAA+E,wBAAA/E,2CAjBIA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,SAAAmE,EAAA83I,eAAA,KAEqDnhJ,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAzlB,EAAA8L,sBAAA,IAAAzC,EAAAuF,QAAAwhB,OAAA,IAAA/mB,EAAAmrD,OAAAx0D,EAAA2lB,sBAAA,GACd3lB,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAApc,EAAAuF,QAAAy5B,eAAAroC,EAAA2lB,sBAAA,GACxC3lB,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA5L,EAAA8L,sBAAA,KAAAzC,EAAAuF,QAAAtF,KAAA,eAOHtJ,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAzlB,EAAA8L,sBAAA,MAAAzC,EAAAuF,QAAAtF,KAAA,aAAAtJ,CAAIA,EAAA8L,sBAAA,MAAAzC,EAAAuF,QAAAtF,KAAA,GAAAD,EAAAuF,QAAArF,SAAA,kBAAJvJ,EAAA2lB,sBAAA,KA/EhBruB,wBA2FkC,eAAAC,EAArB6pJ,EAAqB,WAY9B,SAAAA,EACqCxuG,EACzBh6C,GAAyBlB,EAAAC,KAAAypJ,GADAzpJ,KAAAi7C,QACzBj7C,KAAAiB,OAbcjB,KAAA+tB,MAAQ,IAAIlkB,EAAAuV,aACtBpf,KAAAiX,QAAUjX,KAAKi7C,MACfj7C,KAAAijB,QAAUjjB,KAAKi7C,MAAMh4B,QAE9BjjB,KAAA2wC,SAAU,EACV3wC,KAAAwpJ,eAAiB,UASrB,CAAC1pJ,SAAA2pJ,EAAA,EAAAloJ,IAAA,OAAAgE,IAPJ,WACI,OAAOvF,KAAKiB,KAAKm9D,aACrB,GAAC,CAAA78D,IAAA,iBAAAC,OAAAkoJ,EAAAjoJ,EAAAC,IAAAC,KAOM,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACEpC,KAAKqpJ,cAAiBrpJ,KAAK2pJ,oBAAmB,CAAAznJ,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBACnD,OAAAvD,KAAK+tB,MAAMzO,KAAKtf,KAAKqpJ,cAAcnnJ,EAAAE,KAAA,EAC7BpC,KAAKi7C,MAAMxK,YAAYzwC,KAAKqpJ,cAAa,OAC/CrpJ,KAAK2wC,SAAU,EAAK,wBAAAzuC,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACvB,SAAAspJ,IAAA,OAAAI,EAAA9kJ,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,oBAAAC,MAEO,WAAiB,IAAAooJ,EAAAC,EACrB,QACsB,QAAjBD,EAAA5pJ,KAAKqpJ,oBAAY,IAAAO,OAAA,EAAjBA,EAAmBjC,WAAW1iJ,SAAU,GAAK,KAC5B,QAAjB4kJ,EAAA7pJ,KAAKqpJ,oBAAY,IAAAQ,OAAA,EAAjBA,EAAmBjC,IAAI3iJ,SAAU,IAAM,CAEhD,KAACwkJ,EAnBA,IAAAC,CAmBA,CA7B6B,GA6B7B9pJ,SA7BQ6pJ,0CAAqBphJ,EAAAC,4BAalBsF,EAAAivB,iBAAex0B,EAAAC,4BAAAC,EAAAG,qBAAA,kDAblB+gJ,EAAqB1gJ,UAAA,oBAAAyW,QAAA,CAAAuO,MAAA,SAAA7kB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,eAAAqiB,eAhFwBC,UAAAC,MAAAC,EAAA,kGAcdF,UAAAG,MAAAD,EAAA,yGAiBvBF,UAAAI,MAAAF,EAAA,mdA7BwCF,UAAAM,MAAAJ,EAAA,+RAChB,gBACrB,gBACA,gBACA,mCACY,kBACR,kBAIJ,gdA2C8BF,UAAAO,MAAAL,EAAA,sIAI9BF,UAAA0rB,MAAAxrB,EAAA,yHACAF,UAAAowB,MAAAlwB,EAAA,2HAEAF,UAAAqwB,MAAAnwB,EAAA,4HACJ,gBACA,2KAQuDF,UAAAswB,MAAApwB,EAAA,mIAhFnErnB,EAAA0J,qBAAA,EAAA+3I,EAAA,2CAqDAzhJ,EAAA0J,qBAAA,EAAAg4I,EAAA,yBAAA1hJ,EAAAqd,iCAAArd,CAOc,EAAA2hJ,EAAA,2BAAA3hJ,EAAAqd,yEA1DTrd,EAAAwI,qBAAA,QAAAxI,EAAAsN,sBAAA,IAAArM,EAAA2Z,SAAA5a,CAA0B,WAAAuf,OAsF1B6hI,CAAqB,wIC7GlC,IAAAnpJ,EAAAzC,EAAA,OACA+P,EAAA/P,EAAA,OACAgQ,EAAAhQ,EAAA,OACAiQ,EAAAjQ,EAAA,OACA2L,EAAA3L,EAAA,OACA6P,EAAA7P,EAAA,OACA+M,EAAA/M,EAAA,OAEAosJ,EAAApsJ,EAAA,OACAqsJ,EAAArsJ,EAAA,OACAkQ,EAAAlQ,EAAA,8DAIA8B,iBAe2B,eAAAC,EAAdiM,EAAc/L,EAAA,SAAA+L,IAAA9L,EAAAC,KAAA6L,EAAA,GAAAjM,SAAdiM,yCAAc,iDAAdA,uDAZLvL,EAAAgZ,aACAzL,EAAAsB,mBACArB,EAAAuB,eACAzB,EAAAsB,gBACA1F,EAAAiC,YACAjC,EAAAwC,oBACA0B,EAAAsB,gBACApE,EAAAgB,gBACAmC,EAAAuB,4BAIKzD,CAAc,oCAjBPo+I,EAAAR,sBAAqB,CAAAlhJ,EAAAgsF,KAAA9rF,EAAAisF,eAAA/rF,EAAA0sF,gBAAA1sF,EAAA2sF,QAAAzsF,EAAA8rF,mBAAEu1D,EAAApC,yBAAuB,CAAAv/I,EAAAotF,UAAAptF,EAAA4hJ,aAAA5hJ,EAAAqtF,+OCZlE/3F,EAAA,WACAyC,EAAAzC,EAAA,OAEAwC,GADAxC,EAAA,MACAA,EAAA,QACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAEAosJ,EAAApsJ,EAAA,kDAmBa8B,kBAAkB,qBAC/B,IAAMyqJ,EAAgB,UAEtBzqJ,kBAG4B,eAAAC,EAAfk0C,EAAe,WAoBxB,SAAAA,EACY7yC,EACAD,EACAiX,GAAkB,IAAA7W,EAAApB,KAAAD,EAAAC,KAAA8zC,GAFlB9zC,KAAAiB,OACAjB,KAAAgB,YACAhB,KAAAiY,UAtBJjY,KAAA8wB,SAAW,IAAInX,EAAAqB,gBAAgB,IAC/Bhb,KAAAqqJ,aAAe,IAAI1wI,EAAAqB,gBAAgB,IAE3Bhb,KAAAijB,QAAUjjB,KAAK8wB,SAAS3V,eAExBnb,KAAAsqJ,mBAAkB3wI,EAAAO,IAAG,GAAGnX,QACpC3C,EAAAqxB,WAAU,WACN,IAAM+C,KAAMn0B,EAAAwxB,WAAUzwB,EAAKovC,eAAgB45G,GAC3C,OAAK51H,EACEA,EAAIC,QAAQ,uBAAwB,CAAC,UAAO,EADlC9a,EAAAO,IAAG,GAExB,IAAC,EACD9Z,EAAAojB,KAAI,SAACvgB,GAAC,OAAMA,EAAE,GAAK7B,EAAKipJ,aAAajoJ,KAAKa,EAAE,GAAGmQ,IAAM,EAAE,IAAC,EACxDhT,EAAAmyB,aAAY,GAWb,CAACzyB,SAAAg0C,EAAA,EAAAvyC,IAAA,iBAAAgE,IARJ,WACI,OAAOvF,KAAKiB,KAAK2wB,QAAQ,WAC7B,GAAC,CAAArwB,IAAA,cAAAC,OAAA+oJ,EAAA9oJ,EAAAC,IAAAC,KAQM,SAAAwD,EACH8R,GAAuB,IAAAuzI,EAAAC,EAAAnjH,EAAAojH,EAAAjyH,EAAApxB,EAAAopC,EAAA/tC,EAAA2V,EAAAtT,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,UAElBpC,KAAKwwC,eAAc,CAAAnrC,EAAAjD,KAAA,aAAQ,uBAAsB,OAAAiD,SAAAjD,KAAA,EACzBpC,KAAK2qJ,kBAC9B1zI,GAAStE,MACZvO,MAAO,SAACnB,GAAC,MAAK,CAAC,EAAG,GAAG,GAAC,OACY,GADZunJ,EAAA5nI,EAAAvd,EAAAvB,KAAA,GAFhB2mJ,EAAID,EAAA,GAAEljH,EAAMkjH,EAAA,GAGnBnoJ,QAAQO,IAAI,QAAS6nJ,EAAMnjH,KACvBmjH,GAAQ,GAAC,CAAAplJ,EAAAjD,KAAA,gBAAAiD,EAAA9B,OAAA,kBAC6C,GAAtDmnJ,EAAc1qJ,KAAKgB,UAAUuE,IAAI,sBACrB,CAAAF,EAAAjD,KAAA,SAAAiD,SAAAjD,KAAA,GAAsBpC,KAAK4qJ,iBAAgB,QAAzCF,EAAWrlJ,EAAAvB,KAAA,QAC7B,OAAA9D,KAAKgB,UAAU84B,gBAAgB,qBAAsB4wH,GAC/CjyH,EAASgyH,GAAQxzI,EAAQrF,SAAW01B,GACtCjgC,OAASnC,EACPurC,EAAW,eAAAvqC,EAAAzE,EAAAC,IAAAC,KAAG,SAAAC,EAAO4wD,GAAM,OAAA9wD,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACd2C,EAAK2kJ,gBAAgBjxH,EAAQiyH,EAAal4F,GAAEpuD,MACvD,SAACogB,GACGzf,QAAK+rB,SAAS1uB,KAAK,IACboiB,CACV,GACH,OALDnd,EAAMnF,EAAA4B,KAAA,wBAAA5B,EAAAwC,OAAA,EAAA9C,EAAA,IAMT,gBAPgB00B,GAAA,OAAApwB,EAAAtB,MAAA5E,KAAA6E,UAAA,KAQXnC,EAAIqsB,IAAA,GACH9X,GAAO,IACV4zI,KAAI,IAAA7mJ,QAAOymJ,EAAO,KAAKttD,QAAQ,GAAE,aACjC1kE,SACAgY,cACAxtB,QAASjjB,KAAKijB,UAEZ5K,EAAMrY,KAAKiY,QAAQrD,KAAKq1I,EAAAR,sBAAuB,CAAE/mJ,SAAO2C,EAAAjD,KAAA,GACxDiW,EAAII,cAAcvV,YAAW,eAAAmC,EAAA9B,OAAA,SAC5B8D,GAAM,yBAAAhC,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IAChB,SAAAywC,EAAAzzB,GAAA,OAAAutI,EAAA3lJ,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,oBAAAC,MAAA,eAAAspJ,EAAArpJ,EAAAC,IAAAC,KAEO,SAAAsE,EAAwB8kJ,GAAwB,IAAAv2H,EAAAw2H,EAAA,OAAAtpJ,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OACK,GAAnDoyB,KAAMn0B,EAAAwxB,WAAU7xB,KAAKwwC,eAAgB45G,GACnC,CAAAhkJ,EAAAhE,KAAA,aAAQ,wBAAuB,OAAAgE,SAAAhE,KAAA,EACVoyB,EAAIC,QAAQ,qBAAsB,CAC3D,OACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACAs2H,IACF,OAdIC,OAAc5kJ,EAAA7C,OAAA,UAAdynJ,EAAc5kJ,EAAAtC,MAeEsP,IAAM43I,GAAc,wBAAA5kJ,EAAA1B,OAAA,EAAAuB,EAAAjG,KAAA,IAC7C,gBAAAirJ,EAAA1kH,GAAA,OAAAukH,EAAAlmJ,MAAA5E,KAAA6E,UAAA,EArBA,IAqBA,CAAAtD,IAAA,oBAAAC,MAAA,eAAA0pJ,EAAAzpJ,EAAAC,IAAAC,KAEO,SAAAmF,EAAwB6L,GAAY,IAAAw4I,EAAA32H,EAAA42H,EAAA,OAAA1pJ,IAAAO,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAEiB,GADrD+oJ,EAA0B,CAAC,EAAG,IAC5B32H,KAAMn0B,EAAAwxB,WAAU7xB,KAAKwwC,eAAgB45G,GACnC,CAAApjJ,EAAA5E,KAAA,eAAA4E,EAAAzD,OAAA,SAAS4nJ,GAAK,OAAAnkJ,SAAA5E,KAAA,EACKoyB,EAAIC,QAAQ,qBAAsB,CACzD,KACA,KACA9hB,IACF,OAJgB,IAAZy4I,EAAYpkJ,EAAAlD,MAKAmB,OAAM,CAAA+B,EAAA5E,KAAA,eAAA4E,EAAAzD,OAAA,SAAS4nJ,GAAK,cAAAnkJ,EAAAzD,OAAA,SAC/B6nJ,GAAY,yBAAApkJ,EAAAtC,OAAA,EAAAoC,EAAA9G,KAAA,IACtB,gBAAA2qJ,EAAAnkH,GAAA,OAAA0kH,EAAAtmJ,MAAA5E,KAAA6E,UAAA,EAbA,IAaA,CAAAtD,IAAA,kBAAAC,MAAA,eAAA6pJ,EAAA5pJ,EAAAC,IAAAC,KAEO,SAAA+wC,EACJja,EACAiyH,EACArB,GAAiC,IAAAthJ,EAAAikF,EAAAx3D,EAAAphB,EAAA,OAAA1R,IAAAO,KAAA,SAAA6wC,GAAA,cAAAA,EAAA3wC,KAAA2wC,EAAA1wC,MAAA,OAGQ,GADzCpC,KAAK8wB,SAAS1uB,KAAK,8BACnBC,QAAQO,IAAI,8BACGymJ,EAAY,CAAAv2G,EAAA1wC,KAAA,QAAA0wC,SAAA1wC,KAAA,EACfpC,KAAKirJ,kBAAkB5B,GAAa,OAAAv2G,EAAA3uC,GAAA2uC,EAAAhvC,KAAAgvC,EAAA1wC,KAAA,eAAA0wC,EAAA3uC,GAC1CnE,KAAKqqJ,aAAazxI,WAAU,OAFtB,GAANozE,EAAMl5C,EAAA3uC,GAGD,CAAA2uC,EAAA1wC,KAAA,cAAQ,6BAA4B,QAGU,GAFzDpC,KAAK8wB,SAAS1uB,KAAK,yBACnBC,QAAQO,IAAI,yBACN4xB,KAAMn0B,EAAAwxB,WAAU7xB,KAAKwwC,eAAgB45G,GACnC,CAAAt3G,EAAA1wC,KAAA,cAAQ,wBAAuB,QAAA0wC,SAAA1wC,KAAA,GACtBoyB,EAAIC,QAAgB,wBAAyB,CAC1DgE,EACAz4B,KAAKiB,KAAK4U,SAASsjD,UAAY,MAC/B,KACA,KACAuxF,EACA,KACA,KACA,KACa,QADT3iJ,KACJzH,EAAAmG,sBAAa,IAAAsB,OAAA,EAAbA,EAAepB,QACjB,QAVM,GAAFyM,EAAE0/B,EAAAhvC,KAWD,CAAAgvC,EAAA1wC,KAAA,cAAQ,2BAA0B,QACzCC,eAAQO,IAAI,yBAAyBkwC,EAAA1wC,KAAA,GAC/BoyB,EAAIC,QAAQ,yBAA0B,CAACrhB,EAAI44E,IAAQ,QACzD,OAAAhsF,KAAK8wB,SAAS1uB,KAAK,IAAI0wC,EAAAvvC,OAAA,SAChB,CACHotC,SAAS,EACThU,MAAO,WACPkU,WAAYz9B,EACZqlB,OAAQA,EACRsG,WAAY3kB,KAAK8W,MACjB8N,WAAY5kB,KAAK8W,QACpB,yBAAA4hB,EAAApuC,OAAA,EAAAguC,EAAA1yC,KAAA,IACJ,gBAAA0pJ,EAAAjjH,EAAAoN,EAAAm0B,GAAA,OAAAqjF,EAAAzmJ,MAAA5E,KAAA6E,UAAA,EAxCA,IAwCA,CAAAtD,IAAA,iBAAAC,MAAA,eAAA8pJ,EAAA7pJ,EAAAC,IAAAC,KAEO,SAAA2xC,IAAA,IAAA9e,EAAA7H,EAAA,OAAAjrB,IAAAO,KAAA,SAAAyxC,GAAA,cAAAA,EAAAvxC,KAAAuxC,EAAAtxC,MAAA,OACqD,GAAnDoyB,KAAMn0B,EAAAwxB,WAAU7xB,KAAKwwC,eAAgB45G,GACnC,CAAA12G,EAAAtxC,KAAA,aAAQ,wBAAuB,OACjCuqB,YAAOrsB,EAAAmG,eAAaitC,EAAAtxC,KAAA,EACToyB,EAAIC,QAAgB,kBAAmB,CACpD,EACA,KACA,KACA,KAAI,GAAAzwB,OACD2oB,EAAKvZ,GAAE,KAAApP,OAAI2oB,EAAKrZ,KAAI,gBACvBqZ,EAAKhmB,QACP,OAPIyM,OAAEsgC,EAAAnwC,OAAA,SAAAmwC,EAAA5vC,MAQC,wBAAA4vC,EAAAhvC,OAAA,EAAA4uC,EAAAtzC,KAAA,IACZ,gBAAA4qJ,IAAA,OAAAU,EAAA1mJ,MAAA5E,KAAA6E,UAAA,EAfA,MAeAivC,EAjIA,IAAAy2G,CAiIA,CAnJuB,GAmJvB3qJ,SAnJQk0C,0CAAezrC,EAAAgV,mBAAA9U,EAAAG,qBAAAL,EAAAgV,mBAAA5U,EAAAD,iBAAAH,EAAAgV,mBAAA1U,EAAAoQ,WAAA,qDAAf+6B,EAAex2B,QAAfw2B,EAAev2B,UAAAC,WAFZ,SAEHs2B,CAAe,sFCjC5Btd,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,sMCDA,IAAAiO,EAAA/P,EAAA,UACAA,EAAA,OACAA,EAAA,+GAqDoBwK,EAAA8E,yBAAA,mBAKI9E,EAAAuI,qBAAA,qBAAAG,GAAA1I,EAAA2I,wBAAAC,GAAA,IAAAC,EAAA7I,EAAA8I,0BAAA,OAAa9I,EAAA+I,sBAAAF,EAAAsnB,gBAAAznB,GAAuB,EAApC1I,CAAqC,oBAAA0I,GAAA1I,EAAA2I,wBAAAC,GAAA,IAAAa,EAAAzJ,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAAU,EAAAwqB,UAAAvrB,EAAA,GAGxC1I,EAAA+E,mEANG/E,EAAAwI,qBAAA,eAAAsB,EAAAmqB,UAAA,KAAAnqB,EAAAmqB,UAAAlpB,GAAA/K,CAAwB,WAAA8J,EAAAuqB,aAAxBr0B,CAAwB,YAAA8J,EAAAumB,yEAwBhCrwB,EAAA8E,yBAAA,eAMI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA0sC,GAAA,IAAAh8B,EAAArZ,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAAsQ,EAAA4a,UAAqB,KAAI,GAN7Bj0B,EAAAulB,iBAAA,MAUAvlB,EAAA+E,uFAuDJ/E,EAAA8E,yBAAA,kBAKI9E,EAAAuI,qBAAA,oBAAAG,GAAA1I,EAAA2I,wBAAAuE,GAAA,IAAAC,EAAAnN,EAAA8I,0BAAA,OAAA9I,EAAA+I,sBAAAoE,EAAA8mB,UAAAvrB,EAAA,GAEJ1I,EAAA+E,mEALI/E,EAAAwI,qBAAA,WAAAU,EAAAmrB,aAAAr0B,CAAyB,iBAAAkJ,EAAA+qB,UAAzBj0B,CAAyB,eAAAkJ,EAAA+qB,UAAA,KAAA/qB,EAAA+qB,UAAAlpB,KA5IzCzT,+BAsJyC,eAAAC,EAA5BonI,EAA4B,WAarC,SAAAA,EACY/jF,EACAjiD,EACAqtB,EAER4sB,GAA8Dl7C,EAAAC,KAAAgnI,GAJtDhnI,KAAAijD,cACAjjD,KAAAgB,YACAhB,KAAAquB,cAdLruB,KAAAkf,SAAoB,GACpBlf,KAAA89C,KAAO,OAiBV99C,KAAKkf,SAAQ6D,EAAQk4B,EAAM1+B,QAAU,IACrCvc,KAAKquB,YAAY3b,WAAWuoC,EAAMt4B,QACtC,CAAC7iB,SAAAknI,EAAA,EAAAzlI,IAAA,eAAAgE,IAjBD,WACI,OAAOvF,KAAKkf,SAASvD,IAAI,SAAC1Y,GAAC,OAAKA,EAAEmQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAAnT,IAAA,YAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAc,qBAAuB,EAC/D,GAAC,CAAAhE,IAAA,aAAAC,MAaM,SAAW4R,GACd,OAAOA,GAAMpT,KAAK08B,aAAa72B,SAASuN,EAC5C,GAAC,CAAA7R,IAAA,cAAAC,MAEM,SAAYsa,EAAa6gB,GAC5B,IAAM5pB,EAAO/S,KAAKkf,SAASrD,OAAO,SAAC5Y,GAAC,OAAKA,EAAEmQ,KAAO0I,EAAK1I,EAAE,GACrDupB,GAAO5pB,EAAKqjB,KAAKta,GACrB9b,KAAKkf,SAAWnM,GACX/S,KAAKgB,UAAUuE,IAAI,qCAAuCo3B,IAC3D38B,KAAKkf,SAAW,CAACpD,GACjB9b,KAAKijD,YAAYt7C,MAAM,CAACmU,IAEhC,GAAC,CAAAva,IAAA,kBAAAC,MAEM,SAAgBsa,GACnB,IAAM8d,EAAW55B,KAAK04B,UAChBmB,GAAaD,EAAS/zB,SAASiW,EAAK1I,IAEtCpT,KAAKgB,UAAU84B,gBAAgB,mBAD/BD,EACiD,GAAA71B,OAAA+e,EAC1C6W,GAAQ,CACX9d,EAAK1I,KAKLwmB,EAAS/d,OAAO,SAAC5Y,GAAC,OAAKA,IAAM6Y,EAAK1I,EAAE,GAGhD,KAAC4zH,CAAA,CApDoC,GAoDpCpnI,SApDQonI,0CAA4B3+H,EAAAC,4BAAAC,EAAA26C,cAAA76C,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAuM,kBAAA7M,EAAAC,4BAiBzBsF,EAAAivB,iBAAe,kDAjBlBmqG,EAA4Bj+H,UAAA,6BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,oOA5IhBsiB,UAAAC,MAAAC,EAAA,wyCAkFRF,UAAAG,MAAAD,EAAA,gWAgBwCF,UAAAI,MAAAF,EAAA,uHAGNF,UAAAM,MAAAJ,EAAA,kHAC/B,ySA/BHF,UAAAO,MAAAL,EAAA,sMA9ETrnB,EAAA8E,yBAAA,UAAA9E,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,GAEnBA,EAAA8E,yBAAA,QAAA9E,EAAAulB,iBAAA,KAAmBvlB,EAAA+E,yBACnB/E,EAAA8E,yBAAA,UAAA9E,CAA4D,cAOpDA,EAAAuI,qBAAA,0BAAAtH,EAAAw0C,KAAgB,KAAK,GAErBz1C,EAAAgF,iBAAA,WACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAMI9E,EAAAuI,qBAAA,0BAAAtH,EAAAw0C,KAAgB,MAAM,GAEtBz1C,EAAAgF,iBAAA,aACJhF,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,aAGI9E,EAAAkB,oBAAA,sBAGAlB,EAAA8E,yBAAA,WAAA9E,CAEC,+BAGOA,EAAAuI,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAw0C,KAAA/sC,CAAA,GACH1I,EAAA+E,yBACD/E,EAAA0J,qBAAA,GAAAw5I,EAAA,qBASJljJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,uBAOI9E,EAAAuI,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAAwzB,YAAAxzB,EAAAgzB,UAAAvrB,EAA8B,EAA9C1I,CAA+C,8BAElCiB,EAAAkvB,gBAAAlvB,EAAAgzB,UAA0B,EAFvCj0B,CAA+C,0BAAAiB,EAAAgzB,UAG1B,IAAI,GAC5Bj0B,EAAA+E,wBAAA/E,GAELA,EAAA8E,yBAAA,gBAGI9E,EAAA0J,qBAAA,GAAAy5I,EAAA,iBAWAnjJ,EAAA8E,yBAAA,gBAAA9E,EAAAulB,iBAAA,OAUAvlB,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,eAAA9E,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBASqCA,EAAAgF,iBAAA,iBAAUhF,EAAA+E,yBACpC/E,EAAA8E,yBAAA,aAAA9E,EAAAulB,iBAAA,OAA6CvlB,EAAA+E,wBAAA/E,KAGrDA,EAAA8E,yBAAA,WAAA9E,EAAAulB,iBAAA,OAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAMI9E,EAAAuI,qBAAA,0BAAStH,EAAAwzB,YAAAxzB,EAAAgzB,WAAwBhzB,EAAA2zB,WAAA,MAAA3zB,EAAAgzB,UAAA,KAAAhzB,EAAAgzB,UAAAlpB,IAA0B,GAE3D/K,EAAA8E,yBAAA,YAAA9E,CAA+B,kBACDA,EAAAgF,iBAAA,IAExBhF,EAAA+E,yBACF/E,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,IAKJhF,EAAA+E,wBAAA/E,SAKhBA,EAAA0J,qBAAA,GAAA05I,EAAA,0BAAApjJ,EAAAqd,0EAxHgBrd,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAAnW,EAAAw0C,MAUAz1C,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,mBAAAnW,EAAAw0C,MAkBAz1C,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAw0C,MAGCz1C,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBAAAvH,EAAAw0C,KAAAz1C,CAAuB,WAAAwd,GAY5Bxd,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,UAAAnW,EAAAgzB,UAAAj0B,CAA2B,UAAAiB,EAAAgzB,WAF3Bj0B,EAAAwI,qBAAA,QAAAvH,EAAAgzB,UAAAj0B,CAAmB,mBAAAiB,EAAAw0C,KAAnBz1C,CAAmB,SAAAiB,EAAAozB,aAAA72B,SAAA,MAAAyD,EAAAgzB,UAAA,KAAAhzB,EAAAgzB,UAAAlpB,IAAnB/K,CAAmB,MAAAiB,EAAAgzB,WAAAhzB,EAAAovB,UAAA7yB,SAAA,MAAAyD,EAAAgzB,UAAA,KAAAhzB,EAAAgzB,UAAAlpB,KAoBlB/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAgzB,WAWDj0B,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,OAAAnW,EAAAgzB,WADAj0B,EAAAwI,qBAAA,mBAAAvH,EAAA4V,UAeA7W,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,mBAAAvH,EAAA4V,UAUJ7W,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAxkB,EAAA4V,SAAAja,QAAAoD,EAAA2lB,sBAAA,IAMI3lB,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,UAAAnW,EAAA2zB,WAAA,MAAA3zB,EAAAgzB,UAAA,KAAAhzB,EAAAgzB,UAAAlpB,KADA/K,EAAAwI,qBAAA,YAAAvH,EAAAgzB,WAK8Bj0B,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA3K,EAAA2zB,WAAA,MAAA3zB,EAAAgzB,UAAA,KAAAhzB,EAAAgzB,UAAAlpB,IAAA,gBAItB/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,EAAA2zB,WAAA,MAAA3zB,EAAAgzB,UAAA,KAAAhzB,EAAAgzB,UAAAlpB,IAAA,gDAuBf4zH,CAA4B,6KC/JzC,IAAAn9H,EAAAhM,EAAA,OAOA+rC,EAAA/rC,EAAA,UACAA,EAAA,OAEAA,EAAA,2GAegBwK,EAAAkB,oBAAA,+DACIlB,EAAAwI,qBAAA,SAAAa,EAAA8K,MAAAoO,kCAgEAviB,EAAA8E,yBAAA,WAAA9E,CAGC,OAEGA,EAAAulB,iBAAA,MAAqBvlB,EAAA+E,wBAAA/E,6BAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAA49H,GAAArjJ,EAAA2lB,sBAAA,6BAX7B3lB,EAAA8E,yBAAA,eAAA9E,CAIC,WACGA,EAAAulB,iBAAA,MAAoDvlB,EAAA+E,yBACpD/E,EAAA0J,qBAAA,EAAA45I,EAAA,cAOJtjJ,EAAA+E,kEAL4B/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAK,EAAAsL,MAAAxT,6FAM5BX,EAAA8E,yBAAA,gBAKI9E,EAAAkB,oBAAA,wBAMJlB,EAAA+E,kEAJQ/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,MAAA4F,EAAA88B,QAAAlrC,CAAe,WAAAoO,EAAAzN,SAAfX,CAAe,UAAAA,EAAAmJ,0BAAA,EAAAsrC,kEA1F/Bz0C,EAAAiZ,kCAAA,GACIjZ,EAAA8E,yBAAA,eASI9E,EAAA0J,qBAAA,EAAA65I,EAAA,wBAKAvjJ,EAAA8E,yBAAA,cAII9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAA7mB,EAAA7X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA8O,EAAAvY,MAAA2X,OAAY,GAGrBjX,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,gBAAUhF,EAAA+E,wBAAA/E,GAExBA,EAAA8E,yBAAA,cAMI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAAhnB,EAAA1X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA2O,EAAAua,UAAAhb,OAAgB,GAGzBjX,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,GAERhF,EAAA+E,wBAAA/E,KAGVA,EAAA8E,yBAAA,UAAA9E,CAAsD,eAAtDA,CAAsD,WAG1CA,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,GAEJA,EAAAkB,oBAAA,SACAlB,EAAA8E,yBAAA,eAAA9E,CAAmC,YAC/BA,EAAAulB,iBAAA,OAA4CvlB,EAAA+E,yBAC5C/E,EAAA8E,yBAAA,YAAA9E,CAAyC,eAC3BA,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBAChB/E,EAAA8E,yBAAA,QAAA9E,EAAAulB,iBAAA,OAAmCvlB,EAAA+E,wBAAA/E,GAEvCA,EAAA8E,yBAAA,YAAA9E,CAAyC,eAC3BA,EAAAgF,iBAAA,mBAAYhF,EAAA+E,yBACtB/E,EAAA8E,yBAAA,QACI9E,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAAyC,eAC3BA,EAAAgF,iBAAA,YAAKhF,EAAA+E,yBACf/E,EAAA8E,yBAAA,QACI9E,EAAAgF,iBAAA,IAKJhF,EAAA+E,wBAAA/E,KAGRA,EAAAkB,oBAAA,SACAlB,EAAA0J,qBAAA,GAAA85I,EAAA,iBAAAxjJ,CAaU,GAAAyjJ,EAAA,kBAadzjJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAAA9E,CAEC,gBAOOA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA+1B,GAAA,IAAA9wB,EAAA5N,EAAA8I,0BAAA8E,SAAAukB,QAAAvkB,EAAAukB,OAA2BnyB,EAAA+I,sBAAA6E,EAAAwkB,aAAAnb,KAAArJ,EAAAukB,QAAyB,GAEpDnyB,EAAA8E,yBAAA,YAAA9E,CAA8C,kBACfA,EAAAgF,iBAAA,IAEzBhF,EAAA+E,yBACF/E,EAAA8E,yBAAA,QACI9E,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,OAIhBA,EAAAoZ,4EAjHQpZ,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,gBAAAtN,EAAAqK,MAAAoO,OAAA,KAAAzY,EAAAqK,MAAAoO,OAAA3lB,OAAAoD,CAAsC,aAAA8J,EAAAqK,MAAAoO,OAAA,KAAAzY,EAAAqK,MAAAoO,OAAA3lB,OAAtCoD,CAAsC,iBAAA8J,EAAAqK,MAAAoO,QAAAzY,EAAAqK,MAAAoO,OAAA3lB,QAAtCoD,CAAsC,eAAA8J,EAAAqK,MAAAoO,QAAAzY,EAAAqK,MAAAoO,OAAA3lB,QAAtCoD,CAAsC,0BAAA8J,EAAAqK,MAAAoO,QAAAzY,EAAAqK,MAAAoO,OAAA3lB,SAQjCoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAsB,EAAAqK,MAAAoO,OAAA,KAAAzY,EAAAqK,MAAAoO,OAAA3lB,QAgBDoD,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,cAAAtN,EAAAuoB,IAAAryB,CAAyB,gBAAA8J,EAAAuoB,KAKfryB,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAAuoB,IAAA,8BAQNryB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4E,EAAAqK,MAAAlH,cAAAnD,EAAAqK,MAAAlJ,KAAA,KAQmCjL,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAA3b,EAAAqK,MAAAmD,UAAAtX,EAAA2lB,sBAAA,IAK/B3lB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAA4E,EAAA0E,MAAA,KAAA1E,EAAA0E,MAAAvB,gBAAA,MAAAnD,EAAA0E,MAAA,KAAA1E,EAAA0E,MAAAvD,MAAA,KAMAjL,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,WAAA4E,EAAA0D,SAAA,KAAA1D,EAAA0D,SAAAwZ,WAAA,MAAAld,EAAA0D,SAAA,KAAA1D,EAAA0D,SAAAP,gBAAA,MAAAnD,EAAA0D,SAAA,KAAA1D,EAAA0D,SAAAvC,MAAA,KAYPjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAsB,EAAAqK,MAAAxT,SAAA,KAAAmJ,EAAAqK,MAAAxT,SAAA/D,QAcAoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAsB,EAAAw4B,UAiBDtiC,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,UAAAtN,EAAAqoB,QAK+BnyB,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAAqoB,OAAA,gBAIvBnyB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4E,EAAAqoB,OAAA,+DAOhBnyB,EAAA8E,yBAAA,WAAA9E,CAGC,UACGA,EAAAulB,iBAAA,MAEAvlB,EAAA+E,wBAAA/E,IAhIhB1I,wBAkJkC,eAAAC,EAArBmsJ,EAAqB,WAuB9B,SAAAA,EAAoB9qJ,GAAyBlB,EAAAC,KAAA+rJ,GAAzB/rJ,KAAAiB,OArBJjB,KAAA06B,KAAe,EACf16B,KAAAw6B,QAAkB,EAClBx6B,KAAA2qC,UAAoB,EAEnB3qC,KAAAy6B,aAAe,IAAI5wB,EAAAuV,aACnBpf,KAAA2H,MAAQ,IAAIkC,EAAAuV,aACZpf,KAAAs6B,UAAY,IAAIzwB,EAAAuV,aAE1Bpf,KAAAuzC,QAAU,GACVvzC,KAAAgJ,SAA4B,EAYa,CAAClJ,SAAAisJ,EAAA,EAAAxqJ,IAAA,QAAAgE,IAVjD,WAAgB,IAAA6nD,EAAAC,EACZ,OAAOrtD,KAAKiB,KAAKkuB,YAAsB,QAAXi+B,EAACptD,KAAKwc,aAAK,IAAA4wC,OAAA,EAAVA,EAAY15C,SAAoB,QAAd25C,EAAIrtD,KAAKwc,aAAK,IAAA6wC,OAAA,EAAVA,EAAYx2C,MACnE,GAAC,CAAAtV,IAAA,WAAAgE,IAED,WAAmB,IAAAnE,EAAApB,KACf,OAAOA,KAAKiB,KAAK8U,UAAUqZ,KAAK,SAACnsB,GAAC,IAAAqqD,EAAA,OACpB,QADoBA,EAC9BlsD,EAAKob,aAAK,IAAA8wC,OAAA,EAAVA,EAAY55C,MAAM7N,SAAS5C,EAAEmQ,GAAG,EAExC,GAAC,CAAA7R,IAAA,cAAAC,MAIM,SAAY63B,GACXA,EAAQ7c,OAASxc,KAAKwc,OACtBxc,KAAKwtD,gBAEb,GAAC,CAAAjsD,IAAA,iBAAAC,MAEO,WAAc,IAAA+gD,EAAAgL,EAClBvtD,KAAKuzC,QAAoB,QAAbgP,EAAGviD,KAAK6W,aAAK,IAAA0rC,OAAA,EAAVA,EAAYhvC,OAC3BvT,KAAKgJ,SAAW,CACZ,CACIrD,SAAoB,QAAZ4nD,EAAEvtD,KAAKwc,aAAK,IAAA+wC,OAAA,EAAVA,EAAYh6C,OACtB4T,QAASyiB,EAAAxiB,iBAGrB,KAAC2kI,CAAA,CAvC6B,GAuC7BnsJ,SAvCQmsJ,0CAAqB1jJ,EAAAC,4BAAAC,EAAAG,qBAAA,kDAArBqjJ,EAAqBhjJ,UAAA,oBAAAwW,OAAA,CAAA/C,MAAA,QAAAke,IAAA,MAAAF,OAAA,SAAAmQ,SAAA,YAAAnrB,QAAA,CAAAib,aAAA,eAAA9yB,MAAA,QAAA2yB,UAAA,aAAAtxB,SAAA,CAAAX,EAAA+xB,gCAAAlxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,4kBAjGuBsiB,UAAAC,MAAAC,EAAA,8HAGzBF,UAAAG,MAAAD,EAAA,wjBAyByBF,UAAAI,MAAAF,EAAA,4JAMzBF,UAAAM,MAAAJ,EAAA,gZA2CuBF,UAAAO,MAAAL,EAAA,sJA3H/CrnB,EAAA0J,qBAAA,EAAAi6I,EAAA,uBAAA3jJ,CAqHe,EAAA4jJ,EAAA,yBAAA5jJ,EAAAqd,wEArHArd,EAAAwI,qBAAA,OAAAvH,EAAAkT,MAAAnU,CAAa,WAAAuf,8UA+IvBmkI,CAAqB,iRC9JlC,IAAAliJ,EAAAhM,EAAA,OAEAyC,GADAzC,EAAA,OACAA,EAAA,QAGAuC,GAFAvC,EAAA,OACAA,EAAA,OACAA,EAAA,QACAquJ,EAAAruJ,EAAA,4JA6CYwK,EAAA8E,yBAAA,eAMI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAysC,GAAA,IAAAhnC,EAAApO,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAqF,EAAA01I,oBAAmB,GAE5B9jJ,EAAAgF,iBAAA,qBACJhF,EAAA+E,mDACA/E,EAAA8E,yBAAA,YAMI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAqI,EAAAjQ,SAAA,+BAMA0C,EAAAiZ,kCAAA,GACIjZ,EAAAgF,iBAAA,6DAEJhF,EAAAoZ,0EAFIpZ,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAArX,EAAA8L,sBAAA,IAAA5C,EAAA0d,MAAA1d,EAAAsd,aAAA,WAAAxmB,EAAA8L,sBAAA,IAAA5C,EAAAgT,IAAAhT,EAAAsd,aAAA,4BAGJxmB,EAAAiZ,kCAAA,GAA8BjZ,EAAAgF,iBAAA,aAAOhF,EAAAoZ,gGAKzCpZ,EAAA8E,yBAAA,WAAA9E,CAAkE,UAC1CA,EAAAgF,iBAAA,GAAUhF,EAAA+E,yBAC9B/E,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,uBAAAgsC,EAAAv0C,EAAA2I,wBAAA+1B,GAAAnpB,UAAAsC,EAAA7X,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA8O,EAAA2tC,cAAAjR,GAAmB,GAE5Bv0C,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,+BARCA,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA2oC,IA3EpCj9C,+BAkH0C,eAAAC,EAA7BwsJ,EAA6B,SAAAzrJ,GAAAC,EAAAwrJ,EAAAzrJ,GAAA,IA0CrCotD,EA1CqCjtD,EAAAC,EAAAqrJ,GA0BtC,SAAAA,EACYvuG,EACAxvB,EACAptB,EACAD,GAA0B,IAAAI,EAAArB,SAAAC,KAAAosJ,IAElChrJ,EAAAN,EAAAO,KAAArB,OALQ69C,UACAz8C,EAAAitB,cACAjtB,EAAAH,OACAG,EAAAJ,YA7BII,EAAA08C,KAAuB,OACtB18C,EAAA28C,WAAa,IAAIl0C,EAAAuV,aAClBhe,EAAAuhB,QAAUvhB,EAAKitB,YAAY1L,QACpCvhB,EAAAuE,SAAmB,GAmBVvE,EAAA4sD,YAAc,kBAC1B5sD,EAAKy8C,QAAQjpC,KAAKs3I,EAAAG,sBAAsB,EAACjrJ,CAS7C,CAACtB,SAAAssJ,EAAA,EAAA7qJ,IAAA,UAAAgE,IA3BD,WACI,OAAOvF,KAAKquB,YAAY/d,KAAK9O,MAAM+uB,OACvC,GAAC,CAAAhvB,IAAA,QAAAgE,IAED,WACI,OAAOvF,KAAKquB,YAAY/d,KAAK9O,MAAMmQ,IACvC,GAAC,CAAApQ,IAAA,MAAAgE,IAED,WACI,IAAA2oD,EAA2BluD,KAAKquB,YAAY/d,KAAK9O,MACjD,OADY0sD,EAAJv8C,KACiB,GADHu8C,EAARt8C,SACgB,GAClC,GAAC,CAAArQ,IAAA,cAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAU6tB,WAC1B,GAAC,CAAAttB,IAAA,WAAAC,MAcM,WAAQ,IAAAuD,EAAA/E,KACXA,KAAK4S,aACD,OACA5S,KAAK2iB,QAAQ7P,UAAU,SAAA5M,GAAW,OAC9BnB,EAAKopD,gBADyBjoD,EAARipD,SACQ,GAG1C,GAAC,CAAA5tD,IAAA,gBAAAC,OAAAusD,EAAAtsD,EAAAC,IAAAC,KAEM,SAAAC,EAAoBwsD,GAAY,IAAA5sD,EAAA,OAAAE,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACfpC,KAAKquB,YAAY1L,QAAQ5f,QAAK3C,EAAA2b,MAAK,IAAI7Y,YAAW,OACtElD,KAAKquB,YAAY3b,WAAUqc,IAAA,GADrBvtB,EAAKU,EAAA4B,MAEC,IACRkF,UAAWxH,EAAMwH,UAAY,IAAI6S,OAAO,SAAC5Y,GAAC,OAAKA,IAAMmrD,CAAI,MAC1D,wBAAAlsD,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACN,SAAA6tD,EAAA7wC,GAAA,OAAA+wC,EAAAnpD,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,oBAAAC,MAAA,eAAA8qJ,EAAA7qJ,EAAAC,IAAAC,KAEM,SAAAwD,IAAA,OAAAzD,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACiBpC,KAAKquB,YAAY1L,QAAQ5f,QAAK3C,EAAA2b,MAAK,IAAI7Y,YAAW,OACtElD,KAAKquB,YAAY3b,WAAUqc,IAAA,GADhB1pB,EAAAvB,MAEC,IACRkF,SAAU,MACX,wBAAA3D,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IACN,gBAAAmsJ,IAAA,OAAAG,EAAA1nJ,MAAA5E,KAAA6E,UAAA,EARA,IAQA,CAAAtD,IAAA,kBAAAC,MAEO,WAAuC,IAErCsa,EADQ9b,KAAKiB,KAAKkuB,YADJtqB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,KAEnB7E,KAAKiB,KAAK4U,SAChC7V,KAAK2F,SAAWmW,GAAMxG,cAAgBwG,GAAMxI,MAAQ,EACxD,KAAC84I,CAAA,CAhEqC,CAAQ9rJ,EAAA8H,cAAYxI,SAAjDwsJ,0CAA4B/jJ,EAAAC,4BAAAC,EAAA4M,gBAAA9M,EAAAC,4BAAAG,EAAAyM,kBAAA7M,EAAAC,4BAAAK,EAAAD,qBAAAL,EAAAC,4BAAAO,EAAAL,iBAAA,kDAA5B4jJ,EAA4BrjJ,UAAA,4BAAAwW,OAAA,CAAAu+B,KAAA,QAAAt+B,QAAA,CAAAu+B,WAAA,cAAA/0C,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,0KAvG5BsiB,UAAAC,MAAAC,EAAA,+MAYIF,UAAAG,MAAAD,EAAA,kLAWAF,UAAAI,MAAAF,EAAA,ghBAqCwDF,UAAAM,MAAAJ,EAAA,gHACpD,yWArEbrnB,EAAA8E,yBAAA,cAAA9E,CAAmE,cAM3DA,EAAAuI,qBAAA,0BAAStH,EAAA0kD,aAAa,GAL1B3lD,EAAAulB,iBAAA,KASAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,CAA+B,cAOvBA,EAAAuI,qBAAA,mBAAAtH,SAAAw0C,KAAgB,MAAOx0C,EAAAy0C,WAAAz+B,KAAAhW,EAAAw0C,KAAqB,GANhDz1C,EAAAulB,iBAAA,KAUAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,cAMI9E,EAAAuI,qBAAA,mBAAAtH,SAAAw0C,KAAgB,OAAQx0C,EAAAy0C,WAAAz+B,KAAAhW,EAAAw0C,KAAqB,GANjDz1C,EAAAulB,iBAAA,KAUAvlB,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,eAII9E,EAAA0J,qBAAA,EAAAw6I,EAAA,+CAUAlkJ,EAAA0J,qBAAA,GAAAy6I,EAAA,cAQAnkJ,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,kCACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,aACI9E,EAAA0J,qBAAA,GAAA06I,EAAA,sBAAApkJ,CAGe,GAAAqkJ,EAAA,uBAEnBrkJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,aAAA9E,EAAAulB,iBAAA,sCAEAvlB,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAA46I,EAAA,6CAYJtkJ,EAAA+E,gCAlEY/E,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,kBAAAnW,EAAAw0C,MAWAz1C,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,mBAAAnW,EAAAw0C,MAiBHz1C,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAAAiF,EAAAzN,EAAAsN,sBAAA,MAAArM,EAAAqZ,WAAA,MAAA7M,EAAA9M,SAAA,KAAA8M,EAAA9M,SAAA/D,QAAA,GASAoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA3D,UAKD0C,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,MAAA7K,EAAA2lB,MAAA,mBAGe5mB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAAinB,SAIAloB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAinB,SAInBloB,EAAAiF,oBAAA,GAAAjF,EAAAylB,qBAAA,OAAAsnF,EAAA/sG,EAAAsN,sBAAA,MAAArM,EAAAqZ,UAAA,KAAAyyF,EAAAz1F,WAAA,GAAAtX,EAAA2lB,sBAAA,IACkC3lB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,iBAAA+7I,EAAAvkJ,EAAAsN,sBAAA,MAAArM,EAAAqZ,UAAA,KAAAiqI,EAAA5jJ,ulBAwCjCojJ,CAA6B,sPCzH1CvuJ,EAAA,WACAyC,EAAAzC,EAAA,OACA4yB,EAAA5yB,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,UAEAA,EAAA,OACAA,EAAA,OAEAA,EAAA,iQAOgBwK,EAAA8E,yBAAA,eAKI9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA0sC,IAAA,IAAAh8B,GAAArZ,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAsQ,GAAA/Z,QAAO,GAEhBU,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,yBAAmBhF,EAAA+E,wBAAA/E,+BA6BrBA,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,mDAHI/E,EAAAwI,qBAAA,QAAA4tC,IAEAp2C,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAkxC,GAAAnpC,cAAAmpC,GAAAnrC,KAAA,8GAnBZjL,EAAA8E,yBAAA,sBAAA9E,CAIC,mBAIOA,EAAAuI,qBAAA,yBAAAG,IAAA1I,EAAA2I,wBAAAgF,IAAA,IAAAC,GAAA5N,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAA6E,GAAAR,YAAA1E,IAAmB,6FAOpC1I,EAAA0J,qBAAA,EAAA86I,EAAA,mDAMJxkJ,EAAA+E,wBAAA/E,kDAdIA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAC,GAAAC,UAAAxN,CAA4B,iBAAAA,EAAAmJ,0BAAA,GAAA6yC,GAA5Bh8C,CAA4B,sBAAAyN,GAAAzN,EAAAsN,sBAAA,IAAAC,GAAAC,WAAA,KAAAC,GAAAR,gBAAA,OAAAQ,GAAAzN,EAAAsN,sBAAA,IAAAC,GAAAC,WAAA,KAAAC,GAAAxC,OASRjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,KAAAC,GAAAG,wCAiBpB1N,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,mDAHI/E,EAAAwI,qBAAA,QAAAg6C,GAAAz3C,IAEA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAs9C,GAAAv1C,cAAAu1C,GAAAv3C,KAAA,+BAiBhBjL,EAAA8E,yBAAA,WAAA9E,CAA+D,qBAC3DA,EAAAulB,iBAAA,MAEAvlB,EAAA+E,wBAAA/E,oEAEJA,EAAA8E,yBAAA,WAAA9E,CAGC,WAHDA,CAGC,cAEOA,EAAAgwB,sBAAA,MACchwB,EAAAkB,oBAAA,UACdlB,EAAAiwB,sBAAAjwB,EAAA+E,yBACA/E,EAAA8E,yBAAA,qBAGI9E,EAAAuI,qBAAA,yBAAAG,IAAA1I,EAAA2I,wBAAAsF,IAAA,IAAAC,GAAAlO,EAAA8I,0BAAA,OAAiB9I,EAAA+I,sBAAAmF,GAAAjG,KAAAe,WAAA,CAAAM,KAAAZ,KAAiC,GAGrD1I,EAAA+E,wBAAA/E,GAELA,EAAA8E,yBAAA,WAAA9E,CAA0B,cACtBA,EAAAgwB,sBAAA,MACahwB,EAAAkB,oBAAA,UAAclB,EAAAiwB,sBAAAjwB,EAAA+E,yBAE3B/E,EAAAkB,oBAAA,0BAQJlB,EAAA+E,wBAAA/E,+CAlBQA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAK,GAAAZ,KAAA9O,MAAAmQ,KAAAtJ,CAA2B,iBAAAA,EAAAmJ,0BAAA,EAAA6yC,GAA3Bh8C,CAA2B,WAAA6I,GAAA4tC,UAa3Bz2C,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAAK,GAAAZ,MAAA,MAAAY,GAAAZ,KAAA9O,MAAA,KAAA0P,GAAAZ,KAAA9O,MAAAmQ,KAAAtJ,CAA0B,MAAA6I,GAAA0G,aAA1BvP,CAA0B,WAAA6I,GAAA4tC,2EAgClCz2C,EAAA8E,yBAAA,WAAA9E,CAGC,YAEOA,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,qBAKI9E,EAAAuI,qBAAA,yBAAAG,IAAA1I,EAAA2I,wBAAAuzC,IAAA,IAAAwG,GAAA1iD,EAAA8I,0BAAAyM,UAAArG,GAAAlP,EAAA8I,wBAAA,UAAiB9I,EAAA+I,sBAAAmG,GAAAm3C,cAAA3D,GAAAh6C,IAA2B,iCAE/C1I,EAAA+E,wBAAA/E,4FATGA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4J,GAAA21I,gBAAA/hG,QAAA,KAIA1iD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,iBAAAyN,GAAAjW,EAAAsN,sBAAA,IAAAwB,GAAAwL,WAAA,MAAArE,GAAAtV,SAAA,KAAAsV,GAAAtV,SAAAnD,SAAAklD,IAAA1iD,CAEC,iBAAAA,EAAAmJ,0BAAA,EAAA6yC,iCAZbh8C,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAAg7I,EAAA,cAgBJ1kJ,EAAAoZ,4FAdSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAmG,GAAAg2I,cAAAnnJ,SAAAklD,kCATb1iD,EAAA8E,yBAAA,eAAA9E,CAIC,UACGA,EAAAulB,iBAAA,MAA+CvlB,EAAA+E,yBAC/C/E,EAAA0J,qBAAA,EAAAk7I,GAAA,qDAkBJ5kJ,EAAA+E,mEAlBmC/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAc,GAAAzN,6EAoBvCX,EAAA8E,yBAAA,WAAA9E,CAGC,eAMOA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAA0zC,IAAA,IAAAhkC,GAAArY,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAsP,GAAA/Y,QAAO,GALpBU,EAAAulB,iBAAA,MASAvlB,EAAA+E,wBAAA/E,IA5KZ1I,wBA0LkC,eAAAC,GAArBysJ,EAAqB,WAwD9B,SAAAA,GAEYhtG,GACAr+C,GACAqtB,GACAptB,GACAghB,IAAsB,IAAA7gB,GAAApB,KAAAD,EAAAC,KAAAqsJ,IAJtBrsJ,KAAAq/C,eACAr/C,KAAAgB,aACAhB,KAAAquB,eACAruB,KAAAiB,QACAjB,KAAAiiB,WA7DLjiB,KAAAs/C,WAAY,EACHt/C,KAAA2iB,QAAU3iB,KAAKquB,YAAY1L,QAE3B3iB,KAAA6V,SAAW7V,KAAKiB,KAAKiX,gBACrBlY,KAAA+V,UAAY/V,KAAKiB,KAAKs+C,iBACtBv/C,KAAAyiB,OAASziB,KAAKiB,KAAKu+C,cACnBx/C,KAAAgJ,YAAW2Q,EAAA+I,eAAc,CACrC1iB,KAAKiiB,QAAQjZ,SACbhJ,KAAKquB,YAAYvT,mBAClB/X,QACC3C,EAAAub,KAAI,SAAAzV,IAAA,IAAA6B,GAAA6a,EAAA1c,GAAA,GAAkB,SAClB5F,EAAA6sC,QADUplC,GAAA,GACM/D,UAAO1D,EAAAgyB,SADLvqB,GAAA,GACoB4T,IAAI,SAAC1Y,IAAC,OAAKA,GAAE+F,QAAQ,KAAI,IAQvDhJ,KAAA2H,MAAQ,kBAAMvG,GAAKi+C,YAAYzgC,SAAS,EACxC5e,KAAA0S,WAAa,SAACwQ,IAAC,OAAK9hB,GAAKitB,YAAY3b,WAAWwQ,GAAE,EA2C9DljB,KAAKs/C,YAAct/C,KAAKq/C,WAC5B,CAACv/C,SAAAusJ,GAAA,EAAA9qJ,IAAA,gBAAAgE,IAjDD,WACI,QAASvF,KAAKgB,UAAUuE,IAAI,2BAChC,GAAC,CAAAhE,IAAA,MAAAgE,IAKD,WACI,OAAOvF,KAAKiB,KAAK4U,QACrB,GAAC,CAAAtU,IAAA,OAAAgE,IAED,WACI,OAAOvF,KAAKquB,YAAY/d,IAC5B,GAAC,CAAA/O,IAAA,eAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,4BAA8B,GAC5D,GAAC,CAAAhE,IAAA,kBAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,mCAAqC,EACnE,GAAC,CAAAhE,IAAA,gBAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,6BAA+B,EAC7D,GAAC,CAAAhE,IAAA,WAAAgE,IAED,WACI,OAAOvF,KAAKgB,UAAUuE,IAAI,uBAC9B,GAAC,CAAAhE,IAAA,WAAAgE,IAED,WACI,SAAOkrB,EAAA4C,aACH5C,EAAAkvB,SACIvlC,KAAK8W,MACLlxB,KAAKgB,UAAUuE,IAAI,mCAAqC,KAGpE,GAAC,CAAAhE,IAAA,cAAAC,MAaM,SAAYqX,IACf7Y,KAAKiB,KAAK4U,SAAWgD,EACzB,GAAC,CAAAtX,IAAA,gBAAAC,OAAAwtD,GAAAvtD,EAAAC,IAAAC,KAEM,SAAAC,GAAoBwsD,GAAczxB,IAAc,IAAAsyB,GAAA,OAAAvtD,IAAAO,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,EACxBpC,KAAK2iB,QAAQ5f,QAAK3C,EAAA2b,MAAK,IAAI7Y,YAAW,OAC3D+rD,IAD2D/sD,GAAA4B,KAAzDkF,UACsB,IAAI6S,OAAO,SAAC5Y,IAAC,OAAKmrD,KAASnrD,EAAC,GACtD05B,IAAOsyB,GAAS74B,KAAKg4B,IACzBpuD,KAAK0S,WAAW,CAAE1J,SAAUimD,KAAY,wBAAA/sD,GAAAwC,OAAA,EAAA9C,GAAA5B,KAAA,IAC3C,SAAA0uD,GAAA1xC,GAAAsZ,IAAA,OAAA04B,GAAApqD,MAAA5E,KAAA6E,UAAA,MAAAwnJ,GAPA,IAAAr9F,EAOA,CA5E6B,GA4E7BpvD,UA5EQysJ,6CAAqBhkJ,EAAAC,4BAAAC,EAAAuW,kBAAA,GAAAzW,EAAAC,4BAAAG,EAAAD,iBAAAH,EAAAC,4BAAAK,EAAAuM,kBAAA7M,EAAAC,4BAAAO,EAAAH,qBAAAL,EAAAC,4BAAAyc,EAAAD,eAAA,mDAArBunI,GAAqBtjJ,UAAA,oBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,oOA3K0BsiB,UAAAC,MAAAC,EAAA,yRAQPF,UAAAG,MAAAD,EAAA,0JAENF,UAAAI,MAAAF,EAAA,gNA8BNF,UAAAM,MAAAJ,EAAA,+NAcEF,UAAAO,MAAAL,EAAA,2HAAI,kBAAO,oEAMjCF,UAAA0rB,MAAAxrB,EAAA,oGACG,oJAyC6BF,UAAAowB,MAAAlwB,EAAA,oGACjC,4EAGyCF,UAAAqwB,MAAAnwB,EAAA,oGACrC,4ZAzCyCF,UAAAswB,MAAApwB,EAAA,yKASZF,UAAAuwB,MAAArwB,EAAA,kIACf,iBAAO,oHAYhBF,UAAAwwB,MAAAtwB,EAAA,+HAAQ,iBAAO,4HAmCSF,UAAA83B,MAAA53B,EAAA,2XAgCxCF,UAAA+3B,MAAA73B,EAAA,kJAvKLrnB,EAAA8E,yBAAA,UAAA9E,CAAuE,WAE/DA,EAAA0J,qBAAA,EAAAm7I,EAAA,gBASJ7kJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,UAAA9E,EAAAulB,iBAAA,KAA6DvlB,EAAA+E,yBAC7D/E,EAAAkB,oBAAA,WACJlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,WAAA9E,CAGC,cAHDA,CAGC,UAEOA,EAAAulB,iBAAA,KAA4CvlB,EAAA+E,yBAC5C/E,EAAA8E,yBAAA,YAAA9E,CAAgD,eAC5CA,EAAAulB,iBAAA,OAAmCvlB,EAAA+E,yBACnC/E,EAAA0J,qBAAA,GAAAo7I,EAAA,yDAuBA9kJ,EAAA8E,yBAAA,uBAAA9E,CAAoD,oBAI5CA,EAAAuI,qBAAA,yBAAAG,IAAA,OAAiBzH,GAAAoJ,WAAA,CAAAy8C,SAAAp+C,IAAgC,kCAMjD1I,EAAA0J,qBAAA,GAAAq7I,EAAA,oDAMJ/kJ,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,YAAA9E,CAAkC,eAC9BA,EAAAgwB,sBAAA,OAA2BhwB,EAAAkB,oBAAA,WAAclB,EAAAiwB,sBAAAjwB,EAAA+E,yBACzC/E,EAAA8E,yBAAA,sBAAA9E,EAAAulB,iBAAA,0CAOAvlB,EAAA+E,wBAAA/E,GAGJA,EAAA0J,qBAAA,GAAAs7I,GAAA,aAAAhlJ,CAIM,GAAAilJ,EAAA,eA+BVjlJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,gBAAA9E,CAAqC,WACjCA,EAAAulB,iBAAA,0CAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAAA9E,CAA+B,aAC3BA,EAAAulB,iBAAA,0CAEAvlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,sBAGI9E,EAAAuI,qBAAA,yBAAAG,IAAA,OAAiBzH,GAAAoJ,WAAA,CAAAirC,SAAA5sC,IAAgC,kCAGrD1I,EAAA+E,wBAAA/E,KAGRA,EAAA0J,qBAAA,GAAAw7I,GAAA,iDAyBJllJ,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAAy7I,GAAA,sBAtJanlJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAg2C,WAWTj3C,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAvH,GAAAgH,MASajI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,eAAAiF,GAAAzN,EAAAsN,sBAAA,MAAArM,GAAAyM,YAAA,KAAAD,GAAA7Q,QAAA,GAuBGoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,iBAAAuB,GAAA/J,EAAAsN,sBAAA,MAAArM,GAAAqZ,UAAA,KAAAvQ,GAAA+8C,SAAA9mD,CAAuC,iBAAAA,EAAAmJ,0BAAA,GAAA6yC,GAAvCh8C,CAAuC,eAQnBA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,MAAArM,GAAAmZ,SAcxBpa,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,KAAAvH,GAAAk3C,UAGJn4C,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAzlB,EAAAsN,sBAAA,0BAAAtN,EAAA2lB,sBAAA,IAGE3lB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAA+I,eAODhK,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,GAAAgH,KAAA9O,MAAA+uB,SAgCLloB,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAzlB,EAAAsN,sBAAA,4BAAAtN,EAAA2lB,sBAAA,IAII3lB,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAAzlB,EAAAsN,sBAAA,gCAAAtN,EAAA2lB,sBAAA,IAGI3lB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,iBAAA0+C,GAAAlnD,EAAAsN,sBAAA,MAAArM,GAAAqZ,UAAA,KAAA4sC,GAAA5R,SAAAt1C,CAAuC,iBAAAA,EAAAmJ,0BAAA,GAAA6yC,IAU9Ch8C,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAA2+C,GAAAnnD,EAAAsN,sBAAA,MAAArM,GAAAN,WAAA,KAAAwmD,GAAAvqD,QAyBJoD,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,GAAAg2C,yfAyBA+sG,CAAqB,wKCtMlC,IAAAxiJ,EAAAhM,EAAA,UACAA,EAAA,OACAA,EAAA,oHA+B4BwK,EAAA8E,yBAAA,WAAA9E,CAGC,cACaA,EAAAgF,iBAAA,UAAIhF,EAAA+E,wBAAA/E,4BAElBA,EAAAkB,oBAAA,6DAOIlB,EAAAwI,qBAAA,SAAA4+C,EAAA7kC,OAAA,0BAGAviB,EAAAkB,oBAAA,yEA/BhBlB,EAAA8E,yBAAA,SAAA9E,CAKC,eAKOA,EAAAuI,qBAAA,uBAAA6+C,EAAApnD,EAAA2I,wBAAAmd,GAAAvQ,UAAAzH,EAAA9N,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAA+E,EAAAu5C,YAAAD,GAAkB,GAE3BpnD,EAAA8E,yBAAA,YAGI9E,EAAA0J,qBAAA,EAAA07I,EAAA,aAAAplJ,CAKM,EAAAqlJ,EAAA,aALNrlJ,CAKM,EAAAslJ,EAAA,0BAAAtlJ,EAAAqd,kCAgBVrd,EAAA+E,yBACA/E,EAAA8E,yBAAA,WAAA9E,CAAuB,YAEfA,EAAAgF,iBAAA,GAKJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAAA9E,CAAiD,kBACjBA,EAAAgF,iBAAA,YAAKhF,EAAA+E,yBACjC/E,EAAA8E,yBAAA,WACI9E,EAAAgF,iBAAA,IAKJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAAiD,kBACjBA,EAAAgF,iBAAA,aAAMhF,EAAA+E,yBAClC/E,EAAA8E,yBAAA,QAAA9E,EAAAulB,iBAAA,OAKAvlB,EAAA+E,wBAAA/E,OAIZA,EAAA8E,yBAAA,gBAMI9E,EAAAuI,qBAAA,uBAAA6+C,EAAApnD,EAAA2I,wBAAAmd,GAAAvQ,UAAAQ,EAAA/V,EAAA8I,wBAAA,UAAS9I,EAAA+I,sBAAAgN,EAAAkc,UAAAhb,KAAAmwC,GAAqB,GAE9BpnD,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,IAIRhF,EAAA+E,wBAAA/E,6FA3ENA,EAAAoX,sBAAA,eAAA3N,EAAA0oB,SAAAi1B,EAAAr8C,IAca/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAiB,EAAAoN,SAAArZ,SAAA4pD,EAAAr8C,KAMA/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,aAAA4+C,EAAA7kC,OAAA,KAAA6kC,EAAA7kC,OAAA3lB,OAAAoD,CAGnB,WAAAgzB,GAakBhzB,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAkiD,EAAAn6C,cAAAm6C,EAAAn8C,MAAA,qBASIjL,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAkiD,EAAA9pD,WAAA,OAAA44C,EAAAzsC,EAAA+E,MAAA44C,EAAA/7C,QAAA,KAAA6qC,EAAAjpC,gBAAA,OAAAipC,EAAAzsC,EAAA+E,MAAA44C,EAAA/7C,QAAA,KAAA6qC,EAAAjrC,MAAA,KAcJjL,EAAAiF,oBAAA,GAAAjF,EAAAylB,oBAAA2hC,EAAA9vC,SAAA,IAAA8vC,EAAA9vC,UAAAtX,EAAA2lB,sBAAA,IASR3lB,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,YAAA3N,EAAAypB,YAAAk0B,EAAAr8C,KAGU/K,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAAnC,EAAAypB,YAAAk0B,EAAAr8C,IAAA,wDA9EtB/K,EAAA8E,yBAAA,UAII9E,EAAA0J,qBAAA,EAAA67I,EAAA,4CAiFJvlJ,EAAA+E,kEA/E0B/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAAc,EAAAqE,6CAP9BzS,EAAAiZ,kCAAA,GACIjZ,EAAA0J,qBAAA,EAAA87I,EAAA,0CAsFJxlJ,EAAAoZ,yGApFSpZ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,cAAAwQ,EAAAhZ,EAAAsN,sBAAA,IAAAxD,EAAA2I,mBAAA,KAAAuG,EAAApc,OAAAoD,CAA0C,WAAAuf,0BAsF/Cvf,EAAA8E,yBAAA,WAAA9E,CAGC,UACGA,EAAAulB,iBAAA,MAEAvlB,EAAA+E,wBAAA/E,0BAIJA,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,UAAA9E,EAAAulB,iBAAA,MAAsDvlB,EAAA+E,wBAAA/E,UADzCA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBA9G7BlR,qBA8H+B,eAAAC,EAAlBkuJ,EAAkB,WAU3B,SAAAA,EACYz/H,EACAptB,GAAyBlB,EAAAC,KAAA8tJ,GADzB9tJ,KAAAquB,cACAruB,KAAAiB,OAXIjB,KAAAw6B,OAAiB,GACjBx6B,KAAAkf,SAAmB,GACnBlf,KAAA04B,UAAsB,GACrB14B,KAAA67B,SAAW,IAAIhyB,EAAAuV,aACfpf,KAAAs6B,UAAY,IAAIzwB,EAAAuV,aACjBpf,KAAAijB,QAAUjjB,KAAKquB,YAAYpL,QAE3BjjB,KAAA8a,iBAAmB9a,KAAKquB,YAAYvT,gBAKjD,CAAChb,SAAAguJ,EAAA,EAAAvsJ,IAAA,QAAAC,MAEG,SAAMkS,GACT,OAAO1T,KAAKiB,KAAKkuB,YAAYzb,EACjC,GAAC,CAAAnS,IAAA,WAAAC,MAEM,WACHxB,KAAKquB,YAAYpZ,QAAQ,OAC7B,GAAC,CAAA1T,IAAA,cAAAC,MAEM,SAAYyuD,GACf,OAAOjwD,KAAK04B,UAAU7yB,SAASoqD,EACnC,GAAC,CAAA1uD,IAAA,cAAAC,MAEM,SAAYgb,GACfxc,KAAK67B,SAASvc,KAAK9C,EACvB,KAACsxI,CAAA,CA7B0B,GA6B1BluJ,SA7BQkuJ,0CAAkBzlJ,EAAAC,4BAAAC,EAAA2M,kBAAA7M,EAAAC,4BAAAG,EAAAC,qBAAA,kDAAlBolJ,EAAkB/kJ,UAAA,iBAAAwW,OAAA,CAAAib,OAAA,SAAAtb,SAAA,WAAAwZ,UAAA,aAAAlZ,QAAA,CAAAqc,SAAA,WAAAvB,UAAA,aAAApxB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,+EA1HuBsiB,UAAAC,MAAAC,EAAA,oHAC1C,2+BAgE4BF,UAAAG,MAAAD,EAAA,2GACJ,ueA8BmBF,UAAAI,MAAAF,EAAA,6PAWZF,UAAAM,MAAAJ,EAAA,6IA5GnCrnB,EAAA8E,yBAAA,UAAsB9E,EAAAgF,iBAAA,aAAOhF,EAAA+E,yBAC7B/E,EAAA8E,yBAAA,SAAA9E,EAAAulB,iBAAA,mCAEAvlB,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAAg8I,EAAA,oDAwFA1lJ,EAAA0J,qBAAA,EAAAi8I,EAAA,yBAAA3lJ,EAAAqd,iCAAArd,CASc,EAAA4lJ,EAAA,yBAAA5lJ,EAAAqd,4EAlGdrd,EAAAiF,oBAAA,GAAAjF,EAAAylB,qBAAA,OAAAzM,EAAAhZ,EAAAsN,sBAAA,IAAArM,EAAAwR,mBAAA,KAAAuG,EAAApc,SAAA,GAAAoD,EAAA2lB,sBAAA,GACe3lB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAxI,EAAAsN,sBAAA,IAAArM,EAAA2Z,SAAA5a,CAA0B,WAAAokB,+RAuHpCqhI,CAAkB,mJCnI/B,IAAA5vJ,EAAAL,EAAA,6DAiEgBwK,EAAAkB,oBAAA,kCAIAlB,EAAA8E,yBAAA,iBAII9E,EAAAgF,iBAAA,YACJhF,EAAA+E,0BAxEhBzN,4BA8EsC,eAAAC,EAAzBsuJ,EAAyB,WAOlC,SAAAA,EAA8CjzG,GAAUl7C,EAAAC,KAAAkuJ,GAAVluJ,KAAAi7C,QAN9Bj7C,KAAAkf,UAAmC,IAAxBlf,KAAKi7C,MAAM/7B,SACtBlf,KAAAw6B,QAA+B,IAAtBx6B,KAAKi7C,MAAMzgB,MAKuB,CAAC16B,SAAAouJ,EAAA,EAAA3sJ,IAAA,QAAAgE,IAH5D,WACI,OAAOvF,KAAKw6B,OAAS,UAAYx6B,KAAKkf,SAAW,UAAY,SACjE,KAACgvI,CAAA,CANiC,GAMjCtuJ,SANQsuJ,0CAAyB7lJ,EAAAC,4BAOdpK,EAAAoyD,kBAAgB,kDAP3B49F,EAAyBnlJ,UAAA,yBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,ygEAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3E9BhB,EAAA8E,yBAAA,WACI9E,EAAAkoD,2BAAAloD,EAAA8E,yBAAA,UAAA9E,CAMC,SAEOA,EAAAkB,oBAAA,YAMJlB,EAAA+E,yBACA/E,EAAA8E,yBAAA,SAAA9E,CAAM,cAUEA,EAAAkB,oBAAA,cAAAlB,CAGE,oBAHFA,CAGE,eAHFA,CAGE,qBAHFA,CAGE,mBAHFA,CAGE,sBAHFA,CAGE,gBAHFA,CAGE,iBAyBNA,EAAA+E,wBAAA/E,KAGRA,EAAAmoD,4BAAAnoD,EAAA8E,yBAAA,aAGI9E,EAAA0J,qBAAA,GAAAo8I,EAAA,aAAA9lJ,CAGO,GAAA+lJ,EAAA,mBAOX/lJ,EAAA+E,wBAAA/E,UA3DYA,EAAAiF,oBAAA,GAAAjF,EAAA+rD,sBAAA,OAAA9qD,EAAA+4E,OAmDHh6E,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA4V,UAIA7W,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAA4V,oEASRgvI,CAAyB,8NCjFtC,IAAArkJ,EAAAhM,EAAA,OACAyC,EAAAzC,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,OAKAwwJ,GAHAxwJ,EAAA,OACAA,EAAA,OAEAA,EAAA,8IAiBoBwK,EAAA8E,yBAAA,mBAII9E,EAAAgF,iBAAA,GACJhF,EAAA+E,iDAHI/E,EAAAwI,qBAAA,QAAA4wC,GAEAp5C,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAk0C,EAAAnsC,cAAAmsC,EAAAnuC,KAAA,8CAlBxB3T,0BA0EqC,eAAAC,EAAxB0uJ,EAAwB,SAAA3tJ,GAAAC,EAAA0tJ,EAAA3tJ,GAAA,IAAAG,EAAAC,EAAAutJ,GA4DjC,SAAAA,EACYjgI,EACAptB,GAAyB,IAAAG,EAAArB,SAAAC,KAAAsuJ,IAEjCltJ,EAAAN,EAAAO,KAAArB,OAHQquB,cACAjtB,EAAAH,OA7DIG,EAAA8d,SAAqB,GAErB9d,EAAAugD,cAAwB,EACvBvgD,EAAAy6B,SAAW,IAAIhyB,EAAAuV,aAEzBhe,EAAAkmB,KAAO,EACPlmB,EAAAwgD,OAAS,CAAE9K,EAAG,GAAKC,EAAG,IAErB31C,EAAA0vD,cAAgB,SAAC9nC,GAAC,OAAK,WAC3B5nB,EAAKy6B,SAASvc,KAAK0J,GACnB5nB,EAAKygD,QAAQz/C,KAAKgY,KAAK8W,MAC3B,CAAC,EACM9vB,EAAAyV,MAAuB,KACtBzV,EAAAygD,QAAU,IAAIloC,EAAAqB,gBAAgB,GAMtB5Z,EAAAqhB,OAASrhB,EAAKitB,YAAYvT,iBAAiB/X,QACvD3C,EAAAub,KAAI,SAAC1Y,GAAC,SACF3C,EAAA6sC,QACIlqC,EAAE0Y,IAAI,SAAAzV,GAAQ,OAAO9E,EAAKH,KAAKkuB,YAAjBjpB,EAALwN,MAAwC,GACjD,KACH,MAELtT,EAAAojB,KAAI,SAACvgB,GAAC,OAAM7B,EAAKyV,MAAQzV,EAAKyV,MAAQzV,EAAKyV,MAAQ5T,EAAE,EAAE,IAG3C7B,EAAAsR,WAAa,SAACwQ,GAAC,OAAK9hB,EAAKitB,YAAY3b,WAAWwQ,EAAE,EAElD9hB,EAAA4H,YAAW2Q,EAAA+I,eAAc,CACrCthB,EAAKitB,YAAYvT,iBACjB1Z,EAAKygD,UACN9+C,QACC3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAub,KAAI,SAAA5T,GAAG,OAAH6a,EAAA7a,EAAA,GAAG,GACD4T,IAAI,SAACa,GAAK,MAAM,CACd7W,SAAU6W,EAAMjJ,OAChB4T,QAASknI,EAAAH,0BACTxrJ,KAAIqsB,IAAA,GACGvS,GAAK,IACRge,OAAQp5B,EAAKo5B,SAAWhe,EAAMpJ,GAC9B8L,SAAU9d,EAAK8d,SAASrZ,SAAS2W,EAAMpJ,MAE9C,EAAE,IAIKhS,EAAA0gD,QAAU1gD,EAAKitB,YAAYvT,iBAAiB/X,QACxD3C,EAAAub,KAAI,SAAC8Z,GAAC,OACFA,EAAE9Z,IAAI,SAACa,GAAK,MAAM,CACdpJ,GAAIoJ,EAAMjJ,OACVkT,OAAQ,CAAC,WAAY,WACrBC,SAAUtlB,EAAK0vD,cAAct0C,GAChC,EAAE,IAETpb,CAOF,CAACtB,SAAAwuJ,EAAA,EAAA/sJ,IAAA,UAAAgE,IAjDD,WAAkB,IAAAg9C,EACd,OAAiB,QAAVA,EAAAviD,KAAK6W,aAAK,IAAA0rC,OAAA,EAAVA,EAAYhvC,SAAU,EACjC,GAAC,CAAAhS,IAAA,WAAAC,MAiDM,WAAQ,IAAAuD,EAAA/E,KACXA,KAAK4S,aACD,gBACA5S,KAAKyiB,OAAO3P,UAAU,SAAC2P,GAEfA,EAAOxd,SACNwd,EAAO2M,KAAK,SAACnsB,GAAC,IAAAu/C,EAAA,OAAKv/C,EAAEmQ,MAAiB,QAAfovC,EAAKz9C,EAAK8R,aAAK,IAAA2rC,OAAA,EAAVA,EAAYpvC,GAAE,KAE3CrO,EAAK8R,MAAQ4L,EAAO,GACpB1d,EAAK2N,WAAW,CAAEy8C,SAAU,CAACpqD,EAAK8R,MAAMzD,MAEhD,GAER,GAAC,CAAA7R,IAAA,UAAAC,MAEM,SAAQmhD,GACX3iD,KAAKsnB,KAAO6hB,KAAKyZ,IAAI,GAAKzZ,KAAK0Z,IAAI,GAAIF,GAC3C,GAAC,CAAAphD,IAAA,WAAAC,MAEM,WACHxB,KAAKsnB,KAAO,EACZtnB,KAAK4hD,OAAS,CAAE9K,EAAG,GAAKC,EAAG,GAC/B,KAACu3G,CAAA,CAzFgC,CAAQhuJ,EAAA8H,cAAYxI,SAA5C0uJ,0CAAuBjmJ,EAAAC,4BAAAC,EAAA2M,kBAAA7M,EAAAC,4BAAAG,EAAAC,qBAAA,kDAAvB4lJ,EAAuBvlJ,UAAA,gBAAAwW,OAAA,CAAAL,SAAA,WAAAsb,OAAA,SAAAmnB,aAAA,gBAAAniC,QAAA,CAAAqc,SAAA,YAAA7yB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,srBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAvE5BhB,EAAA8E,yBAAA,UAAA9E,CAA6D,qBAA7DA,CAA6D,kBAOjDA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAuN,MAAA9F,CAAA,EAAA1I,CAAmB,yBAAA0I,GAAA,OAEFzH,EAAAoJ,WAAA,CAAAy8C,SAAA,CAAAp+C,EAAAqC,KAAqC,GAEtD/K,EAAA0J,qBAAA,EAAAw8I,EAAA,kDAMJlmJ,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,UAAA9E,CAAoC,aAG5BA,EAAAuI,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAge,KAAAvW,CAAA,EAAA1I,CAAe,wBAAA0I,GAAA,OAAAzH,EAAAs4C,OAAA7wC,CAAA,+DAIlB1I,EAAA+E,wBAAA/E,GAELA,EAAA8E,yBAAA,UAAA9E,CAGC,eAKOA,EAAAuI,qBAAA,0BAAStH,EAAAy5C,QAAe,IAAfz5C,EAAAge,KAAmB,GAE5Bjf,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,cAAOhF,EAAA+E,wBAAA/E,GAErBA,EAAAkB,oBAAA,YACAlB,EAAA8E,yBAAA,eAII9E,EAAAuI,qBAAA,0BAAStH,EAAAy5C,QAAAz5C,EAAAge,MAAgB,EAAI,KAAK,GAElCjf,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,eAAQhF,EAAA+E,wBAAA/E,GAEtBA,EAAAkB,oBAAA,YACAlB,EAAA8E,yBAAA,gBAA8C9E,EAAAuI,qBAAA,0BAAStH,EAAA05C,UAAU,GAC7D36C,EAAA8E,yBAAA,eAAU9E,EAAAgF,iBAAA,cAAOhF,EAAA+E,wBAAA/E,YA7CbA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAuN,MAAAxO,CAAmB,iBAAAA,EAAAmJ,0BAAA,GAAAC,IAKCpJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,IAAArM,EAAAmZ,SAUxBpa,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,MAAAvH,EAAAiqC,QAAAlrC,CAAe,OAAAiB,EAAAge,KAAfjf,CAAe,SAAAiB,EAAAs4C,OAAfv5C,CAAe,WAAAA,EAAAsN,sBAAA,KAAArM,EAAAN,UAAfX,CAAe,UAAAA,EAAAsN,sBAAA,KAAArM,EAAAw4C,+YAiDlBwsG,CAAwB,gICpFrC,IAAA93C,EAAA34G,EAAA,OAUA8B,QAAkBG,EAkCd,SAAAmyD,IAAqC,IAAzBvvD,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,GAAE9E,EAAAC,KAAAiyD,GACjCjyD,KAAKoT,GAAK1Q,EAAK0Q,IAAM,GACrBpT,KAAKsT,KAAO5Q,EAAK4Q,MAAQ,GACzBtT,KAAKsV,aAAe5S,EAAK4S,cAAgB,GACzCtV,KAAK2G,OAASjE,EAAKiE,OAAS,IAAIisB,cAChC5yB,KAAK2f,SAAWjd,EAAKid,WAAY,EACjC3f,KAAK0c,aAAeha,EAAKga,cAAiBha,EAAKsG,UAAoB,GACnEhJ,KAAKmuC,WAAazrC,EAAKyrC,SACvBnuC,KAAK0T,MAAQhR,EAAKgR,OAAS,GAC3B1T,KAAKwuJ,YAAc9rJ,EAAK8rJ,aAAe,GACvCxuJ,KAAKuT,OAAS7Q,EAAK6Q,QAAU,GAC7BvT,KAAK4qB,OAASloB,EAAKkoB,QAAU,GAC7B5qB,KAAKyuJ,eAAiB/rJ,EAAK+rJ,gBAAkB,GAC7CzuJ,KAAKgJ,SAAWtG,EAAKsG,UAAY,GACjChJ,KAAK83G,gBAAkBp1G,EAAKo1G,gBAC5B93G,KAAK6W,MAAQnU,EAAKmU,OAAS,IAAI2/F,EAAAmB,cAC/B33G,KAAKkyD,aAAexvD,EAAKwvD,cAAgB,EAC7C,oPC7DJ,IAAA7xD,EAAAxC,EAAA,OAGA+zD,GADA/zD,EAAA,OACAA,EAAA,QACAuC,EAAAvC,EAAA,6BAEM6wJ,EAAsB,GAEtBC,EAAc,IAAI/8F,EAAAK,MAAM,CAAEtrD,MAAO,yBAEvC,SAAgBioJ,EAAgBrsI,GAAmB,IACjB0U,EADiBC,EAAAC,EAC3B5U,GAAU,QAAA6U,EAAA,WAAE,IAArB5a,EAAKya,EAAAz1B,MACPktJ,EAAWt/H,KAAK,SAAAlpB,GAAK,OAAAA,EAAFkN,KAAgBoJ,EAAMpJ,EAAE,IAC5Cs7I,EAAWt4H,KAAK5Z,IAFxB,IAAA0a,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAAAH,GAIC,OAAApN,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACL,CANA73B,kBAAAivJ,EAQAjvJ,YAGsB,eAAAC,EAATsL,EAAS,WAClB,SAAAA,EAAgCjK,GAA0BlB,EAAAC,KAAAkL,GAA1BlL,KAAAiB,MAA6B,CAC7DnB,SAAAoL,EAAA,EAAA3J,IAAA,YAAAC,OAAAk2B,EAAAj2B,EAAAC,IAAAC,KAIO,SAAAC,EAAgBquD,GAAgB,IAAA4+F,EAAAryI,EAAAtD,EAAA41I,EAAAhe,EAAAie,EAAA,OAAArtJ,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAC/BpC,KAAKiB,KAAI,CAAAiB,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACHpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAEzB,GAAlC2rJ,EAAW5+F,GAAUpqD,SAAS,KAC/BoqD,EAAQ,CAAA/tD,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASorJ,GAAW,OAGhC,KAFGnyI,EAAQkyI,EAAWt/H,KACnB,SAAArnB,GAAY,OAAPA,EAAFqL,KAAuB68C,GAAdloD,EAALpB,QAAyCspD,CAAQ,IAEnD,CAAA/tD,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASiZ,GAAK,UAClBqyI,EAAQ,CAAA3sJ,EAAAE,KAAA,SAAAF,SAAAE,KAAA,MACY/B,EAAA2uJ,YAAW/+F,GAC3B/sD,YAAWkB,MACL,SAACnB,GAAC,OAAK,IAAI,GAAC,QAFX,KAANiW,EAAMhX,EAAA4B,MAGF,CAAA5B,EAAAE,KAAA,SACNoa,SAAQ,IAAIo1C,EAAAK,MAAKljC,IAAA,GACT7V,GAAc,IAClBrC,MAAgB,QAAXi4I,EAAE9uJ,KAAKiB,YAAI,IAAA6tJ,OAAA,EAATA,EAAW3/H,YAAWpM,EAAK7J,EAAOxF,WAE7Cg7I,EAAWt4H,KAAK5Z,GAAOta,EAAAqB,OAAA,SAChBiZ,GAAK,QAAAta,SAAAE,KAAA,MAIV/B,EAAA4uJ,wBAAuB,CAAEC,GAAIj/F,IAAY/sD,YAAW,QACxD,GACiB,KAHjB4tI,EAAO5uI,EAAA4B,KAEXpB,MACUuC,OAAY,CAAA/C,EAAAE,KAAA,SACpBoa,SAAQ,IAAIo1C,EAAAK,MAAKljC,IAAA,GACT+hH,EAAQ,IAAU,IACtBj6H,MAAgB,QAAXk4I,EAAE/uJ,KAAKiB,YAAI,IAAA8tJ,OAAA,EAATA,EAAW5/H,YAAWpM,EAAK+tH,EAAQ,GAAGp9H,WAEjDg7I,EAAWt4H,KAAK5Z,GAAOta,EAAAqB,OAAA,SAChBiZ,GAAK,eAAAta,EAAAqB,OAAA,SAETorJ,GAAW,yBAAAzsJ,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACrB,SAAA4pB,EAAA5M,GAAA,OAAA0a,EAAA9yB,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,kBAAAC,MAEM,SAAgB+gB,GACnBqsI,EAAgBrsI,EACpB,KAACrX,EA3CD,IAAAwsB,CA2CC,CA7CiB,GA6CjB93B,SA7CQsL,0CAAS7C,EAAAC,4BAAAC,EAAAG,oBAAA,+DAATwC,EAAS6sB,MAAA,IAAT7sB,CAAS,uMCtBtB,IAAA5K,EAAAzC,EAAA,OACAwC,EAAAxC,EAAA,OAEAuC,EAAAvC,EAAA,OACA0C,EAAA1C,EAAA,OACA+zD,EAAA/zD,EAAA,OACA4M,EAAA5M,EAAA,OACA2L,EAAA3L,EAAA,OAOMsxJ,EAA2D,GAEpDxvJ,aAAa,SAAC6N,GACvB,IAAKA,EAAK,OAAO,EACjB,IACI,IAAIg/E,IAAIh/E,SAER,OAAO,EAEX,OAAO,CACX,EAEa7N,cAAc,SAACyvJ,GAAqB,SAC7CzvJ,EAAA0vJ,YAAWD,GAAM5tJ,OAAS,KAAO,CAAEgM,IAAK,UAAW,EAEvD7N,4BAAA,SAAgB2vJ,EAA0Bp2I,GACtC,IAAMqpF,EAAS,CACXnvF,GAAI,IAAI5J,EAAAo2B,YAAY1mB,GAAQ9F,IAAM,IAClCE,KAAM,IAAI9J,EAAAo2B,YAAY1mB,EAAO5F,MAAQ,GAAI,CAAC9J,EAAAq2B,WAAWC,WACrDxqB,aAAc,IAAI9L,EAAAo2B,YAAY1mB,EAAO5D,cAAgB,IACrD3O,MAAO,IAAI6C,EAAAo2B,YAAY1mB,EAAOvS,OAAS,GAAI,CAAC6C,EAAAq2B,WAAWl5B,QACvDk2D,KAAM,IAAIrzD,EAAAo2B,YAAY1mB,EAAO2jD,MAAQ,IACrC2xF,YAAa,IAAIhlJ,EAAAo2B,YAAY1mB,EAAOs1I,aAAe,GAAI,CAAC7uJ,EAAA4vJ,cACxDC,qBAAsB,IAAIhmJ,EAAAo2B,YACtB1mB,EAAOs2I,sBAAwB,EAC/B,CAAChmJ,EAAAq2B,WAAWvP,QAAQ,YAExBtnB,SAAU,IAAIQ,EAAAo2B,aACkB,iBAApB1mB,EAAOlQ,SACRkQ,EAAOlQ,SAAiBpC,MAAM,KAC/BsS,EAAOlQ,WAAa,IAE9B2W,SAAU,IAAInW,EAAAo2B,YAAY1mB,EAAOyG,UAAY,EAAG,CAC5CnW,EAAAq2B,WAAWvP,QAAQ,YAEvB6d,SAAU,IAAI3kC,EAAAo2B,YAAY1mB,EAAOi1B,WAAY,GAC7Co2C,OAAQ,IAAI/6E,EAAAo2B,YAAY1mB,EAAMqrE,SAAW,GACzC/wE,YAAa,IAAIhK,EAAAo2B,YAAY1mB,EAAO1F,aAAe,IACnDoX,OAAQ,IAAIphB,EAAAo2B,YAAY1mB,EAAO0R,QAAU,IACzCrX,OAAQ,IAAI/J,EAAAo2B,YAAY1mB,EAAO3F,QAAU,IACzC2hC,SAAU,IAAI1rC,EAAAo2B,YAAY1mB,EAAOg8B,UAAY,IAC7CvhC,KAAM,IAAInK,EAAAo2B,YAA8B,KAAM,CAACp2B,EAAAq2B,WAAWC,WAC1DpsB,MAAO,IAAIlK,EAAAo2B,YAAY1mB,EAAOxF,MAAO,CAAClK,EAAAq2B,WAAWC,WACjDupD,QAAS,IAAI7/E,EAAAo2B,YAAY1mB,EAAOmwE,UAEpC,OAAKnwE,EAAO9F,UAIEmvF,EAAO5uF,KAHjB4uF,EAAO5uF,KAAKd,aAAaC,UAAU,SAACtR,GAAgB,OAChD+gG,EAAO7uF,MAAM+lB,SAAS,CAACj4B,EAAM4R,IAAI,GAGlC,IAAI5J,EAAAm2B,UAAU4iE,EACzB,EAEA5iG,uBAAA,SAAgB+xB,EAAqBte,GACjC,OAAI+7I,EAAoB/7I,KACxB+7I,EAAoB/7I,IAAE,EAAI/S,EAAA4yH,cAAa,CAAE5xF,QAASjuB,EAAI4yB,MAAO,MAAOjjC,QAChE3C,EAAAub,KAAI,SAAC1Y,GAAC,OAAMA,EAAEP,MAAQ,IAAIiZ,IAAI,SAAC1Y,GAAC,OAAK,IAAI2uD,EAAAK,MAAMhvD,EAAS,EAAC,MACzD7C,EAAAojB,KAAI,SAACvgB,GAAC,SAAKwH,EAAAmkJ,iBAAgB3rJ,EAAE,MAC7B7C,EAAAmyB,aAAY,KAET48H,EAAoB/7I,EAC/B,EAEA,IAAIq8I,EAAsB,EAE1B9vJ,oBAAA,SAAgB0yI,IAAyC,IAAvB+D,EAAAvxI,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAC7CuO,EAAE,SAAApP,OAAYyrJ,KACdn8I,EAAI,cAAAtP,OAAiByrJ,GACrBC,KAASpvJ,EAAA81E,sBAAqB,OAAS,GAAM,GAAKq5E,EAAc,EAChEjzI,EAAKuS,EAAA,CACP3b,KACAE,OACAq8I,UAAS,GAAA3rJ,OAAKsP,EAAI,sBAClBC,OAAM,GAAAvP,OAAKyrJ,GACX9vI,SAAwC,GAAxCA,EAAUrf,EAAA81E,sBAAqB,GAAI,GACnCzvE,MAAK,GAAA3C,OAAKsP,EAAKsf,cAAchsB,MAAM,KAAK8N,KAAK,KAAI,KAAA1Q,OAAIzD,EAAA6rI,aACrDz5H,KAAM,GACNi9I,cAAYtvJ,EAAA81E,sBAAqB,OAAS,GAAM,EAChDy5E,eAAavvJ,EAAA81E,sBAAqB,OAAS,GAAM,EACjDjoC,YAAU7tC,EAAA81E,sBAAqB,OAAS,GAAM,EAC9C05E,UAAuC,KAAvCA,EAAWxvJ,EAAA81E,sBAAqB,KAChCkF,MAAiC,GAAjCA,EAAOh7E,EAAA81E,sBAAqB,GAC5BqmC,UAAqC,GAArCA,EAAWn8G,EAAA81E,sBAAqB,GAChC1iE,MAAO,CAAC,cACR86I,YAAW,oBAAAxqJ,OAAsBoP,GACjCiiB,SAAU,GACV06H,aAAcL,EACR,UAAA1rJ,UAAU1D,EAAA81E,sBAAqBq5E,EAAc,KAC7C,GACNO,MAAO,IACJ5Z,GAEP,OAAI55H,EAAMiyI,gBAAqBjyI,EAAMiyI,eAAkBxpJ,OAAS,IAC5DuX,EAAMiyI,eAAkB1lI,QACpB,SAACo/C,GAAM,OACFA,EAAOxoD,YAAWrf,EAAA81E,sBAAqB55D,EAAMmD,UAAY,CAAC,GAEnEnD,EAAMiyI,eAAkB,GAAG9uI,SAAWnD,EAAMmD,UAEzCnD,CACX,2IClHA,IAAAlc,EAAAzC,EAAA,OAEA2L,GADA3L,EAAA,OACAA,EAAA,QACA+P,EAAA/P,EAAA,OACAub,EAAAvb,EAAA,OACAqQ,EAAArQ,EAAA,OAEAw8C,EAAAx8C,EAAA,OACAy8C,EAAAz8C,EAAA,OACA8oI,EAAA9oI,EAAA,OAEAoyJ,EAAApyJ,EAAA,OACAqyJ,EAAAryJ,EAAA,OACAquJ,EAAAruJ,EAAA,OACAsyJ,EAAAtyJ,EAAA,OACAuyJ,EAAAvyJ,EAAA,UAEAA,EAAA,MACAA,EAAA,6DAeA8B,qBAe+B,eAAAC,EAAlBywJ,EAAkBvwJ,EAAA,SAAAuwJ,IAAAtwJ,EAAAC,KAAAqwJ,EAAA,GAAAzwJ,SAAlBywJ,yCAAkB,iDAAlBA,uDAZL/vJ,EAAAgZ,aACA1L,EAAAsB,gBACAmrC,EAAAtrC,iBACAurC,EAAAvuC,iBACAqN,EAAAK,qBACAvL,EAAA0B,kBACApG,EAAAiC,YACAjC,EAAAwC,uBAKKqkJ,CAAkB,oCA3B3B1pB,EAAAK,6BAA4B,CAAAz+H,EAAAgsF,KAAA9rF,EAAAisF,eAAA/rF,EAAAisF,cAAA/rF,EAAA4rF,UAE5Bw7D,EAAAlE,sBACAmE,EAAApC,mBACA5B,EAAAG,sBACA8D,EAAA/D,6BACAgE,EAAA9B,yBAAuB,oNC1B3B,IAUIgC,EAVJjwJ,EAAAxC,EAAA,OACAuC,EAAAvC,EAAA,OACA8b,EAAA9b,EAAA,OAIA+zD,GAFA/zD,EAAA,OAEAA,EAAA,QACAyC,EAAAzC,EAAA,OACA4M,EAAA5M,EAAA,wCAIA8B,gBAG0B,eAAAC,EAAbklB,EAAa,WAsBtB,SAAAA,EACY7jB,EACAD,GAA0B,IAAAI,EAAApB,KAAAD,EAAAC,KAAA8kB,GAD1B9kB,KAAAiB,OACAjB,KAAAgB,YAtBJhB,KAAAuwJ,MAAQ,IAAI52I,EAAAqB,gBAAyB,IAE1Bhb,KAAAmsE,aAAe,IAAIxyD,EAAAqB,iBAAyB,GAE/Chb,KAAA8C,YAAc9C,KAAKmsE,aAAahxD,eAEhCnb,KAAA+S,KAAO/S,KAAKuwJ,MAAMp1I,eAElBnb,KAAAgJ,SAAWhJ,KAAK+S,KAAKhQ,QACjC3C,EAAAub,KAAI,SAAC1Y,GAAC,SAAK3C,EAAA6sC,WAAO7sC,EAAAgyB,SAAQrvB,EAAE0Y,IAAI,SAACsW,GAAC,OAAKA,EAAEjpB,QAAQ,IAAG,IAG9ChJ,KAAAwwJ,SAAW,SAACh0I,GAAY,OAC9BA,EAAM9I,MAAM7N,SAASzE,EAAKH,KAAK4U,SAASzC,GAAG,EAW3Ck9I,EAAa,IAAI7lJ,EAAAS,UAAUjK,GAC3BjB,KAAK89E,OACT,CAACh+E,SAAAglB,EAAA,EAAAvjB,IAAA,aAAAgE,eATG,OAAOvF,KAAKuwJ,MAAM33I,UACtB,GAAC,CAAArX,IAAA,QAAAC,OAAAivJ,EAAAhvJ,EAAAC,IAAAC,KAUO,SAAAC,IAAA,OAAAF,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACEpC,KAAKiB,KAAK6B,YAAYC,QAAK3C,EAAA4C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OACxDlD,KAAKgB,UAAUuE,IAAI,0BACnBvF,KAAKmsE,aAAa/pE,MAAK,GADuBpC,KAAK0wJ,aACtB,wBAAAxuJ,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IACrC,SAAA89E,IAAA,OAAA2yE,EAAA7rJ,MAAA5E,KAAA6E,UAAA,IAED,CAAAtD,IAAA,SAAAC,MAIO,WAAuD,IAAhDmvJ,EAAA9rJ,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmC7E,KAAKwwJ,SAClD,OAAOxwJ,KAAKuwJ,MAAM33I,WAAWiD,OAAO,SAAC5Y,GAAC,OAAK0tJ,EAAU1tJ,EAAE,EAC3D,GAAC,CAAA1B,IAAA,YAAAC,MAAA,eAAAovJ,EAAAnvJ,EAAAC,IAAAC,KAEM,SAAAwD,EAAgB8qD,GAAgB,IAAA/2C,EAAAsD,EAAA,OAAA9a,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,KACd/B,EAAA2uJ,YAAW/+F,GAAU/sD,YAAW,OAC/CsZ,EAAQ,IAAIo1C,EAAAK,MAAKljC,IAAA,GADjB7V,EAAM7T,EAAAvB,MAEU,IAClB+S,MAAO7W,KAAKiB,KAAKkuB,YAAWpM,EAAK7J,EAAOxF,WAE5C48I,EAAW1B,gBAAgB,CAACpyI,IAAQ,wBAAAnX,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IACvC,gBAAA6wJ,EAAA7zI,GAAA,OAAA4zI,EAAAhsJ,MAAA5E,KAAA6E,UAAA,EATA,IAWD,CAAAtD,IAAA,OAAAC,MAIO,SAAKyuD,GACR,OAAOjwD,KAAKuwJ,MAAM33I,WAAWwW,KAAK,SAAAlpB,GAAK,OAAO+pD,IAAP/pD,EAAFkN,EAAwB,EACjE,GAAC,CAAA7R,IAAA,aAAAC,MAAA,eAAAsvJ,EAAArvJ,EAAAC,IAAAC,KAEO,SAAAsE,IAAA,IAAAsc,EAAAwuI,EAAAhsJ,EAAA/E,KAAA,OAAA0B,IAAAO,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAAgE,SAAAhE,KAAA,KACkB/B,EAAA4yH,cAAa,CAC/B5xF,QAASrhC,KAAKiB,KAAKkxC,aAAa/+B,GAChC4yB,MAAO,MAENjjC,QAAK3C,EAAAub,KAAI,SAACsW,GAAC,OAAKA,EAAEvvB,IAAI,IACtBQ,YAAW,OACVqf,EANOnc,EAAAtC,KAMc6X,IACvB,SAACwyE,GAAG,OACA,IAAIv8B,EAAAK,MAAKljC,IAAA,GACDo/D,GAAW,IACft3E,MAAO9R,EAAK9D,KAAKkuB,YAAWpM,EAAKorE,EAAIz6E,UACvC,GAGJq9I,EAAexuI,EAAW1G,OAAO,SAACW,GAAK,OAAKA,EAAMjJ,MAAM,GAC9DvT,KAAKuwJ,MAAMnuJ,KAAK2uJ,GAChBT,EAAW1B,gBAAgBmC,GAC3B/wJ,KAAKmsE,aAAa/pE,MAAK,GAAM,wBAAAgE,EAAA1B,OAAA,EAAAuB,EAAAjG,KAAA,IAChC,gBAAA0wJ,IAAA,OAAAI,EAAAlsJ,MAAA5E,KAAA6E,UAAA,EArBA,MAqBAigB,EA5DA,IAAA2rI,CA4DA,CAhFqB,GAgFrB7wJ,SAhFQklB,0CAAazc,EAAAgV,mBAAA9U,EAAAG,qBAAAL,EAAAgV,mBAAA5U,EAAAD,iBAAA,qDAAbsc,EAAaxH,QAAbwH,EAAavH,UAAAC,WAFV,SAEHsH,CAAa,sFChB1B0R,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,qFCJA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,KAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,MAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,GACA62B,EAAAC,aAAA54B,EAAA,OAAA8B,sPCTA9B,EAAA,WAOA+P,EAAA/P,EAAA,OACAyC,EAAAzC,EAAA,OACA4yB,EAAA5yB,EAAA,OASA27G,EAAA37G,EAAA,OACA8b,EAAA9b,EAAA,OACAuC,EAAAvC,EAAA,sEAwDoBwK,EAAA8E,yBAAA,YAOI9E,EAAAgF,iBAAA,GAEJhF,EAAA+E,2EAJI/E,EAAA8/C,sBAAA,QAAAh2C,EAAA6+I,SAAA,MADA3oJ,EAAA+rD,sBAAA,WAAAjiD,EAAAkqH,OAAAlqH,EAAA8+I,aAAAC,GAGA7oJ,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAAwxI,EAAA,WAAAA,EAAA,MAAAA,GAAA,gFAoBJ7oJ,EAAA8E,yBAAA,YAMI9E,EAAAkB,oBAAA,sBAIAlB,EAAA8E,yBAAA,YAGI9E,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAGI9E,EAAAuI,qBAAA,uBAAAugJ,EAAA9oJ,EAAA2I,wBAAAuE,GAAAqI,UAAApI,EAAAnN,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAoE,EAAA20H,WAAAgnB,GAAgB,GAEzB9oJ,EAAA8E,yBAAA,cAAU9E,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,6DAjBnBA,EAAA8/C,sBAAA,OAAAvyC,EAAAw7I,SAAA,MAKI/oJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsgJ,GAKA9oJ,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA4jJ,EAAA79I,MAAAsC,EAAAtB,KAAA3N,MAAA,8BAaJ0B,EAAAkB,oBAAA,6DAGIlB,EAAA8/C,sBAAA,SAAA52C,EAAAy/I,SAAA,SACA3oJ,EAAA+rD,sBAAA,WAAA7iD,EAAA8qH,OAAA9qH,EAAA0/I,aAAAI,6BAmCAhpJ,EAAA8E,yBAAA,YAII9E,EAAAgF,iBAAA,gCACJhF,EAAA+E,iEADI/E,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAAzC,EAAAC,KAAA,uEAoBRtJ,EAAAkB,oBAAA,iJAGIlB,EAAAwI,qBAAA,OAAAygJ,EAAAjpJ,CAAa,OAAAoO,EAAA9E,KAAbtJ,CAAa,eAAAA,EAAAsN,sBAAA,IAAAc,EAAAy7C,cAAA7pD,EAAAsN,sBAAA,IAAAc,EAAAy7C,cAAAo/F,EAAA3qJ,MAAAisB,eAAAvqB,EAAAmJ,0BAAA,EAAAmF,KA7JzChX,iCA4M4C,eAAAC,EAA/B0Y,EAA+B,SAAA3X,GAAAC,EAAA0X,EAAA3X,GAAA,IAAAG,EAAAC,EAAAuX,GA4ExC,SAAAA,EACqC2iC,EACzBizC,EACAjrC,GAAyD,IAAA7hD,EAAArB,SAAAC,KAAAsY,IAEjElX,EAAAN,EAAAO,KAAArB,OAJiCi7C,QACzB75C,EAAA8sF,YACA9sF,EAAA6hD,cA9EI7hD,EAAAmX,MAAQ,IAAIoB,EAAAqB,gBAAgB,IACrC5Z,EAAAm8B,OAAS,GACTn8B,EAAAuQ,KAAOvQ,EAAK65C,MAAMtpC,MAAQyI,KAAK8W,MAC/B9vB,EAAAwQ,SAAWxQ,EAAK65C,MAAMrpC,UAAY,GAElCxQ,EAAAgwJ,SAAW,EACXhwJ,EAAA4vJ,SAAW,EAEF5vJ,EAAAkT,KAAOlT,EAAK65C,MAAM3mC,KAClBlT,EAAA8nC,MAAQ,IAAI5H,MAAM,IAAI+gB,KAAK,GAC3BjhD,EAAAgoI,UAAY,IAAIzvH,EAAAqB,gBAAgB,GAEhC5Z,EAAA8wD,gBAAev4C,EAAA+I,eAAc,CACzCthB,EAAKmX,MACLnX,EAAKgoI,YACNrmI,QACC3C,EAAAgxB,cAAa,MAAG,EAChBhxB,EAAAqxB,WAAU,SAAAvrB,GAAY,IAAA6B,EAAA6a,EAAA1c,EAAA,GAClB,SAAOszG,EAAA1mD,mBAAkB,CACrBy+F,UAAW,CACPnwJ,EAAKkT,KAAK3N,OAAK3C,OAAA+e,EAHVhb,EAAA,GAII4T,IAAI,SAAC1Y,GAAC,OAAKA,EAAE0D,MAAMisB,aAAa,KAC3Cle,KAAK,KACPue,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAW/xB,EAAKuQ,OAC1CyhB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASjyB,EAAKuQ,SACvC5O,QAAK3C,EAAA+xB,YAAW,oBAAMxY,EAAAO,IAAG,GAAG,GACnC,IAAC,EACD9Z,EAAAub,KAAI,SAAC61I,GACD,IACoCv6H,EAD9Bw6H,EAAwD,GAAGv6H,EAAAC,EAC9Cq6H,GAAiB,IAApC,IAAAt6H,EAAAlO,MAAAiO,EAAAC,EAAAI,KAAAC,MAAsC,KAA3Bzb,EAAImb,EAAAz1B,MACXiwJ,EAAiB31I,EAAK1I,GAAGwf,eAAiB9W,EAAKo2C,aAC1Cr2C,OAAO,SAAC5Y,GAAC,MAAkB,SAAbA,EAAEokC,MAAiB,GACjC1rB,IAAI,SAAC0mG,GACF,IAAM1wG,KAAO8e,EAAAihI,cAAarvC,EAAMlwD,WAC1BvgD,KAAW6e,EAAAwkB,wBACbxkB,EAAAihI,cAAarvC,EAAMjwD,UAAO,EAC1B3hC,EAAAihI,cAAarvC,EAAMlwD,YAEvB,MAAO,CACHxgD,OACAC,WACAqd,OACMtd,EAAK48D,WAAa58D,EAAK68D,aAAe,IACpC,GACJ,IACJpmB,KAAOx2C,EAAW,GAAK,GAAM,IAErC,GACP,OAAAoY,GAAAkN,EAAA1S,EAAAwF,EAAA,SAAAkN,EAAAM,GAAA,CACD,OAAOi6H,CACX,IAAC,EACDrxJ,EAAAuxJ,gBAAe,KAAE,EACjBvxJ,EAAAmyB,aAAY,IA+ETnxB,EAAAwwJ,WAAY,EACXxwJ,EAAAywJ,YAAc,EACdzwJ,EAAA0wJ,WAAa,EACb1wJ,EAAA2wJ,WAAa,KArDjB3wJ,EAAKmX,MAAMnW,KAAI2gB,EAAK3hB,EAAK65C,MAAM1iC,QAAQnX,CAC3C,CAACtB,SAAAwY,EAAA,EAAA/W,IAAA,QAAAgE,IAxBD,WACI,SAAOkrB,EAAAkC,WAAU3yB,KAAK2R,KAAMyI,KAAK8W,MACrC,GAAC,CAAA3vB,IAAA,eAAAgE,IAED,WACI,WAAW6U,MAAOm0D,UACtB,GAAC,CAAAhtE,IAAA,iBAAAgE,IAED,WACI,IAAMoM,EAAO,IAAIyI,KAAKpa,KAAK2R,MAC3B,OAAoD,GAA5CA,EAAK48D,WAAa58D,EAAK68D,aAAe,GAClD,GAAC,CAAAjtE,IAAA,kBAAAgE,IAED,WACI,OAAQvF,KAAK4R,SAAW,GAAM,CAClC,GAAC,CAAArQ,IAAA,UAAAC,MAWM,SAAQmrB,GACX3sB,KAAKuY,MAAMnW,KAAI,GAAA4B,OAAA+e,EACR/iB,KAAKuY,MAAMK,WAAWiD,OAAO,SAACgrE,GAAC,OAAKA,EAAElgF,QAAUgmB,EAAKhmB,KAAK,IAAC,CAC9DgmB,KAEJ3sB,KAAK2sB,KAAO,IAChB,GAAC,CAAAprB,IAAA,aAAAC,MAEM,SAAWmrB,GACd3sB,KAAKuY,MAAMnW,KACPpC,KAAKuY,MAAMK,WAAWiD,OAAO,SAACgrE,GAAC,OAAKA,EAAElgF,QAAUgmB,EAAKhmB,KAAK,IAE9D3G,KAAK2sB,KAAO,IAChB,GAAC,CAAAprB,IAAA,iBAAAC,MAEM,WACHxB,KAAKijD,YAAYt7C,OAAM,EAC3B,GAAC,CAAApG,IAAA,kBAAAC,MAEM,WAAe,IAAAuD,EAAA/E,KACZ2R,EAAO,IAAIyI,KAAKpa,KAAK2R,MAC3B3R,KAAKyD,QACD,OACA,WACI,IAAM2vE,EAAKruE,EAAKksF,cAAc7E,cAAcpW,cAAa,UAAAhyE,OAC3C2N,EAAK48D,WAAU,OAE7B,GAAI6E,EAAI,CACJ,IAAMg2B,EACFrkG,EAAKksF,cAAc7E,cAAckO,wBAC/B03D,EAAU5+E,EAAGknB,wBACnBv1F,EAAKksF,cAAc7E,cAAc6lE,SAC7BD,EAAQ5rC,KAAO,IAAMhd,EAAKgd,KAC1B,GAGRrhH,EAAKmtJ,UACT,EACA,IAER,GAAC,CAAA3wJ,IAAA,WAAAC,MAEM,WACHxB,KAAKgxJ,SAAWhxJ,KAAKixF,cAAc7E,cAAc+lE,WACjDnyJ,KAAKoxJ,SAAWpxJ,KAAKixF,cAAc7E,cAAc8E,SACrD,GAAC,CAAA3vF,IAAA,kBAAAC,MAOM,SAAgBusB,GAA8B,IAAA5nB,EAAAnG,KACjD+tB,EAAM6qD,iBACN7qD,EAAMo/G,kBACNntI,KAAK8xJ,WACD/jI,aAAiBqkI,WACXrkI,EAAMskI,QACNtkI,EAAMukI,QAAQ,GAAGD,QAC3BryJ,KAAK4xJ,WAAY,EACjB5xJ,KAAK6xJ,YAAc7xJ,KAAK2R,KACxBoc,aAAiBqkI,WACXpyJ,KAAK4S,aACD,UACA5S,KAAKkuF,UAAUn8D,OAAO,SAAU,YAAa,SAACvN,GAAC,OAC3Cre,EAAKosJ,cAAc/tI,EAAE,IAG7BxkB,KAAK4S,aACD,UACA5S,KAAKkuF,UAAUn8D,OAAO,SAAU,YAAa,SAACvN,GAAC,OAC3Cre,EAAKosJ,cAAc/tI,EAAE,IAGnCuJ,aAAiBqkI,WACXpyJ,KAAK4S,aACD,cACA5S,KAAKkuF,UAAUn8D,OAAO,SAAU,UAAW,kBACvC5rB,EAAKqsJ,YAAY,IAGzBxyJ,KAAK4S,aACD,cACA5S,KAAKkuF,UAAUn8D,OAAO,SAAU,WAAY,kBACxC5rB,EAAKqsJ,YAAY,GAGnC,GAAC,CAAAjxJ,IAAA,oBAAAC,MAEM,SAAkBusB,GAA8B,IAAAhnB,EAAA/G,KACnD+tB,EAAM6qD,iBACN7qD,EAAMo/G,kBACNntI,KAAK8xJ,WACD/jI,aAAiBqkI,WACXrkI,EAAMskI,QACNtkI,EAAMukI,QAAQ,GAAGD,QAC3BryJ,KAAK6xJ,YAAc7xJ,KAAK4R,SACxBmc,aAAiBqkI,WACXpyJ,KAAK4S,aACD,UACA5S,KAAKkuF,UAAUn8D,OAAO,SAAU,YAAa,SAACvN,GAAC,OAC3Czd,EAAK0rJ,gBAAgBjuI,EAAE,IAG/BxkB,KAAK4S,aACD,UACA5S,KAAKkuF,UAAUn8D,OAAO,SAAU,YAAa,SAACvN,GAAC,OAC3Czd,EAAK0rJ,gBAAgBjuI,EAAE,IAGrCuJ,aAAiBqkI,WACXpyJ,KAAK4S,aACD,cACA5S,KAAKkuF,UAAUn8D,OAAO,SAAU,UAAW,kBACvChrB,EAAKyrJ,YAAY,IAGzBxyJ,KAAK4S,aACD,cACA5S,KAAKkuF,UAAUn8D,OAAO,SAAU,WAAY,kBACxChrB,EAAKyrJ,YAAY,GAGnC,GAAC,CAAAjxJ,IAAA,gBAAAC,MAEO,SAAcusB,GAClB,IAAM2kI,EACF1yJ,KAAK8xJ,YACJ/jI,aAAiBqkI,WACZrkI,EAAMskI,QACNtkI,EAAMukI,QAAQ,GAAGD,SAErBM,GADMD,EAAY,GAAI,EAAK,GAG7BvpH,KAAKC,MAAMD,KAAK6L,IAAK09G,EAAY1yJ,KAAK+xJ,WAAc,GAAK,IAAM,GAC/D,EACJ,GAAIY,EAAY,CACZ,IAAM50B,EAAW/9H,KAAK2R,KACtB3R,KAAK2R,QAAO8e,EAAA4N,YAAWr+B,KAAK6xJ,YAAac,GAAYz9H,UACjDl1B,KAAK2R,KAAOyI,KAAK8W,QAAOlxB,KAAK2R,KAAOosH,GAEhD,GAAC,CAAAx8H,IAAA,kBAAAC,MAEO,SAAgBusB,GACpB,IAAM2kI,EACF1yJ,KAAK8xJ,YACJ/jI,aAAiBqkI,WACZrkI,EAAMskI,QACNtkI,EAAMukI,QAAQ,GAAGD,SAErBM,GADMD,EAAY,GAAI,EAAK,GAG7BvpH,KAAKC,MAAMD,KAAK6L,IAAK09G,EAAY1yJ,KAAK+xJ,WAAc,GAAK,IAAM,GAC/D,EACAY,IACA3yJ,KAAK4R,SAAWu3B,KAAKyZ,IAAI,GAAI5iD,KAAK6xJ,YAAcc,GAExD,GAAC,CAAApxJ,IAAA,aAAAC,MAEO,WACJxB,KAAKqsE,MAAM,WACXrsE,KAAKqsE,MAAM,eACXrsE,KAAK8xJ,WAAa,EAClB9xJ,KAAK4xJ,WAAY,CACrB,KAACt5I,CAAA,CAzPuC,CAAQhY,EAAA8H,cAAYxI,SAAnD0Y,0CAA8BjQ,EAAAC,4BA6E3BsF,EAAAivB,iBAAex0B,EAAAC,4BAAAD,EAAAqmF,WAAArmF,EAAAC,4BAAAC,EAAA26C,cAAA,kDA7ElB5qC,EAA8BvP,UAAA,8BAAAsoF,UAAA,SAAAhoF,EAAAC,SAAA,EAAAD,k4GAzMnChB,EAAA8E,yBAAA,aAAA9E,CAA8D,UAClCA,EAAAgF,iBAAA,uBAAiBhF,EAAA+E,yBACzC/E,EAAA8E,yBAAA,aAAA9E,CAKC,cACaA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA8E,yBAAA,WAAA9E,CAEC,UAFDA,CAEC,oBAKWA,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAqI,KAAAZ,CAAA,EAAA1I,CAAkB,kCAEDiB,EAAA8/H,UAAAhnI,KAAekH,EAAA8/H,UAAAxwH,WAAuB,EAAE,GAC5DvQ,EAAA+E,yBACD/E,EAAA8E,yBAAA,2BACI9E,EAAAuI,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAqjB,KAAA5b,CAAA,EAAA1I,CAAkB,yBAAA0I,GAAA,OACDzH,EAAAihI,QAAAx5H,EAAe,GAEnC1I,EAAA+E,wBAAA/E,GAELA,EAAA8E,yBAAA,WAAA9E,CAEC,YAKOA,EAAA0J,qBAAA,GAAA6gJ,EAAA,aAUJvqJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,WAAA9E,CAAoD,aAM5CA,EAAAkB,oBAAA,uBAIAlB,EAAA8E,yBAAA,aAGI9E,EAAAgF,iBAAA,IACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA0J,qBAAA,GAAA8gJ,EAAA,6CAuBJxqJ,EAAA+E,yBACA/E,EAAA8E,yBAAA,YAAA9E,CAAyD,aAEjDA,EAAA0J,qBAAA,GAAA+gJ,EAAA,cAOAzqJ,EAAA8E,yBAAA,aAWI9E,EAAAuI,qBAAA,qBAAAG,GAAA,OAAazH,EAAAypJ,gBAAAhiJ,EAAuB,EAApC1I,CAAqC,sBAAA0I,GAAA,OACvBzH,EAAAypJ,gBAAAhiJ,EAAuB,GAErC1I,EAAAkB,oBAAA,YAAAlB,CAEO,aAKPA,EAAA8E,yBAAA,aAGI9E,EAAAuI,qBAAA,qBAAAG,GAAA,OAAazH,EAAA0pJ,kBAAAjiJ,EAAyB,EAAtC1I,CAAuC,sBAAA0I,GAAA,OACzBzH,EAAA0pJ,kBAAAjiJ,EAAyB,GAC1C1I,EAAA+E,yBACD/E,EAAA8E,yBAAA,aAGI9E,EAAAgF,iBAAA,sCACJhF,EAAA+E,yBACA/E,EAAA0J,qBAAA,GAAAkhJ,EAAA,cAMJ5qJ,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,gBAII9E,EAAAuI,qBAAA,2BAAUtH,EAAA4oJ,UAAU,GAEpB7pJ,EAAAkB,oBAAA,8FAUAlB,EAAA0J,qBAAA,GAAAmhJ,EAAA,gEAaJ7qJ,EAAA+E,wBAAA/E,OAIZA,EAAA8E,yBAAA,eAAA9E,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAQqCA,EAAAgF,iBAAA,iBAAUhF,EAAA+E,yBACpC/E,EAAA8E,yBAAA,aAA4B9E,EAAAgF,iBAAA,mBAAYhF,EAAA+E,wBAAA/E,cAjKxCA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAqI,MAKAtJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAqjB,MAckBtkB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA4/B,OAad7gC,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,OAAA7+C,EAAA8nJ,SAAA,MAII/oJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAgL,MAKAjM,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAjE,EAAAgL,KAAAhB,MAAAhK,EAAAgL,KAAA3N,MAAA,KAOa0B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,MAAArM,EAAAiP,QA2BClQ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA4/B,OAKd7gC,EAAAiF,oBAAA,GAAAjF,EAAA8/C,sBAAA,eAAA7+C,EAAA6pJ,eAAA,SAAA7pJ,EAAA0nJ,SAAA,MAAA3oJ,CAMC,QAAAiB,EAAA8pJ,gBAAA,OAqBG/qJ,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAAsN,sBAAA,MAAArM,EAAAsI,UAAA,KAGCvJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAsoJ,WAeLvpJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAvH,EAAAgL,KAAAjM,CAAa,OAAAiB,EAAAqI,KAAbtJ,CAAa,eAAAA,EAAAsN,sBAAA,MAAArM,EAAA4oD,cAAA7pD,EAAAsN,sBAAA,MAAArM,EAAA4oD,cAAA5oD,EAAAgL,KAAA3N,OAAA0B,EAAAmJ,0BAAA,GAAAmF,IAUItO,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAxI,EAAAsN,sBAAA,MAAArM,EAAAiP,QAqB7BlQ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,8bA2BHyH,CAA+B,oJChP5Cza,EAAA,wDAeYwK,EAAA8E,yBAAA,UAAA9E,CAMC,WAEOA,EAAAgF,iBAAA,6DAKJhF,EAAA+E,wBAAA/E,2BATAA,EAAA8/C,sBAAA,OAAAkrG,EAAApkI,MAAA,IAAA5mB,CAAgC,QAAAgrJ,EAAAjrG,KAAA,KAI5B//C,EAAAiF,oBAAA,GAAAjF,EAAAqX,6BAAA,IAAArX,EAAA8L,sBAAA,IAAAk/I,EAAA1hJ,KAAA,mBAAAtJ,EAAA8L,sBAAA,IAAAk/I,EAAA1hJ,KAAAujB,UAAA,GAAAm+H,EAAAzhJ,SAAA,uBAdpBjS,4BA+BsC,eAAAC,EAAzB0zJ,EAAyBxzJ,EA/BtC,SAAAwzJ,IAAAvzJ,EAAAC,KAAAszJ,GAiCoBtzJ,KAAAkyD,aAAoC,GACpClyD,KAAA2R,KAAeyI,KAAK8W,QACvCtxB,SAJY0zJ,yCAAyB,kDAAzBA,EAAyBvqJ,UAAA,6BAAAwW,OAAA,CAAAoN,KAAA,OAAAulC,aAAA,eAAAvgD,KAAA,QAAAzI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,wXAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA5B9BhB,EAAA8E,yBAAA,WAGI9E,EAAA0J,qBAAA,EAAAwhJ,EAAA,cAeJlrJ,EAAA+E,gCAb0B/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAA4oD,qLAuBrBohG,CAAyB,8LC1CtC,IAAAjzJ,EAAAxC,EAAA,OACAuC,EAAAvC,EAAA,OAEA2C,EAAA3C,EAAA,OACAwkC,EAAAxkC,EAAA,OACAk7C,EAAAl7C,EAAA,KAGM21J,EAAiB,uBAiBvB7zJ,eAAA,SAAgB2rI,EAAa7oG,GACzB,IAAMzP,KAAQqP,EAAAK,eAAc,CAAED,MAC9B,SAAOpiC,EAAAkF,KAAG,GAAAvB,OAAIwvJ,GAAcxvJ,OAAGy+B,EAAI,IAAMzP,EAAQ,KAAMjwB,QACnD3C,EAAAub,KAAI,SAAC5I,GAAI,OAAKA,EAAK4I,IAAI,SAACG,GAAI,OAAK,IAAIi9B,EAAAkB,UAAUn+B,EAAK,EAAC,GAE7D,EAMAnc,cAAA,SAAgB8zJ,EAAYhxH,GACxB,IAAMzP,KAAQqP,EAAAK,eAAa3T,EAAA,GAAM0T,IACjC,SAAOpiC,EAAAkF,KAAG,GAAAvB,OAAIwvJ,GAAcxvJ,OAAGgvB,EAAQ,IAAMA,EAAQ,KAAMjwB,QACvD3C,EAAAub,KAAI,SAAC5I,GAAI,OAAKA,EAAK4I,IAAI,SAACG,GAAI,OAAK,IAAIi9B,EAAAkB,UAAUn+B,EAAK,EAAC,GAE7D,EAMAnc,YAAA,SAAgB+zJ,EAAUtgJ,GACtB,SAAO/S,EAAAkF,KAAG,GAAAvB,OAAIwvJ,EAAc,KAAAxvJ,OAAIm1C,mBAAmB/lC,KAAOrQ,QACtD3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAIi9B,EAAAkB,UAAUn+B,EAAK,GAEzC,EAOAnc,cAAA,SAAgBg0J,EAAYvgJ,EAAY1Q,GACpC,SAAOrC,EAAA64C,OAAK,GAAAl1C,OAAIwvJ,EAAc,KAAAxvJ,OAAIm1C,mBAAmB/lC,IAAO1Q,GAAMK,QAC9D3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAIi9B,EAAAkB,UAAUn+B,EAAK,GAEzC,EAMAnc,cAAA,SAAgBi0J,EAAYxgJ,GACxB,SAAO/S,EAAA4kC,KAAG,GAAAjhC,OAAIwvJ,EAAc,KAAAxvJ,OAAIm1C,mBAAmB/lC,IAAO,CACtDgmC,cAAe,QAEvB,EAMAz5C,oBAAA,SAAgBk0J,EAAkBzgJ,GAC9B,SAAO/S,EAAAkF,KAAG,GAAAvB,OAAIwvJ,EAAc,KAAAxvJ,OAAIm1C,mBAAmB/lC,GAAG,cAAarQ,QAC/D3C,EAAAub,KAAI,SAAC5I,GAAI,OAAKA,EAAK4I,IAAI,SAACG,GAAI,OAAK,IAAItb,EAAAwsB,cAAclR,EAAK,EAAC,GAEjE,oICjFA,IAAA2U,EAAA5yB,EAAA,OAEA8B,cAAwBG,EAsBpB,SAAA2vH,IAA+B,IAAnBx0E,EAAAp2C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,GAAE9E,EAAAC,KAAAyvH,GAC3BzvH,KAAK2S,KAAOsoC,EAAMtoC,MAAQsoC,EAAMt1C,UAAY,QAC5C3F,KAAKm3C,SAAW8D,EAAM9D,UAClB8D,EAAM1nC,QAAU0nC,EAAMnqC,UAAY,CAC9BgmC,EAAGmE,EAAMnE,EAAImE,EAAM2tE,WAAa,EAChC7xE,EAAGkE,EAAMlE,EAAIkE,EAAM4tE,YAAc,GAEzC7oH,KAAK2qH,SAAW1vE,EAAM0vE,UAAY,EAClC3qH,KAAKstG,UAAYryD,EAAMqyD,cAAa78E,EAAAyC,aAAY,IAAI9Y,MACpDpa,KAAK6W,MAAQokC,EAAMpkC,MACnB7W,KAAK6V,SAAWolC,EAAMplC,SACtB7V,KAAKooH,cAAgBntE,EAAMmtE,YAC3BpoH,KAAK8oH,iBAAmB7tE,EAAM6tE,kBAAoB,UACtD,wMCtCJ,IAAAj/G,EAAAhM,EAAA,OACA+P,EAAA/P,EAAA,OACAyC,EAAAzC,EAAA,OAEAk7C,EAAAl7C,EAAA,KACA0C,EAAA1C,EAAA,6GAcQwK,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,iBACJlB,EAAA+E,iEADe/E,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA7B,oEAEfjI,EAAA8E,yBAAA,aAAA9E,CAGC,cAEOA,EAAAgF,iBAAA,cACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAAsB9E,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAC,GAAA,IAAAC,EAAA7I,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAAF,EAAAikD,cAAa,GAAE9sD,EAAAgF,iBAAA,UAAIhF,EAAA+E,wBAAA/E,0BAGlDA,EAAA8E,yBAAA,aACI9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,wBAAkBhF,EAAA+E,wBAAA/E,IA9BrC1I,wBA+CmC,eAAAC,EAAtB6sI,EAAsB,SAAA9rI,GAAAC,EAAA6rI,EAAA9rI,GAAA,IAAAG,EAAAC,EAAA0rI,GAU/B,SAAAA,EAA6CxxF,GAAU,IAAA75C,EAAArB,SAAAC,KAAAysI,IACnDrrI,EAAAN,EAAAO,KAAArB,OADyCi7C,QAR5B75C,EAAA2sB,MAAQ,IAAIlkB,EAAAuV,aAEtBhe,EAAAkP,QAAO/P,EAAAuzJ,kBAAiB1yJ,EAAKurB,MAAQ,IAAIosB,EAAAmO,MAIzC9lD,EAAA6hB,SAAU,EAIb7hB,EAAKurB,KAAOvrB,EAAK65C,MAAMtuB,MAAQ,GAC/BvrB,EAAKkP,QAAO/P,EAAAuzJ,kBAAiB1yJ,EAAKurB,MAAMvrB,CAC5C,CAACtB,SAAA2sI,EAAA,EAAAlrI,IAAA,WAAAC,MAEM,WAAkB,GAAC,CAAAD,IAAA,cAAAC,MAEnB,WACH,GAAKxB,KAAKsQ,OACVtQ,KAAKsQ,KAAKgY,mBACNtoB,KAAKsQ,KAAKiE,OAAO,CACjB,IAAM42H,EAAW,IAAIpyF,EAAAmO,KAAIn4B,IAAA,GAClB/uB,KAAKsQ,KAAK9O,OAAK,IAClBk8G,aAAa,KAEjB19G,KAAK+tB,MAAMzO,KAAK,CAAEkP,OAAQ,OAAQ0kB,SAAUi4F,IAEpD,KAACsB,CAAA,CA5B8B,CAAQnsI,EAAA8H,cAAYxI,SAA1C6sI,0CAAqBpkI,EAAAC,4BAUVsF,EAAAivB,iBAAe,kDAV1B4vG,EAAqB1jI,UAAA,qBAAAyW,QAAA,CAAAuO,MAAA,SAAA/kB,SAAA,CAAAX,EAAAY,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,qmBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA5C1BhB,EAAA8E,yBAAA,WAAA9E,CAAQ,WAEAA,EAAAgF,iBAAA,GACJhF,EAAA+E,yBACA/E,EAAAkB,oBAAA,WACAlB,EAAA8E,yBAAA,aAAA9E,CAA8B,cAChBA,EAAAgF,iBAAA,WAAKhF,EAAA+E,wBAAA/E,KAGvBA,EAAA0J,qBAAA,EAAAgiJ,EAAA,aAAA1rJ,CAKO,EAAA2rJ,EAAA,eALP3rJ,CAKO,EAAA4rJ,EAAA,yBAAA5rJ,EAAAqd,0EAZCrd,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,UAAAjE,EAAAqjB,MAAArjB,EAAAqjB,KAAAvZ,GAAA,oCASH/K,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,QAAA5a,CAAgB,WAAAwd,GAMhBxd,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,QAAAvH,EAAA2Z,wWA2BAwpH,CAAsB,sHCtDnC,IAAApsI,EAAAxC,EAAA,OACAwkC,EAAAxkC,EAAA,OAEAuC,EAAAvC,EAAA,OACAk7C,EAAAl7C,EAAA,KAEMq2J,EAAiB,uBAMvBv0J,cAAA,SAAgBg0H,EAAYlxF,GACxB,IAAMzP,KAAQqP,EAAAK,eAAc,CAAED,MAC9B,SAAOpiC,EAAAkF,KAAG,GAAAvB,OAAIkwJ,GAAclwJ,OAAGy+B,EAAI,IAAMzP,EAAQ,KAAMjwB,QACnD3C,EAAAub,KAAI,SAAC5I,GAAI,OACLA,EAAK4I,IAAI,SAACG,GAAyB,OAAK,IAAIi9B,EAAA8sC,UAAU/pE,EAAK,EAAC,GAGxE,EAMAnc,YAAA,SAAgBkvH,EAAUz7G,GACtB,SAAO/S,EAAAkF,KAAG,GAAAvB,OAAIkwJ,EAAc,KAAAlwJ,OAAIm1C,mBAAmB/lC,KAAOrQ,QACtD3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAIi9B,EAAA8sC,UAAU/pE,EAAK,GAEzC,EAMAnc,cAAA,SAAgBw0J,EAAYxtJ,GACxB,SAAOtG,EAAAkF,KAAG,GAAAvB,OAAIkwJ,EAAc,KAAAlwJ,OAAI2C,IAAS5D,QACrC3C,EAAAub,KAAI,SAACG,GAAI,OAAK,IAAIi9B,EAAA8sC,UAAU/pE,EAAK,GAEzC,0ICtCAje,EAAA,iHAMYwK,EAAA8E,yBAAA,UAAA9E,CAA6D,aAErDA,EAAAgF,iBAAA,WAAIhF,EAAA8E,yBAAA,UAAM9E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBAAO/E,EAAAgF,iBAAA,QACtBhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,sBACI9E,EAAAkB,oBAAA,aAMAlB,EAAA8E,yBAAA,eAAW9E,EAAAgF,iBAAA,sBAAgBhF,EAAA+E,wBAAA/E,8CAVbA,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,QAAA7J,EAAAw+I,SAAA,mCAatB/rJ,EAAA8E,yBAAA,UAAA9E,CAA8D,aAEtDA,EAAAgF,iBAAA,YAAKhF,EAAA8E,yBAAA,UAAM9E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBAAO/E,EAAAgF,iBAAA,QACvBhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,sBACI9E,EAAAkB,oBAAA,aAMAlB,EAAA8E,yBAAA,eAAW9E,EAAAgF,iBAAA,+BAAyBhF,EAAA+E,wBAAA/E,8CAVrBA,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,QAAAlO,EAAA6iJ,SAAA,oCAavB/rJ,EAAA8E,yBAAA,UAAA9E,CAGC,aAEOA,EAAAgF,iBAAA,qCAAuChF,EAAA8E,yBAAA,UAAM9E,EAAAgF,iBAAA,OAAChF,EAAA+E,yBAAO/E,EAAAgF,iBAAA,QACzDhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,sBACI9E,EAAAkB,oBAAA,cAMAlB,EAAA8E,yBAAA,eACI9E,EAAAgF,iBAAA,uCACJhF,EAAA+E,wBAAA/E,8CAZaA,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,QAAA/N,EAAA0iJ,SAAA,iBACb/rJ,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAAsN,sBAAA,+BAUItN,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAAsN,sBAAA,uEAIZtN,EAAA8E,yBAAA,UAAA9E,CAA8D,cAEtDA,EAAAgF,iBAAA,cACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,sBACI9E,EAAAkB,oBAAA,cAOAlB,EAAA8E,yBAAA,eAAW9E,EAAAgF,iBAAA,6BAAuBhF,EAAA+E,wBAAA/E,8CAXnBA,EAAAiF,oBAAA,GAAAjF,EAAAoX,sBAAA,QAAAvO,EAAAkjJ,SAAA,iCAcvB/rJ,EAAA8E,yBAAA,UAAA9E,CAGC,qBAMOA,EAAAgF,iBAAA,2BACJhF,EAAA+E,wBAAA/E,0BAEJA,EAAA8E,yBAAA,UAAA9E,CAGC,qBAMOA,EAAAgF,iBAAA,sBACJhF,EAAA+E,wBAAA/E,6BArFRA,EAAA8E,yBAAA,YACI9E,EAAA0J,qBAAA,EAAAsiJ,EAAA,aAAAhsJ,CAaM,EAAAisJ,EAAA,aAbNjsJ,CAaM,EAAAksJ,EAAA,aAbNlsJ,CAaM,EAAAmsJ,EAAA,YAbNnsJ,CAaM,EAAAosJ,EAAA,YAbNpsJ,CAaM,EAAAqsJ,EAAA,aAyEVrsJ,EAAA+E,iEAvF6B/E,EAAAwI,qBAAA,YAAAsB,EAAA7B,MACUjI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA7B,KAAA+T,SAAA/Q,MAcAjL,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA7B,KAAA+T,SAAA1d,OAgB9B0B,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA7B,KAAA+T,SAAA8tB,cAiB8B9pC,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA7B,KAAA+T,SAAAkoH,OAiB9BlkI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA7B,KAAA+T,SAAAswI,qBAYAtsJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAA7B,KAAA+T,SAAAm5F,iBAhFjB79G,oBAqG8B,eAAAC,EAAjBg1J,EAAiB,oBAAAA,IAAA70J,EAAAC,KAAA40J,EAAA,CAAA90J,SAAA80J,EAAA,EAAArzJ,IAAA,WAAAC,MAInB,SAAS8R,GAAY,IAAA4Q,EACxBhe,GAAsC,QAATge,EAAAlkB,KAAKsQ,YAAI,IAAA4T,OAAA,EAATA,EAAWG,SAAS/Q,KAAS,GAC1D,OADepN,EAAP+tD,SAAgB/tD,EAAPguD,OAErB,KAAC0gG,CAAA,CAPyB,GAOzBh1J,SAPQg1J,yCAAiB,kDAAjBA,EAAiB7rJ,UAAA,gBAAAwW,OAAA,CAAAjP,KAAA,QAAApH,MAAA,EAAAC,KAAA,EAAA+D,OAAA,swBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAlGtBhB,EAAA0J,qBAAA,EAAA8iJ,EAAA,mBAAiBxsJ,EAAAwI,qBAAA,OAAAvH,EAAAgH,qXAkGZskJ,CAAiB,2LCxG9B,IAAA1wG,EAAArmD,EAAA,OAEA0C,EAAA1C,EAAA,OAwBaqpD,EAAIpnD,EA4Cb,SAAAonD,IAA4C,IAAA4tG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAhCzyJ,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA8B,GAAE9E,EAAAC,KAAAknD,GACxClnD,KAAKoT,GAAK1Q,EAAK0Q,IAAM1Q,EAAKiE,OAAK,SAAA3C,UAAakgD,EAAAkD,cAAa,IACzDpnD,KAAKsT,KAAO5Q,EAAK4Q,MAAQ,GACzBtT,KAAK2G,MAAQjE,EAAKiE,OAAS,GAC3B3G,KAAKksI,WAAaxpI,EAAKwpI,YAAcxpI,EAAK4Q,MAAQ,GAClDtT,KAAKmsI,UAAYzpI,EAAKypI,WAAa,GACnCnsI,KAAKusI,MAAQ7pI,EAAK6pI,OAAS,GAC3BvsI,KAAKmyC,aAAezvC,EAAKyvC,cAAgB,GACzCnyC,KAAKmlE,MAAQziE,EAAKyiE,OAAS,GAC3BnlE,KAAK+wG,MAAQruG,EAAKquG,OAAS,GAC3B/wG,KAAKgrG,SAAWtoG,EAAKsoG,UAAY,GACjChrG,KAAK4kH,YAAcliH,EAAKkiH,UACxB5kH,KAAK6pC,aAAennC,EAAKmnC,WACzB7pC,KAAK8/B,SAAwB,QAAhBg1H,EAAGpyJ,EAAKo9B,gBAAQ,IAAAg1H,KAC7B90J,KAAKkyB,SAAwB,QAAhB6iI,EAAGryJ,EAAKwvB,gBAAQ,IAAA6iI,KAC7B/0J,KAAK83G,gBAAkBp1G,EAAKo1G,iBAAmB,GAC/C,IAAM/2E,EAASr+B,EAAKq+B,QAAU,GAY9B,QAAWx/B,KAXXvB,KAAKgxC,WAA4B,QAAlBgkH,EAAGtyJ,EAAKsuC,kBAAU,IAAAgkH,IAAI,GACjCtyJ,EAAKgxI,WAAW3yG,EAAO3K,KAAK,iBAC5B1zB,EAAK0yJ,SAASr0H,EAAO3K,KAAK,mBAC1B1zB,EAAKsuC,YAAYjQ,EAAO3K,KAAK1zB,EAAKsuC,YACtChxC,KAAK+gC,OAASA,EACd/gC,KAAKo1B,eAAiB1yB,EAAK0yB,gBAAkB,GAC7Cp1B,KAAKo1B,eAAeu/H,oBAChBjyJ,EAAKiyJ,qBAAuB30J,KAAKo1B,eAAeu/H,oBACpD30J,KAAK09G,cAAyB,QAAXu3C,EAACj1J,KAAK2G,aAAK,IAAAsuJ,GAAVA,EAAY3oB,SAAQ,GAAAtoI,OAAIzD,EAAA6rI,eAC5CpsI,KAAKw9G,eAAoC,QAAtB03C,EAAGxyJ,EAAK86G,sBAAc,IAAA03C,KACzCl1J,KAAK20J,sBAA2C,QAApBQ,EAACn1J,KAAKo1B,sBAAc,IAAA+/H,IAAnBA,EAAqBR,qBAChCjyJ,EACRnB,KAAOvB,OAAOA,KAAKo1B,eAAe7zB,GAAOmB,EAAKnB,GAE5D,GA3EJ5B,OAAAunD,EA8EAvnD,YAAuB,SAAA01J,GAAAz0J,EAAAq5C,EAAAo7G,GAAA,IAAAv0J,EAAAC,EAAAk5C,GAYnB,SAAAA,IAAyC,IAAAxF,EAAA6gH,EAAAC,EAAA7gH,EAAAtzC,EAA7BsB,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA2B,GAAE9E,SAAAC,KAAAi6C,IACrC74C,EAAAN,EAAAO,KAAArB,KAAM0C,IACD8yJ,mBAAqB9yJ,EAAK8yJ,oBAAsB,GACrDp0J,EAAKq0J,0BACD/yJ,EAAK+yJ,4BAA6B,EACtCr0J,EAAKq+G,aACkB,QAAnBhrE,EAAA/xC,EAAK0yB,sBAAc,IAAAqf,OAAA,EAAnBA,EAAqBgrE,cAAe/8G,EAAK+8G,aAAe,GAC5Dr+G,EAAKimC,OAAqB,QAAZiuH,EAAA5yJ,EAAKkhC,eAAO,IAAA0xH,GAAZA,EAAc9pH,SACtB,WACY,QAAZ+pH,EAAA7yJ,EAAKkhC,eAAO,IAAA2xH,GAAZA,EAAc9pH,SACd,YACmB,QAAnBiJ,EAAAhyC,EAAK0yB,sBAAc,IAAAsf,OAAA,EAAnBA,EAAqBrN,SAAU3kC,EAAK2kC,QAAU,UACpDjmC,EAAKwiC,QAAUlhC,EAAKkhC,QACpBxiC,EAAKg0B,eAAerH,MAASrrB,EAAagzJ,eAAet0J,CAC7D,CAAC,OAAAtB,EAAAm6C,EAAA,CA1BkB,CAAQiN,GA6B/BvnD,YAAuB,SAAAg2J,GAAA/0J,EAAAilF,EAAA8vE,GAAA,IAAAC,EAAA70J,EAAA8kF,GAUnB,SAAAA,IAAyC,IAAA9gF,EAA7BrC,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA2B,GAAE9E,SAAAC,KAAA6lF,IACrC9gF,EAAA6wJ,EAAAv0J,KAAArB,KAAM0C,IACDglJ,YAAchlJ,EAAKglJ,aAAe,GACvC3iJ,EAAKinI,SAAWtpI,EAAKspI,UAAY,GACjCjnI,EAAKY,SAAWjD,EAAKiD,UAAY,GACjCZ,EAAKkD,eAAiBvF,EAAKuF,aAAalD,CAC5C,CAAC,OAAAjF,EAAA+lF,EAAA,CAhBkB,CAAQ3+B,wKCpI/B,IAAA+iF,EAAApsI,EAAA,OACA00H,EAAA10H,EAAA,OACAk7C,EAAAl7C,EAAA,gBAEMg4J,EAAoB,GAEpBjwE,EAAa,IAAI7sC,EAAAmO,KAEvBvnD,WAGqB,eAAAC,EAARk2J,EAAQ,oBAAAA,IAAA/1J,EAAAC,KAAA81J,EAAA,CAAAh2J,SAAAg2J,EAAA,EAAAv0J,IAAA,YAAAC,OACjBk2B,EAAAj2B,EAAAC,IAAAC,KAIO,SAAAC,EAAgBmvC,GAAe,IAAApkB,EAAA,OAAAjrB,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC7B2uC,EAAO,CAAA7uC,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASqiF,GAAU,OAG9B,KAFGj5D,EAAOkpI,EAAUzmI,KACjB,SAAAlpB,GAAY,OAAPA,EAAFkN,KAAuB29B,GAAd7qC,EAALS,QAAwCoqC,CAAO,IAElD,CAAA7uC,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASopB,GAAI,OAAAzqB,SAAAE,KAAA,KACRmwH,EAAA1D,WAAU99E,GAClB7tC,YAAWkB,MACL,kBAAM,IAAI,GAAC,OAFlB,KAAJuoB,EAAIzqB,EAAA4B,MAGI,CAAA5B,EAAAE,KAAA,SACJyzJ,SAAUz/H,KAAKzJ,GAAMzqB,EAAAqB,OAAA,SACdopB,GAAI,QAAAzqB,SAAAE,KAAA,MAEF6nI,EAAAypB,WAAU3iH,GAClB7tC,YAAWkB,MACL,kBAAM,IAAI,GAAC,QAFlB,KAAJuoB,EAAIzqB,EAAA4B,MAGI,CAAA5B,EAAAE,KAAA,SACJyzJ,SAAUz/H,KAAKzJ,GAAMzqB,EAAAqB,OAAA,SACdopB,GAAI,eAAAzqB,EAAAqB,OAAA,SAERqiF,GAAU,yBAAA1jF,EAAAwC,OAAA,EAAA9C,EAAA,IACpB,SAAAgoB,EAAA5M,GAAA,OAAA0a,EAAA9yB,MAAA5E,KAAA6E,UAAA,MAAAixJ,EAzBD,IAAAp+H,CAyBC,CA1BgB,GA0BhB93B,SA1BQk2J,yCAAQ,0DAARA,EAAQ/9H,MAAA,IAAR+9H,CAAQ,8KCZrB,IAAAtsJ,EAAA3L,EAAA,OACAqmD,EAAArmD,EAAA,OAEAk7C,EAAAl7C,EAAA,KAEIk4J,EAAa,EAINp2J,cAAc,cAEzBA,wBAAA,SAAgB+G,EAAsBi0E,GAClCh7E,cAAcg7E,CAClB,EAEA,IAAMq7E,EAAwB,GAQ9Br2J,mBAAA,SAAgBs2J,EACZ7iJ,EACAE,EACA4iJ,GAEK9iJ,IACDA,EAAE,QAAApP,OAAW+xJ,MAEZziJ,IACDA,EAAI,QAAAtP,OAAW+xJ,SAEF7wJ,IAAbgxJ,IACAA,KAAW,EAAEhyG,EAAAkyB,sBAAqB,OAAS,IAQ/C,QANMjkC,EAAe+jH,EAAQ,WAAgBv2J,EAAAysI,YAAYxlI,MAAM,KAAK,GAChEuvJ,EAAsB,GACpBC,EAAiBjtH,KAAK0Z,OACxBqB,EAAAkyB,sBAAqB,GAAK,EAC1B4/E,EAAY/wJ,QAEPgtB,EAAI,EAAGA,EAAImkI,EAAgBnkI,IAChCkkI,EAAU//H,KAAK4/H,KAAY9xG,EAAAkyB,sBAAqB4/E,EAAY/wJ,UAEhEkxJ,KAAYjyG,EAAA/W,QAAOgpH,GACnB,IAAMxvJ,EAAK,GAAA3C,OAAMsP,EAAK1M,MAAM,KAAK8N,KAAK,KAAKke,cAAa,KAAA5uB,OACpDkyJ,EAAW,OAAS,IACxBlyJ,OAAGrE,EAAAysI,aACH4pB,SAAY5/H,KAAKzvB,GACV,CACHyM,KACAE,OACA44H,WAAY54H,EAAK1M,MAAM,KAAK,GAC5BulI,UAAW74H,EAAK1M,MAAM,KAAK,GAC3BD,QACA4lI,MAAK,iBACL8pB,QAASH,EACT/jH,aAAc,CACV/+B,GAAI++B,EAAavrC,MAAM,KAAK8N,KAAK,KAAKke,cACtCtf,KAAM6+B,GAEVnB,WAAU,cAAAhtC,UAAgBkgD,EAAAkyB,sBAAqB,KAC/CkgF,cAAYpyG,EAAAkyB,sBAAqB,QACjC+/E,YACAnG,MAAK,GAAAhsJ,OAAKoP,EAAE,QAEpB,EAMAzT,mBAAA,SAAgBm0J,EAAiBnnI,GAAW,IAAA4pI,EACxC,IAAK5pI,EACD,MAAM6/C,MAAM,kBAGhB,IAAM+1B,EAAS,CACXjvF,KAAM,IAAI9J,EAAAo2B,YAAYjT,EAAKrZ,MAAQ,GAAI,CAAC9J,EAAAq2B,WAAWC,WACnDn5B,MAAO,IAAI6C,EAAAo2B,YAAYjT,EAAKhmB,OAAS,GAAI,CACrC6C,EAAAq2B,WAAWl5B,MACX6C,EAAAq2B,WAAWC,WAEfqS,aAAc,IAAI3oC,EAAAo2B,YACdjT,EAAKwlB,cAAgB,GACrB3oC,EAAAq2B,WAAWC,UAEfysG,MAAO,IAAI/iI,EAAAo2B,YACPjT,EAAK4/G,OAAS,GACd/iI,EAAAq2B,WAAWvP,QAAQ,sBAEvBqkI,oBAAqB,IAAInrJ,EAAAo2B,YAAYjT,EAAKgoI,sBAAuB,GACjEn3C,eAAgB,IAAIh0G,EAAAo2B,YAA+B,QAApB22H,EAAC5pI,EAAK6wF,sBAAc,IAAA+4C,OAKvD,OADa,IAAI/sJ,EAAAm2B,UAAU4iE,EAE/B,EAEA5iG,oBAAA,SAAgB62J,IAEK,IADjB7pI,EAAA9nB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkB,IAAIk0C,EAAAkB,UACtB3lC,EAAAzP,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,GAET09F,EAAS,CACXjvF,KAAM,IAAI9J,EAAAo2B,YAAYjT,EAAKrZ,MAAQ,IACnC3M,MAAO,IAAI6C,EAAAo2B,YAAYjT,EAAKhmB,OAAS,GAAI,CACrC6C,EAAAq2B,WAAWl5B,MACX6C,EAAAq2B,WAAWC,WAEfqS,aAAc,IAAI3oC,EAAAo2B,YACdjT,EAAKwlB,cAAgB,GACrB3oC,EAAAq2B,WAAWC,UAEfysG,MAAO,IAAI/iI,EAAAo2B,YAAYjT,EAAK4/G,OAAS,IACrCj4H,KAAM,IAAI9K,EAAAo2B,YAAYtrB,GAAQ,GAAI,CAAC9K,EAAAq2B,WAAWC,YAIlD,OADa,IAAIt2B,EAAAm2B,UAAU4iE,EAE/B,yIC1HA,IAAAjiG,EAAAzC,EAAA,OAEA2L,EAAA3L,EAAA,OAEAkQ,EAAAlQ,EAAA,OACAoQ,EAAApQ,EAAA,OACA+P,EAAA/P,EAAA,OACAqQ,EAAArQ,EAAA,OAEAw8C,EAAAx8C,EAAA,OACAy8C,EAAAz8C,EAAA,OAKAqzG,GAHArzG,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACA44J,EAAA54J,EAAA,MACA64J,EAAA74J,EAAA,qJAWA8B,oBAe8B,eAAAC,EAAjB+2J,EAAiB72J,EAAA,SAAA62J,IAAA52J,EAAAC,KAAA22J,EAAA,GAAA/2J,SAAjB+2J,yCAAiB,iDAAjBA,uDAZLr2J,EAAAgZ,aACA9P,EAAAiC,YACAjC,EAAAwC,oBACA4B,EAAAsB,gBACAorC,EAAAvuC,iBACAsuC,EAAAtrC,iBACAb,EAAA0B,kBACA7B,EAAAuB,yBACArB,EAAA0B,iBAIKgnJ,CAAiB,oCArB1BzlD,EAAAiB,0BAAyB,CAAA5pG,EAAAwsF,QAAAxsF,EAAAgsF,KAAA9rF,EAAA4sF,gBAAA5sF,EAAA6sF,QAAA3sF,EAAA+rF,eAAA7rF,EAAA+rF,cAAA7vE,EAAAuvE,oBAAAtvE,EAAAg8F,QAAAh8F,EAAAi8F,YAAAj8F,EAAAk8F,eAAAh8F,EAAAuvE,UAAArvE,EAAAuvE,mBAAAosB,EAAAygB,aAAA,CAAAj5H,EAAAqtF,2CAEzB6gE,EAAAn+I,+BAA8B,CAAA/P,EAAAwsF,QAAAxsF,EAAAgsF,KAAA9rF,EAAA4sF,gBAAA5sF,EAAA6sF,QAAA3sF,EAAA+rF,eAAAysB,EAAAoc,mBAAAnc,EAAAqe,yBAAA52H,EAAA+rF,cAAA7vE,EAAAuvE,oBAAApvE,EAAAuvE,UAC9BiiE,EAAApD,2BAAyB,CAAA/qJ,EAAAotF,UAAAptF,EAAAqtF,SAAAi6B,EAAA7yB,wNCxB7Bn/F,EAAA,WACAyC,EAAAzC,EAAA,OACA4yB,EAAA5yB,EAAA,OACAykC,EAAAzkC,EAAA,OACAq/B,EAAAr/B,EAAA,qGAsDoBwK,EAAA8E,yBAAA,WAAA9E,CAGC,YAEOA,EAAAgF,iBAAA,gCACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,WAAA9E,CAAsD,qBAE9CA,EAAAuI,qBAAA,yBAAAG,GAAA,IAAA6lJ,EAAAvuJ,EAAA2I,wBAAA+1B,GAAAkvB,MAAA/1C,EAAA7X,EAAA8I,wBAAA,UAAA9I,EAAA+I,sBAAA8O,EAAA9a,SAAA8a,EAAA22I,mBAAAD,IAAA7lJ,EAAA,EAAA1I,CAA6C,2BAAAA,EAAA2I,wBAAA+1B,GAAA,IAAAhnB,EAAA1X,EAAA8I,wBAAA,UAAA9I,EAAA+I,sBAAA2O,EAAA+2I,SAClB,EAAI,GAClCzuJ,EAAA+E,wBAAA/E,wEANDA,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAAlF,EAAA8L,sBAAA,IAAA4iJ,EAAA,YAII1uJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAA4F,EAAArR,SAAAqR,EAAAogJ,mBAAAD,mEAxDxBvuJ,EAAA8E,yBAAA,UAAA9E,CAGC,WAIOA,EAAAkB,oBAAA,qBACAlB,EAAA8E,yBAAA,SAAK9E,EAAAgF,iBAAA,GAAehF,EAAA+E,yBACpB/E,EAAA8E,yBAAA,WAAgC9E,EAAAgF,iBAAA,GAAgBhF,EAAA+E,yBAChD/E,EAAA8E,yBAAA,WAAgC9E,EAAAgF,iBAAA,GAAgBhF,EAAA+E,wBAAA/E,GAEpDA,EAAA8E,yBAAA,UAAA9E,CAAgE,WAExDA,EAAAgF,iBAAA,iCACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,eAAA9E,CAMC,YANDA,CAMC,aAE2CA,EAAAgF,iBAAA,IAAYhF,EAAA+E,yBAChD/E,EAAA8E,yBAAA,kBAA2B9E,EAAAgF,iBAAA,sBAAehF,EAAA+E,wBAAA/E,KAGlDA,EAAA8E,yBAAA,YAAA9E,CAA8C,YAA9CA,CAA8C,eAI5BA,EAAAgF,iBAAA,WAAIhF,EAAA+E,wBAAA/E,GAElBA,EAAA8E,yBAAA,aACI9E,EAAAgF,iBAAA,yEAEJhF,EAAA+E,wBAAA/E,KAGRA,EAAA8E,yBAAA,YAAA9E,CAAsC,WAE9BA,EAAAgF,iBAAA,4BACJhF,EAAA+E,yBACA/E,EAAA8E,yBAAA,aAGI9E,EAAA0J,qBAAA,GAAAilJ,EAAA,cAcJ3uJ,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,YAAA9E,CAAqD,gBAM7CA,EAAAuI,qBAAA,mBAAAvI,EAAA2I,wBAAAgF,GAAA,IAAAC,EAAA5N,EAAA8I,0BAAA,OAAS9I,EAAA+I,sBAAA6E,EAAAk/C,cAAa,GAEtB9sD,EAAAgF,iBAAA,eACJhF,EAAA+E,wBAAA/E,GAEJA,EAAA8E,yBAAA,eAAA9E,CAKC,eACaA,EAAAgF,iBAAA,YAAKhF,EAAA+E,wBAAA/E,4EAzEAA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,OAAAsB,EAAAwa,MACVtkB,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAAwa,KAAArZ,MAC2BjL,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAAwa,KAAAhmB,OACA0B,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAAwa,KAAA4/G,OAW5BlkI,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,oBAAAy1G,GAGwCj+G,EAAAiF,oBAAA,GAAAjF,EAAA4L,4BAAA9B,EAAAymD,QAyBpBvwD,EAAAiF,oBAAA,IAAAjF,EAAAwI,qBAAA,UAAAsB,EAAA8kJ,UAmBpB5uJ,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,YAAAsB,EAAA2kJ,uEAgBRzuJ,EAAA8E,yBAAA,eAII9E,EAAAuI,qBAAA,uBAAAsmJ,EAAA7uJ,EAAA2I,wBAAAsF,GAAAsH,UAAArH,EAAAlO,EAAA8I,0BAAAoF,SAAAqiD,OAAAs+F,EAAA9jJ,GAAA/K,EAAA+I,sBAAAmF,EAAAugJ,SAAqC,EAAI,GAEzCzuJ,EAAAgF,iBAAA,GACJhF,EAAA+E,mDAJI/E,EAAA+rD,sBAAA,KAAA8iG,EAAA9jJ,IAGA/K,EAAAiF,oBAAA,GAAAjF,EAAAkF,6BAAA,IAAA2pJ,EAAA5jJ,KAAA,4BAIJjL,EAAA8E,yBAAA,YAII9E,EAAAkB,oBAAA,oBACAlB,EAAA8E,yBAAA,OAAG9E,EAAAgF,iBAAA,iDAA2ChF,EAAA+E,wBAAA/E,UADjCA,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,gBAvG7B,IAAMsmJ,EAAkB,WAExBx3J,4BA4GsC,eAAAC,EAAzBuyG,EAAyB,WAkBlC,SAAAA,EACYnxG,EACAiiD,GAAoDljD,EAAAC,KAAAmyG,GADpDnyG,KAAAgB,YACAhB,KAAAijD,cAnBIjjD,KAAA2iB,QAAU,CACtB,CAAEvP,GAAI,MAAOE,KAAM,0BACnB,CAAEF,GAAI,MAAOE,KAAM,wBACnB,CAAEF,GAAI,MAAOE,KAAM,wBAEhBtT,KAAA44D,OAAS54D,KAAK2iB,QAAQ,GAAGvP,GACzBpT,KAAAoF,SAAW,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAChDpF,KAAAi3J,SAAW,GACXj3J,KAAA82J,SAAU,EACV92J,KAAAijB,SAAU,EACDjjB,KAAA62J,mBAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,GAE1C72J,KAAA0qC,SAAoB,IAAIpI,EAAArN,QAAQ,CACpCtiB,KAAM,eACN7B,SAAU9Q,KAAK2iB,QAAQ,GAAGvP,IAM3B,CAACtT,SAAAqyG,EAAA,EAAA5wG,IAAA,WAAAC,MAEG,WACHxB,KAAKoF,SAAWpF,KAAKgB,UAAUuE,IAAI4xJ,IAAoB,EACnD,GACA,GACA,GACA,GACA,GACA,GACA,GAEJn3J,KAAKo3J,gBACLp3J,KAAKq3J,qBACT,GAAC,CAAA91J,IAAA,OAAAgE,IAED,WACI,SAAOjF,EAAAmG,cACX,GAAC,CAAAlF,IAAA,cAAAC,OAAA81J,EAAA71J,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAR,EAAApB,KAAA,OAAA0B,IAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEkC,GADrCpC,KAAKijB,SAAU,EACfjjB,KAAKijD,YAAYmzC,cAAe,EAE5Bp2F,KAAK44D,SAAW54D,KAAK2iB,QAAQ,GAAGvP,IAChCpT,KAAK44D,SAAW54D,KAAK0qC,SAAS55B,SAAQ,CAAA5O,EAAAE,KAAA,QAAAF,SAAAE,KAAA,KAEhC86B,EAAA4T,aACF,IAAIxO,EAAArN,QAAOlG,IAAA,GAAM/uB,KAAK0qC,UAAQ,IAAE55B,SAAU9Q,KAAK44D,WAE9C11D,YAAWkB,MACL,SAACogB,GACJpjB,QAAK6hD,YAAYmzC,cAAe,EAChCh1F,EAAK6hB,SAAU,EACTuB,CACV,GAAE,OAEVxkB,KAAKgB,UAAU84B,gBAAgBq9H,EAAiBn3J,KAAKoF,UACrDpF,KAAKijB,SAAU,EACfjjB,KAAKijD,YAAYt7C,QAAQ,wBAAAzF,EAAAwC,OAAA,EAAA9C,EAAA5B,KAAA,IAC5B,SAAAm1D,IAAA,OAAAmiG,EAAA1yJ,MAAA5E,KAAA6E,UAAA,KAAAtD,IAAA,gBAAAC,MAEO,WACJ,IAAIolC,EAAM,IAAIxsB,KACdpa,KAAKi3J,SAAWj3J,KAAK62J,mBAAmBl7I,IAAI,SAAC1Y,GAAC,SAC1CwtB,EAAA8mI,QAAO3wH,EAAK3jC,GAAGiyB,SAAS,EAEhC,GAAC,CAAA3zB,IAAA,sBAAAC,MAAA,eAAAg2J,EAAA/1J,EAAAC,IAAAC,KAEO,SAAAwD,IAAA,IAAA4N,EAAA,OAAArR,IAAAO,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,KACe86B,EAAA5J,eAAc,CAC7B3gB,KAAM,cACNsgB,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAW/Y,KAAK8W,QAC1CkC,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASjZ,KAAK8W,UACvChuB,YAAW,QAJR6P,EAAI1N,EAAAvB,MAKDmB,SACLjF,KAAK44D,OAAS7lD,EAAK,GAAGjC,SACtB9Q,KAAK0qC,SAAW33B,EAAK,IACxB,wBAAA1N,EAAAX,OAAA,EAAAS,EAAAnF,KAAA,IACJ,gBAAAq3J,IAAA,OAAAG,EAAA5yJ,MAAA5E,KAAA6E,UAAA,EAZA,MAYAstG,EAzCA,IAAAmlD,CAyCA,CAhFiC,GAgFjC13J,SAhFQuyG,0CAAyB9pG,EAAAC,4BAAAC,EAAAC,iBAAAH,EAAAC,4BAAAG,EAAAy6C,cAAA,kDAAzBivD,EAAyBppG,UAAA,yBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,gkDAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAzG9BhB,EAAA0J,qBAAA,EAAA0lJ,EAAA,cAmFApvJ,EAAA8E,yBAAA,qBACI9E,EAAA0J,qBAAA,EAAA2lJ,EAAA,gBAQJrvJ,EAAA+E,yBACA/E,EAAA0J,qBAAA,EAAA4lJ,EAAA,yBAAAtvJ,EAAAqd,yEA3FKrd,EAAAwI,qBAAA,QAAAvH,EAAA2Z,QAAA5a,CAAgB,WAAAokB,GAoFIpkB,EAAAiF,oBAAA,GAAAjF,EAAAwI,qBAAA,UAAAvH,EAAAqZ,aAmBpBwvF,CAAyB","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_class","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r3","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","_r2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r4","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","_r11","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","t","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","search","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref9","_$assets","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","RULE_REQUESTS","zone_id","Array","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","new_assets","old_assets","ical_uid","from_booking","location_name","location_id","filtered","event_id","booking_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","_r9","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","ɵɵpureFunction1","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","is_done","queryParamMap","params","_this2$booking","has","_this$booking6","_this$booking7","_this$booking8","is_today","format","_this$booking9","_this$booking10","_this$booking11","_this$booking12","is_all_day","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r15","BookingDetailsModalComponent_ng_container_36_div_5_Template","_c6","_c7","_booking","hide_map","has_assets","linked_bookings","_this$booking5","ts","booking_start","booking_end","_this$booking13","_this$booking14","_this$booking15","_toggleCheckedIn","checkinBooking","notifySuccess","approved","rejected","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_interactive_map_38_Template","BookingDetailsModalComponent_button_49_Template","BookingDetailsModalComponent_button_50_Template","booking_status","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","unique","booking_rules","available_resources","merge","timer","restrictions","_this$form$getRawValu","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","removeEmptyFields","addHours","getTime","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","use_24hr","feat_r21","_r23","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level3","_this2$level2","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","index","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","custom_id","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","checkOrder","updated_order","saveEvent","toJSON","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","getHours","getMinutes","is_period","max_length","resource_ids","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","inject_map_api_service_1","InjectMapApiService","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","is_initialised","is_initialised$","maps_key","script","google_key","KeepAliveService","_system_id","_delay","_status","_bindTo","module","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_events","Subject","_event_history","_logging_bindings","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","head","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","blob","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r8","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_10_Template","function","show","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","sendMessage","messages","toggleChat","ChatComponent_div_0_div_4_Template","ChatComponent","_chat","chat_hint","_this$user","scrollToBottom","connected","startChat","_input_el","_this4$_container_el","_container_el","scrollTop","scrollHeight","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","idx_r10","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_class2","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","diff","direction","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","IndoorMapsComponent_div_15_li_3_Template","search_result_items","IndoorMapsComponent","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","coordinates","levels_list","buildings_list","floor_mapping","custom_coordinates","_getUserLocation","initMapView","initDirections","handleLocationChange","_ngOnChanges","renderSpaceStatus","mapActions","mapFloorsToIndex","ngOnChanges","_this$mapsIndoors_ins","mapsIndoors_instance","addListener","found_action","actions_hashmap","map_view_options","lat","lng","maxZoom","map_view_instance","mapsindoors","mapView","GoogleMapsView","MapsIndoors","googleMaps_instance","getMap","externalDirectionsProvider","directions","GoogleMapsProvider","mapsIndoors_directions_service_instance","services","DirectionsService","mapsIndoors_directions_renderer_instance","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$mapsIndoors_ins2","_building$buildingInf","_this$mapsIndoors_ins3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","accumulator","getFloor","_this$mapsIndoors_ins4","_this$mapsIndoors_ins5","floorSelectorElement","FloorSelector","google","ControlPosition","RIGHT_TOP","found_building","_e$buildingInfo","_onSearch","_mapsindoors","searchParams","searchElement","LocationsService","getLocations","locations","onSearch","enableHighAccuracy","customPosition","coords","latitude","longitude","accuracy","geolocation","getCurrentPosition","_error$message","watchPosition","_updateGeolocation","_handleGeolocationError","updated_location","_updated_location$coo","_updated_location$coo2","_updated_location$coo3","_updated_location$coo4","destination","anchor","travelMode","directionsResult","_this6$mapsIndoors_di","setRoute","_error$message2","TypeError","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this7$actions","currentValue","_setPolygonFill2","_this$mapsIndoors_ins6","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_mat_spinner_1_Template","IndoorMapsComponent_div_2_Template","IndoorMapsComponent_div_15_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","opt_r21","EventDetailsModalComponent_ng_container_65_div_5_div_6_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","item_r24","EventDetailsModalComponent_ng_container_69_div_5_Template","_c25","show_attendees","act_r31","_r33","EMPTY_ACTIONS","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_interactive_map_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event3","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","is_owner","breakdown","overflow","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","setup_time","breakdown_time","old_system","visit_expected","host_override","is_external","removeEvent","_makeBooking2","_updateVisitorList","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","_data$recurrence$days","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","all_day_date","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","_s$resource","attendee_list_component_1","event_card_component_1","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","_form$value$recurrenc","_form$value$recurrenc2","getDay","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","_this$_element$native","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r1","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","_step4","_iterator4","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","use_mapsindoors$","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i12","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","roled_contacts","roles","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_bookSpace","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","openEventLinkModal","bookSpace","_updateStatus2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r10","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r16","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r22","time_r23","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","i13","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","item_r17","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_uploadImages","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","addChipItem","removeChipItem","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","_r0","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_updateSettingOverrides","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","feature_display","SpaceFiltersComponent_section_39_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_39_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_39_Template","SpaceFiltersComponent_div_41_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","_super2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/inject-map-api.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [source]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: from_booking ? '' : id,\n        booking_id: from_booking ? id : '',\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: from_booking ? '' : id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-2 rounded-2xl text-white px-3 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-warning]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'pending'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) =>\n            createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise()\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { debounceTime, map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event.toJSON()).toPromise();\n        this._poll.next(Date.now());\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                console.log('Matched Ruleset:', details, ruleset);\n                return ruleset.rules;\n            }\n        }\n    }\n    console.log('No Matched Ruleset:', details, DEFAULT_RULES);\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { InjectMapApiService } from './inject-map-api.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(s1: number, e1: number, s2: number, e2: number) {\n    return (\n        s1 >= s2 && s1 < e2 || s2 >= s1 && s2 < e1 || // Check start time\n        e1 > s2 && e1 <= e2 || e2 > s1 && e2 <= e1 // Check end time\n    )\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InjectMapApiService {\n    private is_initialised: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(null);\n\n    public readonly is_initialised$: Observable<boolean> =\n        this.is_initialised.asObservable();\n\n    constructor(private _settings: SettingsService) {}\n\n    public injectMapsApiKeys() {\n        const maps_key = this._settings.get('app.maps_indoor_api_key');\n        if (maps_key) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${maps_key}`;\n            document.body.appendChild(script);\n        }\n\n        const google_key = this._settings.get('app.google_maps_api_key');\n        if (google_key) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google_key}`;\n            document.body.appendChild(script);\n        }\n\n        if (maps_key && google_key) {\n            this.is_initialised.next(true);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"2a573fb\",\n    \"hash\": \"2a573fb\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"2a573fb\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1699927443300\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[20rem]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"show = false\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[24rem] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">info</app-icon>\n                                <p class=\"text-sm\">\n                                    {{ (progress | async).function }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute bottom-16 right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex items-center bg-base-100 focus-within:outline outline-info border-t border-base-300\"\n                >\n                    <input\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none\"\n                        [(ngModel)]=\"message\"\n                        (keyup.enter)=\"sendMessage()\"\n                    />\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AsyncHandler, currentUser, log, randomString } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(\n                id\n            )}?bearer_token=${encodeURIComponent(token())}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-success/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-info`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-base-300/50`,\n    error: `bg-error/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-neutral text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-neutral p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-base-100/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.bg-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.bg-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, HashMap, notifyError } from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport {\n    BuildingLevel,\n    Building,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        >\n            <mat-spinner\n                *ngIf=\"loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n            <div\n                *ngIf=\"geolocation_error_message\"\n                class=\"flex flex-col items-center z-50\"\n            >\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n                <p class=\"opacity-60 text-sm text-center mt-10\">\n                    {{ geolocation_error_message | translate }}\n                </p>\n            </div>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-0 left-0 bg-base-100 rounded-lg z-50\"\n        >\n            <div class=\"flex basis-1/2 px-4\">\n                <div class=\"flex flex-row items-center max-h-20\">\n                    <mat-form-field appearance=\"outline\" class=\"h-16 mt-4\">\n                        <input\n                            matInput\n                            #searchInput\n                            name=\"location-search\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                        />\n                    </mat-form-field>\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"flex text-black h-10 w-10 rounded-full bg-base-200 ml-5\"\n                        aria-label=\"search button\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\"\n                            >search</app-icon\n                        >\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"flex basis-1/2 overflow-y-auto \">\n                <div class=\"ml-6\">\n                    <ul>\n                        <div *ngIf=\"search_result_items\">\n                            <span class=\"font-medium text-lg\">Results</span>\n                            <li *ngFor=\"let item of search_result_items\">\n                                <div class=\"flex items-center mt-3 mb-3 h-10\">\n                                    <span class=\"flex mr-3 text-base\">\n                                        {{ item.properties.name }}</span\n                                    >\n                                    <button\n                                        icon\n                                        name=\"get-directions\"\n                                        matRipple\n                                        aria-label=\"get directions button\"\n                                        (click)=\"getRoute(item)\"\n                                        class=\"flex text-white h-7 w-7 rounded-md bg-secondary\"\n                                    >\n                                        <app-icon class=\"text-sm\"\n                                            >near_me</app-icon\n                                        >\n                                    </button>\n                                </div>\n                            </li>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public map_view_options: any;\n    public map_view_instance: any;\n    public mapsIndoors_instance: any;\n    public googleMaps_instance: any;\n    public mapsIndoors_directions_service_instance: any;\n    public mapsIndoors_directions_renderer_instance: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n    public floor_mapping: { [id: string]: string } = {};\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = await this.levels.pipe(take(1)).toPromise();\n        this.buildings_list = await this._org.building_list\n            .pipe(take(1))\n            .toPromise();\n\n        if (this.custom_coordinates) {\n            this.coordinates = this.custom_coordinates;\n        }\n        await this._getUserLocation();\n\n        await this.initMapView();\n        this.initDirections();\n\n        this.handleLocationChange();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    ngAfterViewInit() {\n        this.mapsIndoors_instance?.addListener(\n            'click',\n            (location: any, e: Event) => {\n                const found_action = this.actions_hashmap[location.id];\n                if (found_action) {\n                    found_action.callback(e);\n                }\n            }\n        );\n    }\n\n    initMapView(): Promise<void> {\n        // Hardcoded coordinates for mock map in Austin\n        // this.map_view_options = {\n        //     element: document.getElementById('maps-indoors'),\n        //     center: { lat: 30.3603774, lng: -97.7426772 },\n        //     zoom: 21,\n        //     maxZoom: 26,\n        // };\n\n        this.map_view_options = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 26,\n        };\n        this.map_view_instance = new mapsindoors.mapView.GoogleMapsView(\n            this.map_view_options\n        );\n\n        this.mapsIndoors_instance = new mapsindoors.MapsIndoors({\n            mapView: this.map_view_instance,\n        });\n        return (this.googleMaps_instance = this.map_view_instance.getMap());\n    }\n\n    initDirections() {\n        const externalDirectionsProvider =\n            new mapsindoors.directions.GoogleMapsProvider();\n        this.mapsIndoors_directions_service_instance =\n            new mapsindoors.services.DirectionsService(\n                externalDirectionsProvider\n            );\n        const directionsRendererOptions = {\n            mapsIndoors: this.mapsIndoors_instance,\n        };\n        this.mapsIndoors_directions_renderer_instance =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    async mapFloorsToIndex() {\n        const building = await this.mapsIndoors_instance?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        this.floor_mapping = pairs?.reduce((accumulator, [key, value]) => {\n            accumulator[key] = value;\n            return accumulator;\n        }, {});\n        const floor_index: string = await this.mapsIndoors_instance?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(\n            floorSelectorElement,\n            this.mapsIndoors_instance\n        );\n        this.googleMaps_instance.controls[\n            google.maps.ControlPosition.RIGHT_TOP\n        ].push(floorSelectorElement);\n\n        this.mapsIndoors_instance?.addListener('building_changed', (e: any) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.mapsIndoors_instance?.addListener('floor_changed', (e: string) => {\n            if (e && this.floor_mapping) {\n                const level_id: string = this.floor_mapping[e];\n                this._state.setLevel(level_id);\n            }\n        });\n    }\n\n    async onSearch(): Promise<any> {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        await mapsindoors?.services.LocationsService.getLocations(\n            searchParams\n        ).then((locations: any[]) => {\n            this.search_result_items = locations;\n        });\n    }\n\n    private _getUserLocation() {\n        const options = { timeout: 10000, enableHighAccuracy: true };\n\n        return new Promise<GeolocationPosition>(async (resolve, reject) => {\n            if ('geolocation' in navigator) {\n                if (this.coordinates) {\n                    const customPosition = {\n                        coords: {\n                            latitude: this.coordinates.latitude,\n                            longitude: this.coordinates.longitude,\n                            accuracy: 10,\n                        },\n                        timestamp: new Date().getTime(),\n                    };\n                    this.user_latitude = this.coordinates.latitude;\n                    this.user_longitude = this.coordinates.longitude;\n\n                    resolve(customPosition as GeolocationPosition);\n                }\n\n                if (!this.coordinates) {\n                    await navigator.geolocation.getCurrentPosition(\n                        (position: GeolocationPosition) => {\n                            this.user_latitude = position.coords.latitude;\n                            this.user_longitude = position.coords.longitude;\n                            resolve(position);\n                        },\n                        (error) => {\n                            this.geolocation_error_message =\n                                'Error: ' +\n                                error.message?.toString() +\n                                '. Please enable geolocation settings.';\n                            reject(error);\n                        },\n                        options\n                    );\n                    navigator.geolocation.watchPosition(\n                        (_) => this._updateGeolocation(_),\n                        (_) => this._handleGeolocationError(_)\n                    );\n                }\n            } else {\n                this.geolocation_error_message =\n                    'Error: geolocation is not supported.';\n                reject('Geolocation not supported');\n            }\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (updated_location) {\n            if (\n                updated_location.coords?.latitude !== this.user_latitude ||\n                updated_location.coords?.longitude !== this.user_longitude\n            ) {\n                this.user_latitude = updated_location.coords?.latitude;\n                this.user_longitude = updated_location.coords?.longitude;\n                this.getRoute(this.selected_destination);\n            }\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError('Error updating your geolocation.');\n    }\n\n    getRoute(location: any) {\n        this.selected_destination = location;\n        if (this.user_latitude && this.user_longitude) {\n            const originLocationCoordinate: any = {\n                lat: this.user_latitude,\n                lng: this.user_longitude,\n            };\n\n            //Hardcoded coordinates for mock map in Austin\n            // const originLocationCoordinate = {\n            //     lat: 30.3603774,\n            //     lng: -97.7426772,\n            // };\n\n            const destinationCoordinate = {\n                lat: location.properties.anchor.coordinates[1],\n                lng: location.properties.anchor.coordinates[0],\n                floor: location.properties.floor,\n            };\n\n            const routeParameters = {\n                origin: originLocationCoordinate,\n                destination: destinationCoordinate,\n                travelMode: 'WALKING',\n            };\n\n            this.mapsIndoors_directions_service_instance\n                .getRoute(routeParameters)\n                .then((directionsResult: any) => {\n                    this.mapsIndoors_directions_renderer_instance?.setRoute(\n                        directionsResult\n                    );\n                })\n                .catch((error: any) => {\n                    console.error('Error fetching route: ' + error);\n                    if (\n                        error instanceof TypeError &&\n                        error.message?.includes('origin')\n                    ) {\n                        notifyError(\n                            'Error: Cannot create route as origin location is outside of map area.'\n                        );\n                    }\n                });\n        } else {\n            notifyError('Error: unable to find a route.');\n        }\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (this.styles) {\n            const promises: Promise<void>[] = [];\n            for (const key in this.styles) {\n                const colour = this.styles[key]['fill'] as string;\n                if (key) {\n                    const updated_key = key.substring(1);\n                    promises.push(this._setPolygonFill(updated_key, colour));\n                }\n            }\n            return await Promise.all(promises);\n        }\n    }\n\n    async mapActions() {\n        return new Promise<HashMap<ViewAction>>((resolve, reject) => {\n            this.actions_hashmap = this.actions?.reduce(\n                (accumulator, currentValue) => {\n                    accumulator[currentValue.id] = currentValue;\n                    return accumulator;\n                },\n                {}\n            );\n            resolve(this.actions_hashmap);\n        });\n    }\n\n    private async _setPolygonFill(location_id: string, colour: string) {\n        await this.mapsIndoors_instance?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\"\n        >\n            <pre class=\"font-mono text-sm bg-neutral p-2\">{{\n                formatted_json\n            }}</pre>\n        </div>\n    `,\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div class=\"flex items-center border-b border-base-200 p-2\">\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-base-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-1 rounded-2xl text-white pl-1 pr-2 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-warning]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'question_mark'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { addMinutes, differenceInDays, getUnixTime, set } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, organiser } = this._form.getRawValue();\n            let start = date;\n            let end = addMinutes(date, duration).valueOf();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((space, idx) => {\n                    return periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces, this.booking_rules]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        delete _.visit_expected;\n                        return _;\n                    }),\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    notifyError('Unable to book the selected assets.');\n                    this._loading.next('');\n                }\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(on_error);\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration =\n            data.duration ||\n            differenceInMinutes(data.event_end * 1000, this.date) ||\n            30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60, this.duration);\n        }\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? addMinutes(date, 24 * 60)\n            : addMinutes(date, this.duration);\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        const event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n            [custom_coordinates]=\"{\n                latitude: 30.3603774 ,\n                longitude:  -97.7426772,\n            }\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.is_initialised$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => !events.find((e) => e.asset_id === _.id))\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...roled_contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).roles[0] || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\">Minimum Booking Length:</label>\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\">Maximum Booking Length:</label>\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: 'MMMM d, yyyy' }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"false\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-base-200 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-neutral:bg-base-100/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-neutral text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-neutral border-base-200 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-neutral hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            const buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        console.log('Building:', this.building);\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n        console.log('Building:', this.building);\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-base-100 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-base-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}