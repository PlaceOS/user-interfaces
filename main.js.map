{"version":3,"file":"main.js","mappings":"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IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKnL,EAAUkL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,G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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_class","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r3","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","_r2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r4","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","sd","ev","meeting_id","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","triggerPoll","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","item_r4","request_r1","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","items","EMPTY_FAVS","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","time","changes","AssetRequest","new_value","order","AssetSelectModalComponent","Math","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","idx","new_order","getHours","getMinutes","item_count","setValue","request","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","addMinutes","_data$asset_ids","_data$extension_data","_data$extension_data2","_data$extension_data3","_data$extension_data4","startOfMinute","randomInt","event_id","asset_ids","reduce","amount","status","notes","_status","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","day_r6","_r8","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","_r11","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r15","toggleCategory","category","ɵɵattribute","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","c","getOptions","min","diff","differenceInMinutes","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_data","_this$_data$exact_tim","t","selected_ids","state","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","rejected","localeCompare","queryAssetCategories","zone_id","_ref9","_$assets","category_id","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","asset_type_id","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_booking$asset_ids","_removeAssetRequests","requests","_$asset_ids","removeBooking","_updateAssetRequestsForResource","new_assets","ical_uid","from_booking","location_name","location_id","booking_id","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","booking_details_modal_component_1","async_handler_class_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r9","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","ɵɵpureFunction1","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","has","_this$booking7","_this$booking8","_this$booking9","is_today","format","_this$booking10","_this$booking11","_this$booking12","_this$booking13","is_all_day","dur","formatDuration","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r17","request_r15","BookingDetailsModalComponent_ng_container_36_div_5_div_10_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_c6","_r21","_r23","_booking","hide_map","has_assets","linked_bookings","_this$booking6","ts","booking_start","booking_end","_this$booking14","_this$booking15","_toggleCheckedIn","checkinBooking","notifySuccess","approved","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_interactive_map_38_Template","BookingDetailsModalComponent_button_49_Template","BookingDetailsModalComponent_button_50_Template","booking_status","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","unique","booking_rules","available_resources","merge","timer","restrictions","_this$form$getRawValu","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","groups","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_ref11","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x5","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$title","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","getTime","removeEmptyFields","addHours","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","feat_r21","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level3","_this2$level2","new_zoom","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","optionList","CateringListFieldComponent_div_1_div_25_span_3_Template","order_r1","removeOrderItem","currency_code","CateringListFieldComponent_div_1_div_8_Template","duplicateOrder","editOrder","removeOrder","show_order","CateringListFieldComponent_div_1_div_25_Template","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","filtered","CateringOrdersService","CateringOrderListComponent_li_20_Template","CateringOrderListComponent_div_22_Template","CateringOrderListComponent_mat_progress_bar_24_Template","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","_toggleCategory","icons","setFilters","getFilters","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","catering_vars_1","CateringOrderComponent_div_0_span_18_Template","CateringOrderComponent_div_0_span_21_Template","CateringOrderComponent_div_0_button_25_Template","CateringOrderComponent_div_0_span_28_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r13","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","_ref2$","valid_catering","checkOrder","updated_order","saveEvent","toJSON","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","inject_map_api_service_1","InjectMapApiService","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","slice","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","is_initialised","is_initialised$","maps_key","script","google_key","KeepAliveService","_system_id","_delay","_bindTo","module","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_events","Subject","_event_history","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","head","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","blob","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r8","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","_r22","ChatComponent_div_0_div_4_Template","show","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","idx_r10","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_class2","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","direction","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","IndoorMapsComponent_div_15_li_3_Template","search_result_items","IndoorMapsComponent","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","coordinates","levels_list","buildings_list","floor_mapping","custom_coordinates","_getUserLocation","initMapView","initDirections","handleLocationChange","_ngOnChanges","renderSpaceStatus","mapActions","mapFloorsToIndex","ngOnChanges","_this$mapsIndoors_ins","mapsIndoors_instance","addListener","found_action","actions_hashmap","map_view_options","lat","lng","maxZoom","map_view_instance","mapsindoors","mapView","GoogleMapsView","MapsIndoors","googleMaps_instance","getMap","externalDirectionsProvider","directions","GoogleMapsProvider","mapsIndoors_directions_service_instance","services","DirectionsService","mapsIndoors_directions_renderer_instance","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$mapsIndoors_ins2","_building$buildingInf","_this$mapsIndoors_ins3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","accumulator","getFloor","_this$mapsIndoors_ins4","_this$mapsIndoors_ins5","floorSelectorElement","FloorSelector","google","ControlPosition","RIGHT_TOP","found_building","_e$buildingInfo","_onSearch","_mapsindoors","searchParams","searchElement","LocationsService","getLocations","locations","onSearch","enableHighAccuracy","customPosition","coords","latitude","longitude","accuracy","geolocation","getCurrentPosition","_error$message","watchPosition","_updateGeolocation","_handleGeolocationError","updated_location","_updated_location$coo","_updated_location$coo2","_updated_location$coo3","_updated_location$coo4","destination","anchor","travelMode","directionsResult","_this6$mapsIndoors_di","setRoute","_error$message2","TypeError","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this7$actions","currentValue","_setPolygonFill2","_this$mapsIndoors_ins6","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_mat_spinner_1_Template","IndoorMapsComponent_div_2_Template","IndoorMapsComponent_div_15_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r21","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r19","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","item_r30","request_r28","_r32","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","_r34","show_attendees","_r36","ctx_r35","no_edit_message","_r38","ctx_r37","act_r39","_r41","ctx_r40","EMPTY_ACTIONS","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_interactive_map_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","_assertThisInitialize","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","_assertThisInitialized","differenceInDays","_ref17","_this$_event$getValue","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","catering_charge_code","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event3","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data4","_form$getRawValue","is_owner","breakdown","overflow","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","catering_notes","setup_time","breakdown_time","old_system","visit_expected","host_override","is_external","removeEvent","_makeBooking2","_updateVisitorList","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","all_day_date","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","short_list","_s$resource","inUseAt","attendee_list_component_1","event_card_component_1","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get3","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","_this$_element$native","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r1","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","_step4","_iterator4","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","use_mapsindoors$","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","roled_contacts","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_bookSpace","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","openEventLinkModal","bookSpace","_updateStatus2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_count_key","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r10","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r16","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r22","time_r23","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","short","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","has_error","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","i13","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_uploadImages","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","item_r2","addChipItem","removeChipItem","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","_r0","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","extra_info_fn","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","_updateSettingOverrides","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","bld_r11","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r14","start_date","_r20","SpaceFiltersComponent_div_30_div_6_Template","SpaceFiltersComponent_div_30_div_7_Template","feat_r24","feature_display","SpaceFiltersComponent_section_41_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_41_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_div_29_Template","SpaceFiltersComponent_div_30_Template","SpaceFiltersComponent_section_41_Template","SpaceFiltersComponent_div_43_Template","tmp_17_0","tmp_19_0","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","_super2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","i_r7","available_weekdays","changed","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/inject-map-api.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) => {\n            const sd = d.filter(\n                (_) => !e.find((ev) => `${ev.meeting_id}` === `${_.id}`)\n            );\n            return [...e, ...v, ...sd, ...p, ...l].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, randomString } from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < request.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        this.asset_requests = (value || []).map(\n            (_) => new AssetRequest({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_, idx) => (item as any).assets[idx].id);\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'accepted';\n        this.event = data.event || data || null;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetRequest[]\n) {\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: from_booking ? '' : id,\n        booking_id: from_booking ? id : '',\n        ical_uid,\n    }).toPromise();\n    await Promise.all(\n        bookings.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        new_assets.map((request) =>\n            createBooking(\n                new Booking({\n                    type: 'asset-request',\n                    booking_type: 'asset-request',\n                    date,\n                    duration,\n                    all_day,\n                    description: location_name,\n                    user_email: host,\n                    asset_id: request.id,\n                    asset_ids: flatten(request.items.map((_) => _.item_ids)),\n                    asset_name: request.items.map((_) => _.name).join(', '),\n                    title: request.items.map((_) => _.name).join(', '),\n                    extension_data: {\n                        parent_id: id,\n                        location_id,\n                        request: new AssetRequest({ ...request, event: null }),\n                    },\n                    zones: zones || [],\n                }),\n                { ical_uid, event_id: from_booking ? '' : id }\n            ).toPromise()\n        )\n    );\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_request[request.id]\n                                                ? 'Hide requested items'\n                                                : 'Show requested items'\n                                        \"\n                                        (click)=\"\n                                            show_request[request.id] =\n                                                !show_request[request.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                },\n                value.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get valid_assets() {\n        return (this.extension_data.assets || []).filter(\n            (request) =>\n                request.deliver_at_time < this.date + this.duration * 60 * 1000\n        );\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0)\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf()\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) =>\n            createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise()\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { debounceTime, map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-36\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div time class=\"w-36 text-sm\">\n                {{ order.event?.date | date: 'MMM d' }},\n                {{ order.event?.date | date: time_format }}\n                <br />\n                {{ order.event?.date_end | date: 'MMM d' }},\n                {{ order.event?.date_end | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        ''\n                }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"\n                        !(\n                            order.event?.space.display_name ||\n                            order.event?.space.name\n                        )\n                    \"\n                >\n                    No Location\n                </span>\n            </div>\n            <div class=\"w-56\">\n                {{ order.event?.organiser?.name || order.event?.host || '' }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"!(order.event?.organiser?.name || order.event?.host)\"\n                >\n                    Unknown Host\n                </span>\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '' }}\n                <span class=\"opacity-30\" *ngIf=\"!order.invoice_number\">\n                    No Invoice\n                </span>\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(events.map((event) => event.valid_catering))\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event.toJSON()).toPromise();\n        this._poll.next(Date.now());\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { InjectMapApiService } from './inject-map-api.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(s1: number, e1: number, s2: number, e2: number) {\n    return (\n        s1 >= s2 && s1 < e2 || s2 >= s1 && s2 < e1 || // Check start time\n        e1 > s2 && e1 <= e2 || e2 > s1 && e2 <= e1 // Check end time\n    )\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InjectMapApiService {\n    private is_initialised: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(null);\n\n    public readonly is_initialised$: Observable<boolean> =\n        this.is_initialised.asObservable();\n\n    constructor(private _settings: SettingsService) {}\n\n    public injectMapsApiKeys() {\n        const maps_key = this._settings.get('app.maps_indoor_api_key');\n        if (maps_key) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${maps_key}`;\n            document.body.appendChild(script);\n        }\n\n        const google_key = this._settings.get('app.google_maps_api_key');\n        if (google_key) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google_key}`;\n            document.body.appendChild(script);\n        }\n\n        if (maps_key && google_key) {\n            this.is_initialised.next(true);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"f9d258d\",\n    \"hash\": \"f9d258d\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"f9d258d\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1702945457964\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { SettingsService, current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\nimport { OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-success/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-info`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-base-300/50`,\n    error: `bg-error/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-neutral text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-neutral p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-base-100/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.bg-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.bg-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, HashMap, notifyError } from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport {\n    BuildingLevel,\n    Building,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        >\n            <mat-spinner\n                *ngIf=\"loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n            <div\n                *ngIf=\"geolocation_error_message\"\n                class=\"flex flex-col items-center z-50\"\n            >\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n                <p class=\"opacity-60 text-sm text-center mt-10\">\n                    {{ geolocation_error_message | translate }}\n                </p>\n            </div>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-0 left-0 bg-base-100 rounded-lg z-50\"\n        >\n            <div class=\"flex basis-1/2 px-4\">\n                <div class=\"flex flex-row items-center max-h-20\">\n                    <mat-form-field appearance=\"outline\" class=\"h-16 mt-4\">\n                        <input\n                            matInput\n                            #searchInput\n                            name=\"location-search\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                        />\n                    </mat-form-field>\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"flex text-black h-10 w-10 rounded-full bg-base-200 ml-5\"\n                        aria-label=\"search button\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\"\n                            >search</app-icon\n                        >\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"flex basis-1/2 overflow-y-auto \">\n                <div class=\"ml-6\">\n                    <ul>\n                        <div *ngIf=\"search_result_items\">\n                            <span class=\"font-medium text-lg\">Results</span>\n                            <li *ngFor=\"let item of search_result_items\">\n                                <div class=\"flex items-center mt-3 mb-3 h-10\">\n                                    <span class=\"flex mr-3 text-base\">\n                                        {{ item.properties.name }}</span\n                                    >\n                                    <button\n                                        icon\n                                        name=\"get-directions\"\n                                        matRipple\n                                        aria-label=\"get directions button\"\n                                        (click)=\"getRoute(item)\"\n                                        class=\"flex text-white h-7 w-7 rounded-md bg-secondary\"\n                                    >\n                                        <app-icon class=\"text-sm\"\n                                            >near_me</app-icon\n                                        >\n                                    </button>\n                                </div>\n                            </li>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public map_view_options: any;\n    public map_view_instance: any;\n    public mapsIndoors_instance: any;\n    public googleMaps_instance: any;\n    public mapsIndoors_directions_service_instance: any;\n    public mapsIndoors_directions_renderer_instance: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n    public floor_mapping: { [id: string]: string } = {};\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = await this.levels.pipe(take(1)).toPromise();\n        this.buildings_list = await this._org.building_list\n            .pipe(take(1))\n            .toPromise();\n\n        if (this.custom_coordinates) {\n            this.coordinates = this.custom_coordinates;\n        }\n        await this._getUserLocation();\n\n        await this.initMapView();\n        this.initDirections();\n\n        this.handleLocationChange();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    ngAfterViewInit() {\n        this.mapsIndoors_instance?.addListener(\n            'click',\n            (location: any, e: Event) => {\n                const found_action = this.actions_hashmap[location.id];\n                if (found_action) {\n                    found_action.callback(e);\n                }\n            }\n        );\n    }\n\n    initMapView(): Promise<void> {\n        // Hardcoded coordinates for mock map in Austin\n        // this.map_view_options = {\n        //     element: document.getElementById('maps-indoors'),\n        //     center: { lat: 30.3603774, lng: -97.7426772 },\n        //     zoom: 21,\n        //     maxZoom: 26,\n        // };\n\n        this.map_view_options = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 26,\n        };\n        this.map_view_instance = new mapsindoors.mapView.GoogleMapsView(\n            this.map_view_options\n        );\n\n        this.mapsIndoors_instance = new mapsindoors.MapsIndoors({\n            mapView: this.map_view_instance,\n        });\n        return (this.googleMaps_instance = this.map_view_instance.getMap());\n    }\n\n    initDirections() {\n        const externalDirectionsProvider =\n            new mapsindoors.directions.GoogleMapsProvider();\n        this.mapsIndoors_directions_service_instance =\n            new mapsindoors.services.DirectionsService(\n                externalDirectionsProvider\n            );\n        const directionsRendererOptions = {\n            mapsIndoors: this.mapsIndoors_instance,\n        };\n        this.mapsIndoors_directions_renderer_instance =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    async mapFloorsToIndex() {\n        const building = await this.mapsIndoors_instance?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        this.floor_mapping = pairs?.reduce((accumulator, [key, value]) => {\n            accumulator[key] = value;\n            return accumulator;\n        }, {});\n        const floor_index: string = await this.mapsIndoors_instance?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(\n            floorSelectorElement,\n            this.mapsIndoors_instance\n        );\n        this.googleMaps_instance.controls[\n            google.maps.ControlPosition.RIGHT_TOP\n        ].push(floorSelectorElement);\n\n        this.mapsIndoors_instance?.addListener('building_changed', (e: any) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.mapsIndoors_instance?.addListener('floor_changed', (e: string) => {\n            if (e && this.floor_mapping) {\n                const level_id: string = this.floor_mapping[e];\n                this._state.setLevel(level_id);\n            }\n        });\n    }\n\n    async onSearch(): Promise<any> {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        await mapsindoors?.services.LocationsService.getLocations(\n            searchParams\n        ).then((locations: any[]) => {\n            this.search_result_items = locations;\n        });\n    }\n\n    private _getUserLocation() {\n        const options = { timeout: 10000, enableHighAccuracy: true };\n\n        return new Promise<GeolocationPosition>(async (resolve, reject) => {\n            if ('geolocation' in navigator) {\n                if (this.coordinates) {\n                    const customPosition = {\n                        coords: {\n                            latitude: this.coordinates.latitude,\n                            longitude: this.coordinates.longitude,\n                            accuracy: 10,\n                        },\n                        timestamp: new Date().getTime(),\n                    };\n                    this.user_latitude = this.coordinates.latitude;\n                    this.user_longitude = this.coordinates.longitude;\n\n                    resolve(customPosition as GeolocationPosition);\n                }\n\n                if (!this.coordinates) {\n                    await navigator.geolocation.getCurrentPosition(\n                        (position: GeolocationPosition) => {\n                            this.user_latitude = position.coords.latitude;\n                            this.user_longitude = position.coords.longitude;\n                            resolve(position);\n                        },\n                        (error) => {\n                            this.geolocation_error_message =\n                                'Error: ' +\n                                error.message?.toString() +\n                                '. Please enable geolocation settings.';\n                            reject(error);\n                        },\n                        options\n                    );\n                    navigator.geolocation.watchPosition(\n                        (_) => this._updateGeolocation(_),\n                        (_) => this._handleGeolocationError(_)\n                    );\n                }\n            } else {\n                this.geolocation_error_message =\n                    'Error: geolocation is not supported.';\n                reject('Geolocation not supported');\n            }\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (updated_location) {\n            if (\n                updated_location.coords?.latitude !== this.user_latitude ||\n                updated_location.coords?.longitude !== this.user_longitude\n            ) {\n                this.user_latitude = updated_location.coords?.latitude;\n                this.user_longitude = updated_location.coords?.longitude;\n                this.getRoute(this.selected_destination);\n            }\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError('Error updating your geolocation.');\n    }\n\n    getRoute(location: any) {\n        this.selected_destination = location;\n        if (this.user_latitude && this.user_longitude) {\n            const originLocationCoordinate: any = {\n                lat: this.user_latitude,\n                lng: this.user_longitude,\n            };\n\n            //Hardcoded coordinates for mock map in Austin\n            // const originLocationCoordinate = {\n            //     lat: 30.3603774,\n            //     lng: -97.7426772,\n            // };\n\n            const destinationCoordinate = {\n                lat: location.properties.anchor.coordinates[1],\n                lng: location.properties.anchor.coordinates[0],\n                floor: location.properties.floor,\n            };\n\n            const routeParameters = {\n                origin: originLocationCoordinate,\n                destination: destinationCoordinate,\n                travelMode: 'WALKING',\n            };\n\n            this.mapsIndoors_directions_service_instance\n                .getRoute(routeParameters)\n                .then((directionsResult: any) => {\n                    this.mapsIndoors_directions_renderer_instance?.setRoute(\n                        directionsResult\n                    );\n                })\n                .catch((error: any) => {\n                    console.error('Error fetching route: ' + error);\n                    if (\n                        error instanceof TypeError &&\n                        error.message?.includes('origin')\n                    ) {\n                        notifyError(\n                            'Error: Cannot create route as origin location is outside of map area.'\n                        );\n                    }\n                });\n        } else {\n            notifyError('Error: unable to find a route.');\n        }\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (this.styles) {\n            const promises: Promise<void>[] = [];\n            for (const key in this.styles) {\n                const colour = this.styles[key]['fill'] as string;\n                if (key) {\n                    const updated_key = key.substring(1);\n                    promises.push(this._setPolygonFill(updated_key, colour));\n                }\n            }\n            return await Promise.all(promises);\n        }\n    }\n\n    async mapActions() {\n        return new Promise<HashMap<ViewAction>>((resolve, reject) => {\n            this.actions_hashmap = this.actions?.reduce(\n                (accumulator, currentValue) => {\n                    accumulator[currentValue.id] = currentValue;\n                    return accumulator;\n                },\n                {}\n            );\n            resolve(this.actions_hashmap);\n        });\n    }\n\n    private async _setPolygonFill(location_id: string, colour: string) {\n        await this.mapsIndoors_instance?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\"\n        >\n            <pre class=\"font-mono text-sm bg-neutral p-2\">{{\n                formatted_json\n            }}</pre>\n        </div>\n    `,\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div class=\"flex items-center border-b border-base-200 p-2\">\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center\"\n                                        [class.bg-success]=\"\n                                            request.status === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.status === 'tentative'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.status === 'rejected'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.status === 'approved'\n                                                    ? 'done'\n                                                    : request.status ===\n                                                      'tentative'\n                                                    ? 'schedule'\n                                                    : request.status ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : ''\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_request[request.id]\n                                                ? 'Hide requested items'\n                                                : 'Show requested items'\n                                        \"\n                                        (click)=\"\n                                            show_request[request.id] =\n                                                !show_request[request.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { addMinutes, differenceInDays, getUnixTime } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, organiser } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    return periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        (bookings[idx] || []).filter(\n                            (_) => _.ical_uid !== ical_uid\n                        )\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces, this.booking_rules]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: event.extension_data.assets || [],\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    notifyError('Unable to book the selected assets.');\n                    this._loading.next('');\n                }\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets\n                ).catch(on_error);\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at_time < this.date_end\n        );\n    }\n\n    public get valid_assets() {\n        return (this.ext('assets') || []).filter(\n            (request) => request.deliver_at_time < this.date_end\n        );\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(start, duration)\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        const event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false }\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n            [custom_coordinates]=\"{\n                latitude: 30.3603774 ,\n                longitude:  -97.7426772,\n            }\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.is_initialised$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter(\n                (_) =>\n                    !events.find((e) => e.asset_id === _.id) && !_.assigned_to\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, flatten, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = [\n                ...spaces\n                    .filter(\n                        (_) =>\n                            _.email.toLowerCase().includes(search) ||\n                            _.name.toLowerCase().includes(search) ||\n                            _.display_name.toLowerCase().includes(search)\n                    )\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'space',\n                        name: s.display_name || s.name,\n                        description: `Capacity: ${s.capacity} `,\n                    })),\n                ...flatten(\n                    roled_contacts.map((u) =>\n                        (u as any).roles.map(\n                            (role) =>\n                                ({\n                                    id: u.email,\n                                    type: role || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                    )\n                ).filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(search) ||\n                        _.description.toLowerCase().includes(search) ||\n                        _.type.toLowerCase().includes(search)\n                ),\n                ...contacts\n                    .map(\n                        (u) =>\n                            ({\n                                id: u.email,\n                                type: (u as any).type || 'contact',\n                                is_role: true,\n                                name: u.name,\n                                description: u.email,\n                            } as any)\n                    )\n                    .filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                ...users.map((u) => ({\n                    id: u.email,\n                    type: 'user',\n                    name: u.name,\n                    description: u.email,\n                })),\n                ...features\n                    .filter((_) => _.name.toLowerCase().includes(search))\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'feature',\n                        name: s.name,\n                        description: '',\n                        zone: (s as any).zone?.id,\n                    })),\n            ];\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n    area_count_key: string;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n    ]).pipe(\n        filter(([bld, lvl]) => !!bld && !!lvl),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const count =\n                zone[\n                    this._count_key[zone.area_id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ];\n            const filled = count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-base-200 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-neutral:bg-base-100/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-neutral text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-neutral border-base-200 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-neutral hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) this._updateSettingOverrides();\n        });\n        this.active_region.subscribe((region) => {\n            if (region) this._updateSettingOverrides();\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-base-100 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-base-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}