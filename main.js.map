{"version":3,"file":"main.js","mappings":"4LACA,iBACAA,WACAC,WACAC,WACAC,WACAC,WAIAC,WACAC,WACAC,WACAC,WACAC,sBAEMC,YAAiB,CACnB,CAAEC,KAAM,eAAgBC,UAAWC,yBACnC,CAAEF,KAAM,MAAOC,UAAWE,qBAC1B,CACIH,KAAM,GACNI,YAAa,CAACF,uBACdG,QAAS,CAACH,uBACVI,SAAU,CACN,CACIN,KAAM,UACNC,UAAWM,wBAEf,CACIP,KAAM,OACNM,SAAU,CACN,CAAEN,KAAM,SAAUC,UAAWM,wBAC7B,CAAEP,KAAM,iBAAkBC,UAAWO,6BACrC,CAAER,KAAM,UAAWC,UAAWQ,2BAC9B,CAAET,KAAM,kBAAmBC,UAAWS,kCACtC,CAAEV,KAAM,QAASC,UAAWU,wBAC5B,CAAEX,KAAM,gBAAiBC,UAAWW,iCAG5C,CACIZ,KAAM,gBACNC,UAAWY,sBAEf,CACIb,KAAM,kBACNC,UAAWO,6BAEf,CACIR,KAAM,WACNC,UAAWa,6BAEf,CAAEd,KAAM,KAAMe,UAAW,OAAQC,WAAY,mBAGrD,CAAEhB,KAAM,KAAMe,UAAW,OAAQC,WAAY,mBAGjD,MAIaC,GAJbC,2DAIaD,EAAgB,iDAAhBA,uDAHCE,eAAaC,QAAQrB,EAAQ,CAAEsB,SAAS,IACxCF,iIC1DdG,SACAA,SADA,MAEA/B,WACAC,WAOAC,WAaAE,GADA2B,QACAA,UACA1B,WAEAC,kGAMA,MASa0B,UAAqBC,YAG9BC,YACYC,EACAC,EACAC,EACAC,GAERC,QALQC,iBACAA,YACAA,cACAA,iBANZA,WAAQ,eASP,CAEYC,WAAQ,gCAcjB,GAbAC,QAAQC,KAAK,+BACbC,OAAOC,QAAQC,aAAe,CAACC,EAAYC,KAAb,GAE9B,SAAI,MAAO,SAAUC,IAErB,qBAAgBC,EAAKZ,WACrBI,QAAQC,KAAK,6CACPO,EAAKf,UAAUgB,YAAYC,MAAK,WAAOF,GAAMA,IAAIG,YACvDX,QAAQC,KAAK,qDACPW,OAAOC,UACbb,QAAQC,KAAK,8BACPO,EAAKM,kBACXd,QAAQC,KAAK,kCACT,aAAS,OAAOO,EAAKO,oBACzBf,QAAQC,KAAK,uBACb,IACID,QAAQC,KAAK,gCACbO,EAAKQ,QAAQ,QAAS,KAAO,KAAM,iCAAkC,KAErE,MAAMC,QAAaC,QADOC,MAAMC,kBACAC,QAAQC,UAExC,GADAd,EAAKe,aAAa,UACbN,EAAK,KAAM,gCAChBjB,QAAQC,KAAK,wBAAwBgB,KACrCO,eAAeC,QAAQ,eAAgBR,SACjCT,EAAKM,iBAAgB,GAC3BN,EAAKO,mBASR,CARA,MAAQ1B,GACLW,QAAQC,KAAKyB,KAAKC,UAAUtC,IAC5BuB,QAAagB,SAASC,SAIZrB,EAAKsB,2BAHX9B,QAAQC,KAAK,sCACPO,EAAKM,iBAAgB,GAIlC,CAnCgB,IAoCpB,CAEaA,gBAAgBiB,GAAQ,GAAI,iCACtC,gBAAWC,EAAKvC,UAAUwC,IAAI,mBAC9B,MAAMC,EAAWF,EAAKvC,UAAUwC,IAAI,aAAe,GACnDC,EAASC,YAAcJ,EACvBG,EAASE,QAAU,QACnBF,EAASG,OACHL,EAAKvC,UAAUwC,IAAI,SACrBK,SAASC,OAAOC,SAAS,yBACvB,gBAAWN,GAAUO,MAAOjC,GAAMR,QAAQ0C,MAAMlC,GARhB,IASzC,CAEaO,oBAAiB,iCAC3B,gBAAWP,EAAKb,QACXa,EAAKf,UAAUwC,IAAI,yBACpBzB,EAAKQ,QAAQ,gBAAiB,IAAMR,EAAKmC,cAAe,WAEtDpD,eAAamB,MAAK,WAAOF,KAAQA,IAAIG,YAC3CH,EAAKe,aAAa,kBAClB,wBAAkB,qBAClB,2BACIf,EAAKf,UAAUwC,IAAI,qCACf,KAAI,oBAAeW,OAAOC,MAAM,KAAK,KAVlB,IAY9B,CAEaf,0BAAuB,gCAyBjC,GAxBA9B,QAAQC,KAAK,iCACbO,EAAKQ,QAAQ,cAAe,KACxB,MAAMjD,EAAO,GAAGuE,SAASC,SAASD,SAASQ,wBAC3C9C,QAAQC,KACJ,kDAAkDlC,KAEtD6C,OAAOgB,QAAQC,GAAGkB,mBACdhF,EACA,CAAEiF,OAAQ,GAAIC,MAAO,IACpBC,IACGlD,QAAQC,KAAK,4CACb,MAAMkD,EAASD,EAAOE,MACtBD,EAAOE,gBACHzC,OAAO0C,UAAUC,sBAChBC,IACOA,IAAO,cAASA,GACpBhD,EAAKO,oBACLoC,EAAOM,OAAP,EALR,EANR,GAiBJzD,QAAQC,KAAK,QAAQC,OAAOoC,SAASoB,QAEjCxD,OAAOoC,SAASoB,KAAKlB,SAAS,iBAC9BhB,eAAemC,QAAQ,WACzB,CAKE,GAJAnC,eAAeC,QAAQ,UAAW,QAClCzB,QAAQC,KAAK,+CACbO,EAAKe,aAAa,qBACZf,EAAKM,iBAAgB,KACtB,aAAS,OACdF,OAAOgB,QAAQC,GAAG+B,eAAc,cAAW,GAC9C,CAnCgC,IAoCpC,CAEOjB,eACA,gBAAY,oBAAekB,kBAC/BtG,qBACA+E,SAASwB,SAEZ,EA/HL7E,uDASaK,GAAYyE,+OAAZzE,EAAY0E,sHANjBD,yCAA+B,mBAA/BA,CAA+B,0LCnCvC,iBACA3G,UACAC,WACAC,WAEAC,WACAC,WACAC,WAEAC,UACAC,WACAC,UACAC,WAEAoG,WACAC,WACAC,WACAC,WACAC,WACAC,+BASA,MAqCaC,GArCbtF,oDAqCasF,EAAS,iDAATA,EAASC,WAFNC,sEADD,CAACC,aAAUC,SApBlBC,gBACAC,0BACAC,mBACAC,aACAC,wBACAH,0BACAI,mBACAC,cACAC,sBACAC,oBACAC,iBACAC,eACAC,mBACAL,sBACAM,uBAEAC,sBAAoBC,SAAS,iBAAkB,CAC3CC,QAASC,cAAYC,6GC3DjCxG,qCAEA,MAkCayG,EACTtG,YAAmBuG,gBAAkB,CAErChG,WAAmB,EArCvBd,4DAkCa6G,GAAiB/B,0FAAjB+B,EAAiB9B,sfA/BfD,sCAEV,cAFUA,CAEV,WAKWA,iCAMJA,2BACAA,sCAAgC,UAAhCA,CAAgC,YAGpBA,wCAAcA,+BAI1BA,sCAAgC,YAExBA,oCACAA,wCAA8BA,uBAAiBA,2BAAQA,0CAE3DA,wCAFkCA,oLC9BlD1E,eACAjC,WACAC,WAEAC,WACAC,WACAC,WACAC,SACAC,WACAC,WACAC,WACAC,WACAoG,WACAC,WACAC,WACAC,WACAC,WACAC,WACA0B,WACAC,WACAC,WACA1F,UACAwB,WAEAmE,GADA9G,SACAA,UACA+G,WACAC,WACAC,sBA4BA,MAgBaC,GAhBbtH,gEAgBasH,EAAqB,iDAArBA,uDAbL1B,0BACA2B,uBACAC,qBACAxI,mBA7BJyI,kBACAtB,oBACAuB,sBACAC,kBACAC,qBACAC,gBACAC,iBACAC,2BACAC,uBACAC,wBACAC,kBACAC,iBACAC,kBACAC,gBACAC,oBACAC,qBACAC,gBACAC,iBACAC,mBACAC,iBACAC,kBAcIrB,uBACAC,qBACAxI,6ICnERoB,SACAA,SADA,6DAGA,MAoBayI,EAQTtI,YAAoBuI,EAAsCC,GAAtClI,gBAAsCA,eAN1CA,eAAY,IAAMA,KAAKiI,SAASE,WAM6B,CAJlEC,WACP,OAAOpI,KAAKiI,SAASG,IACxB,CAIYC,cAAW,sCACdtK,EAAKkK,SAASK,cACpBvK,EAAKmK,QAAQK,SAAS,CAAC,QAAS,QAAS,WAFrB,IAIvB,EAlCLpJ,+DAoBa6I,GAAoB/D,8IAApB+D,EAAoB9D,2bAjBzBD,sCAA8D,UAA9DA,CAA8D,UAEjBA,kCAASA,2BAC9CA,6CACAA,sCAA0F,cAClBA,iDAASuE,eAAa,GACtFvE,oCACJA,2BACAA,yCAA0CA,iDAASuE,aAAW,GAC1DvE,qCACJA,wCALkCA,iPCXtD1E,eACAjC,6KA6DwB2G,gDAKIA,kCACJA,qIAGRA,uCAGC,WAHDA,CAGC,qBAIWA,4HAEbA,gEACI,SAAW,KAE5B,GAE0BA,yCACJA,4EATIA,6FAA2C,0EAyB3DA,0CAA0C,SAA1CA,CAA0C,WAK9BA,4BACJA,2BACAA,sCAAqBA,sCAAaA,6BAEtCA,+CACJA,2FAzGJA,sCAIC,cAJDA,CAIC,SAJDA,CAIC,WAMeA,4BACJA,2BACAA,sCAAqBA,gCAAOA,6BAEhCA,sCAAsD,UAAtDA,CAAsD,aAE3BA,mCAASA,sCAAMA,2BAACA,6BACnCA,kDACIA,qCAMAA,2CAAWA,oDAA0BA,+BAG7CA,uCAAkC,eACZA,8BAAIA,sCAAMA,2BAACA,6BAC7BA,iDACIA,+DACJA,+BAGRA,wCAAyC,YAAzCA,CAAyC,eAETA,oCAAUA,sCAAMA,2BAACA,6BACzCA,iDAGIA,2HAAiBA,oDAAiC,GAErDA,6BAELA,wCAAmC,eACTA,kCAAQA,sCAAMA,2BAACA,6BACrCA,gDASAA,mDAOJA,6BAEJA,0CAkBJA,2BAEAA,2CAAqB,UAArBA,CAAqB,YAKTA,6BACJA,2BACAA,uCAAqBA,8BAAIA,6BAE7BA,+CACJA,2BACAA,8CAWJA,6EAvGIA,2CAoCgBA,8EAA2B,oDAU3BA,kGAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,WAQ/BA,wEASRA,2EA6BaA,wEAlGlC,MAiHawE,UAAiChJ,YAO1CC,YACYuI,EACAtI,GAERI,QAHQC,gBACAA,iBARIA,UAAOA,KAAKiI,SAASG,IAWpC,CATUM,mBACP,OAAO1I,KAAKL,UAAUwC,IAAI,4BAC7B,CASMlC,WACHD,KAAKiI,SAASU,WAAW,CAAEC,KAAM,SACjC5I,KAAK6I,aACD,SACA7I,KAAKiI,SAASG,KACTjG,IAAI,cACH2G,cAAcC,UAAWC,GACvBA,EAAKC,OAASjJ,KAAKkJ,gBAAgBF,EAAK,IAAM,IAG7D,CAEOE,gBAAgBC,IACfA,GACLnJ,KAAKiI,SAASG,KAAKgB,WAAW,CAC1BC,SAAUF,GAAMG,GAChBC,WAAYJ,EAAKK,KACjBC,OAAQN,GAAMM,QAAUN,GAAMG,GAC9BI,YAAaP,EAAKK,KAClBG,aAAc,OACdC,MAAOT,EAAKU,KAAO,CAACV,EAAKU,MAAMC,UAAWX,EAAKU,MAAMP,IAAM,GAC3DS,cAAeZ,GAEtB,EAtJLhK,mEAiHasJ,GAAwBxE,uJAAxBwE,EAAwBvE,61CA9G7BD,+CAEKA,gcCTb1E,4GAEA,MA6BayK,EAGTtK,YAAoBuI,mBAFJjI,kBAAeA,KAAKiI,SAASgC,YAEO,EAhCxD9K,sEA6Ba6K,GAA2B/F,sGAA3B+F,EAA2B9F,+UA1BhCD,sCAA+H,UACtGA,2CAAkBA,2BACvCA,iCACAA,kCACIA,gDACAA,kCAAGA,sBAAwDA,2BAC3DA,+GAOJA,2BACAA,qCACIA,uCACJA,oCAXOA,mKACHA,2bAQiBA,mYCnBjC1E,SACAA,SADA,MAEAhC,WAEAE,GADA8B,SACAA,4EAEA,MAoBa2K,EAUTxK,YAAoBuI,EAAoCC,EAAyBiC,GAA7DnK,gBAAoCA,eAAyBA,qBANjEA,eAAY,IAAMA,KAAKiI,SAASE,WAMkE,CAJvGC,WACP,OAAOpI,KAAKiI,SAASG,IACxB,CAIMC,cAEH,GADKrI,KAAKoI,KAAK9E,MAAM8G,MAAMpK,KAAKoI,KAAKgB,WAAW,CAAEgB,MAAM,oBAAetH,SAClE9C,KAAKoI,KAAKiC,MACX,OAAO,iBACH,8BAA6B,sBAAiBrK,KAAKoI,MAAMkC,KACrD,UAGZtK,KAAKuK,UAAYvK,KAAKmK,cAAcK,KAAKC,+BACzCzK,KAAKuK,UAAUG,SAASC,YAAa,EACrC3K,KAAKuK,UAAUK,iBAAiB7B,UAAWzF,IACnCA,IACAtD,KAAKkI,QAAQK,SAAS,CAAC,QAAS,UAAW,YAC3CvI,KAAKiI,SAAS4C,QAAQ,WAAtB,EAGX,EAhDL1L,kEAoBa+K,GAAuBjG,4LAAvBiG,EAAuBhG,mbAjB5BD,sCAA8D,UAA9DA,CAA8D,UAEjBA,qCAAYA,2BACjDA,gDACAA,sCAA0F,cACpDA,iDAASuE,eAAa,GACpDvE,uCACJA,2BACAA,yCAA0CA,iDAASuE,aAAW,GAC1DvE,qCACJA,qMCnBpB1E,eACAjC,WAEAE,GADA+B,SACAA,oQA6E4B0E,gDAKIA,kCACJA,kDAGRA,uCAAgD,cAC1BA,6BAAIA,qCAAMA,0BAACA,6BAC7BA,gDAIJA,2FAGRA,0CAA6C,SAA7CA,CAA6C,WAKjCA,4BACJA,2BACAA,sCAAqBA,kCAASA,2BAC9BA,iCACAA,0CAGIA,mHAASA,8CAAmB,GAE5BA,uCACJA,2BACAA,yCAEIA,mHAASA,uEAA4C,GAErDA,0CAAUA,uBAERA,+BAGVA,uCAIIA,iDAIJA,0EAbkBA,4GAOdA,2NAoCRA,0CAA0C,SAA1CA,CAA0C,WAK9BA,4BACJA,2BACAA,sCAAqBA,iCAAQA,2BAC7BA,iCACAA,yCAEIA,mHAASA,qEAA0C,GAEnDA,yCAAUA,sBAERA,+BAGVA,uCAIIA,mDAQJA,0EAjBkBA,0GAOdA,6FAIIA,oRAmCZA,0CAAyC,UAAzCA,CAAyC,WAK7BA,sBACJA,2BACAA,sCAAqBA,8BAAKA,6BAE9BA,uCAAkC,cACXA,0DAAiCA,2BACpDA,8CAKJA,wEAXQA,kMAzNhBA,sCAIC,cAJDA,CAIC,SAJDA,CAIC,WAMeA,4BACJA,2BACAA,sCAAqBA,gCAAOA,2BAC5BA,iCACAA,yCAEIA,kHAASA,mEAAwC,GAEjDA,yCAAUA,uBAERA,+BAGVA,uCAGC,WAHDA,CAGC,YAHDA,CAGC,eAG8BA,mCAASA,sCAAMA,2BAACA,6BACnCA,mDACIA,qCAMAA,2CACKA,oDAA0BA,+BAIvCA,wCAAkC,eACZA,8BAAIA,sCAAMA,2BAACA,6BAC7BA,iDACIA,+DACJA,+BAGRA,wCAAyC,YAAzCA,CAAyC,eAG5BA,oCAAUA,sCAAMA,2BAACA,6BAEtBA,iDAGIA,2HAE7BA,oDACD,GAC2BA,6BAELA,wCAAmC,eACTA,kCAAQA,sCAAMA,2BAACA,6BACrCA,gDAOAA,mDAOJA,6BAEJA,0CAOJA,6BAEJA,+CAmCAA,2CAAqB,UAArBA,CAAqB,YAKTA,6BACJA,2BACAA,uCAAqBA,8BAAIA,2BACzBA,kCACAA,0CAEIA,kHAASA,uEAA4C,GAErDA,0CAAUA,uBAERA,+BAGVA,uCAIIA,gDAIJA,6BAEJA,+CAgCAA,2CAAqB,UAArBA,CAAqB,YAKTA,uBACJA,2BACAA,uCAAqBA,gCAAMA,2BAC3BA,kCACAA,0CAEIA,kHAASA,iEAAsC,GAE/CA,0CAAUA,uBAERA,+BAGVA,uCAIIA,gDAGJA,6BAEJA,+CAkBJA,uEAnOIA,2CAesBA,0GAOdA,4FA+BYA,8EAA2B,oDAY3BA,gHAA0B,sBAMzBA,wEAOPA,8EASQA,0EAgDAA,4GAOdA,8FAQcA,uEAqCVA,wFAQUA,wGAOdA,2FAOcA,uEAvNlC,MA8Oa6G,UAAoCrL,YAwD7CC,YACYuI,EACAtI,EACAoL,GAERhL,QAJQC,gBACAA,iBACAA,eA1DIA,UAAOA,KAAKiI,SAASG,KAE9BpI,gBAAsC,EA2D5C,CAzDUgL,mBACP,QACMhL,KAAKL,UAAUwC,IAAI,kCACnBnC,KAAKL,UAAUwC,IAAI,0BAE5B,CAEU8I,iBACP,QAASjL,KAAKL,UAAUwC,IAAI,wBAC/B,CAEU+I,qBACP,QAASlL,KAAKL,UAAUwC,IAAI,4BAC/B,CAEUgJ,mBACP,OAAOnL,KAAKL,UAAUwC,IAAI,4BAA8B,GAC3D,CAEUiJ,0BACP,OAAOpL,KAAKL,UAAUwC,IAAI,iCAC7B,CAEUkJ,oBACP,OAAOrL,KAAKL,UAAUwC,IAAI,2BAC7B,CAEUuG,mBACP,OAAO1I,KAAKL,UAAUwC,IAAI,0BAC7B,CAEMmJ,oBACH,MAAQC,YAAWC,YAAWC,OAAMC,YAAa1L,KAAKoI,KAAK9E,MACrDqI,EAAM3L,KAAK+K,QAAQP,KAAKoB,iCAAgC,CAC1DrL,KAAM,CACFsL,MAAON,EACPnB,KAAMoB,IAAa,mBACnBC,OACAC,cAGRC,EAAIG,cAAc/C,UAAUhL,KACnBA,GACLiC,KAAKoI,KAAKgB,WAAW,CACjBqC,KAAME,EAAII,kBAAkBN,KAC5BF,UAAWI,EAAII,kBAAkBF,MACjCH,SAAUC,EAAII,kBAAkBL,UAHpC,EAMP,EApSLvM,sEA8Oa2L,GAA2B7G,gMAA3B6G,EAA2B5G,osDA3OhCD,+CAEKA,0fAuOG,CAACxE,+ICjPjBF,8GAEA,MA6BayM,EAGTtM,YAAoBuI,mBAFJjI,kBAAeA,KAAKiI,SAASgC,YAEK,EAhCtD9K,yEA6Ba6M,GAA8B/H,oGAA9B+H,EAA8B9H,kVA1BnCD,sCAA+H,UACtGA,2CAAkBA,2BACvCA,iCACAA,kCACIA,mDACAA,kCAAGA,sBAAkEA,2BACrEA,+GAOJA,2BACAA,qCACIA,uCACJA,oCAXOA,yMACHA,2bAQiBA,yXCnBjC,iBACA3G,WACAC,WACAC,WACAC,WAIAC,WAEAC,WACAC,WACAC,WACAC,WACAC,sBAOMkO,YAAkB,CACpB,CACIhO,KAAM,OACNC,UAAWY,wBAInB,MA4BaoN,GA5Bb/M,qDA4Ba+M,EAAU,iDAAVA,uDAfLzM,eACAL,eAAa+M,SAASF,GACtB/G,wBACAE,cACAA,sBACAC,sBACAA,mBACAI,mBACA2G,uBACA/G,sBACAC,oBACA+G,wBACAlO,2HCrDRoB,SACAA,SADA,MAGAhC,kEAEA,MAKa+O,EAWT5M,YAAoB6M,EAAkCrE,GAAlClI,cAAkCA,cAAmB,CAV9DoI,WACP,OAAOpI,KAAKuM,OAAOnE,IACtB,CAUDnI,WACID,KAAKwC,SAAWxC,KAAKuM,OAAOtC,cAAczH,SAC1CxC,KAAKyL,MAAO,QAAGzL,KAAKuM,OAAOtC,cAAcwB,MACzCzL,KAAKwM,aAAc,QACf,IAAIC,KAAKzM,KAAKuM,OAAOtC,cAAcwB,MAAMiB,mBACrC,QACA,CACIC,KAAM,UACNC,OAAQ,UACRC,QAAQ,KAIpB7M,KAAK0L,SAAW1L,KAAKuM,OAAOtC,cAAcyB,SAC1C1L,KAAK8M,WAAY,QACb,IAAIL,KACAzM,KAAKuM,OAAOtC,cAAcwB,KAAuB,GAAhBzL,KAAK0L,SAAgB,KACxDgB,mBAAmB,QAAS,CAC1BC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGnB,CACDE,aACI/M,KAAKkI,QAAQK,SAAS,CAAC,eAC1B,EA5CLpJ,oEAKamN,GAAyBrI,4IAAzBqI,EAAyBpI,+oBCXtCD,sCAAwE,cAAxEA,CAAwE,UAAxEA,CAAwE,UAAxEA,CAAwE,YASpDA,4CAAkBA,6BAG1BA,oCACIA,iCACJA,2BAEAA,sCAAmD,YAE1CA,kJAMLA,6BAEJA,uCAAoC,eAG5BA,iDAASuE,cAAY,GAGrBvE,yCAAsBA,qCAAWA,4CAdhCA,+eCjBrB,iBACA1G,cAEAgC,8BAEA,MAGayN,EAiCTtN,YAAoB6M,iBAhCbvM,aAA+BA,KAAKuM,OAAOU,iBAE3CjN,4BACH,IAAIkN,mBAAyB,GAEjClN,wBAA2C,IAAIkN,kBAAqB,MACpElN,wBACIA,KAAKmN,mBAAmBC,eAK5BpN,eAAkC,IAAIkN,kBAAqB,MAC3DlN,eAA6BA,KAAKqN,UAAUD,eAQ5CpN,mBAAuB,CACnB,CAAEwJ,KAAM,wBAAyBF,GAAI,UAAWhG,OAAO,GACvD,CAAEkG,KAAM,mBAAoBF,GAAI,YAAahG,OAAO,GACpD,CAAEkG,KAAM,2BAA4BF,GAAI,WAAYhG,OAAO,GAC3D,CAAEkG,KAAM,aAAcF,GAAI,UAAWhG,OAAO,GAC5C,CAAEkG,KAAM,aAAcF,GAAI,aAAchG,OAAO,GAC/C,CAAEkG,KAAM,WAAYF,GAAI,WAAYhG,OAAO,GAC3C,CAAEkG,KAAM,YAAaF,GAAI,YAAahG,OAAO,GAC7C,CAAEkG,KAAM,QAASF,GAAI,QAAShG,OAAO,IAIrCtD,KAAKqN,UAAUC,KAAKtN,KAAKuN,cAC5B,CA1BGC,wBACA,OAAOxN,KAAKmN,mBAAmBM,UAClC,CAIGC,aAASC,GACT3N,KAAKqN,UAAUC,KAAKK,EACvB,CACGD,eACA,OAAO1N,KAAKqN,UAAUI,UACzB,CAiBKG,sBAAmB,gCACrB/P,EAAKgQ,mBAAqBhQ,EAAKiQ,UAAUlN,MACrC,SAAKmN,GAAQA,EAAIC,OAAQC,GAAuB,GAAdA,EAAK3K,eAErCzF,EAAKgQ,mBAAmBjN,MAAK,UAAK,IAAIC,YAC5ChD,EAAKgQ,oBAAoB9E,UAAUlL,EAAKsP,mBALnB,IAMxB,CACKe,cAAW,sCACPrQ,EAAKgQ,mBAAmBjN,MAAK,UAAK,IAAIC,YAE5C,MAAMsN,QAA2BtQ,EAAKuQ,qBAClCvQ,EAAK2P,mBAGT3P,EAAKwQ,gBAAkBxQ,EAAKyQ,QAAQ1N,MAChC,SAAK2N,GACDA,EAAOP,OAAQQ,GACJ3Q,EAAK4Q,eAAeD,EAAME,cAAchM,SAC3CyL,YAKVtQ,EAAKwQ,iBAAiBzN,MAAK,UAAK,IAAIC,YAC1ChD,EAAK8Q,uBAAuBrB,MAAK,EAjBpB,IAkBhB,CAEDmB,eAAeG,GACX,OAAOA,GAAOC,OAAOvE,MACxB,CAEK8D,qBAAqBQ,GAAY,gCACnC,IAAIE,QAAuBF,GAAOG,IAAKd,GAASA,EAAK3E,IACrD,OAAOxL,EAAK2Q,eAAeK,EAFQ,IAGtC,CAEDE,cACIhP,KAAKmN,mBAAmBG,KAAK,MAC7BtN,KAAKuN,eAAewB,IAAKpB,GAAaA,EAAQrK,OAAQ,GACtDtD,KAAKqN,UAAUC,KAAKtN,KAAKuN,eACzBvN,KAAK2O,uBAAuBrB,MAAK,EACpC,CAED2B,YACIjP,KAAKkP,cAAcC,aACtB,EArFLhQ,gEAGa6N,GAAqB/I,8FAArB+I,EAAqBoC,QAArBpC,EAAqB,qBAFlB,yGCLhB,oBAIAzN,SACAA,SACAA,0MCqBoB0E,yCAIIA,mCACJA,qDAeQA,8CAIIA,sBACJA,qDAHIA,kCAEAA,kMAjBZA,kDAMC,mBAIOA,4HAAiBA,yCAAmB,iCAGpCA,8EAMJA,0EAVIA,mGAA4B,mDAKRA,oKAqEhCA,oCAA+C,WAA/CA,CAA+C,UAEhCA,sBAAkBA,2BACzBA,gDACIA,yGAAaA,kCACnC,EADsBA,CAA2B,6FAGjBA,gDAAqB,GAClCA,2DANMA,uEAEHA,mEAA2B,mHA1HnDA,uCAAsC,cAAtCA,CAAsC,UAAtCA,CAAsC,UAAtCA,CAAsC,cAQdA,kHAASA,uCAAY,GACzBA,2CAEKA,8BAAKA,6BAIdA,uCACIA,uCAAaA,iCAK7BA,0CAAqE,WAArEA,CAAqE,aAInCA,iCAAOA,2BAEjCA,wCACIA,2EAOAA,oFAsBAA,wCAA2B,eAEnBA,gCACJA,2BACAA,4CAKAA,wCAA4C,YAA5CA,CAA4C,eAKhCA,uCACJA,2BAEAA,iDAEIA,2HAE7BA,oDACL,GAC+BA,6BAELA,wCAAgD,eAIxCA,qCACJA,2BACAA,gDAOJA,qCAOpBA,2CAAqE,WAArEA,CAAqE,aAInCA,oCAAUA,2BACpCA,wCAAgC,WACtBA,mDAAyBA,2BAC/BA,4CACJA,+BAIRA,4CAA+C,YAA/CA,CAA+C,aAEbA,oCAAUA,2BAEpCA,yEAWJA,6BAGJA,4CAEC,gBAIOA,kHAASA,yCAAc,GAGvBA,yCAAeA,uCAAaA,qFA7IrBA,2CA8BEA,gIAUAA,+HAsBGA,kEAaQA,+FAA4B,oDAc5BA,4FAAyB,UAAzBA,CAAyB,SAAzBA,CAAyB,WA6BpBA,wGD5GzC,MAKaoL,EAQT3P,YAC0Ca,EAC9B+O,EACAC,EACAhD,EACA3M,GAJ8BI,YAC9BA,uBACAA,8BACAA,cACAA,YAZHA,eAAYA,KAAKJ,KAAK4P,cACtBxP,cAAWA,KAAKJ,KAAK6P,gBAC9BzP,aAAgB,IAAIyM,KAGJzM,iBAAeuG,GAAMvG,KAAKJ,KAAK8P,SAAWnJ,CAQtD,CAEJtG,WACID,KAAK8N,UAAY9N,KAAKuP,uBAAuBzB,SAChD,CAEU1F,WACP,OAAOpI,KAAKuM,OAAOnE,IACtB,CAEDuH,eACI3P,KAAKsP,gBAAgBM,QAAQ5P,KAAKoI,MAClCpI,KAAKuP,uBAAuBrB,aAC/B,CAEDN,sBACI5N,KAAKuP,uBAAuB3B,qBAC/B,CAEDiC,aACI7P,KAAKsP,gBAAgBM,SACxB,EAxCLzQ,+DAKakQ,GAAoBpL,8BASjBmI,yBAAqBnI,mQATxBoL,EAAoBnL,u1DChBjCD,sCACIA,2CAiJJA,kCAjJWA,8cCDX,oBACA1E,yCAEA,MAKauQ,EALbpQ,cAOoBM,eAAoB,EACnBA,oBAAiB,IAAIqF,eAE7BrF,oBAAiB,IAAMA,KAAK+P,eAAeC,MAAMhQ,KAAKiQ,SAClE,EAXD9Q,iEAKa2Q,EAAsB,kDAAtBA,EAAsB5L,0YCRnCD,yCAKIA,iDAASuE,kBAAgB,GAEzBvE,sCAAyD,gBAC3BA,qCAAYA,2BACtCA,oCACKA,sBACuCA,6BAGhDA,sCAAyD,gBAC3BA,8BAAKA,2BAC/BA,oCAAKA,uBAAiCA,sCAb1CA,iDAA6B,yBAOpBA,oRAMAA,mRCfb1E,SACAA,SACAA,SACAA,QAHA,MAKA7B,WACAC,WACAC,WAKAuG,GAJA5E,SACAA,SAEAA,QACAA,aAEAA,oQCUwB0E,qCACIA,oDAEJA,qEAFIA,8JAqCRA,oCAAuD,iBAE/CA,sBAEJA,uEAFIA,yPA4BAA,mDAIIA,4IAE1BA,kDACJ,GAE0BA,sFAPIA,kCAAe,yDAHvBA,oCACIA,mFAUJA,sEAT0BA,4HA+BVA,8CAKKA,sBAAeA,qDADhBA,kCACCA,gIAnBjBA,oCAA8C,sBAA9CA,CAA8C,mBAMlCA,8KAA4B,uGAGnDA,mDACf,GACsCA,4EACKA,mCAAUA,2BAEfA,8EAOJA,4EAfIA,4EAKYA,mGAMzBA,+HAcSA,uCAIIA,8HAQJA,oFAPQA,6EAAmB,oDAAnBA,CAAmB,wDAAnBA,CAAmB,iFAN/BA,oCACIA,0CAaJA,sEAZwBA,sGAexBA,uCAIIA,8HAQJA,sEAPQA,2GAA8B,oDAA9BA,CAA8B,wDAA9BA,CAA8B,iFA3B1CA,uCAKIA,yCAiBAA,0CAaJA,sEA9BUA,4GAkBDA,qIAvDbA,uCAOIA,uEAyBAA,yCAoCJA,4EA7DUA,8HA0BDA,mGAhDbA,uCAGIA,yCAYAA,uEAsEAA,qCACIA,uDACJA,2BACJA,qFArFUA,iFAaDA,oLAjBbA,uCACIA,gFAyFJA,mHAxFSA,6HAAqC,sCA2F1CA,uCAGIA,0CACAA,kCAAGA,uDAA8BA,oCADpBA,uFAKjBA,uCAEC,OAEOA,sFAEJA,8FAQZA,oCAAwC,eAIhCA,mHAASA,6CAAiB,GAG1BA,wCAAeA,kCAASA,gCDjM5C,MA2BaiM,WAA2BzQ,YA6DpCC,YACYyQ,EACAvQ,EACAwQ,EACA7D,GACAgD,GACAc,GACAC,GACApI,IAERnI,QATQC,oBACAA,YACAA,eACAA,eACAA,+BACAA,oBACAA,4BACAA,gBAhEZA,qBAA2B,GAC3BA,yBAA0C,SAAG,GAM7CA,mBAAkD,IAAIkN,kBAEpD,MACFlN,kBAAyC,KACzCA,iBAA0C,KASnCA,gBAA+B,GAC/BA,gBAAsB,GACtBA,sBAAmB,CACtB,CAAEwJ,KAAM,eAAgBlG,MAAO,GAC/B,CAAEkG,KAAM,gBAAiBlG,MAAO,GAChC,CAAEkG,KAAM,kBAAmBlG,MAAO,GAClC,CAAEkG,KAAM,kBAAmBlG,MAAO,IAClC,CAAEkG,KAAM,aAAclG,MAAO,KAGjBtD,eAAYA,KAAKJ,KAAK4P,cACtBxP,cAAWA,KAAKJ,KAAK6P,gBAErBzP,aAAS,mBAAc,CACnCA,KAAK0P,SACL1P,KAAKuM,OAAOgE,UACb3P,MACC,YAAO,EAAEF,QAASA,KAClB,SAAI,EAAE8P,MAAS,CACX,CACIlH,GAAItJ,KAAKJ,KAAK8P,SAASpG,GACvBE,KAAM,iBAEPxJ,KAAKJ,KAAK6Q,kBAAkBD,OAIvBxQ,aAAUA,KAAKuM,OAAOmE,QACtB1Q,aAAUA,KAAKuM,OAAOgE,QAEtBvQ,aAA+BA,KAAKuM,OAAOU,iBAC3CjN,cAAWA,KAAKoQ,QAAQ1C,SAExB1N,iBAAeuG,IAAMvG,KAAKJ,KAAK8P,SAAWnJ,GAC1CvG,gBAAcrC,IAAMqC,KAAKuM,OAAO5D,WAAWhL,GAa1D,CAnDUyK,WACP,OAAOpI,KAAKuM,OAAOnE,IACtB,CAmDYnI,WAAQ,gCACjB0Q,EAAKC,WAAa,WAElBD,EAAK9C,mBACD8C,EAAKpB,uBAAuB1B,mBAChC8C,EAAKpE,OAAO1B,QAAQ,QACpB8F,EAAKE,qBAECF,EAAK/Q,KAAKe,YAAYC,MAAK,WAAOF,KAAQA,IAAIG,kBAC9C8P,EAAKP,QAAQzP,YAAYC,MAAK,WAAOF,KAAQA,IAAIG,kBACjD8P,EAAKpE,OAAOU,iBAAiBrM,MAAK,UAAK,IAAIC,YAEjD8P,EAAKG,YAAYH,EAAK/Q,KAAK8P,UAC3BiB,EAAKI,WAAa,GAClBJ,EAAK9H,aAAa,WAAY8H,EAAK9C,oBAAoB9E,UAAWvE,GAAMmM,EAAKhI,WAAW,CAAE+E,SAAUlJ,GAAK,aAEnGmM,EAAKN,YAAYW,aAAaL,EAAKrC,SAEzCqC,EAAKM,kBAAoBN,EAAKN,YAAYY,kBAE1CN,EAAKO,WAAaP,EAAKN,YAAYa,YAAYtQ,MAC3C,SAAKuQ,GAAUR,EAAKS,eAAiBD,UAGnCR,EAAKN,YAAYgB,iBAClBzQ,MAAK,WAAOF,KAAQA,IACpBG,YAEL8P,EAAKW,sBAELX,EAAKY,cAAcjE,KAAKqD,EAAKN,YAAYmB,cACzCb,EAAKc,cAAgBd,EAAKY,cAAcnE,eACxCuD,EAAKe,aAAef,EAAKN,YAAYqB,YAhCpB,IAiCpB,CAEMC,gBAAgBnD,EAAcoD,GAAgB,GACjD5R,KAAK+Q,WAAWvC,EAAMlF,IAAMsI,EAC5B5R,KAAKsQ,oBAAoBS,WAAa/Q,KAAK+Q,WAC3C/Q,KAAKsQ,oBAAoBqB,gBAAgBnD,EAAOoD,GAChD5R,KAAK6R,oBAAqB,SAAG,GAC7B7R,KAAKsQ,oBAAoBwB,oBAAoBtD,EAChD,CAEDuD,aACI/R,KAAKgS,eAAiBhS,KAAKmQ,aAAa3F,KAAKyH,uBAAsB,CAC/D1R,KAAMP,KAAKkS,WAElB,CAEDC,kBACInS,KAAKsQ,oBAAoB8B,eAAepS,KAAKqS,eAChD,CAEDC,aACItS,KAAK6R,oBAAqB,SAAG,EAChC,CAEDhB,eACI7Q,KAAKwM,aAAc,QACf,IAAIC,KAAKzM,KAAKoI,MAAMmK,UAAU9G,MAAMnI,OAAOoJ,mBACvC,QACA,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,KAGtD7M,KAAKwS,iBAAmBxS,KAAKoI,MAAMmK,UAAU7G,UAAUpI,MAIvDtD,KAAK8M,WAAY,QACb,IAAIL,KAHJzM,KAAKoI,MAAMmK,UAAU9G,MAAMnI,MACH,GAAxBtD,KAAKwS,iBAAwB,KAEf9F,mBAAmB,QAAS,CACtCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGnB,CAED4F,oBAAoBlT,GAChBS,KAAKoR,eAAiB7R,EACjBS,KAAKoR,gBAAgBnI,QACtBjJ,KAAKsR,qBAEZ,CAEDA,sBACItR,KAAKkB,QACD,OACA,KACIlB,KAAK0S,iBACL1S,KAAK2S,eAAL,EAEJ,KAEP,CAEDD,iBACI1S,KAAKyR,cAAgBzR,KAAKqQ,YAAYoB,aACzC,CAEDkB,gBACI3S,KAAK4S,aAAc,QAAG,CAAC5S,KAAKqQ,YAAYwC,WAC3C,CAEDhD,aACI7P,KAAKkI,QAAQK,SAAS,CAAC,iBACvBvI,KAAKuP,uBAAuBP,aAC/B,EA/ML7P,+DA2Ba+Q,IAAkBjM,wbAAlBiM,GAAkBhM,i/EC5C/BD,sCAA6E,cAA7EA,CAA6E,UAA7EA,CAA6E,UAA7EA,CAA6E,cAIrDA,iDAASuE,cAAY,GACzBvE,2CAEKA,8BAAKA,6BAIdA,uCACIA,oCAAUA,6BAIlBA,sCAA6D,WAA7DA,CAA6D,eAIjDA,iDAASuE,cAAY,GAGrBvE,sCAAMA,gCAAMA,2BAEZA,0EAIJA,6BAGJA,wCAAyB,iCAGjBA,6EAAwB,2BACduE,cAAY,GAGtBvE,sDAGK,cACIA,6BAAGA,6BAGZA,sDAGK,cACIA,8BAAIA,mCAOzBA,4CAA+B,sBAA/BA,CAA+B,kBAGnBA,qDACJA,2BAEAA,0CAOAA,6CAAwC,WAC9BA,sDAAyBA,2BAC/BA,6BACAA,sCAAOA,sDAAuBA,iCAK1CA,4CAA6C,YAA7CA,CAA6C,cAECA,kCAAOA,2BAC7CA,yCACIA,sDAAkDA,+BAK9DA,wCACIA,kFA4FAA,2FAQAA,2FAUJA,6BAEJA,4CAGIA,0EAUJA,mFA5LuBA,uIAUPA,wEAyBAA,gNAGEA,qHAQIA,qGAECA,2GASPA,sJAMOA,kGAA0B,cAmHvCA,shCC1MlB,iBACA1G,WAGAC,WAEAC,WAEAE,GADA4B,SACAA,YACAA,uCAeA,MAGauT,UAAmBrT,YA8D5BC,YACYyQ,EACAG,GAERvQ,QAHQC,oBACAA,2BA9DLA,eAA0B,GAGzBA,mBACJ,IAAIkN,kBAAiC,IAClClN,mBACHA,KAAKuR,cAAcnE,eAYfpN,iBACJ,IAAIkN,mBAAyB,GACxBlN,iBAAmCA,KAAK+S,YAAY3F,eAErDpN,sBACJ,IAAIkN,mBAAyB,GACxBlN,sBACLA,KAAKgT,iBAAiB5F,eAE1BpN,qBACIA,KAAKsQ,oBAAoB2C,gBAGrBjT,uBACJ,IAAIkN,kBAA6B,IAErClN,uBACIA,KAAKkT,kBAAkB9F,eAWnBpN,gBAA0C,IAAIkN,kBAClD,IAGJlN,gBAA8BA,KAAKmT,WAAW/F,cAe7C,CAzDGoE,mBACA,OAAOxR,KAAKuR,cAAc9D,UAC7B,CAEG+D,iBAAa9D,GACb1N,KAAKuR,cAAcjE,KAAKI,EAC3B,CAuBG0F,qBAAiB5E,GACjBxO,KAAKkT,kBAAkB5F,KAAKkB,EAC/B,CAEG4E,uBACA,OAAOpT,KAAKkT,kBAAkBzF,UACjC,CASG4F,cAAUtE,GACV/O,KAAKmT,WAAW7F,KAAKyB,EACxB,CAEGsE,gBACA,OAAOrT,KAAKmT,WAAW1F,UAC1B,CASKuD,aAAa/D,GAAqC,sCAC9CA,GAAkBrM,MAAK,UAAK,IAAIC,YAEtCoM,GAAkBlE,UACbwF,GACIjK,EAAK8O,iBAAmB7E,GAAQQ,IAAKP,IAAW,CAC7ClF,GAAIkF,EAAMlF,GACVE,KAAMgF,EAAMhF,KACZC,OAAQ+E,EAAM/E,OACd6J,MAAO9E,EAAM8E,gBAGnBhP,EAAK2M,mBAAmBrQ,MAAK,WAAOF,KAAQA,IAAIG,kBAChDyD,EAAKiP,gBACLjP,EAAKpD,QACP,OACA,KACIoD,EAAKoO,gBAAL,EAEJ,WAGEpO,EAAKqO,gBAEXrO,EAAKoN,aAAezE,GAAkBrM,MAClC,SAAK2N,GACDA,EAAOQ,IACFP,IACI,CACGlF,GAAIkF,EAAM/E,OACV+J,OAAQ,QACRC,SAAU,KACNnP,EAAKoP,aAAalF,EAAlB,MAhC4B,IAsCvD,CAEK+E,UAAO,gCACTlP,EAAK0O,YAAYzF,MAAK,GACtBjJ,EAAK6M,WAAa7M,EAAK4M,mBAAmBrQ,MACtC,SAAK2N,GACDA,EAAOQ,IAAKP,IAAsB,CAC9B/E,OAAQ+E,EAAM8E,MAAM7J,OACpB6J,MAAO9E,EAAM8E,MAAM9J,UAK/BnF,EAAK6M,WAAa7M,EAAK6M,YAAYtQ,MAC/B,SAAK+S,GAAyB,IACvB,IAAIC,IAAID,EAAS5E,IAAKvK,GAAM,CAACA,EAAEiF,OAAQjF,KAAKqP,YAIvDxP,EAAK0O,YAAYzF,MAAK,EAjBb,IAkBZ,CAEMoF,iBAEH,IAAIoB,EADJ9T,KAAKgT,iBAAiB1F,MAAK,GAE3BtN,KAAKiR,kBAAkBlI,UAAWwF,GAC9BA,EACOuF,EAAQvF,GAAQQ,IAAKP,IAAW,CAC7BhM,SAAUgM,EAAM/E,OAChBsK,QAAS5V,kBACToC,KAAM,CAAEiJ,KAAMgF,EAAMhF,MACpBwK,QAAS,GACTC,KAAM,OAEV,IAEVjU,KAAKwR,aAAesC,EACpB9T,KAAKgT,iBAAiB1F,MAAK,EAC9B,CAEMqF,gBAIH3S,KAAK6S,UAHwB,CAC7BqB,SAAmB,CAAEC,QAAS,QAC9BD,SAAmB,CAAEC,QAAS,QAEjC,CACDT,aAAalF,GACcxO,KAAKmQ,aAAa3F,KAAK4J,oBAAmB,CAC7DC,WAAY,2BACZ9T,KAAMiO,IAGVxO,KAAKsQ,oBAAoBqB,gBAAgBnD,GAAO,EACnD,EAnKLrP,qDAGa2T,GAAU7O,uIAAV6O,EAAU1D,QAAV0D,EAAU,qBAFP,gICzBhB,iBAIApV,GAHA6B,SACAA,SACAA,SACAA,0PCJI0E,uCAAsC,cAAtCA,CAAsC,UAAtCA,CAAsC,YAKiBA,mCAASA,2BAEpDA,sCAA2B,UAA3BA,CAA2B,UAIbA,0BAACA,6BAEXA,sCAAiCA,iCAAOA,6BAG5CA,uCAA2B,eAElBA,oCAAUA,2BAEfA,mDACIA,qCAMJA,6BAEJA,uCAA2B,eAElBA,+BAAKA,2BAEVA,4CAKJA,2BACAA,wCAA2C,YAA3CA,CAA2C,eAG/BA,uCACJA,2BACAA,iDAEIA,2HAAiBA,oDAAiC,GAGrDA,6BAELA,wCAAyC,eAEjCA,qCACJA,2BACAA,gDAQJA,iCAKZA,4CAEC,WAFDA,CAEC,WAFDA,CAEC,WAFDA,CAEC,WAQqBA,2BAACA,6BAEXA,uCAAiCA,mCAASA,6BAG9CA,uCAA2B,eAEnBA,yCACJA,2BAEAA,sDAIIA,qHAAYA,6CAAkB,GACjCA,iCAKbA,4CAEC,gBAIOA,kHAASA,sCAAW,GAGpBA,yCAAsBA,mCAASA,6BAEnCA,2CAEIA,kHAASA,sCAAW,GAGpBA,yCAAsBA,oCAAUA,mFAlHzBA,2CAkCCA,oEAWIA,6EAA2B,mDAW3BA,kGAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,WAmCpCA,wEDrFxB,MAWaqQ,EAcT5U,YAC8B6U,EAClBtO,EACAsG,EACAgD,GAHkBvP,iBAClBA,cACAA,cACAA,8BAjBLA,kBAAc,EACdA,kBAAc,EAErBA,cAAiB,IAAIyM,KAMLzM,eAAY,KACxBA,KAAKuM,OAAOpE,WAAZ,CAQA,CAbOC,WACP,OAAOpI,KAAKuM,OAAOnE,IACtB,CAaDnI,WACID,KAAKuM,OAAOiI,UACZxU,KAAKuP,uBAAuBP,aAC/B,CAEKyF,YAAS,gCACXpO,EAAK+B,KAAKsM,mBACLrO,EAAK+B,KAAK9E,MAAM8G,MAAM/D,EAAK+B,KAAKgB,WAAW,CAAEgB,MAAM,oBAAetH,QACnEuD,EAAM+B,KAAKiC,cACThE,EAAKkG,OAAOoI,YAClBtO,EAAKJ,OAAOsC,SAAS,CAAC,mBALX,IAMd,CAEDqM,mBACIxU,OAAOoK,KAAK,sBACf,EA/CLrL,+DAWamV,GAAoBrQ,8BAejBxE,YAAQwE,mMAfXqQ,EAAoBpQ,wpDClBjCD,sCACIA,2CAsHJA,kCAtHWA,qmBCAX1E,eACAhC,WAKAI,GAJA4B,SACAA,SACAA,SAEAA,UACA3B,cACA2B,0EAEA,MAGasV,EAoBTnV,YACYyQ,EACAlK,EACAsG,EACA6D,EACA0E,GAJA9U,oBACAA,cACAA,cACAA,eACAA,mBAvBLA,gBAA+B,GAC/BA,gBAAsB,GAE7BA,qBAA0C,IAAIkN,kBAAuB,MACrElN,qBAAqCA,KAAK+U,gBAAgB3H,eAqBtDpN,KAAK+Q,WAAa,IACA/Q,KAAKuM,OAAOnE,MAAMjG,IAAI,cAAcmB,OAAS,IACrD0R,QAAStU,GAAOV,KAAK+Q,WAAWrQ,EAAE4I,KAAM,GAClDtJ,KAAKiV,WAAajV,KAAKoQ,QAAQpC,OAAQnQ,GAAMmC,KAAK+Q,WAAWlT,EAAEyL,IAClE,CAvBG+I,qBACA,OAAOrS,KAAK+U,gBAAgBtH,UAC/B,CAEG4E,mBAAe7D,GACfxO,KAAK+U,gBAAgBzH,KAAKkB,EAC7B,CAEUpG,WACP,OAAOpI,KAAKuM,OAAOnE,IACtB,CAeKgK,eAAe5D,EAAQxO,KAAKqS,gBAAc,sCAKtC6C,EAJwB/E,aAAa3F,KAAK2K,uBAAsB,CAClE5U,KAAMiO,IAIL5D,iBACA7B,UAAWqM,GACRA,EAAgBjP,EAAKkP,gBAAgBD,GAAiB,KARlB,IAU/C,CAEDC,gBAAgB7G,GACRA,GACoBxO,KAAKmQ,aAAa3F,KAAK8K,uBAAsB,CAC7D/U,KAAMiO,GAGjB,CAEDsD,oBAAoBtD,GACZA,IAAOxO,KAAKqS,eAAiB7D,EACpC,CAEDmD,gBAAgBnD,EAAcoD,GAAgB,GAC1C5R,KAAK+Q,WAAa,GAClB/Q,KAAK+Q,WAAWvC,EAAMlF,IAAMsI,CAC/B,CAEK2D,SAAS/G,GAAM,gCACjB,MAAMgH,EAAUC,OAAOC,KAAKvP,EAAK4K,YAAY/C,OAAO1E,GAAMnD,EAAK4K,WAAWzH,IACpEiF,QAAehN,QAAQoU,IAAIH,EAAQzG,IAAIzF,GAAMnD,EAAK2O,YAAYc,UAAUtM,KAC9EnD,EAAKiC,KAAKgB,WAAW,CAAEyM,UAAWtH,EAAQuH,OAAQvH,EAAO,KACzDpI,EAAK8O,WAAa9O,EAAKiK,QAAQpC,OAAQnQ,GAAMsI,EAAK4K,WAAWlT,EAAEyL,KAC/DnD,EAAK4P,UALY,IAMpB,CAEKA,WAAQ,sCACJ7P,EAAKqG,OAAOwJ,WAAWpT,MAAOqT,GAAQ9V,QAAQ0C,MAAMoT,IACtD9P,EAAKqG,OAAOtC,cACZ/D,EAAKD,OAAOsC,SAAS,CAAC,oBAHhB,IAIb,EA7ELpJ,6DAGa0V,GAAkB5Q,4OAAlB4Q,EAAkBzF,QAAlByF,EAAkB,qBAFf,gICXhB,oBAKAtV,SACAA,4GC4CY0E,uCAGC,UAHDA,CAGC,iBAGYA,+BAAMA,6BAGfA,sCAA2B,aACFA,sBAAqBA,yDAArBA,8EDlDzC,MAKagS,EAcTvW,YAC0Ca,EAC9B2V,EACA3J,EACA+D,GAH8BtQ,YAC9BA,uBACAA,cACAA,2BAXZA,yBAA8B,EAKvBA,aAAUA,KAAKuM,OAAOmE,OAOzB,CAVOtI,WACP,OAAOpI,KAAKuM,OAAOnE,IACtB,CAUKnI,WAAQ,gCACVqE,EAAK6R,UAAY7R,EAAK8D,MAAMmK,UAAU9G,KAAKnI,MAC3CgB,EAAK8R,WAAa,IAAI3J,KAAKnI,EAAK6R,WAAWzJ,mBAAmB,QAAS,CACnEC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEZ,MAAMwJ,EAA0B/R,EAAK8D,MAAMmK,UAAU7G,SAASpI,MAE9DgB,EAAKgS,SAAW,IAAI7J,KADRnI,EAAK6R,UAA8B,GAAlBE,EAAuB,KACtB3J,mBAAmB,QAAS,CACtDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEZvI,EAAKiH,UAAYjH,EAAK8D,MAAMmK,UAAUhH,UAAUjI,MAChDgB,EAAKkK,MAAQlK,EAAK/D,KAClB+D,EAAKiS,MAAQjS,EAAK8D,MAAMmK,UAAUgE,MAAMjT,KAhB9B,IAiBb,CAEDuM,aACI7P,KAAKkW,gBAAgBtG,QAAQ,SAChC,CAED4G,iBACIxW,KAAKyW,oBAAqB,EAC1BzW,KAAKsQ,oBAAoBiF,SAASvV,KAAKwO,MAC1C,EApDLrP,+DAKa8W,GAAoBhS,8BAejBmI,yBAAqBnI,2MAfxBgS,EAAoB/R,sqCChBjCD,sCAEC,cAFDA,CAEC,UAFDA,CAEC,cAGmBA,iDAASuE,cAAY,GACzBvE,2CAEKA,8BAAKA,6BAGdA,uCAAyCA,8CAAoBA,+BAIrEA,0CAA4E,UAA5EA,CAA4E,aAE5CA,kCAA8BA,6BAE1DA,uCAA2B,cAElBA,uBACLA,2BAEAA,wCAA0D,kBAEjDA,wCAAcA,2BAEnBA,yCACIA,qDACJA,6BAEJA,wCAA0D,kBAEjDA,kCAAQA,2BAEbA,yCAAmBA,uBAAgCA,iCAK/DA,2CAA4E,WAA5EA,CAA4E,aAE5CA,kCAA8BA,6BAG1DA,uCAA2B,cAElBA,oCACLA,2BAEAA,0CAcAA,wCAAmE,WAAnEA,CAAmE,kBAGtDA,gCAAMA,6BAGfA,uCAA2B,WACjBA,uBAAoCA,mCAM1DA,4CAAmD,WAAnDA,CAAmD,aAEnBA,kCAA8BA,6BAE1DA,uCAA2B,cAC8BA,gCAAMA,2BAE3DA,wCAA0D,kBAEjDA,sCAAYA,2BAEjBA,yCACIA,uBACJA,6BAEJA,wCAA0D,kBAEjDA,8BAAIA,2BAETA,yCAAoBA,uBAAwBA,iCAKxDA,wCAEC,gBAGOA,iDAASuE,kBAAgB,GAIzBvE,yCAAeA,iCAAOA,wCA1FjBA,yEAQGA,0HAOeA,4FAiBEA,uEAmBXA,8JAkBNA,kGAOgBA,2HAWxBA,gPC3GZ,iGCAIA,2CAIIA,kCAOJA,qEANQA,mGAAuB,+EAavBA,0CAIC,aAC4BA,wCAAeA,oDAG5CA,0CAIC,aAC4BA,2CAAkBA,oDAkC3CA,oCAA6B,iBAEpBA,iCAAQA,oDAGjBA,oCAAiC,iBAExBA,2CAAkBA,oDAG3BA,oCAA+B,iBAEtBA,sCAAaA,oDAGtBA,oCAAkC,iBAEzBA,kDAAyBA,oDAGlCA,oCAAgC,iBAEvBA,6BAAIA,oDAGbA,oCAA4B,iBAEnBA,mDAA0BA,uDAhC3CA,uCAGC,YAEOA,yCAKAA,yCAKAA,yCAKAA,yCAKAA,yCAKAA,yCAKJA,2BAEAA,wCACIA,sBACJA,uDAnCKA,8DACKA,wEAKAA,4EAKAA,0EAKAA,6EAKAA,2EAKAA,uEAQNA,6FA5CZA,2CAGC,aAC0CA,wCAAeA,2BAEtDA,0CAyCJA,qEAxC6BA,mKA4CzBA,0CAIIA,kHAASA,iCAAM,GAEfA,wCAA6BA,6BAAIA,6FAErCA,0CAIIA,kHAASA,iCAAM,GAEfA,wCAAyBA,gCAAOA,8BD/G5C,MAKayS,EAIThX,YAC0Ca,EAC9B2V,GAD8BlW,YAC9BA,uBAJZA,iBAAsB,CAKlB,CAEJC,WACID,KAAKwO,MAAQxO,KAAKO,IACrB,CAEDoW,aACI3W,KAAK4W,YAAc5W,KAAK4W,UAC3B,CAEDC,OAEQ7W,KAAKkW,gBAAgBtG,QADrB5P,KAAK4W,WACwB5W,KAAKwO,MAEL,KAEpC,EA5BLrP,+DAKauX,GAAoBzS,8BAKjBmI,yBAAqBnI,qGALxByS,EAAoBxS,6hECdjCD,sCACIA,4CAYAA,0CAEC,YACyCA,sBAAiBA,2BAEvDA,sCAAKA,iDAASuE,cAAY,GACtBvE,2CAQAA,2CAOJA,6BAEJA,0CAEC,YACqCA,iCAAOA,2BACzCA,uCAAqD,kBAE5CA,gCAAMA,2BAEXA,yCACIA,uBAA4BA,6BAGpCA,wCAAqD,kBACGA,8BAAIA,2BACxDA,yCACIA,uBAAuDA,+BAInEA,8CAgDAA,wCAGIA,6CAQAA,6CAQJA,oCAvHKA,2HAaqCA,gGAI7BA,wEAQAA,wEAiBDA,2GAMAA,gMAMPA,2GAkDIA,sEAQAA,qPClHb,oBAKA1E,6FCOgB0E,wDASAA,oCAAwC,iBAG/BA,8BAAKA,8BDjB9B,MAKa6S,EAETpX,YAC0Ca,EAC9B2V,EACA5F,GAF8BtQ,YAC9BA,uBACAA,0BACR,CAEJC,WACID,KAAKwO,MAAQxO,KAAKO,IACrB,CAED6R,iBACIpS,KAAKsQ,oBAAoB8B,eAAepS,KAAKwO,MAChD,CAEDuI,SACI/W,KAAKkW,gBAAgBtG,QAAQ,KAChC,EAvBLzQ,4DAKa2X,GAAiB7S,8BAGdmI,yBAAqBnI,yJAHxB6S,EAAiB5S,6tCCb9BD,sCAEC,WAGOA,iDAASuE,kBAAgB,GAEzBvE,sCAEC,WAIOA,wCASAA,wCAMJA,2BACAA,sCAAgC,YAExBA,sBAAiBA,2BAGrBA,sCAA4D,iBAGnDA,8BAAIA,2BAETA,yCACIA,uBAC6BA,6BAIrCA,uCAA4D,iBAGnDA,gCAAMA,2BAEXA,yCAA6BA,uBAAqBA,qCAMtEA,wCAEC,gBAGOA,iDAASuE,UAAQ,GAGjBvE,yCAA6BA,8BAAIA,sCAlDpBA,2HAQCA,4HASFA,gGASIA,gMAUyBA,yPCjDjD,iBACA3G,cAEAiC,kGAmBwB0E,4FAEIA,2DAGAA,8FAAcA,8DARtBA,uCAGIA,+CAIAA,wFAGJA,0HANSA,qEAAqB,wCAPlCA,uCAGIA,+EAWJA,+EAVyBA,kGAAoB,sDARjDA,sCAIIA,+EAeJA,wGAdSA,uHAAiC,qCAiB1CA,uCAIIA,0CACAA,kCAAGA,+CAAsBA,oCADZA,sFAKjBA,uCAGC,OACMA,0CAAiBA,8BA1CpC,MAgDa+S,UAAkCvX,YAK3CC,YAAoBuX,GAChBlX,QADgBC,iBAJbA,WAAO,mBACEA,cAAWA,KAAKiX,UAAUvG,QAC1B1Q,aAAUA,KAAKiX,UAAUC,iBAIxC,CAEMjX,WACHD,KAAKiX,UAAUE,WAAW,QAAQ,GAClCnX,KAAKiX,UAAUE,WAAW,WAAW,GACrCnX,KAAK6I,aAAa,OAAQ7I,KAAKiX,UAAUG,eAC5C,CAEMC,QAAQpJ,GACX,OAAOA,aAAgBtH,eAC1B,CAEM2Q,UAAU5W,EAAWuN,GACxB,OAAOA,GAAM3E,EAChB,EArELnK,oEAgDa6X,GAAyB/S,wGAAzB+S,EAAyB9S,k1BA7C9BD,sCAA+D,UAEvDA,wCACJA,2BACAA,sEAoBJA,2BACAA,wFASAA,iIA5BSA,iGAA2B,oNCf/B9E,cAAc,CACvB4G,YAAY,EADW,kCCA3BxI,WAGAC,WAGIsI,EAFJ,OAEIA,YAAYC,aACZ,sBAGJwR,oBACKC,gBAAgBC,aAChB9U,MAAOqT,GAAQ9V,QAAQ0C,MAAMoT,GAFlC,+HCTAzW,eACAhC,WAGAG,GAFA6B,SACAA,QACAA,sLAKQ0E,0CAA2CA,kHAASA,oCAAS,GACzDA,yCAAUA,8BAAKA,mDAIfA,mEAsCYA,yCAA+C,iBACpBA,iCAAQA,2BAC/BA,sBACJA,qDADIA,2GAfpBA,2CAIC,gBACuCA,6BAAIA,2BACxCA,sCAA+B,QAC3BA,yBAGAA,2BACAA,uCAAmB,yBAEXA,8CAIJA,2EAPJA,yEAAKyT,0BAALzT,2BAGmCA,uGAYnCA,uCACIA,sCAAyC,cAC3BA,qCAAYA,2BACtBA,oCACIA,sBAEJA,6BAERA,6FAJYA,oMARpBA,2CAA8D,gBACtBA,6BAAIA,2BACxCA,sCAA+B,QAC3BA,yBAAoBA,2BACpBA,kDASAA,sCAAyC,cAC3BA,8BAAKA,2BACfA,qCAAKA,uBAAcA,2EAXKA,6EAWnBA,mIAKbA,0CAIIA,kHAASA,qCAAU,GAJvBA,yBAQAA,2FACAA,0CAIIA,kHAASA,uCAAY,GAJzBA,yBAQAA,4BA3FZ,MAmHa0T,UAAoClY,YA4C7CC,YACYkY,EACAhY,EACAkV,EACY+C,GAA6B,MAEjD9X,QAFiD+X,OAHzC9X,mBACAA,YACAA,mBACYA,kBA/CRA,iBAAsB,EAEtBA,aAAUA,KAAK4X,YAAYlH,QAE3B1Q,gBAAW,kBACjB8X,EAAKF,YAAY7B,WAAWpT,MAAMjC,IACpC,uBAAYA,GACNA,IAEVoX,EAAKlI,SAAQ,EAChB,GACe5P,gBAAa,IAAMA,KAAK4X,YAAYG,iBACpC/X,aAAWT,GAAOS,KAAK6X,YAAYjI,QAAQrQ,GAEnDS,YAASA,KAAKgY,MAAMnC,UAAU,EAoCrC,CAlCY5V,WAAQ,gCACjBuG,EAAKyR,cAAezR,EAAKsO,YAAYc,UAAUpP,EAAKwR,MAAMnC,UAAU,GAAG/S,SAAU0D,EAAKyR,MADrE,IAEpB,CAEUD,YACP,OAAOhY,KAAK4X,YAAYxP,KAAK9E,KAChC,CAEUkL,YACP,OAAOxO,KAAKiY,MACf,CAEU3E,YACP,OAAOtT,KAAKJ,KAAKsY,YAAYlY,KAAKwO,MAAM5E,MAC3C,CAEUpH,eACP,MAAMkN,EAAW1P,KAAKJ,KAAKsS,UAAUiG,KAChCzX,GAAMV,KAAKwO,MAAM5E,MAAMlH,SAAShC,EAAE4I,KAEvC,OACIoG,GAAU0I,SACV1I,GAAU2I,cACV3I,GAAUlG,IAEjB,EA7JLrK,sEAmHawY,GAA2B1T,yPAA3B0T,EAA2BzT,+GAFzB,CAACU,cAAUX,oGA1GLqU,oGAkC4BA,oMADxBA,4EACL,kCAA6BC,YAgBxBD,wFAuBZA,sFASAA,k/BAtFLrU,2CAGAA,yCAAuD,QACnDA,wBAAgCA,2BAChCA,8EACJA,2BACAA,0CAA4C,gBACJA,6BAAIA,2BACxCA,sCAA+B,SACvBA,uBAAiCA,2BACrCA,uCAAyC,eAC3BA,wCAAcA,2BACxBA,uCAAUA,qDAAmCA,6BAEjDA,uCAAyC,eAC3BA,kCAAQA,2BAClBA,uCACIA,mFAQJA,iCAIZA,+CAqBAA,+CAmBAA,2CACIA,4EASAA,4EASJA,kCAzFyBA,4CAKOA,+FAKpBA,oFAGUA,+GAKNA,0OAeXA,iFAkBwCA,sFAuBpCA,kGASAA,+pBC5FjB,iBACA1G,WAMAC,WAMAE,GADA6B,QACAA,UACA5B,WACAC,WACAC,WACAC,2CAYA,MAGa0a,UAA6B/Y,YA2LtCC,YACYC,EACAC,GAERG,QAHQC,iBACAA,YA5LJA,WAAQ,IAAIkN,kBAAgB,GAC5BlN,gBAAa,IAAIkN,kBAA8B,OAC/ClN,cAAW,IAAIkN,mBAAgB,GAC/BlN,cAAW,IAAIkN,kBAAgB,CACnCuL,YAAa,CAAC,QAAS,OAAQ,UAAW,aAEtCzY,WAAQ,IAAIkN,kBAAgBT,KAAKiM,OACjC1Y,cAAU,mBAAc,CAACA,KAAK2Y,MAAO3Y,KAAK4Y,QAAQhY,MACtD,kBAAa,MACb,SAAKF,GAAMV,KAAK6Y,SAASvL,MAAK,KAG1BtN,qBACJA,KAAKJ,KAAK6P,gBAAgB7O,MACtB,YAAQF,KAAQA,IAChB,6BAAwB,OACxB,kBAAa,MACb,SAAKA,GAAMV,KAAK8Y,UAAU,WAC1B,eAAU,EAAGxP,SACTtJ,KAAK6Y,SAASvL,MAAK,IACZ,0BAAqBhE,MAEhC,0BAAqB,EAAEyP,IAAMC,KAAQD,IAAOC,IAC5C,eAAWhQ,IACPhJ,KAAK6Y,SAASvL,MAAK,IACZ,oBACFtE,GAAQ,IAAI+F,IAAKP,IACd,MAAMyK,GAAU,eAAUzK,EAAMlF,GAAI,YAAY2P,QAC5C,YAEEC,EAAMD,EAAQE,SAASvY,MACzB,SAAKwY,IACAA,GAAc,IAAIrK,IACdrR,GACG,IAAIiJ,gBAAc,IACXjJ,EACHmY,UAAWnY,EAAE6N,UAAUyC,OAClBtN,GACGA,EAAEoC,QAAU0L,EAAM1L,OAClBpC,EAAE2Y,UAEVvD,OAAQtH,OAK5B,OAAKxO,KAAKsZ,gBAAgB,QAAQ9K,EAAMlF,OACpCtJ,KAAK6I,aACD,QAAQ2F,EAAMlF,KACd2P,EAAQM,QAGTL,QAInB,SAAKxY,IAAM,aAAuBA,KAClC,iBAAY,IAGJV,eAAYA,KAAKwZ,gBAAgB5Y,MAC7C,SAAKF,GACDR,QAAQuZ,IACJ,UACA/Y,EAAEqO,IACGrO,GACG,GAAGA,EAAE0J,WAAW1J,EAAE6K,UACbwD,IAAKxR,GAAMA,EAAEuF,OACbwH,KAAK,YAI1B,SAAK5J,IACD,MAAMgZ,GAAO,mBACbxZ,eAAQuZ,IAAI,QAASC,GACdhZ,EAAEsN,OACJtN,GACGA,EAAE0J,KAAKuP,gBAAkBD,EAAK5W,MAAM6W,eACpCjZ,EAAE6K,UAAU4M,KACP5a,GACGA,EAAEuF,MAAM6W,gBAAkBD,EAAK5W,MAAM6W,eAL9C,IASX,SAAKjZ,GAAMR,QAAQuZ,IAAI,eAAgB/Y,KAG3BV,gBAA0CA,KAAK4Z,QAAQhZ,MACnE,eAAU,EAAE6K,MACR,MAAMoO,EAAQ,CACVC,cAAc,kBAAY,gBAAWrO,IACrCsO,YAAY,kBAAY,cAAStO,KAErC,OAAOzL,KAAKL,UAAUwC,IAAI,4BACpB,mBAAc,IAAK0X,EAAOjR,KAAM,SAAUhI,MACtC,SAAKF,GAAMA,EAAEqO,IAAKrR,IAAM,iCAA4BA,MACpD,gBAAYgD,GAAM,MAEtB,iBAAY,IAAKmZ,IAASjZ,MAAK,gBAAYF,GAAM,IAAjD,IAEV,SAAI,IAAMV,KAAKkB,QAAQ,cAAe,IAAMlB,KAAK6Y,SAASvL,MAAK,MAC/D,iBAAY,IAGAtN,YAASA,KAAKga,WAAWpZ,MACrC,eAAWnD,GAAa,QAANA,EAAcuC,KAAKia,WAAaja,KAAKka,YAG3Cla,cAAkCA,KAAK4Z,QAAQhZ,MAC3D,eAAU,EAAE6K,MACR,mBAAc,CACVqO,cAAc,kBAAY,gBAAWrO,IACrCsO,YAAY,kBAAY,cAAStO,IACjC7C,KAAM,YACPhI,MACC,gBAAYF,IACRR,QAAQ0C,MAAMlC,GACP,QAInB,SAAI,IAAMV,KAAKkB,QAAQ,cAAe,IAAMlB,KAAK6Y,SAASvL,MAAK,MAC/D,iBAAY,IAGAtN,WAA+BA,KAAK4Z,QAAQhZ,MACxD,eAAU,EAAE6K,MACR,mBAAc,CACVqO,cAAc,kBAAY,gBAAWrO,IACrCsO,YAAY,kBAAY,cAAStO,IACjC7C,KAAM,SACPhI,MACC,gBAAYF,IACRR,QAAQ0C,MAAMlC,GACP,QAInB,SAAI,IAAMV,KAAKkB,QAAQ,cAAe,IAAMlB,KAAK6Y,SAASvL,MAAK,MAC/D,iBAAY,IAGAtN,aAAiCA,KAAK4Z,QAAQhZ,MAC1D,eAAU,EAAE6K,MACR,mBAAc,CACVqO,cAAc,kBAAY,gBAAWrO,IACrCsO,YAAY,kBAAY,cAAStO,IACjC7C,KAAM,YACPhI,MAAK,gBAAYF,GAAM,OAE9B,SAAI,IAAMV,KAAKkB,QAAQ,cAAe,IAAMlB,KAAK6Y,SAASvL,MAAK,MAC/D,iBAAY,IAIAtN,eAAW,mBAAc,CACrCA,KAAKma,OACLna,KAAKoa,SACLpa,KAAKqa,MACLra,KAAKsa,UACN1Z,MACC,SAAI,EAAErB,EAAGiF,EAAGzG,EAAGmE,KACX,IAAI3C,KAAMiF,KAAMzG,KAAMmE,GAAG2M,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAEkO,KAAOlF,EAAEkF,QAI3CzL,wBAAoB,mBAAc,CAC9CA,KAAKua,SACLva,KAAKwa,WACN5Z,MACC,SAAI,EAAE6Z,EAAMC,KACRD,EAAKzM,OACAtN,GACIA,aAAaiG,iBACV+T,GAASjC,aAAa/V,SAAS,UACnCgY,GAASjC,aAAa/V,SAAUhC,EAAUiJ,iBAK1C3J,aAAUA,KAAKwa,SAASpN,eAExBpN,UAAOA,KAAK2Y,MAAMvL,eAElBpN,aAAUA,KAAK6Y,SAASzL,eAOpCpN,KAAK6I,aACD,YACA7I,KAAKJ,KAAK6P,gBAAgB1G,UAAU,IAChC/I,KAAKga,WAAW1M,KACZtN,KAAKL,UAAUwC,IAAI,8BACb,KACA,QAIrB,CAEMwY,cACH3a,KAAK4Y,MAAMtL,KAAKb,KAAKiM,MACxB,CAEMtB,aAAawD,EAAQ,KACxB,YAAKC,SACD,OACA,KACiC,YAA7BC,SAASC,iBACH/a,KAAK4Y,MAAMtL,KAAKb,KAAKiM,MAArB,EAGVkC,GAEG,IAAM5a,KAAKgb,aACrB,CAEMA,cACHhb,KAAKib,cAAc,OACtB,CAEMC,QAAQzP,GACXzL,KAAK2Y,MAAMrL,KAAK7B,EACnB,CAEM0P,WAAWlN,GACdjO,KAAK4Y,MAAMtL,KAAKb,KAAKiM,MACxB,CAEYvB,WAAW3N,EAAc4R,GAAiB,GAAK,gCACxD,MAAMV,EAAUxU,EAAKsU,SAAS/M,YAAc,CAAEgL,YAAa,KACnDA,eAAgBiC,EACpBjC,IAAgBA,EAAY/V,SAAS8G,IAAS4R,GAC9ClV,EAAKsU,SAASlN,KAAK,IACZoN,EACHjC,YAAaA,EAAYzK,OAAQtN,GAAMA,IAAM8I,KAGjDtD,EAAKsU,SAASlN,KAAK,IACZoN,EACHjC,YAAa,IAAIA,EAAajP,IAXkB,IAc3D,EA1PLrK,+DAGaqZ,GAAoBvU,yIAApBuU,EAAoBpJ,QAApBoJ,EAAoB,qBAFjB,4FC/BhB6C,2BACAA,2BACAA,2BACAA,4HCHA,oBACA9b,mJAKQ0E,uCACIA,0CACIA,4CAIAA,yCAGIA,kHAASA,uCAAY,GAGrBA,yCAAUA,mCAAUA,6BAExBA,yCAKIA,kHAASA,2CAAgB,GAGzBA,yCAAUA,sBAERA,+BAGVA,sCAAsD,eAAtDA,CAAsD,SAAtDA,CAAsD,WAItCA,uBACJA,2BACAA,mCAAGA,uBAA0BA,6BAEjCA,6CACIA,2HAAaA,wCAC/B,GAEeA,6BAELA,+BACAA,4CAAmC,YACCA,iCAAOA,2BACvCA,wCAAyC,QAClCA,uBAA0CA,iCAIzDA,wCAA2D,gBAMnDA,qIAA2BA,sDAAyB,GAEpDA,wCAA8C,kBACfA,uBAEzBA,2BACFA,mCACIA,uBAGJA,iCAIhBA,gFAlEYA,mEAcAA,sEAAyB,uBAKfA,2FASFA,6EAEDA,sFAGHA,yEAAyB,QAAzBA,CAAyB,uBAStBA,6FAQPA,qEAK+BA,gFAIvBA,sIAShBA,uCAGC,UAEOA,+DACJA,8BAhFhB,MAiGaqX,EAjGb5b,cAmGoBM,aAAkB,EAClBA,UAAe,EAEdA,eAAY,IAAIqF,eAChBrF,kBAAe,IAAIqF,eACnBrF,WAAQ,IAAIqF,cAKhC,CAHckW,aACP,OAAOvb,KAAKiO,MAAMsN,OAAOxM,IAAKrO,GAAMA,EAAE8a,MAAQ,EACjD,EA5GLrc,gEAiGamc,EAAqB,kDAArBA,EAAqBpX,2mCA9F1BD,mDAsEAA,iIAtEeA,sCAAY,ycCJnC,MAKawX,GALbtc,uEAKasc,EAA4B,kDAA5BA,EAA4BvX,kMCLzC,MAKawX,GALbvc,gEAKauc,EAAqB,kDAArBA,EAAqBxX,sKCPlC,oBACA3E,iGA8BgC0E,uCAGC,aACwBA,sBAAqBA,iFAArBA,oIAlBrCA,qCAIC,eAKOA,+HAASA,yCAAkB,GAE3BA,uCAGIA,yCAMJA,2BACAA,uCAAwC,WAAxCA,CAAwC,SAE3BA,sBAA2BA,2BAChCA,uCAAgCA,sBAAoBA,6BAExDA,wCAEC,QAEOA,uBAEJA,iCAIZA,2CAKIA,+HAASA,4CAAqB,GAE9BA,0CAAUA,uBAIRA,0FA/BOA,kFAOIA,wEAC2BA,mEAM5BA,+FAUZA,sFAGUA,mIA/CtBA,qCAIIA,sEAkDJA,sEAhD0BA,2HAP9BA,uCACIA,qEAuDJA,iHArDSA,sHAAgC,qCAwDzCA,uCAGC,UAEOA,+EACJA,oDAIJA,uCAIIA,0CACAA,qCAAsBA,oDAA2BA,oCADpCA,gEAjF7B,MA6Fa0X,EASTjc,YAAoBkc,uBARJ5b,cAAmB,GACnBA,eAAsB,GACrBA,eAAY,IAAIqF,eAChBrF,cAAW,IAAIqF,eAEhBrF,aAAUA,KAAK4b,aAAalL,QAC5B1Q,YAASA,KAAK4b,aAAaC,eAEY,CAEhDC,YAAYzS,GACf,OAAOrJ,KAAK+b,UAAUrZ,SAAS2G,EAClC,CAEM2S,YAAYC,GACfjc,KAAKkc,SAASlM,KAAKiM,EACtB,EA9GL9c,6DA6Fawc,GAAkB1X,qGAAlB0X,EAAkBzX,muDA1FvBD,sCAAkG,UACnEA,gCAAOA,2BAClCA,oCACIA,oDACJA,2BACAA,+EAyDJA,2BACAA,wFAUAA,yIAtEQA,oJAEWA,gGAA0B,mVCXrD,oBACA1E,6FAqDgB0E,0CAKIA,sJAAqB,KAAI,GAEzBA,+BACJA,4BA1DhB,MAAMkY,EAAuB,GAE7B,MAyGaC,EAoBT1c,YACYC,EACyB0c,GADzBrc,iBACyBA,cArB9BA,eAA0B,KAC1BA,cAAoB,IAAKA,KAAKqc,QAAU,GAqB3C,CAnBON,gBACP,OAAO/b,KAAKL,UAAUwC,IAAc,qBAAuBga,CAC9D,CAEUG,mBACP,OAAOtc,KAAKiQ,SAASlB,IAAKrO,GAAMA,EAAE4I,IAAIgB,KAAK,IAC9C,CAEUiS,YACP,OAAOvc,KAAKiQ,SAASuM,OAAO,CAAC/e,EAAGC,IAAMD,EAAIC,EAAE+e,OAAQ,EACvD,CAEMC,WAAWpT,GACd,OAAOA,GAAMtJ,KAAKsc,aAAa5Z,SAAS4G,EAC3C,CAOMqT,YAAYV,EAAcW,GAC7B,MAAM5T,EAAOhJ,KAAKiQ,SAASjC,OAAQtN,GAAMA,EAAE4I,KAAO2S,EAAM3S,IACpDsT,GAAO5T,EAAK6T,KAAKZ,GACrBjc,KAAKiQ,SAAWjH,CACnB,CAEM8T,gBAAgBb,GACnB,MAAMc,EAAW/c,KAAK+b,UACHgB,EAASra,SAASuZ,EAAM3S,IAOvCtJ,KAAKL,UAAUqd,gBACX,mBACAD,EAAS/O,OAAQtN,GAAMA,IAAMub,EAAM3S,KAPvCtJ,KAAKL,UAAUqd,gBAAgB,mBAAoB,IAC5CD,EACHd,EAAM3S,IAQjB,EAtJLnK,oEAyGaid,GAAyBnY,+EAsBtB6C,mBAAe,kDAtBlBsV,EAAyBlY,wrDAtG9BD,sCAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,8BAAKA,6BAEnBA,mCAAIA,mCAAUA,6BAElBA,uCAGIA,2CACAA,sCAGIA,oDAGAA,8CAGIA,sDAAauE,oBAAuB,EAApCvE,CAAqC,8CAGxCA,6BAELA,iDAMIA,yDAAgBuE,4BAA+B,EAA/CvE,CAAgD,8BAKnCuE,8BAA2B,EALxCvE,CAAgD,sCAM3B,IAAI,GAC5BA,6BAELA,0CAGIA,6CASAA,2CAOIA,qCACJA,6BAEJA,2CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAOqCA,oCAAUA,2BACpCA,wCAA4BA,sCAAYA,+BAGhDA,sCAA8BA,uBAA2BA,2BACzDA,2CAIIA,iDAASuE,2BAAwBA,oDAA0B,GAE3DvE,wCAA+B,kBACDA,uBAExBA,2BACFA,wCACIA,uBAKJA,0CA1EAA,4EAAyB,yBAU7BA,wEAA2B,uBAF3BA,2CAAmB,8EAAnBA,CAAmB,wFAqBlBA,oEASDA,qEADAA,sDAYAA,+EAQ0BA,uFAI1BA,gHADAA,gDAK8BA,2HAItBA,4PClG5B,iBACA3G,WACAC,WACAC,WACAC,sBAOA,MAGawf,EAHbvd,cAIYM,cAAW,IAAIkN,kBAA8B,CAAEzB,KAAMgB,KAAKiM,QAC1D1Y,aAAU,IAAIkN,kBAAwB,IACtClN,cAAW,IAAIkN,kBAAwB,IAE/BlN,YAASA,KAAKkd,QAAQ9P,eACtBpN,aAAUA,KAAK6Y,SAASzL,eAExBpN,iBAAa,QAAG,GAAGY,MAC/B,eAAU,KACNZ,KAAK6Y,SAASvL,KAAKtN,KAAK6Y,SAASpL,WAAa,aACvC,sBAEX,SAAK/M,GACDV,KAAK6Y,SAASvL,KACVtN,KAAK6Y,SAASpL,WAAW0P,QAAQ,cAAe,OAGxD,iBAAY,IAGAnd,oBAAiBA,KAAKod,SAASxc,MAC3C,kBAAa,MACb,eAAU,EAAGiJ,OAAM4B,WACfzL,KAAK6Y,SAASvL,KAAKtN,KAAK6Y,SAASpL,WAAa,eACvC,mBAAc,CACjB7D,MAAOC,GAAQ,GACfiQ,cAAc,kBAAY,gBAAWrO,IACrCsO,YAAY,kBAAY,cAAStO,IACjC7C,KAAM,qBAGd,SAAKlI,GACDV,KAAK6Y,SAASvL,KACVtN,KAAK6Y,SAASpL,WAAW0P,QAAQ,gBAAiB,OAG1D,iBAAY,IAGAnd,uBAAmB,mBAAc,CAC7CA,KAAKqd,WACLrd,KAAKsd,iBACN1c,MACC,SAAI,EAAEoI,EAAMuR,KACRvR,EACKgF,OAAQtN,IAAO6Z,EAASpC,KAAM5R,GAAMA,EAAE8C,WAAa3I,EAAE4I,KACrDuF,KACG,CAACtR,EAAGgJ,IACAhJ,EAAEggB,SAASC,cAAcjX,EAAEgX,WAC3BhgB,EAAEiM,KAAKgU,cAAcjX,EAAEiD,SAGvC,iBAAY,IAGAxJ,sBAAkB,mBAAc,CAC5CA,KAAKkd,QACLld,KAAKyd,mBACN7c,MACC,SAAI,EAAE8c,EAAQC,MACV,MAAM9f,EAAI6f,EAAO/D,cACjB,OAAOgE,EAAO3P,OACTtN,GACGA,EAAE8I,KAAKmQ,cAAcjX,SAAS7E,IAC9B6C,EAAEgJ,YAAYiQ,cAAcjX,SAAS7E,GAHtC,IAMX,iBAAY,GAUnB,CAPU+f,UAAUta,GACbtD,KAAKkd,QAAQ5P,KAAK,GAAGhK,IACxB,CAEMqF,WAAW4H,GACdvQ,KAAKod,SAAS9P,KAAK,IAAKtN,KAAKod,SAAS9Z,SAAUiN,GACnD,EAhFLpR,4DAGa8d,EAAiB,qDAAjBA,EAAiB7N,QAAjB6N,EAAiB,qBAFd,wFCKhB9d,cAAa0e,EAoBTne,YAAYoe,EAAwB,IAF7B9d,YAAS,EAGZA,KAAKsJ,GAAKwU,EAAMxU,IAAM,GACtBtJ,KAAKwJ,KAAOsU,EAAMtU,MAAQ,GAC1BxJ,KAAKud,SAAWO,EAAMP,UAAY,GAClCvd,KAAKub,OAASuC,EAAMvC,QAAU,GAC9Bvb,KAAK+d,QAAUD,EAAMC,SAAW,GAChC/d,KAAKge,MAAQF,EAAME,OAAS,GAC5Bhe,KAAKie,KAAOH,EAAMG,MAAQ,QAC1Bje,KAAK0J,YAAcoU,EAAMpU,aAAe,GACxC1J,KAAKke,eAAiBJ,EAAMI,gBAAkB,GAC9Cle,KAAKme,cAAsC,IAAtBL,EAAMK,eAAwB1R,KAAKiM,MACxD1Y,KAAKoe,eAAiBN,EAAMM,gBAAkB,EAC9Cpe,KAAKqe,iBAAmBP,EAAMO,kBAAoB,GAClDre,KAAKse,YAAcR,EAAMQ,aAAe,GACxCte,KAAKue,gBAAkBT,EAAMS,iBAAmB,GAChDve,KAAKwe,SAAWV,EAAMU,UAAY,GAClCxe,KAAKuc,MAAQuB,EAAMvB,OAAS,EAC5Bvc,KAAKye,UAAYX,EAAMW,WAAa,GACpCze,KAAKyc,OAASqB,EAAMrB,QAAU,CACjC,EAvCLtd,8FClBA,iBACA7B,WAEA6B,+BAAkC8c,EAAe,IAAIyC,SACjD,OAAO,IAAItZ,YAAU,CACjBkE,GAAI,IAAIlE,cAAY6W,EAAM3S,IAC1BE,KAAM,IAAIpE,cAAY6W,EAAMzS,KAAM,CAACpE,aAAWuZ,WAC9CpB,SAAU,IAAInY,cAAY6W,EAAMsB,SAAU,CAACnY,aAAWuZ,WACtDpC,MAAO,IAAInX,cAAY6W,EAAMM,OAC7B0B,KAAM,IAAI7Y,cAAY6W,EAAMgC,MAC5BvU,YAAa,IAAItE,cAAY6W,EAAMvS,aACnCqU,QAAS,IAAI3Y,cAAY6W,EAAM8B,QAAS,CAAC3Y,aAAWuZ,WACpDX,MAAO,IAAI5Y,cAAY6W,EAAM+B,MAAO,CAAC5Y,aAAWuZ,WAChDT,eAAgB,IAAI9Y,cAAY6W,EAAMiC,gBACtCC,cAAe,IAAI/Y,cAAYqH,KAAKiM,MAAO,CAACtT,aAAWuZ,WACvDP,eAAgB,IAAIhZ,cAAY6W,EAAMmC,gBAAkB,EAAG,CACvDhZ,aAAWuZ,WAEfC,YAAa,IAAIxZ,cAAY,GAC7BoZ,SAAU,IAAIpZ,cAAY6W,EAAMuC,UAChCH,iBAAkB,IAAIjZ,cAAY6W,EAAMoC,kBACxCC,YAAa,IAAIlZ,cAAY6W,EAAMqC,aACnCC,gBAAiB,IAAInZ,cAAY6W,EAAMsC,iBACvChD,OAAQ,IAAInW,cAAY6W,EAAMV,SAErC,CAtBDpc,8ICHA,iBACA7B,WACAC,WACAC,WACAC,WACAC,WAEMmhB,EAAiB,wBA0BvB,WAA4B5C,GACxB,MAAM1b,GAAO,iBAAY0b,EAAO,MAAC6C,EAAW,KAAM,KAClDve,SAAK4d,eAAgB,iBAAY5d,EAAK4d,gBAC/B,UAAK,GAAGU,IAAkBte,GAAMK,MAAK,SAAKF,GAAM,IAAIge,QAAMhe,IACpE,CAOD,WAA4B4I,EAAY2S,GACpC,OAAO,SAAI,GAAG4C,KAAkBvV,IAAM2S,GAAOrb,MAAK,SAAKF,GAAM,IAAIge,QAAMhe,IAC1E,CAjCDvB,yBAA4B4f,GACxB,MAAMlF,GAAQ,mBAAc,CAAEkF,MAC9B,OAAO,SAAI,GAAGF,IAAiBhF,GAAgB,MAAMjZ,MACjD,SAAKF,GAAWA,EAAEqO,IAAKhR,GAAW,IAAI2gB,QAAM3gB,MAC5C,gBAAY2C,IAAM,QAAG,KAE5B,EAMDvB,yBAA4BmK,GACxB,OAAO,SAAI,GAAGuV,KAAkBvV,IACnC,EAMDnK,gBAWAA,gBAQAA,uBAA0B8c,GACtB,OAAOA,EAAM3S,GAAK0V,EAAY/C,EAAM3S,GAAI2S,GAASgD,EAAYhD,EAChE,CAFD9c,0GCnDA7B,WACAC,WACAC,WACAC,WACAC,WACAC,WACAC,WACAC,WACAC,kEAEAud,2BAWA,MAUa6D,GAVb/f,uDAUa+f,EAAY,iDAAZA,uDAPLzf,eACAgG,mBACAL,cACAjH,sDAfYghB,4BAAyB,qDAGzCC,wBACAC,wBACAC,+BACAC,sBAAkB,uFCnBtBlE,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2HCTA,iBAIA5d,GAHA8B,SACAA,SACAA,SACAA,UACA7B,WAEAE,GADA2B,SACAA,qGAMY0E,uCAA2BA,sBAAWA,sEAAXA,iGAD/BA,qCACIA,yCACAA,mDACAA,uCAA2BA,mDAAiCA,uEAFrDA,mEACPA,2IAC2BA,gKAgEfA,yCAAkDA,sBAEhDA,sEAFgDA,yFAOtDA,uCAAqD,cACvCA,8BAAKA,2BACfA,uCAA2BA,sBAAcA,wEAAdA,qMAvE3CA,oCAMIA,kHAASA,wCAAa,GAGtBA,sCAEC,UAC4BA,sBAAoBA,2BAC7CA,uCAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,cA+BZA,sBASJA,6BAEJA,uCAAkBA,uBAAYA,+BAGtCA,wCAEC,aAEOA,+CAGAA,wCACIA,uBACJA,6BAEJA,0CAIJA,2BACAA,6CAGIA,yCACJA,wGA1EJA,uEAAqB,mFAQQA,6FAIjBA,0IAEC,0FAFDA,CAEC,sFAFDA,CAEC,iCAWGA,wIAGC,yFAHDA,CAGC,oFAHDA,CAGC,sCAYGA,wOAWUA,iEAOPA,wEAAuB,cAI9BA,yJAG6BA,yFAa7CA,kCA1FZ,MAsGaub,UAA6BC,YAMtC/f,YACYqL,EACA2U,EACA9f,GAERG,QAJQC,eACAA,cACAA,YAPIA,eAAoB,EACnBA,UAAO,IAAIqF,eACXrF,YAAS,IAAIqF,cAQ7B,CAEMpF,WACHD,KAAK6I,aACD,cACA7I,KAAK0f,OAAOC,cAAc5W,UAAW6W,GACjCA,EAAOC,IAAI,YACX7f,KAAK8f,SAASxW,KAAOsW,EAAOzd,IAAI,SAC1BnC,KAAK+f,cACL,IAGjB,CAEUnX,WACP,MAA2B,SAAvB5I,KAAK8f,SAASlX,KAAwB,OACf,YAAvB5I,KAAK8f,SAASlX,KAA2B,YACtC,MACV,CAEUoX,UACP,MAAMvU,EAAOzL,KAAK8f,SAASrU,MAAQgB,KAAKiM,MAExC,MAAO,IAAGuH,EADOriB,aAAU6O,KAAKiM,MAAOjN,GAClB,SAAU,YAAOA,EAAM,SAC/C,CAEUjJ,eACP,MAAM8Q,EAAQtT,KAAKJ,KAAKsY,YAAYlY,KAAK8f,SAASlW,OAAS,IAC3D,MAAO,GAAG0J,GAAO+E,cAAgB/E,GAAO9J,MAAQ,IACnD,CAEU0W,aACP,MAAMC,EAAQngB,KAAK8f,SAASrU,MAAQgB,KAAKiM,MACnChN,EAAW1L,KAAK8f,SAASpU,UAAY,GACrC0U,GAAM,gBAAWD,EAAOzU,GACxB2U,GAAM,oBAAe,CACvBC,MAAOC,KAAKC,MAAM9U,EAAW,IAC7B+U,QAAS/U,EAAW,KAEnByR,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,MAAO,IAAG,YAAOgD,EAAO,gBAAe,YAAOC,EAAK,cAAcC,IACpE,CAEMN,eACE/f,KAAK8f,SACV9f,KAAKkB,QAAQ,OAAQ,KACjB,MAAMyK,EAAM3L,KAAK+K,QAAQP,KAAKkW,+BAA8B,CACxDngB,KAAMP,KAAK8f,UAEf9f,KAAK6I,aAAa,OAAQ8C,EAAII,kBAAkB4U,KAAK5X,UAAU,IAAM/I,KAAK2gB,KAAK3Q,SAC/EhQ,KAAK6I,aAAa,SAAU8C,EAAII,kBAAkB6U,OAAO7X,UAAU,IAAM/I,KAAK4gB,OAAO5Q,QAArF,EAEP,EAvKL7Q,+DAsGaqgB,GAAoBvb,kMAApBub,EAAoBtb,gtCAnGzBD,uCAKAA,wCAiFAA,+FAtFoCA,yCAY/BA,yXCxBb,iBACA1G,WACAC,WACAC,WAEAE,GADA4B,QACAA,UAEA1B,GADA0B,SACAA,+IAWgB0E,uCAIIA,6CAIJA,qEAHQA,yKAoEIA,uCAGC,cACaA,sBAERA,2BACFA,uCACIA,sBAKJA,wEATUA,iGAINA,0IAQJA,+CAEIA,qGA9BhBA,uCAIC,eAMOA,kHAASA,4CAAiB,GAE1BA,yCAeAA,yFAMJA,2BACAA,0CAIC,cACaA,mCAAUA,sIA/BpBA,iFACAA,iDAKKA,uEAAoB,cAsBzBA,4IA1G5B,MAmLa4c,EAsBTnhB,YACqCohB,EACzBlhB,GADyBI,gBACzBA,YAvBKA,UAAO,IAAIqF,eACXrF,YAAS,IAAIqF,eACdrF,aAAUA,KAAK8gB,SACxB9gB,kBAAc,EACLA,cAAW,CACvB,CACIwC,SAAUxC,KAAK8f,SAASzW,SACxB0K,QAAS5V,mBAiBb,CAbOmV,YACP,OAAOtT,KAAKJ,KAAKsY,YAAYlY,KAAK8f,SAASlW,OAAS,GACvD,CAEU8F,eACP,OAAO1P,KAAKJ,KAAKsS,UAAUiG,KAAM3H,IAC5BxQ,KAAK8f,SAASlW,OAAS,IAAIlH,SAAS8N,EAAIlH,IAEhD,CAOU4W,aACP,MAAMC,EAAQngB,KAAK8f,SAASrU,MAAQgB,KAAKiM,MACnChN,EAAW1L,KAAK8f,SAASpU,UAAY,GACrC0U,GAAM,gBAAWD,EAAOzU,GACxB2U,GAAM,oBAAe,CACvBC,MAAOC,KAAKC,MAAM9U,EAAW,IAC7B+U,QAAS/U,EAAW,KAEnByR,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,MAAO,IAAG,YAAOgD,EAAO,gBAAe,YAAOC,EAAK,cAAcC,IACpE,CAEYU,kBAAe,gCACxBC,EAAKC,aAAc,QACb,oBAAeD,EAAKlB,QAAQxW,IAAK0X,EAAKlB,QAAQoB,YAAYrgB,YAC/DmgB,EAAKlB,QAAgBoB,YAAcF,EAAKlB,QAAQoB,YACjD,mBACI,iBACIF,EAAKlB,QAAQoB,WAAa,aAAe,gBAGjDF,EAAKC,aAAc,CATK,IAU3B,EArOL9hB,uEAmLa0hB,GAA4B5c,8BAuBzB6C,mBAAe7C,uGAvBlB4c,EAA4B3c,gIA7D+BoU,oFAuD9CA,2wEA1KlBrU,sCAEC,WAIOA,wCASAA,qCACIA,sBACJA,2BACAA,sCAAyD,UAAzDA,CAAyD,UAAzDA,CAAyD,UAAzDA,CAAyD,cAmCrCA,uBASJA,6BAEJA,uCAAkBA,uBAAYA,+BAGtCA,yCA0CJA,6BAEJA,wCAAwC,YAAxCA,CAAwC,YAIhCA,0BAA2DA,2BAC3DA,wCAA8C,eAChCA,+BAAKA,2BACfA,qCAAKA,qDAA4CA,6BAErDA,wCAA8C,eAChCA,kCAAQA,2BAClBA,qCAAKA,uBAAYA,6BAErBA,wCAA8C,eAChCA,6BAAGA,2BACbA,qCACIA,uBAEJA,6BAEJA,wCAA8C,eAChCA,+BAAKA,2BACfA,qCACIA,uBAEJA,+BAGRA,wCAIIA,+CAMJA,6BAEJA,2CAIC,eACaA,+BAAKA,+BAGvBA,gDAA6C,gBAQrCA,iDAASuE,eAAa,GAEtBvE,0CAAUA,gCAAMA,2BAChBA,+DAAwBA,sCAlKnBA,2LAOkDA,6IACnDA,iFAMQA,0IAGC,0FAHDA,CAGC,sFAHDA,CAGC,iCAaGA,wIAGC,yFAHDA,CAGC,oFAHDA,CAGC,sCAYGA,wOAWUA,iEAMrBA,2EAgDIA,wHAIAA,iEAKDA,4LAOAA,8NAWJA,yFAAqB,sBAArBA,CAAqB,qWC5J7C1E,eACAhC,WACAC,WAUAC,WACAC,WACAC,WACAC,WAcAE,GAFAyB,SAEAA,UACAxB,WACAoG,WACAC,WACAC,WAEAE,GADAhF,QACAA,2EAIM4hB,EAAe,CACjB,aACA,eACA,eACA,oBA+BJ,MAGaC,UAA2B3hB,YAwJpCC,YACYwI,EACAvI,EACAC,EACAmL,EACAsW,GAERthB,QANQC,eACAA,iBACAA,YACAA,eACAA,iBA5JJA,WAAQ,IAAIkN,kBAAiC,QAC7ClN,cAAW,IAAIkN,kBAAoC,CACvDtE,KAAM,SAEF5I,WAAQ,IAAIkN,mBAAgB,4BAC5BlN,cAAW,IAAIkN,kBAAyB,MACxClN,cAAW,IAAIkN,kBAAwB,IAExClN,kBAAwB,IAAIshB,UAC/B1f,KAAK2f,MACD7f,eAAemC,QAAQ,gCAAkC,OAGjD7D,aAAUA,KAAK6Y,SAASzL,eACxBpN,aAAUA,KAAKod,SAASxc,MAAK,iBAAY,IAEzCZ,YAAqCA,KAAKuQ,QAAQ3P,MAC9D,kBAAa,MACb,6BAAwB,SACxB,eAAU,EAAGgI,WACT,IAAK5I,KAAKJ,KAAK8P,SAAU,OAAO,QAAG,IACnC,OAAQ9G,OACC,OACD,YAAKiQ,SAASvL,KAAK,oBACZtN,KAAKwhB,WAAW,SAAhB,IACN,UACD,YAAK3I,SAASvL,KAAK,6BACZtN,KAAKwhB,WAAW,kBAE/B,OAAO,QAAG,GAAH,IAEX,SAAI,IAAMxhB,KAAK6Y,SAASvL,KAAK,MAC7B,iBAAY,IAGAtN,cAAiCA,KAAK2d,OAAO/c,MACzD,SAAK+c,IACD,MAAM3U,EAAiB,GACvB,UAAa0E,cAAciQ,EACvBjQ,aAAoB+T,OACd/T,EAASsH,QAAStU,GAAMsI,EAAK6T,KAAKnc,IAG5C,OAAO,YAAOsI,GAAM6F,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAEigB,cAAcjX,GAA5C,IAEX,iBAAY,IAGAvG,uBAAmB,mBAAc,CAC7CA,KAAKuQ,QACLvQ,KAAK2d,OACL3d,KAAK0hB,QACN9gB,MACC,YACI,EAAEF,EAAGihB,EAAIvZ,KACLA,EAAKwZ,cAAcnW,KAAO,GAAKrD,EAAKwZ,cAAclW,SAAW,IAErE,kBAAa,MACb,SAAI,GAAI9C,WACJ5I,KAAK6Y,SAASvL,KAAK,YAAY1E,uBAEnC,eAAU,EAAE2H,EAASoN,EAAQvV,MACzB,mBAAc,CACV0R,cAAc,iBAAY1R,EAAKwZ,cAAcnW,MAC7CsO,YAAY,kBACR,gBACI3R,EAAKwZ,cAAcnW,KACnBrD,EAAKwZ,cAAclW,UAAY,OAGvC9C,KAAM2H,EAAQ3H,KACdgB,MAAO2G,EAAQsR,UAChBjhB,MACC,SAAK2Z,GACDoD,EAAO3P,OACFiO,IACsB,IAAnBA,EAAM6F,YACJvR,EAAQ7C,UACN6C,EAAQ7C,UAAUqU,MAAOrhB,GACrBub,EAAMvO,SAAShL,SAAShC,QAE9B6P,EAAQsR,SACNtR,EAAQsR,UAAY5F,EAAMpS,MAAMP,IAChCiH,EAAQsR,UAAY5F,EAAMpS,MAAMC,aACnCyQ,EAASpC,KACL6J,GACGA,EAAI3Y,WAAa4S,EAAM3S,IACR,aAAf0Y,EAAIC,aAMhC,SAAI,IAAMjiB,KAAK6Y,SAASvL,KAAK,MAC7B,iBAAY,IAGAtN,2BAAuB,mBAAc,CACjDA,KAAKuQ,QACLvQ,KAAKyd,mBACN7c,MACC,SAAI,EAAE2P,EAASoN,MACX,MAAMuE,EAAS,GACT7E,EAAa,IAAIM,GAAQ9O,KAAK,CAACtR,EAAGgJ,IACpChJ,EAAEsM,MAAMP,IAAIkU,cAAcjX,EAAEsD,MAAMP,KAEhC6Y,EAAU5R,EAAQ4R,SAASlZ,OAC3BsH,EAAQ4R,QACR,EAAC,oBACP,KAAO9E,EAAWpU,QAAQ,CACtB,MAAMmZ,EAAQ,GACd,IAAInG,EAAQoB,EAAWgF,MACvB,KAAOD,EAAMnZ,OAASkZ,EAAQlZ,UAEtBmZ,EAAMnZ,QACLmZ,EAAMjK,KAAMzX,GAAMA,EAAEmJ,MAAMP,KAAO2S,EAAMpS,MAAMP,MAIlD8Y,EAAMvF,KAAKZ,GACXA,EAAQoB,EAAWgF,MAEnBD,EAAMnZ,OAASkZ,EAAQlZ,QAC3BiZ,EAAOrF,KAAKuF,EACf,CACD,OAAOF,KAkCXliB,KAAK6I,aACD,kBACA7I,KAAKkI,QAAQiS,OAAOpR,UAAW+W,IAEvBA,aAAmB1gB,kBAClB+hB,EAAahJ,KAAMzX,GAAMof,EAAQtE,IAAI9Y,SAAShC,KAE/CV,KAAKmI,WAAL,IAIZnI,KAAKJ,KAAKe,YACLC,MAAK,WAAOF,GAAMA,IAClBqI,UAAU,IAAM/I,KAAK2I,WAAW,IACxC,CA5CU2Z,WACP,OAAOtiB,KAAKuiB,MAAM9U,UACrB,CAEUrF,WACP,OAAOpI,KAAK0hB,MAAMjU,UACrB,CAEUqS,cACP,OAAO9f,KAAK8gB,SAASrT,UACxB,CAEM+G,QAAQsL,EAAmB,IAAIwB,WAClCthB,KAAK0hB,MAAMpU,MAAK,yBAAoBwS,IACpC9f,KAAK6I,aACD,cACA7I,KAAK0hB,MAAMjU,WAAW3E,aAAaC,UAAU,IAAM/I,KAAK2U,cAE5D3U,KAAK8gB,SAASxT,KAAKwS,GACnB9f,KAAKod,SAAS9P,KAAK,CAAE1E,KAAM5I,KAAKod,SAAS3P,WAAW7E,MACvD,CA0BMiC,QAAQvH,GACXtD,KAAKuiB,MAAMjV,KAAKhK,EACnB,CAEMqF,WAAWrF,GACdtD,KAAKod,SAAS9P,KAAK,IAAKtN,KAAKod,SAAS3P,cAAenK,GACxD,CAEMkf,WAAW7U,EAAiB8U,GAC/B,IAAK9U,GAAS1E,OAAQ,OACtB,MAAMyE,EAAW1N,KAAKod,SAAS3P,YAAYC,UAAY,GACnD+U,IAAW/U,EAAShL,SAASiL,IAAUD,EAASmP,KAAKlP,IACpD8U,GAAU/U,EAAShL,SAASiL,IAC7BD,EAASgV,OACLhV,EAASiV,UAAWpjB,GAAMA,IAAMoO,GAChC,GAER3N,KAAK2I,WAAW,CAAE+E,YACrB,CAEMkV,YACE5iB,KAAK0hB,MAAMjU,YAAYzN,KAAKwU,UACjC,MAAMsL,EAAU9f,KAAK8gB,SAASrT,WAC9BzN,KAAK0hB,MAAMjU,WAAWrE,WAAW,IACzB0W,GAAW,MACXA,GAAS+C,gBAAkB,KAEnC7iB,KAAKod,SAAS9P,KAAK,CAAE1E,KAAM5I,KAAKod,SAAS3P,WAAW7E,MACvD,CAEMT,YACHzG,eAAeyZ,WAAW,wBAC1BzZ,eAAeyZ,WAAW,gCAC1Bnb,KAAKwU,SACR,CAEMG,YACHjT,eAAeC,QACX,uBACAC,KAAKC,UAAU7B,KAAK0hB,MAAMjU,YAAYmU,eAAiB,KAE3DlgB,eAAeC,QACX,+BACAC,KAAKC,UAAU7B,KAAKod,SAAS3P,YAAc,IAElD,CAEMqV,WACE9iB,KAAK0hB,MAAMjU,YAAYzN,KAAKwU,UACjCxU,KAAK0hB,MAAMjU,WAAWrE,WAAW,IAC1BxH,KAAK2f,MACJ7f,eAAemC,QAAQ,yBAA2B,QAG1D7D,KAAK2I,WAAW,CACZkZ,QAAS7hB,KAAKJ,KAAK8P,UAAUpG,MAC1B1H,KAAK2f,MACJ7f,eAAemC,QAAQ,iCAAmC,OAGrE,CAEMkf,qBAAqBC,GAAiB,GACzC,MAAM5a,EAAOpI,KAAK0hB,MAAMjU,WAExB,GADArF,EAAKsM,oBACAtM,EAAKiC,QAAU2Y,EAAO,OAC3B,MAAMhL,EAAQ,IAAIsJ,UAAQ,IAAKthB,KAAK8f,WAAY1X,EAAKwZ,gBACrD5hB,KAAK+K,QAAQP,KAAKyY,4BAA2B,CAAE1iB,KAAMyX,GACxD,CAEY1P,cAAW,sCACd/B,EAAK2c,iBACX,MAAM3S,EAAUhK,EAAK6W,SAAS3P,WAExBnK,EAAQ8E,EADIsZ,MAAMjU,WACLmU,cACnB,IAAI7N,EAAU,8BAA8BxD,EAAQ3H,QAChDtF,EAAMiG,mBACF,YAAOjG,EAAMmI,KAAM,iBACvBnI,EAAMoI,SAAW,IACX,QAAS,YAAOpI,EAAMmI,KAAM,UAC5B,KAEN8E,EAAQ6R,QACRrO,EAAU,GAAGA,6EAEjB,MAAMoP,QAAgB,sBAClB,CACI5M,MAAO,QAAQhG,EAAQ3H,OACvBmL,UACAqP,KAAM,CAAErP,QAAS,oBAErBxN,EAAKwE,SAET,GAAwB,SAApBoY,GAASE,OAAmB,KAAM,iBACtCF,EAAQzS,QAAQ,iCAChBlK,EAAY4b,YACF7b,EAAK+c,mBAAmB3gB,MAAOjC,IACjC,uBAAYA,GACZyiB,EAAQxf,QACFjD,UAGJ6F,EAAKwP,WAAWpT,MAAOjC,IACzB,uBAAYA,GACZyiB,EAAQxf,QACFjD,IAEdyiB,EAAQxf,OArCY,IAsCvB,CAEYoS,SAASwN,GAAe,GAAK,gCACtC,MAAMnb,EAAO5B,EAAKkb,MAAMjU,WACxB,IAAKrF,EAAM,KAAM,sBACjB,IAAKA,EAAKiC,MACN,KAAM,mCAAkC,sBAAiBjC,GAAMkC,KAC3D,SAERlC,EAAKgB,WAAW,CACZO,aACIvB,EAAKwZ,cAAcjY,cACnBnD,EAAK4W,SAAS3P,WAAW7E,OAEjC,MAAMtF,EAAQ8E,EAAKwZ,cAanB,GAZK2B,UACK/c,EAAKgd,uBACPlgB,EACAkD,EAAK4W,SAAS3P,WAAW7E,QAG7BtF,EAAMoI,UAAY,KAAWpI,EAAMmgB,UACnCrb,EAAKgB,WAAW,CACZqC,MAAM,SAAInI,EAAMmI,KAAM,CAAE6U,MAAO,GAAIG,QAAS,KAAMiD,UAClDhY,SAAU,MAGdlF,EAAK6a,UAAUsC,eAAgB,CAC/B,MAAMC,QAAgBpd,EAAK6a,UAAUwC,YAAY,CAC7Cjb,KAAMpC,EAAK4W,SAAS3P,WAAW7E,KAC/Bkb,cAAexgB,EAAMiG,WACrBkC,KAAMnI,EAAMmI,KACZC,SAAUpI,EAAMoI,SAChB+X,QAASngB,EAAMmgB,UAEnB,IAAKG,GAASG,QAAS,OACtBzgB,EAAcuf,eAAiB,CAC5BmB,QAASJ,EACTK,WAAYL,EAAQK,WAE3B,CACDzd,EAAKqS,SAASvL,KAAK,kBACnB,MAAMlK,QAAe,iBACjB,IAAIke,UAAQ,IACL9a,EAAK4W,SAAS3P,cACdnK,EACH4gB,WAAY1d,EAAK7G,UAAUwC,IAAI,+BAErCtB,YACF2F,EAAKqS,SAASvL,KAAK,IACnB,MAAQ3D,gBAAiBrG,EACzB,SAAK6E,YACLC,GAAMgB,WAAW,CAAEO,iBACnBnD,EAAKyD,aAAe7G,EACpB1B,eAAeC,QACX,8BACAC,KAAKC,UAAUuB,IAEnBoD,EAAKqE,QAAQ,WACNzH,CAzD+B,IA0DzC,CAEYkgB,mBAAgB,gCACzB,MAAQnB,UAASC,QAAOxZ,QAASrC,EAAK6W,SAAS3P,WAC/C,IAAK2U,EAAO,KAAM,iCAClB,MAAM+B,EAAgBhC,EAAQnU,OACzBtN,GAAMA,EAAEoC,SAAU,mBAAcA,OAErC,GAAIqhB,EAAclb,QAAU,EACxB,KAAM,wCACV,MAAMb,EAAO7B,EAAKmb,MAAMjU,WAAWnK,MAC7B+Z,QAAmB9W,EAAKkX,iBACzB7c,MAAK,UAAK,IACVC,YACCujB,EAAe/G,EAAWlF,KAC3BzX,GAAMA,EAAE4I,KAAOlB,EAAKiB,UAAY3I,EAAE+I,SAAWrB,EAAKiB,UAEjDiK,EAAQ/M,EAAK3G,KAAKsY,YAAY,CAACkM,EAAava,MAAMP,KAClDqU,EAAS,CACXyG,WACU7d,EAAK8d,oBACX/Q,EAAM7J,OACNrB,EAAKiB,SACLgU,EACA8G,EAAclb,SAGhBqb,EAAgB,EAAC,sBAAkBH,SACnC5iB,QAAQoU,IACV2O,EAAcvV,IAAI,CAACrO,EAAG6jB,IAClBhe,EAAKid,uBACD,IACOpb,EACHiB,SAAUsU,EAAO4G,GAAK9a,QAAUkU,EAAO4G,GAAKjb,GAC5Ckb,WAAY9jB,EAAEoC,OAElB8F,KAIZ,QAASlL,EAAI,EAAGA,EAAI4mB,EAAcrb,OAAQvL,IAAK,CAC3C,MAAMgc,EAAO4K,EAAc5mB,GACrBue,EAAQ0B,EAAOjgB,GACrB6I,EAAKmb,MAAMjU,WAAWrE,WAAW,IAC1BhB,EACHsR,KAAMA,EACNrQ,SAAU4S,GAAO3S,GACjBC,WAAY0S,EAAMzS,KAClBC,OAAQwS,GAAOxS,QAAUwS,GAAO3S,GAChCI,YAAauS,EAAMzS,KACnBI,MAAOqS,EAAMpS,KACP,CAACoS,EAAMpS,MAAMC,UAAWmS,EAAMpS,MAAMP,IACpC,KAEV/C,EAAKwP,UAAS,EACjB,CArDwB,IAsD5B,CAEamN,iBAAc,gCACxB,IAAyD,IAArD3c,EAAK5G,UAAUwC,IAAI,8BAAyC,OAChE,MAAMwJ,EAAMpF,EAAKwE,QAAQP,KAAKia,+BAO9B,GAAuB,gBANFljB,QAAQmjB,KAAK,CAC9B/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBxiB,YACL8K,EAAIG,cAAcjL,gBAEVwiB,OAAmB,KAAM,iBACrC,MAAMjb,EAAOuD,EAAII,kBAAkB3D,KAAKwZ,cACxC,UAAW+C,KAAOvc,EACd,GAAIA,EAAKuc,GAAM,KAAM,2BAEzBhZ,EAAIhI,OAdoB,IAe3B,CAGa6f,wBACRna,WAAUoC,OAAMC,WAAU8Y,aAAYf,WACxC7a,GAAiB,gCAEjB8C,EAAW+X,EAAU,IAAU/X,GAAY,GAC3C,MAAM6O,QAAiB,mBAAc,CACjCT,cAAc,iBAAYrO,GAC1BsO,YAAY,iBAAYtO,EAAkB,GAAXC,EAAgB,KAC/C9C,SACD/H,YACH,GAAI0Z,EAASpC,KAAMzX,GAAMA,EAAE2I,WAAaA,GACpC,MAAIA,EAAS3G,SAAS,KACZ,GAAG2G,gDAEH,GAAGA,0CAGjB,MAAMub,EACFC,EAAKllB,UAAUwC,IAAI,6BAA6ByG,YAAiB,EACrE,GACIgc,EAAmB,GACnBrK,EAASvM,OACJtN,GACGA,EAAE8jB,cAAgBA,IAAc,oBAAe1hB,QAClC,aAAbpC,EAAEuhB,QACRhZ,QAAU2b,EACd,CACE,MAAME,EAAUN,KAAe,oBAAe1hB,MAC9C,KAAM,GAAGgiB,EAAU,MAAQN,aACvBM,EAAU,OAAS,WACjBlc,UACT,CACD,OAAO,CA9BU,IA+BpB,CAEM4Y,WAAW5Y,GACd,OAAO,uBAAkB5I,KAAKJ,KAAK8P,SAASpG,GAAI,CAC5CE,KAAMZ,IACPhI,MACC,SAAKL,IACD,aACIA,EAAKwO,IAAKrO,IACLA,EAAEqkB,SAASnc,IAAOua,mBAAmB1B,MAChC/gB,EAAEqkB,SAASnc,IAAOua,QAClB,IACJpU,IAAKhR,IAAO,IAAKA,EAAG8L,KAAMnJ,EAAEmJ,WAKjD,CAEawa,oBACVW,EACA1b,EACAqU,EACApB,GAAa,qBAEb,MAAM0I,EAAgB,GACtB,IAAI5H,EAAaM,EAAO3P,OAAQtN,GAAMA,EAAE4I,KAAOA,GAAM5I,EAAE+I,SAAWH,GAClE,QAAS5L,EAAI,EAAGA,EAAI6e,EAAO7e,IAAK,CAC5B,MAAMuQ,QAAa,uBACf+W,EACA1b,EACA+T,EAAWtO,IAAKrO,GAAMA,EAAE+I,QAAU/I,EAAE4I,KAEpC2E,IACAgX,EAAcpI,KACVc,EAAOxF,KAAMzX,GAAMA,EAAE4I,KAAO2E,GAAQvN,EAAE+I,SAAWwE,IAErDoP,EAAaA,EAAWrP,OACnBtN,GAAMA,EAAE4I,KAAO2E,GAAQvN,EAAE+I,SAAWwE,GAGhD,CACD,OAAOgX,CAnBM,IAoBhB,EAnfL9lB,6DAGaiiB,GAAkBnd,kPAAlBmd,EAAkBhS,QAAlBgS,EAAkB,qBAFf,8GC3EhB,iBAEA7jB,GADAgC,SACAA,aAKAA,8FAEA,MAqDa2lB,EASTxlB,YACqCylB,EACzBxlB,GADyBK,cACzBA,iBAVIA,mBAAe,mCAC3BA,KAAKmlB,QAEOnlB,kBAAc,gCAC1BA,KAAKmlB,QAEOnlB,gBAAY,8BAAyBA,KAAKmlB,OAKtD,EAjERhmB,oEAqDa+lB,GAAyBjhB,8BAUtB6C,mBAAe7C,mGAVlBihB,EAAyBhhB,yFArCXoU,8FAWAA,sGAWAA,2iBAnCnBrU,sCACIA,qDACJA,2BACAA,sCAA+D,0CASvDA,iCACAA,6DAA4BA,6BAEhCA,qEAQIA,kCACAA,+DAAoCA,6BAExCA,mEAQIA,4CAA0BA,kCAAQA,2BAClCA,+DAA6BA,+BAGrCA,0CAAwE,eAC1DA,+BAAKA,oCA/BXA,oIAWAA,mIAWAA,ibC3ChB,iBAEA3G,WAWM8nB,EAAkB,CAAC,OAAQ,YAAa,YAAa,UAG3DjmB,gBAAakmB,EAkET3lB,YAAYa,EAAyB,IACjCP,KAAKsJ,GAAK/I,EAAK+I,IAAM,GACrBtJ,KAAKqJ,SAAW9I,EAAK8I,UAAY,GACjCrJ,KAAKuJ,WAAahJ,EAAKgJ,YAAchJ,EAAKsiB,gBAAgBtZ,YAAchJ,EAAKsiB,gBAAgBrZ,MAAQjJ,EAAKmJ,aAAe,GACzH1J,KAAK4J,MAAQrJ,EAAKqJ,OAAS,GAC3B5J,KAAKslB,cACD/kB,EAAKkL,KAAO,KACZlL,EAAK+kB,gBACL,kBACI,4BAAsB,gBAAW7Y,KAAKiM,MAAO,GAAI,CAC7C6M,UAAW,KAGvBvlB,KAAKwlB,YACDjlB,EAAKkL,KAAO,IAAuB,GAAhBlL,EAAKmL,UACxBnL,EAAKilB,cACL,kBACI,gBAAgC,IAArBxlB,KAAKslB,cAAsB/kB,EAAKmL,UAAY,KAE/D1L,KAAK2J,aAAepJ,EAAKoJ,cAAgB,GACzC3J,KAAK4I,KAAOrI,EAAKqI,MAAQrI,EAAKoJ,cAAgB,UAC9C3J,KAAKyL,KAAOlL,EAAKkL,MAA6B,IAArBzL,KAAKslB,cAC9BtlB,KAAK0L,SACDnL,EAAKmL,UACL6U,KAAKkF,KACD,yBACyB,IAArBzlB,KAAKslB,cACc,IAAnBtlB,KAAKwlB,cAGjBxlB,KAAK0lB,SACDnlB,EAAKmlB,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC7D9lB,KAAKwkB,WAAajkB,EAAKikB,YAAc,GACrCxkB,KAAK+lB,QAAUxlB,EAAKwlB,SAAW,GAC/B/lB,KAAKgmB,UAAYzlB,EAAKylB,WAAa,GACnChmB,KAAKuW,MAAQhW,EAAKgW,OAASvW,KAAK2J,aAAe,IAAG,2BAAsB3J,KAAK2J,wBAA0B,GACvG3J,KAAK0J,YAAcnJ,EAAKmJ,aAAe,GACvC1J,KAAKkhB,aAAe3gB,EAAK2gB,WACzBlhB,KAAKimB,WAAa1lB,EAAK0lB,SACvBjmB,KAAKkkB,WAAa3jB,EAAK2jB,SACvBlkB,KAAKkmB,UAAY3lB,EAAK2lB,QACtBlmB,KAAKmmB,aAAe5lB,EAAK4lB,cAAgB,GACzCnmB,KAAKomB,eAAiB7lB,EAAK6lB,gBAAkB,GAC7CpmB,KAAKqmB,gBAAkB9lB,EAAK8lB,iBAAmB,GAC/CrmB,KAAKsmB,YAAc/lB,EAAK+lB,aAAe,GACvCtmB,KAAKumB,eAAiBhmB,EAAKgmB,gBAAkB,GAC7CvmB,KAAKwmB,cAAgBjmB,EAAKimB,eAAiB,GAC3CxmB,KAAK6iB,eAAiBtiB,EAAKsiB,gBAAkB,GAC7C7iB,KAAKymB,SAAWlmB,EAAKsiB,gBAAgB4D,OACrCzmB,KAAK0mB,SAAWnmB,EAAKmmB,SACrB1mB,KAAKuL,UAAYhL,EAAKgL,WAAa,GACnCvL,KAAKyjB,QAAUljB,EAAKkjB,SAAWzjB,KAAK0L,SAAW,IAC/C1L,KAAKiiB,OAASjiB,KAAKimB,SACb,WACAjmB,KAAKkkB,SACL,WACA,YACN,UAAWS,KAAOpkB,IACRokB,KAAO3kB,QAAUolB,EAAgB1iB,SAASiiB,IAAQpkB,EAAKokB,KACzD3kB,KAAK6iB,eAAe8B,GAChBpkB,EAAKokB,IAAQ3kB,KAAK6iB,eAAe8B,GAGhD,CAEMgC,SACH,MAAMpmB,EAAO,IAAKP,MAClB,OAAKA,KAAKsJ,WAAW/I,EAAK+I,UACnB/I,EAAKkL,YACLlL,EAAKmL,UACZ,uBAAkBnL,GACXA,CACV,CAEUiC,eACP,OAAOxC,KAAK0J,WACf,CAGUuW,eACP,OAAO,eAAUjgB,KAAKyL,KAAM,IAAIgB,KACnC,CAGUma,cACP,MAAMzG,EAAQ,IAAI1T,KACZ2T,EAAMpgB,KAAKyjB,SACX,cAASzjB,KAAKyL,KAAM,KACpB,gBAAWzL,KAAKyL,KAAMzL,KAAK0L,UACjC,OAAO,aAAQyU,EAAOC,EACzB,EA5JLjhB,yKChBA,iBACA5B,WAEAC,UACAC,WACAC,mCAmDO,UAAiCsnB,EAAiB6B,EAA6BC,EAAqB,IACvG,MAAMC,EAAUjM,SAASkM,cAAc,OACvCD,EAAQE,MAAMC,SAAW,WACzBH,EAAQE,MAAME,IAAM,UACpBJ,EAAQE,MAAM9jB,MAAQ,SACtB4jB,EAAQE,MAAM/jB,OAAS,SACvB4X,SAASsM,KAAKC,YAAYN,GAC1B,MAAMzd,QAAW,kBAAa,CAC1BkS,IAAKwJ,EACL+B,YAEEO,GAAS,eAAUhe,GACnBie,GAAgC,iBAAhBV,EAA2BS,EAAOE,SAASX,GAAeA,IAAgB,CAAExgB,EAAG,GAAI9B,EAAG,IAC5G,IAAIkjB,EAAO,GACPC,EAAU,GACd,UAAWve,KAAQ2d,EAAU,CACzB,MAAQzgB,IAAG9B,KAAM+iB,EAAOE,SAASre,IAAS,CAAE9C,EAAG,EAAG9B,EAAG,GAC/CxG,EAAIwiB,KAAKoH,MAAMthB,EAAIkhB,EAAMlhB,IAAMA,EAAIkhB,EAAMlhB,IAAM9B,EAAIgjB,EAAMhjB,IAAMA,EAAIgjB,EAAMhjB,IAC3ExG,EAAI0pB,IACJA,EAAO1pB,EACP2pB,EAAUve,EAEjB,CACD2R,gBAASsM,KAAKQ,YAAYb,IAC1B,kBAAazd,GACNoe,CACV,0BA3EDvoB,iCAAoC2gB,EAAmB,IAAIwB,WACvD,MAAMlZ,EAAO,IAAIhD,YAAU,CACvBkE,GAAI,IAAIlE,cAAY0a,EAAQxW,IAAM,IAClCmC,KAAM,IAAIrG,cAAY0a,EAAQrU,KAAM,CAACrG,aAAWuZ,WAChD8E,QAAS,IAAIre,cAAY0a,EAAQ2D,UAAW,GAC5Cja,KAAM,IAAIpE,cAAY0a,EAAQ+C,eAAerZ,MAAQsW,EAAQvW,YAAc,IAC3EmC,SAAU,IAAItG,cAAY0a,EAAQpU,SAAU,CAACmc,gBAC7Cle,aAAc,IAAIvE,cAAY0a,EAAQnW,cACtCC,MAAO,IAAIxE,cAAY0a,EAAQlW,OAC/B2M,MAAO,IAAInR,cAAY0a,EAAQvJ,OAC/B7M,YAAa,IAAItE,cAAY0a,EAAQpW,aACrCK,cAAe,IAAI3E,cAAY,MAC/ByQ,UAAW,IAAIzQ,cAAY,IAC3B0iB,QAAS,IAAI1iB,cAAY,IACzBiE,SAAU,IAAIjE,cAAY0a,EAAQzW,SAAU,CAACjE,aAAWuZ,WACxDpV,WAAY,IAAInE,cAAY0a,EAAQpW,aACpCiU,OAAQ,IAAIvY,cAAY0a,EAAQ+C,gBAAgBlF,QAAU,IAC1DpS,UAAW,IAAInG,cAAY0a,EAAQvU,WAAa,IAChD9B,OAAQ,IAAIrE,cAAY0a,EAAQ+C,gBAAgBpZ,QAChDiQ,KAAM,IAAItU,eAAY,oBACtB2gB,QAAS,IAAI3gB,cAAY0a,EAAQiG,SACjCvB,WAAY,IAAIpf,cAAY0a,EAAQ0E,YACpCuD,UAAW,IAAI3iB,eAAY,oBAC3B+gB,aAAc,IAAI/gB,cAAY0a,EAAQqG,cACtCE,gBAAiB,IAAIjhB,cAAY0a,EAAQuG,iBACzC2B,mBAAoB,IAAI5iB,cAAY0a,EAAQ+C,gBAAgBoF,kBAAoBnI,EAAQ+C,gBAAgBmF,sBAE5G5f,SAAKU,aAAaC,UAAWvE,IACzB,MAAMkV,EAAOlV,EAAEkV,KACTwO,EAAS1jB,EAAEujB,WACjBG,GAAUxO,IACJtR,EAAKgB,WACD,CACI2c,QAASrM,EAAKpQ,IAAM4e,EAAO5e,GAC3Bkb,WAAY9K,EAAK5W,OAASolB,EAAO5e,GACjC6c,aAAc+B,EAAO5e,GACrB+c,gBAAiB6B,EAAOplB,OAE5B,CAAEqlB,WAAW,GAPjB,GAWV/f,EAAKmK,SAASkR,QAAQ3a,aAAaC,UAAW0a,IACtCA,EAASrb,EAAKmK,SAAS7G,SAAS0c,UAC/BhgB,EAAKmK,SAAS7G,SAAS+W,QAAvB,GAEFra,CACV,EAEDjJ,+BAAsBkpB,qCA4BtBlpB,yCAA4C6Y,GACxC,OAAO,IAAIsJ,UAAQ,CACfhY,GAAI0O,EAAM1O,GACVkb,WAAYxM,EAAM5N,KAClBf,SAAU2O,EAAMlC,QAAQxM,GACxBC,WAAYyO,EAAMlC,QAAQuC,cAAgBL,EAAMlC,QAAQtM,KACxDG,aAAc,OACdua,SAA2B,aAAjBlM,EAAMiK,OAChBY,eAAgB,IACT7K,IAGd,CAZD7Y,6QCpFA,iBACA7B,WACAC,WAEAC,WACAC,WACAC,WAiBM4qB,EAAoB,yBAM1B,WAA8BvJ,GAC1B,MAAMlF,GAAQ,mBAAckF,GAC5B,OAAO,SAAI,GAAGuJ,IAAoBzO,EAAQ,IAAMA,EAAQ,MAAMjZ,MAC1D,SAAKoI,GAASA,EAAK+F,IAAKd,GAAS,IAAIqT,UAAQrT,MAC7C,gBAAYvN,IAAM,QAAG,KAE5B,CAiBD,WAA8BH,GAC1B,OAAO,UAAK,GAAG+nB,IAAqB/nB,GAAMK,MACtC,SAAKqN,GAAS,IAAIqT,UAAQrT,IAEjC,CAQD,WACI3E,EACA/I,EACAgoB,EAA0B,SAE1B,OAAmB,UAAXA,EAAqBC,QAAQA,OACjC,GAAGF,KAAqBG,mBAAmBnf,KAC3C/I,GACFK,MAAK,SAAKqN,GAAS,IAAIqT,UAAQrT,IACpC,CA5CD9O,kBAaAA,yBAA4BmK,GACxB,OAAO,SAAI,GAAGgf,KAAqBG,mBAAmBnf,MAAO1I,MACzD,SAAKqN,GAAS,IAAIqT,UAAQrT,IAEjC,EAMD9O,kBAYAA,kBAgBaA,cAAeoB,GACxBA,EAAK+I,GAAKof,EAAcnoB,EAAK+I,GAAI/I,GAAQooB,EAAcpoB,GAO3DpB,2BAA8BmK,GAC1B,OAAO,SAAI,GAAGgf,KAAqBG,mBAAmBnf,KAAO,CACzDsf,cAAe,QAEtB,EAODzpB,4BAA+BmK,GAC3B,OAAO,UACH,GAAGgf,KAAqBG,mBAAmBnf,aAC3C,IACF1I,MAAK,SAAKqN,GAAS,IAAIqT,UAAQrT,IACpC,EAOD9O,2BAA8BmK,GAC1B,OAAO,UACH,GAAGgf,KAAqBG,mBAAmBnf,YAC3C,IACF1I,MAAK,SAAKqN,GAAS,IAAIqT,UAAQrT,IACpC,EAOD9O,4BAA+BmK,EAAYsT,GACvC,MAAM/C,GAAQ,mBAAc,CAAE+C,UAC9B,OAAO,UACH,GAAG0L,KAAqBG,mBAAmBnf,eAAgBuQ,IAC3D,IACFjZ,MAAK,SAAKqN,GAAS,IAAIqT,UAAQrT,IACpC,EAOD9O,oCAAuCmK,EAAYxG,EAAe8Z,GAC9D,MAAM/C,GAAQ,mBAAc,CAAE+C,UAC9B,OAAO,UACH,GAAG0L,KAAqBG,mBAAmBnf,aAAcmf,mBAAmB3lB,eAAmB+W,IAC/F,IACFjZ,MAAK,SAAKqN,GAAS,IAAI4a,YAAU5a,IACtC,EAOD9O,uCACI2pB,EACAjP,EACAkP,GAEA,OAAOC,EAAcnP,GAAOjZ,MACxB,SAAKF,GACDooB,EAAc9a,OAAQ1E,IAAQ5I,EAAEyX,KAAM5R,GAAMA,EAAE8C,WAAaC,KAAQyf,GAAUA,IAAWxiB,EAAE+C,OAGrG,CAVDnK,iGCrJA,iBAEA7B,WACAC,WACAC,WAEAC,WACAC,WACAC,SACAC,WACAC,WACAC,WAEAC,UACAoG,WAwBA8kB,GAtBA1pB,SACAA,SAEAA,SACAA,SACAA,SACAA,SACAA,QACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,qBA2BA,MAqBa2pB,GArBb/pB,+DAqBa+pB,EAAoB,iDAApBA,wDAHE,CAAC9jB,uBAAoBP,SAf5BpF,eACA2F,cACAA,sBACA0C,iBACAb,iBACAF,qBACAF,sBACAD,kBACAE,kBACAI,2BACAO,oBACAL,wBACA+hB,mBACAC,2HCjFR,iBACA9rB,cAEAiC,qJAmBY0E,yCAA0D,SAC5BA,8BAAKA,6FAK/BA,uCAAqD,WACjDA,yBAAgBA,2BAChBA,uDACIA,gKACHA,0EADGA,4FAKJA,oCACIA,mDACJA,sEADIA,kLAEJA,gDAEIA,gKACHA,wEADGA,yGAGRA,uCAA4D,WACxDA,yBAAkBA,2BAClBA,kDAAqC,cAG7BA,kKAFJA,4EAEIA,oIAvBpBA,uCACIA,uCACIA,wCAMAA,sCAAuB,WACnBA,yBAAgBA,2BAChBA,yCAGAA,kDAIJA,2BACAA,yCAUAA,4DAIAA,6BAEJA,2CAAqD,gBAC9BA,kHAASA,oCAAS,GAArCA,0BAAmDA,6BAE3DA,gFAnCyCA,uEAQvBA,wEAIDA,uEAI+BA,uEAcxCA,0EAAIolB,YAAJplB,EAAI,6EAAJA,sDAOJA,wCACIA,0CACAA,kCAAGA,sBAAaA,uEADHA,+DACVA,mEAnDnB,MAgEaqlB,EA4BT5pB,YACqCoe,EACzBne,GADyBK,aACzBA,iBA7BKA,WAAQ,IAAIqF,eAEbrF,WAAQA,KAAK8d,MAAMzD,OAAS,GAErCra,UAAOA,KAAK8d,MAAMrS,KAClBzL,UAAOA,KAAK8d,MAAM1T,KAETpK,kBAAeA,KAAK8d,MAAMyL,aAEnCvpB,YAASA,KAAK8d,MAAMuF,OAEXrjB,WAAQA,KAAK8d,MAAMxK,KAmB/B,CAfOkW,gBACP,OAAOxpB,KAAKqa,MAAMtL,IAAKrO,GAAMA,EAAE8I,MAAMc,KAAK,KAC7C,CAEUmf,kBACP,QAASzpB,KAAKL,UAAUwC,IAAI,wBAC/B,CAEUunB,mBACP,QAAS1pB,KAAKL,UAAUwC,IAAI,gCAC/B,CAOMwnB,UACH3pB,KAAK0Q,QAAU,6BACf1Q,KAAKgY,MAAMhI,KAAK,CAAEqT,OAAQ,QAC7B,EApGLlkB,oEAgEamqB,GAAyBrlB,8BA6BtB6C,mBAAe7C,mGA7BlBqlB,EAAyBplB,oIA5DjBoU,4FAeWA,iFAmBRA,qFACK,0CACT,uCACA,sCAIwCA,oFAhC5BA,iFAgBAA,80BA1BxBrU,uCAAQ,QACJA,wBAAwBA,2BACxBA,iCACAA,2CAGJA,2BACAA,kDAsCAA,iIA1C8CA,mEAI/BA,mEAAgB,seC1BvC,iBACA3G,WAKAG,GAJA8B,SAEAA,SAEAA,4NAmBwB0E,gDAGIA,wIAAiBA,0CAAuB,GAGxCA,sBACJA,sFALIA,sGAAmD,mDAInDA,6FATZA,uCAAoD,cAC7BA,6BAAIA,2BACvBA,uCACIA,kDAQJA,wEAPwBA,+FAYxBA,qFAEIA,0FAIAA,iGA3BZA,sCAKIA,wCAaAA,sCAGIA,yCAKAA,yFAMJA,2BACAA,uCAA4B,YAEpBA,sBACJA,2BACAA,uCAAiD,kBACbA,+BAAKA,2BACrCA,mCAAGA,uBAAoBA,6BAE3BA,wCAAiD,kBACbA,gCAAMA,2BACtCA,6DAEAA,6BAEJA,wCAEC,gBAKOA,8HAASA,6CAAsB,GAE/BA,uEACIA,qCAEJA,qDAEJA,2CAIIA,8HAASA,4CAAqB,GAE9BA,uEACIA,qCAEJA,yDAIZA,2CAKIA,kHAASA,mDAAsB,GAE/BA,0CAAUA,uBAIRA,sHAhFAA,gGAiBGA,4FAA4B,cAa7BA,gFAIGA,mEAMHA,sGAiCJA,uHAGUA,0IAvF9B,MAAMkY,EAAuB,GAE7B,MAqHayN,EAcTlqB,YACYC,EACAoL,GADA/K,iBACAA,eAfIA,cAAqB,GAC9BA,eAAY,EACZA,WAAwB,GACxBA,eAAW,EACXA,uBAA8B,GAoDrBA,sBAAoB6pB,GAC/B7pB,KAAK8pB,UAAYD,EAEN7pB,uBAAqB6pB,GAChC7pB,KAAK+pB,SAAWF,EACL7pB,sBAAoBnC,GAAgBmC,KAAKgqB,SAAWnsB,CA7ChE,CAPOke,gBACP,OAAO/b,KAAKL,UAAUwC,IAAc8nB,iBAAiB9N,CACxD,CAQM+N,kBACH,MAAMve,EAAM3L,KAAK+K,QAAQP,KAAKyf,2BAA0B,CACpD1pB,KAAM,CACF4pB,MAAOnqB,KAAKmqB,MACZ5Z,QAAS,CAAE6Z,SAAUpqB,KAAKqqB,cAGlC1e,EAAIG,cAAc/C,UAAWohB,IACpBA,IAAOA,EAAQxe,EAAII,kBAAkBkE,UAC1CjQ,KAAKsqB,SAASH,EAAd,EAEP,CAGMI,eAAe/b,GAClBxO,KAAKsqB,SAAStqB,KAAKmqB,MAAMnc,OAAQtN,GAAMA,EAAE4I,KAAOkF,EAAMlF,IACzD,CAMMghB,SAASE,GACZxqB,KAAKmqB,MAAQK,EACTxqB,KAAK8pB,WAAW9pB,KAAK8pB,UAAU9pB,KAAKmqB,MAC3C,CAOMM,WAAWnnB,GACdtD,KAAKmqB,MAAQ7mB,GAAS,EACzB,CAUMwZ,gBAAgBtO,GACnB,MAAMuO,EAAW/c,KAAK+b,UACHgB,EAASra,SAAS8L,EAAMlF,IAOvCtJ,KAAKL,UAAUqd,gBACXiN,eACAlN,EAAS/O,OAAQtN,GAAMA,IAAM8N,EAAMlF,KAPvCtJ,KAAKL,UAAUqd,gBAAgBiN,eAAc,IACtClN,EACHvO,EAAMlF,IAQjB,EAnMLnK,iEAqHayqB,GAAsB3lB,8IAAtB2lB,EAAsB1lB,sGARpB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMf,GAC9BgB,OAAO,MAEdC,uDAdsBvS,qFAtDKA,4EACJ,2CAaIA,sHAAc,mDAWdA,wHAAe,i/CArEvCrU,sCACIA,yCAwFJA,2BACAA,yCAIIA,iDAASuE,mBAAiB,GAE1BvE,sCAAwD,cAC1CA,+BAAMA,2BAChBA,6DAAmBA,+BAG3BA,sCACIA,iCACJA,kCAnG0BA,oRCpBlC,iBACA3G,cACAiC,yIAKQ0E,sCAAwD,UACpDA,wBAAmDA,2BACnDA,uCAAqC,UAArCA,CAAqC,WAE7BA,6BAESA,gCACTA,mDACAA,kDAGC,wBACoCA,6BAAGA,2BACpCA,oDAAkCA,4BAAEA,+BAG5CA,uCAAgC,YAC5BA,+BAEaA,iCACbA,mDACAA,oDAA4D,yBACvBA,6BAAGA,2BACpCA,oDAAkCA,4BAAEA,+BAG5CA,wCAA2B,YACvBA,+BAEaA,iCACbA,mDACAA,oDAGC,yBACoCA,6BAAGA,2BACpCA,oDAAkCA,4BAAEA,iCAIhDA,2CAAqD,gBAC9BA,kHAASA,mCAAQ,GAApCA,0BAAiDA,6BAErDA,2CAA+C,WACjBA,+BAAKA,2EA1CjBA,oEAUYA,4DACAA,4DASAA,4DACAA,4DAYAA,4DACAA,mFAY9BA,wCAAoC,UAChCA,yBAKAA,2BACAA,0CAA+C,UACjBA,8BAAKA,gCA3DnD,MA+Ea6mB,EA/EbprB,cAgFqBM,WAAQ,IAAIqF,eAEtBrF,UAAO,IAAIoF,YAAU,CACxB2lB,UAAW,IAAI3lB,eAAY,GAC3B4lB,OAAQ,IAAI5lB,eAAY,GACxB6lB,QAAS,IAAI7lB,eAAY,IAiBhC,CAbU8lB,SACHlrB,KAAKoI,KAAKsM,mBACNe,OAAOC,KAAK1V,KAAKoI,KAAK9E,OAAO6U,KACxBwM,IAC4B,IAAzB3kB,KAAKoI,KAAK9E,MAAMqhB,IACS,SAAzB3kB,KAAKoI,KAAK9E,MAAMqhB,IAGxB3kB,KAAKmrB,SAAU,EAGnBnrB,KAAKgY,MAAMhI,KAAK,CAAEqT,OAAQ,QAC7B,EArGLlkB,sEA+Ea2rB,EAA2B,kDAA3BA,EAA2B5mB,sHA3ECoU,kGAGTA,gIAEH,oCAAO,sCAWJA,yIAEC,qCAAO,uCAQRA,oIAEC,qCAAO,uCAYmBA,kFAQvBA,u2BAjD5BrU,yCA+CAA,iIA/CMA,0CAAgB,6fCP9B,iBASA3G,oGA6BgB2G,uFACIA,yEAsDAA,uCAGC,YACwCA,sBAAUA,uDAAVA,iHAV7CA,2CAIC,WACGA,yBAA+CA,2BAC/CA,yCAMJA,sEALyBA,wOAlEjCA,uCACIA,0CASIA,mDAKAA,yCAGIA,kHAASA,uCAAY,GAGrBA,yCAAUA,mCAAUA,6BAExBA,yCAKIA,kHAASA,2CAAgB,GAGzBA,yCAAUA,sBAERA,+BAGVA,sCAAwE,eAAxEA,CAAwE,WAG5DA,uBACJA,6BAEJA,2CAAyE,YACrCA,iCAAOA,2BACvCA,wCAAyC,eAC3BA,gCAAMA,2BAChBA,6DAAmBA,6BAEvBA,wCAAyC,eAC3BA,8BAAIA,2BACdA,mCACIA,uBACJA,6BAEJA,wCAAyC,eAC3BA,+BAAKA,2BACfA,mCAAGA,uBAAgDA,+BAG3DA,8CAaAA,4CAIIA,+CAMJA,6BAEJA,wCAAmF,gBAK3EA,qIAA2BA,sDAAyB,GAEpDA,wCAA8C,kBACfA,uBAEzBA,2BACFA,6DAEAA,iCAIhBA,gFAjGQA,0GAAqC,qDAArCA,CAAqC,sDAArCA,CAAqC,oDAArCA,CAAqC,gEAQhCA,sGAcDA,sEAAyB,uBAKfA,2FAQNA,6GAYIA,8GAKDA,qJAKNA,0GAiBGA,iEAAe,sBAAfA,CAAe,6CASnBA,qEAK+BA,gFAK3BA,4GAMZA,uCAGC,UACGA,yBAEAA,8BA7HhB,MAkIamnB,EAlIb1rB,cAoIoBM,UAAe,EACfA,aAAkB,EAEjBA,WAAQ,IAAIqF,eACZrF,eAAY,IAAIqF,eAChBrF,kBAAe,IAAIqF,eAE7BrF,aAAU,GACVA,cAA4B,EAiBtC,CAfUqrB,YAAYC,GACXA,EAAQniB,MAAQnJ,KAAKmJ,MACrBnJ,KAAKurB,eAEZ,CAEOA,gBACJvrB,KAAKglB,QAAUhlB,KAAKmJ,KAAKU,KAAKJ,OAC9BzJ,KAAK0N,SAAW,CACZ,CACIlL,SAAUxC,KAAKmJ,KAAKM,QAAUzJ,KAAKmJ,KAAKG,GACxCyK,QAASyX,mBAGpB,EA5JLrsB,+DAkIaisB,EAAoB,kDAApBA,EAAoBlnB,0PApEDoU,wFAkDJA,sNADIA,4EACJC,YAhC6BD,uFA2CFA,gmDA3G/CrU,mDAsGAA,iIAtGeA,sCAAY,4bC5BnC,iBAEA1G,GADAgC,SACAA,UAEA/B,aACA+B,yIAuEY0E,uCAGC,OACMA,sBAAUA,2BACbA,0CAGIA,8HAASA,wCAAiB,GAAM,GAEhCA,yCAAUA,8BAAKA,2DANhBA,0HASPA,uCAAqD,UACjDA,yBAA0BA,2BAC1BA,0CAGIA,kHAASA,gDAAuB,IAAQ,GAExCA,yCAAUA,8BAAKA,6DAzFnC,MA+FawnB,UAAoChsB,YAkB7CC,YACYgsB,EACAnf,GAERxM,QAHQC,eACAA,cAnBIA,UAAuB,OACtBA,gBAAa,IAAIqF,eAClBrF,aAAUA,KAAKuM,OAAOgE,QACtBvQ,gBAAcrC,GAAMqC,KAAKuM,OAAO5D,WAAWhL,GAC3CqC,gBAAa,CAACoG,EAAG7G,IAAMS,KAAKuM,OAAOiW,WAAWpc,EAAG7G,GAWjDS,gBAAa,IAAMA,KAAK0rB,QAAQlhB,KAAKmhB,uBAOpD,CAhBUxL,YACP,OAAOngB,KAAKuM,OAAOnE,KAAK9E,MAAMmI,IACjC,CAEU2U,UACP,MAAQ3U,OAAMC,YAAa1L,KAAKuM,OAAOnE,KAAK9E,MAC5C,OAAOmI,EAAkB,GAAXC,EAAgB,GACjC,EA7GLvM,sEA+FassB,GAA2BxnB,sJAA3BwnB,EAA2BvnB,sMA3D3BoU,sFAWIA,kFAUAA,mFA0BUA,utBAzDnBrU,0CAGC,cAKOA,iDAASuE,cAAY,GAJzBvE,wBAQAA,2BACAA,sCAA+B,cAMvBA,wDAAgB,MAAOuE,yBAAqB,GALhDvE,wBASAA,2BACAA,yCAKIA,wDAAgB,OAAQuE,yBAAqB,GALjDvE,wBASAA,+BAGRA,0CAAyD,WAE/BA,qDAAgCA,2BACtDA,wCACIA,mFAEJA,2BACAA,yEAaAA,yEAUJA,yCAhDYA,2EAUAA,4EAUcA,2GAElBA,gLAKiBA,mKAWHA,+vBCxF9B1E,SACAA,SADA,MAEAhC,cAEAgC,SACAA,qPAmBgB0E,0CAKIA,kHAASA,kCAAO,GAEhBA,yCAAUA,4CAAmBA,uDA8BrBA,8CAIIA,sBACJA,qDAHIA,kCAEAA,kMArBhBA,uCAGC,WACGA,yBAAoBA,2BACpBA,kDAAoD,mBAI5CA,mKAAsB,oGAG9BA,kEAGlB,GAE0BA,8EAMJA,2EAdIA,sEAAsB,mDASFA,8HAwBpBA,8CAIIA,sBACJA,qDAHIA,qCAEAA,wJAnBhBA,uCAC+C,WACpCA,8BAAKA,2BACZA,kDAAqC,mBAK7BA,2HAERA,iEAGlB,GAE0BA,8EAMJA,2EAdIA,wEAAsB,mDASFA,wHAyChCA,uCAA+D,qBAC3DA,yBAEAA,0HAwBJA,uCAGC,YACwCA,sBAAUA,2BAC/CA,gDAIIA,wIAAiBA,0CAAwB,iCAE5CA,8FAPoCA,0DAEjCA,8KAEC,6EAdbA,2CAIC,UACGA,yBAAyCA,2BACzCA,uEAaJA,qEAZyBA,mKAc7BA,uCAGC,eAC2CA,kHAASA,kCAAO,GAAxDA,yBAEAA,8BAzKZ,MA6Ka2nB,EAuCTlsB,YAEYmsB,EACAtf,EACA3M,EACAD,GAHAK,mBACAA,cACAA,YACAA,iBA3CLA,gBAAY,EACHA,aAAUA,KAAKuM,OAAOgE,QACtBvQ,cAAWA,KAAKuM,OAAOmB,SACvB1N,eAAYA,KAAKJ,KAAKksB,iBACtB9rB,YAASA,KAAKJ,KAAKmsB,cACnB/rB,UAAOA,KAAKuM,OAAOnE,KASnBpI,WAAQ,IAAMA,KAAK6rB,YAAYjc,UAC/B5P,gBAAcrC,GAAMqC,KAAKuM,OAAO5D,WAAWhL,GAC3CqC,gBAAa,CAACoG,EAAG7G,IAAMS,KAAKuM,OAAOiW,WAAWpc,EAAG7G,GACjDS,cAAYgsB,MA4BxBhsB,KAAKisB,YAAcjsB,KAAK6rB,WAC3B,CAvCUnc,eACP,OAAO1P,KAAKJ,KAAK8P,QACpB,CACUA,aAASc,GAChBxQ,KAAKJ,KAAK8P,SAAWc,CACxB,CAOU0b,yBACP,QAASlsB,KAAKL,UAAUwC,IAAI,+BAC/B,CACUkJ,oBACP,OACIrL,KAAKksB,sBACHlsB,KAAKL,UAAUwC,IAAI,0BAE5B,CAEUgqB,iBACP,OAAO,eACH,aACI1f,KAAKiM,MACL1Y,KAAKL,UAAUwC,IAAI,+BAAiC,IAG/D,EAlNLhD,+DA6KaysB,GAAoB3nB,iQAApB2nB,EAAoB1nB,qGAlJ2BoU,yFAQPA,oFAwDrBA,iFACgDA,iHAO5CA,uFASAA,qFAoBiBA,uFAEQA,wGAzF7BA,qFAiFiCA,qFAyBZA,iFAoBsBA,u9DA1JnErU,sCAEC,WAEOA,2CASJA,2BACAA,6DAA4DA,2BAC5DA,iCACJA,2BACAA,uCAGC,cAHDA,CAGC,UAEOA,wBAA4CA,2BAE5CA,yEA2BAA,yEA0BAA,wCAAkC,YAC9BA,0BAAgBA,2BAChBA,2EAEAA,6BAGJA,wCAAyC,YAAzCA,CAAyC,YAEjCA,0BAAsBA,2BACtBA,iDAGIA,0DAAiBuE,2BAAiC,GAErDvE,6BAELA,wCAA0B,YACtBA,0BAAoBA,2BACpBA,gDASJA,6BAGJA,0CAKJA,2BACAA,4CAAqC,WACjCA,0BAA+CA,2BAC/CA,wCAA+B,aAC3BA,0BAEAA,2BACAA,iDAGIA,0DAAiBuE,0BAAgC,kCAGrDvE,+BAGRA,6EAoBJA,2BACAA,8DA9IaA,oEAWTA,oEAMSA,2HA0BCA,4HA4BYA,mEAUNA,6EAA2B,oDAS3BA,kGAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,UAAhCA,CAAgC,iCAUtCA,wEAcEA,8HAAuC,oDAU9CA,0HAoBJA,4nBC7Kb,iBACA3G,WACAC,cACAgC,gGAuC4B0E,uCAGC,cACaA,6BAAIA,sDAElBA,qFAGIA,0FAGAA,iGA1BhBA,sCAIC,eAKOA,+HAASA,wCAAgB,GAEzBA,uCAGIA,yCAMAA,yCAKAA,yFAMJA,2BACAA,uCAA6C,aAErCA,sBACJA,2BACAA,wCAAiD,kBACbA,+BAAKA,2BACrCA,sCACIA,uBAKJA,iCAIZA,2CAKIA,+HAASA,4CAAoB,GAE7BA,0CAAUA,uBAIRA,uHA3COA,kFAKAA,4FAA2B,cAa5BA,sFAKIA,wJAaZA,sFAGUA,mIA3DtBA,qCAIIA,sEA8DJA,sEA5DyBA,0HAP7BA,uCACIA,qEAmEJA,kHAjESA,qHAA+B,qCAmEpCA,uCAIIA,0CACAA,qCAAsBA,mDAA0BA,oCADnCA,sFAKjBA,uCAGC,UAEOA,6EACJA,8BAvGhB,MA4GamoB,EAgBT1sB,YAAoB6M,iBAfJvM,cAAmB,GACnBA,eAAsB,GACrBA,cAAW,IAAIqF,eACfrF,eAAY,IAAIqF,eAEjBrF,YAAQ,mBAAc,CAClCA,KAAKuM,OAAOgE,QACZvQ,KAAKuM,OAAOkR,mBACb7c,MACC,SAAI,GAAIyrB,YAAY3rB,KAChBA,EAAEsN,OAAQtQ,IAAO2uB,GAAYrsB,KAAK8b,YAAYpe,EAAE4L,OAGxCtJ,aAAUA,KAAKuM,OAAOmE,OAEY,CAE3CoL,YAAYwQ,GACf,OAAOtsB,KAAK+b,UAAUrZ,SAAS4pB,EAClC,CAEMC,WAAWpjB,GACdnJ,KAAKkc,SAASlM,KAAK7G,EACtB,EApILhK,4DA4GaitB,GAAiBnoB,sGAAjBmoB,EAAiBloB,oLA9FKoU,oFACmBA,4EAC1C,grDAFJrU,6DAAkCA,2BAClCA,0FAEAA,2BACAA,+EAqEAA,wFASAA,yIA/EAA,6IACeA,sHAAkC,kYCvBzD,iBACA3G,WACAC,cAEAgC,mLAkBQ0E,yCAGIA,4JAAe,qMAIlBA,uEALGA,wCAAe,cAAfA,CAAe,kBAAfA,CAAe,mDAAfA,CAAe,4EAkBPA,8CAIIA,sBACJA,qDAHIA,kCAEAA,mIAxCxB,MAmEauoB,UAAyB/sB,YAgDlCC,YAAoB6M,GAChBxM,QADgBC,cA/CJA,mBAAwB,EACvBA,cAAW,IAAIqF,eAEhBrF,WAAQA,KAAKuM,OAAOkR,iBACpBzd,aAAUA,KAAKuM,OAAOmE,QAE/B1Q,UAAO,EACPA,YAAS,CAAEqG,EAAG,GAAK9B,EAAG,IAGbvE,gBAAcrC,GAAMqC,KAAKuM,OAAO5D,WAAWhL,GAM3CqC,YAASA,KAAKuM,OAAOkR,iBAAiB7c,MAClD,SAAKyZ,IACD,YACIA,EAAMtL,IAAK5F,GAASA,EAAKU,MACzB,QAKI7J,aAAUA,KAAKuM,OAAOkR,iBAAiB7c,MACnD,SAAKyZ,GACDA,EAAMtL,IAAK5F,IAAU,CACjBG,GAAIH,EAAKM,QAAUN,EAAKG,GACxBkK,OAAQ,CAAC,WAAY,WACrBC,SAAU,IAAMzT,KAAKusB,WAAWpjB,QAK5BnJ,cAAWA,KAAKuM,OAAOkR,iBAAiB7c,MACpD,SAAKyZ,GACDA,EAAMtL,IAAK5F,IAAU,CACjB3G,SAAU2G,EAAKM,QAAUN,EAAKG,GAC9ByK,QAAS,maAUpB,CArCUiR,cACP,OAAOhlB,KAAKsT,OAAO7J,QAAU,EAChC,CAqCDxJ,WACID,KAAK6I,aACD,gBACA7I,KAAKysB,OAAO1jB,UAAW0jB,IACdA,EAAOtU,KAAMzX,GAAMA,EAAE4I,KAAOtJ,KAAKsT,OAAOhK,MACzCtJ,KAAKsT,MAAQmZ,EAAO,MAInC,CAEMF,WAAWpjB,GACdnJ,KAAKkc,SAASlM,KAAK7G,EACtB,CAEMujB,QAAQC,GACX3sB,KAAKiU,KAAOsM,KAAKqM,IAAI,GAAKrM,KAAKsM,IAAI,GAAIF,GAC1C,CAEMG,WACH9sB,KAAKiU,KAAO,EACZjU,KAAK+sB,OAAS,CAAE1mB,EAAG,GAAK9B,EAAG,GAC9B,EA7ILpF,2DAmEaqtB,GAAgBvoB,sGAAhBuoB,EAAgBtoB,q4BAnDrBD,0CAQAA,sCAEC,qBAFDA,CAEC,kBAOWA,sEAGAA,6EAMJA,+BAGRA,sCAGC,cACmCA,iDAASuE,UAAe,IAAfA,OAAmB,GACxDvE,yCAAUA,gCAAOA,6BAErBA,kCACAA,0CAGIA,iDAASuE,kBAAgB,EAAI,KAAK,GAElCvE,0CAAUA,kCAAQA,6BAEtBA,kCACAA,0CAA8BA,iDAASuE,YAAU,GAC7CvE,0CAAUA,iCAAOA,sCA7CpBA,+CAgBOA,mEAAmB,mDAICA,2kBC1CxC,oBACA1E,SACAA,0MAsDoB0E,6CAKIA,uHAAaA,6CAAuB,EAApCA,CAAqC,wIAGxCA,uEALGA,kDAAyB,yBADzBA,wIAuBRA,0CAKIA,sJAAqB,KAAI,GAL7BA,yBASAA,2FA+CJA,4CAGIA,+JAEJA,uEAHIA,sDAnIH9E,eAAe,kBAE5B,MAwIa6tB,EAaTttB,YACYutB,EACAttB,EACAiY,EAEAkG,GAJA9d,mBACAA,iBACAA,mBAEAA,aAhBLA,cAA2B,GAC3BA,UAAO,OAoBVA,KAAKiQ,SAAW,IAAK6N,EAAMqM,OAAS,IACpCnqB,KAAK4X,YAAYjP,WAAWmV,EAAMvN,QACrC,CApBU+L,mBACP,OAAOtc,KAAKiQ,SAASlB,IAAKrO,GAAMA,EAAE4I,IAAIgB,KAAK,IAC9C,CAEUyR,gBACP,OAAO/b,KAAKL,UAAUwC,IAAchD,iBAAiB,EACxD,CAgBMud,WAAWpT,GACd,OAAOA,GAAMtJ,KAAKsc,aAAa5Z,SAAS4G,EAC3C,CAEMqT,YAAY1O,EAAoB2O,GACnC,MAAM5T,EAAOhJ,KAAKiQ,SAASjC,OAAQtN,GAAMA,EAAE4I,KAAO2E,EAAK3E,IACnDsT,GAAO5T,EAAK6T,KAAK5O,GACrBjO,KAAKiQ,SAAWjH,GACXhJ,KAAK8d,MAAMvN,QAAQ6R,OAASxF,GAAO5c,KAAKitB,YAAYtpB,MAAM,CAACsK,GACnE,CAEM6O,gBAAgB7O,GACnB,MAAM8O,EAAW/c,KAAK+b,UACHgB,EAASra,SAASuL,EAAK3E,IAOtCtJ,KAAKL,UAAUqd,gBACX7d,eACA4d,EAAS/O,OAAQtN,GAAMA,IAAMuN,EAAK3E,KAPtCtJ,KAAKL,UAAUqd,gBAAgB7d,eAAc,IACtC4d,EACH9O,EAAK3E,IAQhB,EA5LLnK,mEAwIa6tB,GAAwB/oB,iLAiBrB6C,mBAAe,kDAjBlBkmB,EAAwB9oB,gGA7HZoU,sFA6ERA,wFAcwCA,wFAGNA,4EAC/B,kDAaQA;uIADmBA,4EACnB4U,YAzCX5U,onEA1ETrU,sCAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,8BAAKA,6BAEnBA,2DAAkBA,2BAClBA,sCAA4D,cAMpDA,wDAAgB,KAAK,GAErBA,8BACJA,2BACAA,0CAKIA,wDAAgB,MAAM,GAEtBA,gCACJA,+BAGRA,wCAGIA,2CAGAA,uCAEC,8BAGOA,kEACHA,2BACDA,gDASJA,2BACAA,iDAMIA,yDAAgBuE,4BAA8B,EAA9CvE,CAA+C,8BAElCuE,8BAA0B,EAFvCvE,CAA+C,sCAG1B,IAAI,GAC5BA,6BAELA,2CAGIA,6CAUAA,qEASAA,6BAEJA,2CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAOqCA,oCAAUA,2BACpCA,kEAA6CA,+BAGrDA,gEAEAA,2BACAA,2CAIIA,iDAASuE,2BAAwBA,oDAA0B,GAE3DvE,wCAA+B,kBACDA,uBAExBA,2BACFA,kEAGAA,mCAKhBA,oIA7GgBA,2EASAA,4EAkBAA,+DAGCA,wEAAuB,cAY5BA,wEAA2B,uBAF3BA,2CAAkB,wEAAlBA,CAAkB,gFAkBjBA,oEAUDA,qEADAA,sDAaAA,+EAUJA,8FAIIA,gHADAA,gDAK8BA,2HAM1BA,ybCnIxB1E,eACAhC,WAQAE,GAFA8B,QAEAA,UACA7B,WAEAC,WACAC,WACAC,2CAEA,MAGasvB,EAITztB,YACYE,EACAmL,GADA/K,YACAA,eALLA,mBAAe,EACfA,oBAAgB,CAKnB,CAESotB,UACT/S,QACAjQ,OACAiZ,SACA9X,YACAE,SAOH,gCACG,GAAIrF,EAAKinB,gBAAkBjjB,EACvB,OAAO,iBAAY,6CAEnBA,EAAOA,IAAQ,mBAEnBiZ,EAASA,GAAU,GACnB,MAAM/P,EAAQlN,EAAKxG,KAAKsY,YACpBmC,EAAM,GAAGxQ,gBAAgB4X,MAAQpH,EAAM,GAAGxQ,KAAO,CAACwQ,EAAM,GAAGxQ,MAAMP,KAErE,IAAIqC,EAAyBvF,EAAK2E,QAAQP,KACtCia,+BAEAV,QAAgBxiB,QAAQmjB,KAAK,CAC7B/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAgC,SAAbA,EAAE2iB,SACjCxiB,YACL8K,EACKG,cACAlL,MAAK,SAAKF,GAAM,OAChBG,cAuBT,IArBKkjB,IACLpY,EAAIhI,QACJgI,EAAMvF,EAAK2E,QAAQP,KAAK8iB,4BAA2B,CAC/C/sB,KAAM,CACF6J,OACAiQ,QACA5O,KAAMA,EAAO,IAAIgB,KAAKhB,GAAQ,IAAIgB,KAClC4W,SACA/P,QACAiW,aAAcnjB,EAAKmjB,gBAG3BxF,QAAgBxiB,QAAQmjB,KAAK,CACzB/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAgC,SAAbA,EAAE2iB,SACjCxiB,YACL8K,EACKG,cACAlL,MAAK,SAAKF,GAAM,OAChBG,eAEJkjB,GAAS,OAId,GAFAtY,EAAOE,EAAII,kBAAkBN,MAAQA,EACrC4X,EAAS1X,EAAII,kBAAkBsX,QAAUA,IAFzCjZ,EAAOuB,EAAII,kBAAkB3B,MAAQA,GAIjCuB,SAAIhI,SACG,iBAAY,8CAYvB,GAVAgI,EAAII,kBAAkB2E,QAClB,gDACmB,mBAAc,CACjC9H,KAAM,OACNkR,cAAc,kBAAY,gBAAWrO,GAAQ,IAAIgB,OACjDsN,YAAY,kBAAY,cAAStO,GAAQ,IAAIgB,SAC9C5L,aACwBmN,OACtBjQ,GAAMA,EAAEymB,WAAW7K,gBAAkBvP,EAAKtH,MAAM6W,gBAEtC1Q,OACX0C,SAAIhI,SACG,iBACH,mEAGRgI,EAAII,kBAAkB2E,QAAU,kBAChC,MAAM7E,EAAQ,CAACzB,KAAUmB,GAAa,IACtC,aAAMhK,QAAQoU,IAAI,CACd0E,EAAMtL,IAAI,CAAC5F,EAAMob,IACbne,EAAKmnB,gBACDpkB,EACAiB,EACAqB,EAAKiY,YAAa,IAAIjX,MAAOiX,UAC7BL,EACAxX,EAAM0Y,QAIlB,mBAAc,4BACd5Y,EAAIhI,SACG,CAlFV,IAmFA,CAEa4pB,gBACVpkB,EACAiB,EACAqB,EACA4X,EACAmK,EAAiB,MAAI,gCAErB,MAAMhrB,EAAW,GAAG2G,EAAKU,MAAML,QAAQL,EAAKG,KACtCgK,EAAQlN,EAAKxG,KAAKsY,YACpB/O,EAAKU,gBAAgB4X,MAAQtY,EAAKU,KAAO,CAACV,EAAKU,MAAMP,KAEnDM,EAAQT,EAAKU,MAAMP,GACnB,CAACH,EAAKU,MAAMP,GAAIgK,GAAOxJ,WACvB,CAACwJ,GAAOxJ,WACR2jB,EAAe,CACjBnI,eAAe,kBAAY,gBAAW7Z,IACtCsa,QAASyH,GAAUlkB,IAAMc,EAAKd,GAC9B0c,UAAWwH,GAAUhkB,MAAQY,EAAKZ,KAClCgb,WAAYgJ,GAAU1qB,OAASsH,EAAKtH,MACpC0iB,YAAajF,KAAKC,OAAM,cAAS/U,GAAMiY,UAAY,KACnDra,SAAUF,EAAKG,GACfC,WAAYJ,EAAKK,KACjB+M,MAAO8M,EACP3Z,YAAalH,EACboH,QACAD,aAAc,OACdkZ,eAAgB,CACZpZ,OAAQN,GAAMM,QAAUN,GAAMG,GAC9B4Y,OAAQ/Y,EAAK+Y,OACbsL,SAAUA,GAAU1qB,QAG5B,OAAO,iBAAY2qB,GAAqB5sB,WA3BnB,IA4BxB,EA9IL1B,uDAGaguB,GAAYlpB,mIAAZkpB,EAAY/d,QAAZ+d,EAAY,qBAFT,sIClBhB,iBACA5vB,WACAC,WAEAC,WACAC,WAIAG,GAHA0B,SACAA,SAEAA,UACAzB,kNA+BgCmG,8CAIIA,sBACJA,qDAHIA,qCAEAA,kMAnBhBA,uCAAyD,cACrDA,8BACaA,gCAAcA,mDAE3BA,kDAAqC,mBAG7BA,4HAEhCA,uDACE,GAK8BA,8EAMJA,4EAfIA,iFAA+B,mDAUXA,oKAmDxBA,8CAGIA,+HAASA,wCAAgB,GAEzBA,uCAAyC,SAChCA,sBAAeA,2BACpBA,uCACIA,sBAMJA,2DAZJA,uCAISA,+DAEDA,yKA8BZA,8CAGIA,+HAASA,wCAAgB,GAEzBA,uCAAyC,SAChCA,sBAAeA,2BACpBA,uCACIA,sBAMJA,2DAZJA,wCAISA,+DAEDA,yKAlHxBA,wCACIA,yCAwBAA,uCAA2B,cACvBA,8BAA2BA,gCAAcA,mDACzCA,2CAIJA,2BACAA,uCAAyC,WAAzCA,CAAyC,cAEjCA,+BACcA,iCACdA,mDACAA,4CAIJA,2BACAA,wCAAwC,eACpCA,+BACaA,iCAAcA,mDAE3BA,gDAKJA,6BAEJA,wCAA2B,eACvBA,+BACiBA,iCAAcA,mDAE/BA,mDAAqC,eAM7BA,mHAASA,kEAAqC,GALlDA,6BASJA,0DACIA,iDAiBJA,6BAEJA,wCAA2B,eACvBA,+BACiBA,iCACjBA,mDACAA,mDAAqC,eAO7BA,mHAASA,gEAAmC,GANhDA,2BASAA,qEAC8BA,6BAGlCA,0DACIA,iDAiBJA,6BAEJA,wCAA2B,eACvBA,0BAAsCA,2BACtCA,mDACIA,qCAMJA,6BAEJA,wCAA2B,eACvBA,0BAAyCA,2BACzCA,mDACIA,qCAMJA,wIAjJWA,2CACaA,sGAgDhBA,2EAeAA,qEAKiBA,+EA8BjBA,qEAQiBA,+IApHrCA,sCAGC,UAHDA,CAGC,UAIOA,wBAAwCA,6BAE5CA,0CAoJAA,sCAEC,eAKOA,mHAASA,uCAAY,GAJzBA,yBAQAA,4EA/JGA,yFAVfA,uCACIA,sEA2KJA,2GAzKSA,gGAA0B,8EA2K/BA,uCAGC,WAHDA,CAGC,WAEOA,yBAGAA,2BACAA,kCACAA,gEAEIA,uFAOJA,qDAEJA,wCAEC,YAFDA,CAEC,gBAOWA,kHAASA,mCAAQ,GAHrBA,0BAOAA,2BACAA,2CAGIA,kJAAgB,EAAK,GAHzBA,0BAOAA,6EAlCJA,sLAWAA,4JAAI,wFAAJA,CAAIA,wFAAJA,CAAIA,wFAAJA,kDA6BRA,uCAIIA,0CACAA,2DAA6BA,oCADhBA,gEArO7B,MA4OaypB,UAAmCjuB,YAmB5CC,YACYuI,EACAtI,EACAC,GAERG,QAJQC,gBACAA,iBACAA,YArBKA,UAAO,IAAIqF,eAErBrF,WAAO,EAEEA,aAAUA,KAAKiI,SAASyI,QACxB1Q,eAAYA,KAAKJ,KAAKksB,iBACtB9rB,kBAAeA,KAAKiI,SAASgC,aACtCjK,cAAW,GACXA,uBAAoB,EAgB1B,CAdU0P,eACP,OAAO1P,KAAKJ,KAAK8P,QACpB,CAEUtH,WACP,OAAOpI,KAAKiI,SAASG,IACxB,CAUYnI,WAAQ,gCACjB0tB,EAAKC,MAAO,QACND,EAAKE,eACXF,EAAKvlB,KACAjG,IAAI,YACJ2rB,cAAc,CAAC1oB,aAAWuZ,SAAUvZ,aAAWtC,QACpD,MAAMsX,EAAWuT,EAAKhuB,UAAUwC,IAAI,qBAAuB,GAC3D,UAAW8L,KAAQmM,EAAU,CACzB,MAAOtX,EAAO0G,EAAMse,GAAW7Z,EAAKlL,MAAM,KAC1C4qB,EAAKvT,SAASyC,KAAK,CAAE/Z,QAAO0G,OAAMse,WACrC,CACD6F,EAAKI,eAAe,IACpBJ,EAAK9kB,aACD,QACA8kB,EAAKvlB,KACAjG,IAAI,YACJ2G,aAAaC,UAAWrI,GAAMitB,EAAKI,eAAertB,KAE3DitB,EAAK9kB,aACD,OACA8kB,EAAKvlB,KACAjG,IAAI,cACJ2G,aAAaC,UAAWrI,GAAMitB,EAAKI,eAAertB,IAtB1C,IAwBpB,CAEMstB,WAAW/f,GACdjO,KAAKoI,KAAKgB,WAAW,CACjBC,SAAU4E,EAAKnL,MACfyG,WAAY0E,EAAKzE,KACjBse,QAAS7Z,EAAK6Z,SAErB,CAEMiG,eAAe/f,GAClB,MAAMnQ,EAAImQ,EAAO2L,cACjB3Z,KAAKiuB,kBAAoBjuB,KAAKoa,SAASpM,OACnC,EAAGlL,QAAO0G,OAAMse,aACZhlB,EAAM6W,cAAcjX,SAAS7E,IAC7B2L,EAAKmQ,cAAcjX,SAAS7E,IAC5BiqB,EAAQnO,cAAcjX,SAAS7E,GAE1C,CAEMqwB,SACHluB,KAAKmuB,KAAKne,OACVhQ,KAAK4tB,MAAO,CACf,CAEYQ,aAAU,gCAEnB,GADAT,EAAKvlB,KAAKsM,oBACLiZ,EAAKvlB,KAAKiC,MACX,OAAO,iBACH,8BAA6B,sBAAiBsjB,EAAKvlB,UAG3D,MAAQiB,WAAUE,aAAYue,WAAY6F,EAAKvlB,KAAK9E,MAC9C+qB,EAAkB,GAAGhlB,KAAYE,KAAcue,IAC/CwG,EAAeX,EAAKhuB,UAAUwC,IAAI,qBAAuB,GAC/DwrB,EAAKhuB,UAAUqd,gBAAgB,mBAAoB,IAC5CsR,EAAatgB,OAAQtN,IAAOA,EAAEgC,SAAS2G,IAC1CglB,IAEJ,MAAM/qB,EAAQqqB,EAAKvlB,KAAK9E,MACxBqqB,EAAKvlB,KAAKgB,WAAW,CACjBI,KAAMlG,EAAMiG,WACZgC,UAAW,CACP,IAAIK,OAAK,CACLpC,KAAMlG,EAAMiG,WACZzG,MAAOQ,EAAM+F,SACbklB,aAAcjrB,EAAMwkB,aAIhC6F,EAAK7N,cAAgB6N,EAAK1lB,SAAS8N,WAAWpT,MAAOpD,IACjD,uBAAYA,GACNA,UAEJouB,EAAKE,eACXF,EAAKC,MAAO,CA9BO,IA+BtB,CAEaC,eAAY,sCAChBF,EAAK/tB,KAAKe,YAAYC,MAAK,WAAOF,GAAMA,IAAIG,YAClD8sB,EAAK1lB,SAASU,WAAW,CAAEC,KAAM,YACjC+kB,EAAKvlB,KAAKgB,WAAW,CAAEQ,MAAO,CAAC+jB,EAAK/tB,KAAK8P,UAAUpG,KAH7B,IAIzB,EA7VLnK,qEA4OauuB,GAA0BzpB,4MAA1BypB,EAA0BxpB,gMAjOOoU,2FA+JzBA,iGAnI0BA,+EAAI,oCAAO,sCAQDA,qFACf,qCAAO,uCAShBA,mFAAQ,qCAAO,uCAWnBA,uFAAY,qCAAO,uCAiCQA,yFACf,qCAAO,uCAafA,sGAwBsBA,oFAWNA,6FAtIpBA,mFAAQ,oCAAO,uCAUCA,6FA4JCA,mGAEtB,qCAGIA,oGAEJ,sCAAG,iCAED,kDAEF,yCACA,uCACA,sCAcCA,4FAQAA,mGAaDA,shFAnOhBrU,iDA6KAA,0FAgDAA,iIA7NeA,uCAAa,mgBCfpC,iBAOA3G,cACAiC,0GAiBgB0E,uFACIA,2KAXZA,uCACIA,0CASIA,mDAKAA,yCAGIA,kHAASA,uCAAY,GAGrBA,yCAAUA,mCAAUA,6BAExBA,yCAKIA,kHAASA,2CAAgB,GAGzBA,yCAAUA,sBAERA,+BAGVA,sCAAsD,eAAtDA,CAAsD,WAG1CA,uBACJA,6BAEJA,+BACAA,2CAAmC,YAC/BA,0BAA4CA,2BAC5CA,wCAAyC,eAC3BA,gCAAMA,2BAChBA,6DAAmCA,6BAEvCA,wCAAyC,eAC3BA,sCAAYA,2BACtBA,mCACIA,uBACJA,6BAEJA,wCAAyC,eAC3BA,+BAAKA,2BACfA,mCACIA,uBAKJA,+BAGRA,+BACAA,4CAAsC,YAClCA,0BAAoDA,2BACpDA,wCAAyC,eAC3BA,gCAAMA,2BAChBA,6DAAsBA,6BAE1BA,wCAAyC,eAC3BA,oCAAUA,2BACpBA,6DAA0BA,6BAE9BA,wCAAyC,eAC3BA,8BAAIA,2BACdA,6DAAkBA,+BAG1BA,4CAIIA,+CAMJA,6BAEJA,wCAA2D,gBAKnDA,qIAA2BA,sDAAyB,GAEpDA,wCAA8C,kBACfA,uBAEzBA,2BACFA,mCACIA,uBACJA,iCAIhBA,gFA3GQA,4GAAsC,uDAAtCA,CAAsC,wDAAtCA,CAAsC,sDAAtCA,CAAsC,kEAQjCA,wGAcDA,sEAAyB,uBAKfA,2FAQNA,oGAQmCA,6FAK/BA,8IAMAA,sMA8BJA,kEAAe,sBAAfA,CAAe,6CASnBA,qEAK+BA,gFAIvBA,oIAOhBA,uCAGC,UACGA,yBAEAA,8BA1HhB,MA2IauqB,EAwBT9uB,YAAoBE,eAtBJI,UAAe,EACfA,aAAkB,EAEjBA,kBAAe,IAAIqF,eACnBrF,WAAQ,IAAIqF,eACZrF,eAAY,IAAIqF,eAE1BrF,aAAU,GACVA,cAA4B,EAcc,CAZtCsT,YACP,OAAOtT,KAAKJ,KAAKsY,YAAY,CAAClY,KAAKwO,OAAO3E,KAAKP,MAAQtJ,KAAKwO,OAAO3E,IACtE,CAEU6F,eACP,OAAO1P,KAAKJ,KAAKsS,UAAUiG,KACtBzX,GACGV,KAAKwO,OAAO3E,KAAKP,KAAO5I,EAAE4I,IAC1BtJ,KAAKwO,OAAO3E,KAAKC,YAAcpJ,EAAE4I,GAE5C,CAIM+hB,YAAYC,GACXA,EAAQ9c,OAASxO,KAAKwO,OACtBxO,KAAKyuB,gBAEZ,CAEOA,iBACJzuB,KAAKglB,QAAUhlB,KAAKsT,OAAO7J,OAC3BzJ,KAAK0N,SAAW,CACZ,CACIlL,SAAUxC,KAAKwO,OAAO/E,OACtBsK,QAAS5V,mBAGpB,EAnLLgB,uEA2IaqvB,GAA4BvqB,uGAA5BuqB,EAA4BtqB,yQA5FgBoU,oFAGzBA,qHAqByBA,4FAGzBA,2FAIAA,+FAIAA,uFAsCuBA,ysCArH/CrU,mDAgHAA,iIAhHeA,uCAAa,mcCfpC,iBAEAzG,GADA+B,SACAA,UAGA5B,GAFA4B,SACAA,QACAA,UACA3B,gHAuCYqG,uCAMIA,sBACJA,qEADIA,4IAYJA,uCAAkE,OAC3DA,sBAAUA,2BACbA,0CAGIA,8HAASA,2CAAmB,GAE5BA,yCAAUA,8BAAKA,2DANhBA,2DAxDnB,MA2FayqB,UAA4CjvB,YAkBrDC,YACYgsB,EACA9T,EACAhY,GAERG,QAJQC,eACAA,mBACAA,YApBIA,UAAuB,OACtBA,gBAAa,IAAIqF,eAClBrF,aAAUA,KAAK4X,YAAYrH,QACpCvQ,cAAmB,GAWVA,iBAAc,IAC1BA,KAAK0rB,QAAQlhB,KAAKmkB,+BAQrB,CAlBUxO,YACP,OAAOngB,KAAK4X,YAAYxP,KAAK9E,MAAMmI,IACtC,CAEU2U,UACP,MAAQ3U,OAAMC,YAAa1L,KAAK4X,YAAYxP,KAAK9E,MACjD,OAAOmI,EAAkB,GAAXC,EAAgB,GACjC,CAaMzL,WACHD,KAAK6I,aACD,OACA7I,KAAKuQ,QAAQxH,UAAU,EAAG6lB,cACtB5uB,KAAK6uB,gBAAgBD,IAGhC,CAEYE,cAAcC,GAAY,gCACnC,MAAMzrB,QAAc5C,EAAKkX,YAAYrH,QAAQ3P,MAAK,UAAK,IAAIC,YAC3DH,EAAKkX,YAAYjP,WAAW,IACrBrF,EACHoK,UAAWpK,EAAMoK,UAAY,IAAIM,OAAQtN,GAAMA,IAAMquB,IAJtB,IAMtC,CAEOF,gBAAgBD,EAAqB,IAEzC,MAAM3gB,EAAOqF,KADM1T,KAAKsY,YAAY0W,IACd5uB,KAAKJ,KAAK8P,SAChC1P,KAAKwC,SAAWyL,GAAMoK,cAAgBpK,GAAMzE,MAAQ,EACvD,EA1ILrK,8EA2FauvB,GAAmCzqB,yMAAnCyqB,EAAmCxqB,+MAjFnCoU,sFAWIA,kFAUAA,mFAqBuDA,iFACnD,61BAlDbrU,0CAAmE,cAK3DA,iDAASuE,eAAa,GAJ1BvE,wBAQAA,2BACAA,sCAA+B,cAMvBA,wDAAgB,MAAOuE,yBAAqB,GALhDvE,wBASAA,2BACAA,yCAKIA,wDAAgB,OAAQuE,yBAAqB,GALjDvE,wBASAA,+BAGRA,0CACIA,wCAQAA,wCACIA,qDACJA,2BACAA,wCACIA,mFAEJA,2BACAA,iGAEAA,2BACAA,yEAUJA,yCA/CYA,2EAUAA,4EAaHA,mEAKDA,qHAGAA,gLAKJA,oJACkCA,qyBC9D9C1E,SACAA,SACAA,QAFA,MAGA9B,cACA8B,oPAOgB0E,0CAIIA,kHAASA,kCAAO,GAEhBA,yCAAUA,4CAAmBA,uDAuBrBA,8CAIIA,sBAEJA,qDAJIA,qCAEAA,6MAuDhBA,uCAGC,YACwCA,sBAAUA,2BAC/CA,gDAGIA,wIAAiBA,6CAA2B,iCAE/CA,8FANoCA,0DAGjCA,0JAAuD,6EAbnEA,2CAIC,UACGA,yBAA+CA,2BAC/CA,uEAYJA,qEAVyBA,mKAY7BA,uCAGC,eAC2CA,kHAASA,kCAAO,GAAxDA,yBAEAA,8BAjHZ,MA+Ha+qB,EAgCTtvB,YAEYmsB,EACAlsB,EACA+hB,EACA9hB,GAHAI,mBACAA,iBACAA,aACAA,YApCLA,gBAAY,EACHA,aAAUA,KAAK0hB,MAAMnR,QAErBvQ,YAASA,KAAKJ,KAAKqvB,WAAWruB,MAC1C,SAAKorB,IACD,UAAWkD,KAAOlD,EAAG,CACjB,MAAMxb,EAAMxQ,KAAKJ,KAAKsS,UAAUiG,KAC3BzX,GAAMA,EAAE4I,KAAO4lB,EAAIplB,WAEvBolB,EAAY1e,IAAMA,GAAK6H,cAAgB7H,GAAKhH,MAAQ,EACxD,CACD,OAAOwiB,KAGChsB,cAAWA,KAAK0hB,MAAMhU,SAEtB1N,WAAQ,IAAMA,KAAK6rB,YAAYjc,UAC/B5P,gBAAcrC,GAAMqC,KAAK0hB,MAAM/Y,WAAWhL,GAqBtDqC,KAAKisB,YAAcjsB,KAAK6rB,WAC3B,CApBUrb,UACP,OAAOxQ,KAAKJ,KAAK8P,QACpB,CAEUtH,WACP,OAAOpI,KAAK0hB,MAAMtZ,IACrB,CAEU+C,mBACP,OAAOnL,KAAKL,UAAUwC,IAAI,4BAA8B,GAC3D,CAYYgtB,cAAcJ,EAAcnS,GAAc,gCACnD,MAAQlP,kBAAmB0hB,EAAK7e,QAAQ3P,MAAK,UAAK,IAAIC,YAChDwuB,GAAY3hB,GAAY,IAAIM,OAAOtN,GAAKquB,IAASruB,GACnDkc,GAAOyS,EAASxS,KAAKkS,GACzBK,EAAKzmB,WAAW,CAAE+E,SAAU2hB,GAJuB,IAKtD,EA9KLlwB,uEA+Ha6vB,GAA4B/qB,iQAA5B+qB,EAA4B9qB,4GAjHmBoU,0FAQPA,oFAENA,oFAqBJA,+EAAI,qCAAO,uCACoBA,iHAMrBA,qFAAU,qCAAO,uCASnBA,mFAAQ,qCAAO,uCAYbA,uFAEQA,wGAiBRA,uFAmBsBA,0nDA5GnErU,sCAAuE,WAE/DA,2CAQJA,2BACAA,6DAA6DA,2BAC7DA,iCACJA,2BACAA,uCAGC,cAHDA,CAGC,UAEOA,wBAA4CA,2BAC5CA,wCAAgD,eAC5CA,0BAAmCA,2BACnCA,mDAAoD,oBAI5CA,0DAAiBuE,0BAAgC,kCAKjDvE,gFAOJA,+BAGRA,wCAAkC,eAC9BA,+BAA2BA,iCAAcA,mDACzCA,2EAEAA,6BAEJA,wCAAyC,YAAzCA,CAAyC,eAEjCA,+BAAuCA,iCAAcA,mDACrDA,iDAGIA,0DAAiBuE,2BAAiC,GAErDvE,6BAELA,wCAA0B,eACtBA,+BAAmCA,iCAAcA,mDACjDA,gDAOJA,+BAGRA,4CAAqC,WACjCA,0BAA+CA,2BAC/CA,wCAA+B,aAC3BA,0BAEAA,2BACAA,iDAGIA,0DAAiBuE,0BAAgC,kCAGrDvE,+BAGRA,6EAmBJA,2BACAA,0DAnGaA,oEAWTA,oEASgBA,8HAAuC,mDAAvCA,CAAuC,mFAAvCA,CAAuC,eAOnBA,mGAoBpBA,8EAA2B,oDAU3BA,gHAA0B,sBAe9BA,8HAAuC,oDAU9CA,0HAmBJA,uoBCpHb,iBAEA3G,WACAC,cACAgC,gGA6B4B0E,uCAGC,cACaA,6BAAIA,sDAElBA,qFAGIA,0FAGAA,iGA3BhBA,sCAKC,eAKOA,+HAASA,yCAAkB,GAE3BA,uCAGIA,yCAMAA,yCAKAA,yFAMJA,2BACAA,uCAAuB,YAEfA,sBACJA,2BACAA,wCAAiD,kBACbA,+BAAKA,2BACrCA,mCACIA,uBAKJA,6BAEJA,wCAAiD,kBAExCA,gCAAMA,2BAEXA,6DAKAA,iCAIZA,2CAKIA,+HAASA,4CAAqB,GAE9BA,0CAAUA,uBAIRA,uHApENA,4DAcaA,kFAKAA,4FAA4B,cAa7BA,yFAKIA,0JAgBJA,sGAQRA,sFAGUA,mIAvEtBA,qCAIIA,uEA0EJA,sEAxE0BA,2HAP9BA,uCACIA,qEA+EJA,iHA7ESA,sHAAgC,qCA+ErCA,uCAGC,UACGA,yBAEAA,oDAIJA,uCAIIA,0CACAA,8DAAsDA,oCADzCA,gEAvG7B,MAuHaqrB,EAiBT5vB,YAAoBgiB,gBAhBJ1hB,YAAiB,GACjBA,cAAmB,GACnBA,eAAsB,GACrBA,cAAW,IAAIqF,eACfrF,eAAY,IAAIqF,eAEjBrF,aAAS,mBAAc,CACnCA,KAAK0hB,MAAMnR,QACXvQ,KAAK0hB,MAAMjE,mBACZ7c,MACC,SAAI,GAAIyrB,YAAY3rB,KAChBA,EAAEsN,OAAQtQ,IAAO2uB,GAAYrsB,KAAK8b,YAAYpe,EAAE4L,OAGxCtJ,aAAUA,KAAK0hB,MAAMhR,OAEY,CAE1CoL,YAAYyT,GACf,OAAOvvB,KAAK+b,UAAUrZ,SAAS6sB,EAClC,CAEMC,YAAYhhB,GACfxO,KAAKkc,SAASlM,KAAKxB,EACtB,EAhJLrP,oEAuHamwB,GAAyBrrB,sGAAzBqrB,EAAyBprB,mNApHHoU,oFACmBA,4EAC1C,oDA0D4BA,4EACJ,2CA6BmBA,mIAWZA,8vDArGnCrU,6DAAkCA,2BAClCA,0FAEAA,2BACAA,+EAiFAA,wFAUAA,wIA5FAA,8IACeA,gGAA0B,wXCZjD,uEAiEgBA,wDAIAA,4CACIA,+BACJA,4BArEhB,MA2EawrB,EAIT/vB,YAA8Coe,eAAc,CAHjD7N,eACP,OAA+B,IAAxBjQ,KAAK8d,MAAM7N,QACrB,EA9EL9Q,2EA2EaswB,GAAgCxrB,8BAIrB9F,oBAAgB,kDAJ3BsxB,EAAgCvrB,mnEAxErCD,sCACIA,mEAMC,SAEOA,kCAMJA,2BACAA,qCAAM,cAUEA,qCAGE,oBAHFA,CAGE,eAHFA,CAGE,qBAHFA,CAGE,mBAHFA,CAGE,sBAHFA,CAGE,gBAHFA,CAGE,iBAyBNA,+BAGRA,sEAGIA,0CAIAA,+CAGJA,oCALSA,qEAEgDA,uOCtErE,iBACA3G,WAGAE,GAFA+B,SAEAA,UAEA9B,sLAKQwG,yCAKIA,4JAAe,qMAElBA,uEALGA,wCAAe,mDAAfA,CAAe,iDAAfA,CAAe,cAAfA,CAAe,6CAWPA,8CAIIA,sBACJA,qDAHIA,kCAEAA,yFApBxB,MA4DayrB,UAAuCjwB,YA2ChDC,YAAoBkY,GAChB7X,QADgBC,mBA1CJA,cAAqB,GACrBA,mBAAwB,EACvBA,cAAW,IAAIqF,eAEzBrF,UAAO,EACPA,YAAS,CAAEqG,EAAG,GAAK9B,EAAG,IAErBvE,mBAAiBnC,GAAM,IAAMmC,KAAKkc,SAASlM,KAAKnS,GACjDmC,WAAuB,KAMdA,YAASA,KAAK4X,YAAY3K,iBAAiBrM,MACvD,SAAKF,IAAM,YAAOA,EAAEqO,IAAI,EAAGuE,WAAYA,MAG3BtT,cAAWA,KAAK4X,YAAY3K,iBAAiBrM,MACzD,kBAAa,MACb,SAAKorB,GACDA,EAAEjd,IAAKP,IAAW,CACdhM,SAAUgM,EAAM/E,OAChBsK,QAAS4b,mCACTpvB,KAAM,IACCiO,EACHyB,SAAUjQ,KAAKiQ,SAASvN,SAAS8L,EAAMlF,UAMvCtJ,aAAUA,KAAK4X,YAAY3K,iBAAiBrM,MACxD,SAAKorB,GACDA,EAAEjd,IAAKP,IAAW,CACdlF,GAAIkF,EAAM/E,OACV+J,OAAQ,CAAC,WAAY,WACrBC,SAAUzT,KAAK4vB,cAAcphB,OAOxC,CAlCUwW,cACP,OAAOhlB,KAAKsT,OAAO7J,QAAU,EAChC,CAkCMxJ,WACHD,KAAK6I,aACD,SACA7I,KAAK4X,YAAY3K,iBAAiBlE,UAAWrI,KACpCV,KAAKsT,OAAS5S,EAAEuI,SAAQjJ,KAAKsT,MAAQ5S,EAAE,GAAG4S,SAG1D,CAEMoZ,QAAQC,GACX3sB,KAAKiU,KAAOsM,KAAKqM,IAAI,GAAKrM,KAAKsM,IAAI,GAAIF,GAC1C,CAEMG,WACH9sB,KAAKiU,KAAO,EACZjU,KAAK+sB,OAAS,CAAE1mB,EAAG,GAAK9B,EAAG,GAC9B,EA3HLpF,yEA4DauwB,GAA8BzrB,oGAA9ByrB,EAA8BxrB,i5BAzDnCD,0CAQAA,sCAEC,qBAFDA,CAEC,kBAEmBA,sEACRA,6EAMJA,+BAGRA,sCAGC,cACmCA,iDAASuE,UAAe,IAAfA,OAAmB,GACxDvE,yCAAUA,gCAAOA,6BAErBA,kCACAA,0CAGIA,iDAASuE,kBAAgB,EAAI,KAAK,GAElCvE,0CAAUA,kCAAQA,6BAEtBA,kCACAA,0CAA8BA,iDAASuE,YAAU,GAC7CvE,0CAAUA,iCAAOA,sCAtCpBA,+CAWeA,mEAEYA,ylBCxBxC,oBACA1E,SACAA,2MA6BoB0E,sDAKIA,uHAAaA,6CAAuB,EAApCA,CAAqC,wIAGxCA,uEANGA,uEAAwB,0BAAxBA,CAAwB,yFAuBhCA,0CAKIA,sJAAqB,KAAI,GAL7BA,yBASAA,2FAkDJA,qDAIIA,+JAEJA,uEAJIA,kDAAyB,+BAjH5B9E,kBAAkB,2BAE/B,MAwHa0wB,EAaTnwB,YACYutB,EACAttB,EACAiY,EAEAkG,GAJA9d,mBACAA,iBACAA,mBAEAA,aAhBLA,cAA2B,GAC3BA,UAAO,OAiBVA,KAAKiQ,SAAW,IAAK6N,EAAMvP,QAAU,IACrCvO,KAAK4X,YAAYjP,WAAWmV,EAAMvN,QACrC,CAjBU+L,mBACP,OAAOtc,KAAKiQ,SAASlB,IAAKrO,GAAMA,EAAE4I,IAAIgB,KAAK,IAC9C,CAEUyR,gBACP,OAAO/b,KAAKL,UAAUwC,IAAchD,oBAAoB,EAC3D,CAaMud,WAAWpT,GACd,OAAOA,GAAMtJ,KAAKsc,aAAa5Z,SAAS4G,EAC3C,CAEMqT,YAAY1O,EAAoB2O,GACnC,MAAM5T,EAAOhJ,KAAKiQ,SAASjC,OAAQtN,GAAMA,EAAE4I,KAAO2E,EAAK3E,IACnDsT,GAAO5T,EAAK6T,KAAK5O,GACrBjO,KAAKiQ,SAAWjH,GACXhJ,KAAK8d,MAAMvN,QAAQ6R,OAASxF,GAAO5c,KAAKitB,YAAYtpB,MAAM,CAACsK,GACnE,CAEM6O,gBAAgB7O,GACnB,MAAM8O,EAAW/c,KAAK+b,UACHgB,EAASra,SAASuL,EAAK3E,IAOtCtJ,KAAKL,UAAUqd,gBACX7d,kBACA4d,EAAS/O,OAAQtN,GAAMA,IAAMuN,EAAK3E,KAPtCtJ,KAAKL,UAAUqd,gBAAgB7d,kBAAiB,IACzC4d,EACH9O,EAAK3E,IAQhB,EAzKLnK,2EAwHa0wB,GAAgC5rB,iLAiB7B6C,mBAAe,kDAjBlB+oB,EAAgC3rB,qGA9GpBoU,+FAyDRA,wFAcwCA,wFAGNA,4EAC/B,iDA5BHA,08DAtDTrU,sCAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,8BAAKA,6BAEnBA,2DAA2BA,6BAE/BA,uCAGIA,mDAGAA,sCAEC,sCAGOA,kEACHA,2BACDA,wDASJA,2BACAA,yDAMIA,yDAAgBuE,4BAA8B,EAA9CvE,CAA+C,8BAElCuE,8BAA0B,EAFvCvE,CAA+C,sCAG1B,IAAI,GAC5BA,6BAELA,2CAGIA,6CAUAA,qEASAA,6BAEJA,2CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAOqCA,oCAAUA,2BACpCA,kEAA6CA,+BAGrDA,gEAEAA,2BACAA,2CAIIA,iDAASuE,2BAAwBA,oDAA0B,GAE3DvE,wCAA+B,kBACDA,uBAExBA,2BACFA,wCACIA,uBAKJA,mCAKhBA,oIArFgBA,gEAGCA,wEAAuB,cAY5BA,wEAA2B,uBAF3BA,4CAAmB,wEAAnBA,CAAmB,gFAkBlBA,oEAUDA,qEADAA,sDAaAA,+EAUJA,8FAIIA,gHADAA,gDAK8BA,2HAItBA,8eCzG5B,iBACA3G,WAKAG,GAJA8B,SAEAA,SAEAA,oGAcoB0E,qFAGIA,0FAGAA,iGAZZA,sCAIC,WAEOA,wCAKAA,yFAMJA,2BACAA,uCAA4B,YAEpBA,sBACJA,2BACAA,uCAAiD,iBACbA,+BAAKA,2BACrCA,mCAAGA,uBAAoBA,6BAE3BA,wCAAiD,kBACbA,gCAAMA,2BACtCA,6DAEAA,6BAEJA,wCAEC,gBAKOA,8HAASA,6CAAsB,GAE/BA,uEACIA,qCAEJA,qDAEJA,2CAIIA,8HAASA,4CAAqB,GAE9BA,uEACIA,qCAEJA,yDAIZA,2CAKIA,kHAASA,mDAAsB,GAE/BA,0CAAUA,uBAIRA,sHA/DGA,4FAA4B,cAa7BA,4FAIGA,mEAMHA,0EAAI6rB,YAAJ7rB,4BAiCJA,uHAGUA,0IAxE9B,MAAMkY,EAAuB,GAE7B,MAwGa4T,EAYTrwB,YACYC,EACAoL,GADA/K,iBACAA,eAbLA,eAAY,EACZA,YAAyB,GACzBA,eAAW,EAiDFA,sBAAoB6pB,GAC/B7pB,KAAK8pB,UAAYD,EAEN7pB,uBAAqB6pB,GAChC7pB,KAAK+pB,SAAWF,EACL7pB,sBAAoBnC,GAAgBmC,KAAKgqB,SAAWnsB,CA1ChE,CAPOke,gBACP,OAAO/b,KAAKL,UAAUwC,IAAc,qBAAuBga,CAC9D,CAQM+N,kBACSlqB,KAAK+K,QAAQP,KAAKwlB,mCAAkC,CAC5DzvB,KAAM,CAAEgO,OAAQvO,KAAKuO,OAAQgC,QAAS,CAAE6Z,SAAUpqB,KAAKqqB,cAEvDve,cAAc/C,UAAWwF,KACpBA,GACLvO,KAAKsqB,SAAS/b,EAAd,EAEP,CAGMgc,eAAe/b,GAClBxO,KAAKsqB,SAAStqB,KAAKuO,OAAOP,OAAQtN,GAAMA,EAAE4I,KAAOkF,EAAMlF,IAC1D,CAMMghB,SAASE,GACZxqB,KAAKuO,OAASic,EACVxqB,KAAK8pB,WAAW9pB,KAAK8pB,UAAU9pB,KAAKuO,OAC3C,CAOMkc,WAAWnnB,GACdtD,KAAKuO,OAASjL,GAAS,EAC1B,CAUMwZ,gBAAgBtO,GACnB,MAAMuO,EAAW/c,KAAK+b,UACHgB,EAASra,SAAS8L,EAAMlF,IAOvCtJ,KAAKL,UAAUqd,gBACXgT,kBACAjT,EAAS/O,OAAQtN,GAAMA,IAAM8N,EAAMlF,KAPvCtJ,KAAKL,UAAUqd,gBAAgBgT,kBAAiB,IACzCjT,EACHvO,EAAMlF,IAQjB,EAjLLnK,yEAwGa4wB,GAA8B9rB,8IAA9B8rB,EAA8B7rB,kFAR5B,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMoF,GAC9BnF,OAAO,MAEdC,yDAhBsBvS,iGArD+CA,+LAD1CA,4EACJ,kCAA8CC,YAa1CD,sHAAc,mDAWdA,wHAAe,kvCAtDvCrU,sCACIA,yCAyEJA,2BACAA,yCAIIA,iDAASuE,mBAAiB,GAE1BvE,sCAAwD,cAC1CA,+BAAMA,2BAChBA,6DAA+BA,+BAGvCA,sCACIA,iCAGJA,kCAtF0BA,wNCjBlC,iBAEA3G,WAIA6B,iBAAa8wB,EAkBTvwB,YAAYa,EAA0B,IAClCP,KAAKsJ,GAAK/I,EAAK+I,IAAM,GACrBtJ,KAAKwJ,KAAOjJ,EAAKiJ,MAAQ,GACzBxJ,KAAKkwB,UAAY3vB,EAAK2vB,QACtBlwB,KAAKmwB,QAAU5vB,EAAK4vB,SAAW,GAC/BnwB,KAAKowB,WAAa7vB,EAAK6vB,SACvBpwB,KAAKqZ,SAAW,IAAIgX,QAAM9vB,EAAK8Y,UAAa9Y,EAAauV,QACzD9V,KAAKswB,cAAgB/vB,EAAK+vB,cAAgB,IAAIvhB,IAC1C,EAAGwhB,YAAWC,UAAS/kB,OAAMC,WAAUuW,aAC5B,CACHxW,KAAM,IAAIgB,KAAKhB,EAAM8kB,GAAW7M,UAChChY,SACIA,IAAY,yBAAoB8kB,EAASD,GAC7CtO,OAAQA,KAIpBjiB,KAAKywB,SAAWlwB,EAAKkwB,MACxB,EApCLtxB,qKCNA,iBAEA7B,WAEAC,WAGAC,WACAC,WAGMizB,EAAoB,0BAU1B,WACI3R,GAEA,MAAMlF,GAAQ,mBAAckF,GAC5B,OAAO,SACH,GAAG2R,iBAAiC7W,EAAQ,IAAMA,EAAQ,MAC5DjZ,MAAK,SAAKlD,GAAMA,EAAEqR,IAAKzR,GAAM,IAAIqzB,WAASrzB,KAC/C,CAdD6B,8BACI,OAAO,SAAIuxB,GAAmB9vB,MAC1B,SAAKlD,GAAMA,EAAEqR,IAAKzR,GAAM,IAAIqzB,WAASrzB,KAE5C,EAGD6B,8BASA,MAAMyxB,EAAqBC,IACvB,SAAK7nB,GACDA,EACKgF,OAAQ8iB,KAAUA,EAAIzX,UACtBtK,IACI+hB,GACG,IAAIT,QAAM,IACHS,EAAIzX,SACP/F,MAAOud,GAAK3Y,YAAY4Y,EAAIzX,SAASzP,OACrC0mB,aAAcQ,EAAIR,gBAG7BtiB,OAAQQ,GAAUA,EAAMsT,WAIrC3iB,oCACI4f,EACA8R,GAEA,OAAOE,EAA0BhS,GAAGne,KAAKgwB,EAAkBC,GAC9D,EAGD1xB,gCACI4f,EACA8R,GAEA,MAAMhX,GAAQ,mBAAckF,GAC5B,OAAO,SACH,GAAG2R,cAA8B7W,EAAQ,IAAMA,EAAQ,MACzDjZ,MACE,SAAKlD,GAAMA,EAAEqR,IAAKzR,GAAM,IAAIqzB,WAASrzB,KACrCszB,EAAkBC,GAEzB,CAXD1xB,mFCtDAkc,2BACAA,2BACAA,mICFA,iBACA/d,WACAC,WAIAC,wJAgBYyG,yCAA0D,cAC5CA,8BAAKA,uDA6ECA,8CAIIA,sBACJA,qDAHIA,qCAEAA,wIAdhBA,uCAGC,qBAHDA,CAGC,mBAIWA,mIAAkB,GAAC+sB,KAGnB/sB,gDAMJA,6BAEJA,iDAAoD,cAK5CA,mIAAkB,GAAC+sB,KAJvB/sB,2BAOAA,0CAAWA,+CAAsBA,6BAErCA,0CAGIA,oIAASA,yCAAoB,GAAE,GAE/BA,yCAAUA,gCAAMA,0FA1BZA,gEAIqBA,wEAYrBA,gIAxEpBA,sCAAiE,UAAjEA,CAAiE,qBAAjEA,CAAiE,cAOjDA,yGAAaA,iCACnC,GALkBA,2BAOAA,0CAAWA,iDAAwBA,6BAEvCA,0CAGIA,uHAASgtB,qBAAgB,GAAI,KAAIxzB,6CAEjCwG,yCAAUA,4BAAGA,6BAEjBA,0CAIIA,4LAGxB,GAAE,GACsBA,0CAAUA,uBAIRA,6BAENA,2CAGIA,0HAASA,4CAAmB,GAAE,GAE9BA,0CAAUA,gCAAMA,+BAGxBA,wCAQIA,2CAoCJA,uFA9EYA,kEAeJA,4EAKUA,wGAiBdA,yGAOqBA,oEA3EzC,MAwIaitB,UAAqCzxB,YAiB9CC,YACqCoe,GAEjC/d,QAFiCC,aAhBpBA,WAAQ,IAAIqF,eAEtBrF,cAAU,EAGVA,mBAAgBA,KAAK8d,MAAMqT,cAIlBnxB,gBAAkCoxB,aAU9CpxB,KAAKqxB,UAAYvT,EAAMwT,QAAU,IAAIviB,IAAKwiB,IACtCA,EAAIC,MAAQD,EAAIC,MAAMziB,IAAKrR,GAAM,CAC7BA,EAAE,GACFkE,KAAKC,UAAUnE,EAAE,MAEd6zB,GAEd,CAfUE,aACP,MAAO,WAAalR,KAAKC,MAAsB,SAAhBD,KAAKmR,SACvC,CAeMC,iBAAiBruB,GACpBtD,KAAKkB,QACD,aACA,IAAOlB,KAAK8d,MAAM8T,UAAY5xB,KAAK8d,MAAM8T,UAAUtuB,GAAS,GAC5D,IAEP,CAEMuuB,cACH7xB,KAAK0Q,SAAU,EACf,MAAM2gB,EAAWrxB,KAAKqxB,SAAStiB,IAAKwiB,IACzB,IACAA,EACHC,MAAOD,EAAIC,MAAMziB,IAAKrR,IAClB,IAAI4F,EAAQ5F,EAAE,GACd,IACI4F,EAAQ1B,KAAK2f,MAAM7jB,EAAE,GACX,CAAb,MAAa,CACd,MAAO,CAACA,EAAE,GAAI4F,EAAP,MAInBtD,KAAKgY,MAAMhI,KAAK,CAAEqT,OAAQ,OAAQ0B,SAAUsM,GAC/C,EA7LLlyB,uEAwIa+xB,GAA4BjtB,8BAkBzB6C,mBAAe,kDAlBlBoqB,EAA4BhtB,spCArIjCD,uCAAQ,QACAA,oDAA2BA,2BAC/BA,2CAGJA,2BACAA,uCAAwC,oBAIhCA,0DAAiBuE,qBAAwB,GAEzCvE,mDACJA,2BACAA,8BACAA,yCAEIA,iDAASuE,uCAAwC,GAEjDvE,sCACJA,2BACAA,0CAuFJA,2BACAA,0CAEC,eACsBA,iDAASuE,eAAa,GAAEvE,sCAAYA,oCA9GbA,mEAOtCA,2EAYiBA,ssBCzCjC,iBACA3G,WACAC,kGAOY0G,yCAA0D,cAC5CA,8BAAKA,6FAGvBA,qCAAwC,UAAxCA,CAAwC,gBAILA,+BAAMA,2BACjCA,kCAAGA,oEAA2CA,2BAC9CA,wCAGIA,oHAAUA,6CAAuB,GAHrCA,6BAMJA,sCAAwD,cAIhDA,kHAASA,6CAAkB,GAE3BA,4CACJA,yDAIJA,wCAGIA,0CACAA,kCAAGA,sBAAaA,uEAAbA,mEApCnB,MA0Ca6tB,EA1CbpyB,cA2CqBM,WAAQ,IAAIqF,cAkDhC,CA9CU0sB,gBAAgB/Z,GACnBhY,KAAK0Q,QAAU,0BACf,MAAMqW,EAA4B/O,EAAMga,OACxC,IAAKjL,GAASkL,MAAO,OAAQjyB,KAAK0Q,QAAU,GAC5C,MAAMuhB,EAAkBlL,EAAQkL,MAChC,IAAKA,EAAMhpB,OAAQ,OAAQjJ,KAAK0Q,QAAU,GAC1C,MAAMwhB,EAAOD,EAAM,GACbE,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAY9yB,IACpC,MACMgB,GAAO,eADIhB,EAAEyyB,OAAO5uB,QAE1BpD,KAAK0Q,QAAU,GACf1Q,KAAKgY,MAAMhI,KAAK,CACZqT,OAAQ,OACR0B,SAAUxkB,EACLyN,OAAQtN,GAAuC,UAAhCA,EAAEkI,MAAQ,IAAI+Q,eAC7B5K,IACIrR,GACG,IAAI40B,eAAa,IACV50B,EACH6S,QAAShQ,EACJyN,OACItN,GAEO,YADHA,EAAEkI,MAAQ,IAAI+Q,eACCjZ,EAAE6xB,OAAS70B,EAAE4L,IAEpCyF,IAAKrO,IAAO,CACT4I,GAAI5I,EAAE4I,GACNE,KAAM9I,EAAE8I,KACR4Y,MAAO1hB,EAAE6c,SACTiV,SAAU9xB,EAAE8xB,SACZC,WAAY/xB,EAAE+xB,kBAnB1C,GAyBJN,EAAWO,WAAWR,EACzB,CAEMtd,oBAIH,kBAAa,2BAHI,sJAIpB,EA5FLzV,2EA0Ca2yB,EAAgC,kDAAhCA,EAAgC5tB,80BAvCrCD,yCAAuE,QAC/DA,6CAAoBA,2BACxBA,2CAGJA,2BACAA,0CAsBAA,iIA1B8CA,mEAIvCA,mEAAgB,+MCb/B,iBACA3G,WACAC,WAEAC,WACAC,WACAC,mMAYYuG,yCAA0D,cAC5CA,8BAAKA,uDASfA,uCAA8C,cAQtCA,8BAAIA,qCAAMA,0BAACA,2BAAOA,2BACtBA,2BACAA,kDACIA,oCAMAA,0CAAWA,yCAAgBA,0EAd3BA,+IAiBRA,uCAAkD,cAQ1CA,kCAAQA,qCAAMA,0BAACA,2BAAOA,2BAC1BA,2BACAA,kDACIA,oCAOAA,0CAAWA,6CAAoBA,uGAf/BA,6HAaIA,wMAkBJA,4CAIIA,iIAAWA,uCAAc,GAEzBA,sBACAA,uCAOJA,uDAZIA,wCAAmB,gBAInBA,mEAGIA,yJArBpBA,uCAA8C,cAC1CA,yBAQAA,2BACAA,kDAAqC,yBAE7BA,8CAeAA,yCAOIA,mIAAwBA,oCAAc,GAP1CA,2GAxBJA,qHAUwBA,sEAkBhBA,qEAA4B,6CAA5BA,CAA4B,mDAQ5CA,uCAAqD,cACxBA,qCAAYA,2BACrCA,kDACIA,uCAMJA,uDAEJA,uCAAoD,cAQ5CA,oCAAUA,qCAAMA,0BAACA,2BAAOA,2BAC5BA,2BACAA,kDACIA,oCAOAA,0CAAWA,+CAAsBA,0EAfjCA,wJAwFRA,uCAAgD,cAC5CA,yBAAgDA,2BAChDA,+CAIJA,qIAnMJA,uCAIC,WAEOA,0CAoBAA,0CAqBJA,2BACAA,yCAuCAA,yCAWAA,0CAqBAA,uCAA+B,cACWA,uCAAcA,2BACpDA,iDAA8CA,uBAE5CA,6BAENA,wCAA8C,sBAGtCA,2HAEFA,0BAAqC0uB,gBAC/C,gBACRA,YAAU,eACR,GAEkB1uB,4CACJA,2BACAA,iDAEIA,2HAC6BA,0BAAS2uB,gBAAgB,UACpEA,YAAU,SACd,GAEkB3uB,sCACJA,2BACAA,iDAEIA,2HAC6BA,0BAAS4uB,gBAAgB,eACzEA,YAAU,cACT,GAEkB5uB,0CACJA,2BACAA,iDAEIA,2HAEFA,0BAAqC6uB,gBAClD,mBAAkDA,YAChD,kBACL,GAEkB7uB,8CACJA,2BACAA,iDAEIA,2HAEFA,0BAAqC8uB,gBACjD,kBAAiDA,YAC/C,iBACN,GAEkB9uB,6CACJA,6BAEJA,wCAA+B,eACQA,sCAAYA,2BAC/CA,yCAQJA,2BACAA,0CAOJA,6EAjMIA,2CAGwBA,6EAoBAA,iFAsBJA,6EAuCAA,oFAWAA,mFAuB8BA,kHAM1CA,mFAAiC,oDAWjCA,6EAA2B,oDAS3BA,kFAAgC,oDAShCA,sFAAoC,oDAWpCA,qFAAmC,oDAgBnCA,yDAAS,UAATA,CAAS,SAATA,CAAS,6BAMGA,+IAQxBA,0CAGC,eAC+CA,kHAASA,wCAAa,GAC9DA,+BACJA,yEAFmBA,iGAKnBA,uCACIA,0CACAA,kCAAGA,gDAAuBA,uDAI9BA,8CACIA,sBACJA,qDAF8CA,kCAC1CA,oEA9NhB,MA+Oa+uB,EA6CTtzB,YACqCoe,gBA5CpB9d,WAAQ,IAAIqF,eAEtBrF,UAAO,IAAIoF,YAAU,CACxBoE,KAAM,IAAIpE,cAAYpF,KAAKiO,KAAKzE,MAAQ,GAAI,CAACpE,aAAWuZ,WACxDjV,YAAa,IAAItE,cAAYpF,KAAKiO,KAAKvE,aAAe,IACtD6T,SAAU,IAAInY,cAAYpF,KAAKiO,KAAKsP,UAAY,GAAI,CAChDnY,aAAWuZ,WAEf8T,WAAY,IAAIrtB,cAAYpF,KAAKiO,KAAKwkB,WAAY,CAC9CrtB,aAAWuZ,WAEf4T,KAAM,IAAIntB,cAAYpF,KAAKiO,KAAKskB,MAAQ,IACxCU,cAAe,IAAI7tB,cAAYpF,KAAKiO,KAAKglB,gBAAiB,GAC1DC,aAAc,IAAI9tB,cAAYpF,KAAKiO,KAAKilB,cAAgB,GACxD3X,OAAQ,IAAInW,cAAYpF,KAAKiO,KAAKsN,QAAU,MAGzCvb,cAAU,EAEDA,gBAAuB,CAACmzB,QAAOA,QAAOA,QA0BlD,CAvBOllB,WACP,OAAOjO,KAAK8d,MAAM7P,MAAQ,IAAIqkB,cACjC,CAGUc,iBACP,OAAOpzB,KAAK8d,MAAMsV,YAAc,EACnC,CAEUC,eACP,OAAOrzB,KAAKoI,KAAKmK,SAASggB,KAAKjvB,KAClC,CAEMgwB,cAAchwB,EAAgB,GACjC,MAAO,GAAGA,IACb,CAEMiwB,OAAOC,GACV,OAAOxzB,KAAKqzB,SAAS3wB,SAAS8wB,EACjC,CAUMC,OAAOzb,GACV,IAAKhY,KAAKoI,OAASpI,KAAKoI,KAAKmK,SAASggB,KAAM,OAC5CvyB,KAAKoI,KAAKmK,SAASggB,KAAKmB,cACxB,MAAMC,EAAQ3b,EAAM2b,MACdrwB,EAAQ0U,EAAM1U,MACd+vB,EAAWrzB,KAAKqzB,UACjB/vB,GAAS,IAAIswB,SACdP,EAASxW,KAAKvZ,GACdtD,KAAKoI,KAAKmK,SAASggB,KAAKjI,SAAS+I,IAIjCM,IAAOA,EAAMrwB,MAAQ,GAC5B,CAMMuwB,UAAUC,GACb,IAAK9zB,KAAKoI,OAASpI,KAAKoI,KAAKmK,SAASggB,KAAM,OAC5C,MAAMc,EAAWrzB,KAAKqzB,SACtBrzB,KAAKoI,KAAKmK,SAASggB,KAAKmB,cACxB,MAAMK,EAAQV,EAASW,QAAQF,GAE3BC,GAAS,IACTV,EAAS3Q,OAAOqR,EAAO,GACvB/zB,KAAKoI,KAAKmK,SAASggB,KAAKjI,SAAS+I,GAExC,CAEMxB,cACH7xB,KAAK0Q,SAAU,EACf1Q,KAAKgY,MAAMhI,KAAK,CACZqT,OAAQ,OACR0B,SAAU,CACN9W,KAAM,IAAIqkB,eAAa,IAChBtyB,KAAKiO,KACR3E,GAAItJ,KAAKiO,KAAK3E,IAAM,SAAQ,eAAU,eACnCtJ,KAAKoI,KAAK9E,UAI5B,EA/ULnE,qEA+Oa6zB,GAA0B/uB,8BA8CvB6C,mBAAe,kDA9ClBksB,EAA0B9uB,iHA/KtBoU,+FAsBwBA,wIAiHgBA,ogEApMjDrU,uCAAQ,UACiBA,sBAAmCA,2BACxDA,2CAGJA,2BACAA,2CAqMAA,2CAQAA,wFAMAA,wDACIA,gDAGJA,oEA5NyBA,2FACqBA,mEAMzCA,2EAAwB,cAoMxBA,mEAc8BA,61BCxO3C9E,qBAAa80B,EAuCTv0B,YAAYa,EAA8B,IACtCP,KAAKsJ,GAAK/I,EAAK+I,IAAM,GACrBtJ,KAAKwJ,KAAOjJ,EAAKiJ,MAAQjJ,EAAK+I,IAAM,GACpCtJ,KAAKud,SAAWhd,EAAKgd,UAAY,GACjCvd,KAAKyyB,WAAalyB,EAAKkyB,YAAc,EACrCzyB,KAAK0J,YAAcnJ,EAAKmJ,aAAe,GACvC1J,KAAKk0B,SAAW3zB,EAAK2zB,UAAY,EACjCl0B,KAAKkzB,aAAe3yB,EAAK2yB,cAAgB,EACzClzB,KAAKizB,gBAAkB1yB,EAAK0yB,cAC5BjzB,KAAKuyB,KAAOhyB,EAAKgyB,MAAQ,GACzBvyB,KAAKub,OAAShb,EAAKgb,QAAU,GAC7Bvb,KAAKuQ,QAAUhQ,EAAKgQ,SAAW,GAC/BvQ,KAAKm0B,YAAcn0B,KAAKuQ,QAAQvC,OAAQtN,IAAmB,IAAbA,EAAE0zB,QAChDl0B,QAAQuZ,IACJ,WACAzZ,KAAKwJ,KACLxJ,KAAKuQ,QACLvQ,KAAKm0B,YACLn0B,KAAKuQ,QAAQvC,OAAQtN,IAAmB,IAAbA,EAAE0zB,SAEjCp0B,KAAKq0B,eAAiB9zB,EAAK8zB,gBAAkB,GAC7Cr0B,KAAKs0B,wBACDt0B,KAAKyyB,WACLzyB,KAAKm0B,YACAplB,IAAKrR,GAAMA,EAAE+0B,YAAc,GAC3BjW,OAAO,CAAClf,EAAGC,IAAMD,EAAIC,EAAG,GACjCyC,KAAKu0B,WAAav0B,KAAKs0B,wBAA0Bt0B,KAAKk0B,SACtDl0B,KAAKw0B,eACDx0B,KAAKuQ,SACCxB,IAAKrO,GAAMA,EAAE4I,IAAM,IACpBuF,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAEigB,cAAcjX,IAC/B+D,KAAK,MAAQ,EACzB,CArCUmqB,gBACP,MAAMlkB,EAAUvQ,KAAKm0B,YAAYplB,IAAKrO,GAAMA,EAAE4I,IAAIgB,KAAK,KACvD,MAAO,GAAGtK,KAAKsJ,MAAMiH,IACxB,EArCLpR,uGCFA,iBACA7B,WAKAG,GAJA8B,SACAA,SAGAA,+GAeoB0E,qFAGIA,8FAMAA,wCAKIA,sBACJA,6GAHIA,qDAEAA,gKAtBhBA,sCAIC,WAIOA,wCAKJA,2BACAA,sCAAkB,WAEVA,sBACAA,yCAOJA,2BACAA,oCAAKA,sBAA6BA,2BAClCA,uCAEC,gBAKOA,8HAASA,sCAAc,GAEvBA,wCAAyC,eAC3BA,8BAAIA,2BACdA,kCACJA,6BAEJA,2CAIIA,8HAASA,wCAAgB,GAEzBA,wCAAyC,eAC3BA,+BAAKA,2BACfA,kCACJA,iCAIZA,2CAKIA,8HAASA,6CAAqB,GAE9BA,0CAAUA,uBAIRA,yFAvDGA,4FAODA,gFAGKA,6EAMJA,oFAgCLA,8FAGUA,iHAjE9B,MAAMkY,EAAa,GAEnB,MA6FauY,EAmBTh1B,YACYC,EACAoL,GADA/K,iBACAA,eApBIA,aAIZ,GACGA,WAAwB,GACxBA,eAAW,EAIXA,cAA2B,GA8BlBA,sBAAoB6pB,GAC/B7pB,KAAK8pB,UAAYD,EACN7pB,uBAAqB6pB,GAChC7pB,KAAK+pB,SAAWF,EACL7pB,sBAAoBnC,GAAgBmC,KAAKgqB,SAAWnsB,CAvBhE,CATOke,gBACP,OACI/b,KAAKL,UAAUwC,IAAc,yBAA2Bga,CAE/D,CAWMmO,SAASE,GACZxqB,KAAKmqB,MAAQK,EACTxqB,KAAK8pB,WAAW9pB,KAAK8pB,UAAU9pB,KAAKmqB,MAC3C,CAMMM,WAAWnnB,GACdtD,KAAKmqB,MAAQ7mB,GAAS,EACzB,CAQM6X,WAAWlN,GACd,MAAM0mB,EAAe30B,KAAKmqB,MAAMnc,OAAQtN,GAAMA,EAAE4I,KAAO2E,EAAK3E,IAC5DtJ,KAAKsqB,SAASqK,EACjB,CAEMC,SAAS3mB,GACAjO,KAAK+K,QAAQP,KAAKqqB,iCAAgC,CAC1Dt0B,KAAM,CAACP,KAAKmqB,MAAOnqB,KAAKuQ,WAExBzE,cAAc/C,UAAWohB,KACpBA,GACLnqB,KAAKsqB,SAASH,EAAd,EAEP,CAEM2K,WAAW7mB,GACd,OAAOA,EAAKkmB,YAAYplB,IAAKrO,GAAMA,EAAE8I,MAAMc,KAAK,KACnD,CAEMwS,gBAAgBiY,GACnB,MAAMhY,EAAW/c,KAAK+b,UACHgB,EAASra,SAASqyB,EAAazrB,IAO9CtJ,KAAKL,UAAUqd,gBACX,uBACAD,EAAS/O,OAAQtN,GAAMA,IAAMq0B,EAAazrB,KAP9CtJ,KAAKL,UAAUqd,gBAAgB,uBAAwB,IAChDD,EACHgY,EAAazrB,IAQxB,EA7KLnK,qEA6Fau1B,GAA0BzwB,8IAA1BywB,EAA0BxwB,wGATxB,CACP,CACIwmB,QAAStlB,oBAETulB,aAAa,gBAAW,IAAM+J,GAC9B9J,OAAO,MAEdC,smCAzFW5mB,sCACJA,yCAmEJA,2BACAA,yCAKIA,iDAASuE,YAAU,GAEnBvE,sCAAwD,cAC1CA,+BAAMA,2BAChBA,qCAAMA,iCAAQA,sCA1EGA,mEAqErBA,yPCpFZ,iBAEA3G,aACAiC,oIA4BgB0E,0CAIC,cACaA,kCAASA,mGAHnBA,8GArBRA,sCAAsD,oBAI9CA,qKACHA,2BACDA,sCAA0C,UAA1CA,CAA0C,SAE7BA,sBAAeA,2BACpBA,uCACIA,sBACJA,6BAEJA,uCAGIA,uFACJA,6BAEJA,6CAOAA,2CAGIA,4KAEAA,0CAAUA,qCAAWA,2EA3BrBA,wEAISA,oEAEDA,iFAMJA,4JAMHA,mEAMDA,mJA2BAA,0CAIIA,2JAASA,wCAAkB,GAG3BA,yCAAUA,6BAAIA,6FAElBA,0CAIIA,2JAASA,0CAAoB,GAG7BA,yCAAUA,+BAAMA,uDA7BxBA,uCAIIA,kCAGAA,uCAA8B,YACRA,sBAAiBA,2BACnCA,uCACIA,sBACJA,6BAEJA,4CASAA,4CASJA,oFAvB0BA,+DAEdA,yEAQHA,mEASAA,6FAnCbA,uCAQIA,yCAgCJA,qEApCIA,qFAMuBA,2EAlDvC,MAgIa+wB,EAwCTt1B,YAAoBu1B,oBApCbj1B,mBAAe,EAENA,eAAY,IAAMA,KAAKi1B,UAAUC,UAAUl1B,KAAKiO,MAEhDjO,gBAAcm1B,GAC1Bn1B,KAAKi1B,UAAUC,UAAUl1B,KAAKiO,KAAMknB,GAExBn1B,kBAAgBm1B,GAC5Bn1B,KAAKi1B,UAAUG,aAAap1B,KAAKiO,KAAMknB,GAE3Bn1B,cAAW,IAAMA,KAAKi1B,UAAUI,QAAQr1B,KAAKiO,MAE7CjO,gBAAa,IAAMA,KAAKi1B,UAAUK,WAAWt1B,KAAKiO,KAwBX,CAtB5CmiB,eACP,OAAOpwB,KAAKi1B,UAAUM,WACzB,CAEUC,iBACP,OAAQx1B,KAAKiO,KAAKomB,eAAe3xB,SAAS1C,KAAKi1B,UAAUprB,KAC5D,CAEU2rB,eAAW5Y,GAClB,IAAI5T,EAAOhJ,KAAKiO,KAAKomB,eAEhBrrB,EADA4T,EACO5T,EAAKgF,OAAQtN,GAAMA,IAAMV,KAAKi1B,UAAUprB,OADjC,YAAO,IAAIb,EAAMhJ,KAAKi1B,UAAUprB,OAEnD7J,KAAKi1B,UAAUQ,WACX,IAAInD,eAAa,IAAKtyB,KAAKiO,KAAMomB,eAAgBrrB,IAExD,CAGU0sB,aACP,OAAO11B,KAAKi1B,UAAUU,QACzB,EAtKLx2B,oEAgIa61B,GAAyB/wB,wGAAzB+wB,EAAyB9wB,8jDA7H9BD,sCAGIA,0CAkCAA,wCAyCAA,gDAA0B,cAIlBA,iDAASuE,aAAW,GAEpBvE,yCAAUA,4BAAGA,2BACbA,sCAAkBA,mCAAUA,6BAEhCA,0CAGIA,iDAASuE,YAAU,GAEnBvE,0CAAUA,8BAAIA,2BACdA,uCAAkBA,mCAASA,6BAE/BA,0CAGIA,iDAASuE,cAAY,GAErBvE,0CAAUA,gCAAMA,2BAChBA,uCAAkBA,qCAAWA,wCAlGKA,+DAoCrCA,+nBChDjB,iBACA3G,cAEAiC,mGAaoB0E,uCACIA,iCACJA,8DAD4BA,oFAFhCA,uCACIA,+EAGJA,8EAHmCA,yHAMnCA,uCACIA,iCACJA,8DAD4BA,oFAFhCA,0CACIA,+EAGJA,mFAJ0CA,kCACPA,6HAMnCA,sCAAsD,cACxCA,8BAAKA,2BACfA,kCAAGA,yCAAgBA,8BAzBnC,MAwCa2xB,EAsBTl2B,YAAoBu1B,oBApBJj1B,UAAOA,KAAKi1B,UAAUY,KAEtB71B,eAAY,IAAIkN,kBAAwB,IAExClN,cAAWA,KAAK61B,KAAKj1B,MACjC,SAAKi1B,IACD,MAAMC,EAAW,GACjB,UAAW1T,KAASpiB,KAAKozB,WACrB0C,EAAS1T,GAASyT,EAAK7nB,OAClBC,GAASA,EAAKsP,WAAa6E,GAGpC,OAAO0T,IAQwC,CAJ5C1C,iBACP,OAAOpzB,KAAKi1B,UAAU7B,UACzB,EA5DLj0B,gEAwCay2B,GAAqB3xB,wGAArB2xB,EAAqB1xB,sVArC1BD,gDAEIA,gEACqBuE,iBAA0B,IAA1BA,EAA8B,GAAEA,eACpD,GACX,GACUvE,0CACIA,+EAKJA,2BACAA,4CAKJA,2BACAA,uIAZuBA,oHAA8B,cAMtBA,2cCtBvC,iBACA3G,WACAC,WAGAC,WAEAC,kKAgBYwG,yCAA0D,cAC5CA,8BAAKA,uDAQnBA,uCAA8C,cAOtCA,8BAAIA,qCAAMA,0BAACA,2BAAOA,2BACtBA,2BACAA,kDACIA,oCAMAA,0CAAWA,yCAAgBA,0EAb3BA,+IAgBRA,uCAA+C,cAQvCA,8BAAIA,qCAAMA,0BAACA,2BAAOA,2BACtBA,2BACAA,kDACIA,oCAOAA,0CAAWA,yCAAgBA,uGAf3BA,uHAaIA,4FAKZA,uCAAoD,cAC7BA,oCAAWA,2BAC9BA,kDACIA,oCAOJA,oDAEJA,uCAAkD,qBAE1CA,sDACJA,uDA5DRA,uCAKIA,yCAmBAA,yCAqBAA,wCAYAA,wCAKJA,qEA3DIA,2CAEoBA,6EAmBAA,8EAqBAA,mFAYAA,iJAMxBA,0CAGC,eAC+CA,kHAASA,wCAAa,GAC9DA,+BACJA,yEAFmBA,iGAKnBA,uCACIA,0CACAA,kCAAGA,uDAA8BA,uDAIrCA,8CACIA,sBACJA,qDAFyCA,kCACrCA,oEA1FhB,MAuGa8xB,EAuBTr2B,YACqCoe,gBAtBpB9d,WAAQ,IAAIqF,eAEtBrF,UAAO,IAAIoF,YAAU,CACxBoE,KAAM,IAAIpE,cAAYpF,KAAKm1B,OAAO3rB,MAAQ,GAAI,CAACpE,aAAWuZ,WAC1DyD,MAAO,IAAIhd,cAAYpF,KAAKm1B,OAAO/S,OAAS,GAAI,CAAChd,aAAWuZ,WAC5D8T,WAAY,IAAIrtB,cAAYpF,KAAKm1B,OAAO1C,YACxCD,SAAU,IAAIptB,gBAAcpF,KAAKm1B,OAAO3C,SAAU,MAG/CxyB,cAAU,CAcb,CAXOm1B,aACP,OAAOn1B,KAAK8d,MAAMqX,MACrB,CAGUa,YACP,OAAOh2B,KAAK8d,MAAMkY,OAAS,EAC9B,CAMMnE,cACH7xB,KAAK0Q,SAAU,EACf,MAAMulB,EAAa,IACZj2B,KAAKm1B,OACR7rB,GAAItJ,KAAKm1B,OAAO7rB,IAAM,WAAU,eAAU,eACvCtJ,KAAKoI,KAAK9E,OAEjBtD,KAAKgY,MAAMhI,KAAK,CACZqT,OAAQ,OACR0B,SAAU,CACN9W,KAAM,IAAIqkB,eAAa,IAChBtyB,KAAK8d,MAAMoY,OACd3lB,QAASvQ,KAAK8d,MAAMoY,OAAO3lB,QACtBvC,OAAQtQ,GAAMA,EAAE4L,KAAO2sB,EAAW3sB,IAClC6sB,OAAO,CAACF,QAI5B,EApJL92B,2EAuGa42B,GAAgC9xB,8BAwB7B6C,mBAAe,kDAxBlBivB,EAAgC7xB,kuCApGrCD,uCAAQ,UAEAA,sBACJA,2BACAA,2CAGJA,2BACAA,yCA+DAA,2CAQAA,wFAMAA,wDACIA,gDAGJA,oEAvFQA,sGAEsCA,mEAMzCA,2EAAwB,cA8DxBA,mEAc8BA,orBCvG3C1E,mFA8BwB0E,uCAIIA,sBACJA,+EADIA,kGALRA,uCACIA,wCAMJA,8DAJSA,0HA3BrBA,uCACIA,sCACIA,iCAGJA,2BACAA,sCAAuB,cAQfA,gKAEAA,yCAAUA,sBAAqCA,+BAGvDA,sCAEC,WACuBA,sBAAgBA,2BACpCA,uCACIA,kDAQJA,6BAERA,gFAvBYA,wEAA2B,sBAA3BA,CAA2B,yBAKjBA,sFAMMA,sFAEcA,+EA3BlD,MA+CamyB,EA/Cb12B,cAkDWM,aAAS,CACnB,EAnDDb,qEA+Cai3B,EAA0B,kDAA1BA,EAA0BlyB,g0BA5C/BD,uDAAeA,sXCJvB1E,oFAmBY0E,sCAIIA,6CACJA,qDADoBA,kFAEpBA,uCAIC,OACMA,2CAAkBA,mDAG7BA,+CA/BR,MAgDaoyB,EAMT32B,YAAoB42B,kBAJJt2B,gBAAaA,KAAKs2B,QAAQC,SAE1Bv2B,aAAUA,KAAKs2B,QAAQ5lB,OAEe,CAE/CzQ,WACHD,KAAKs2B,QAAQlf,cAChB,CAEMof,cACHx2B,KAAKs2B,QAAQtb,aAChB,CAGM1D,UAAUyc,EAAe0C,GAC5B,OAAOA,EAAQA,EAAMntB,QAAKwV,CAC7B,EAnEL3f,qEAgDak3B,GAA0BpyB,yGAA1BoyB,EAA0BnyB,8xBA7C/BD,sCAGIA,iCACAA,sCAAkBA,6BAAIA,2BACtBA,sCAAoBA,iCAAQA,2BAC5BA,sCAAkBA,6BAAIA,2BACtBA,sCAAkBA,oCAAWA,2BAC7BA,uCAAkBA,+BAAKA,2BACvBA,uCAAkBA,qCAAWA,2BAC7BA,uCAAkBA,gCAAMA,2BACxBA,kCACJA,2BACAA,sCACIA,uEAMAA,yEAOJA,2BACAA,kGAZ0BA,uGAAuB,4BAOxCA,0HAMJA,idCrCb,iBACA1G,WAGAC,WAEAC,UACAC,WAGAE,GADA2B,QACAA,wJAkCwC0E,uCAIIA,4CACJA,2FAUJA,6CAGIA,oKAE5BA,kDACV,GACmCA,iFALGA,6GAMJA,uCAGC,WAHDA,CAGC,cAHDA,CAGC,cAYqBA,+BAAMA,+BAGxBA,uCAGIA,sBACJA,2BACAA,0CAEIA,2JAASA,qCAAa,GAEtBA,yCAAUA,4BAAGA,qFAtBbA,8IAQIA,+DAQJA,sGArDZA,uCAIC,WAJDA,CAIC,YAGWA,sBACJA,2BACAA,yCAMJA,2BACAA,uCAGIA,uDAIJA,2BACAA,+CAQAA,0CA8BJA,oFAvDYA,wEAICA,yEAQLA,sHAWCA,0EAIAA,gIAvCjBA,0CAGC,WAEOA,0CA+DJA,gHAlEAA,kCAMyBA,yIATjCA,uCACIA,4CAsEJA,6FArESA,6IAJjBA,uCACIA,8CACIA,iDAwEJA,2BACJA,+EAzEsCA,kGAH1CA,sCACIA,iDA4EJA,kGA5EmBA,8EAA2B,8EAiF1CA,uCACIA,0CACIA,iCACJA,2BACAA,0CAOIA,iKAA8B,EAAI,GAElCA,kCACJA,2BACJA,iFARQA,gFAA8B,8BAA9BA,CAA8B,sGAUlCA,0CAGIA,iKAA8B,EAAK,GAEnCA,+BACJA,2BACAA,0CAAwBA,mHAASA,sCAAW,GACxCA,qCACJA,qDA9BRA,0CAIIA,iDAgBAA,yFAYJA,kGA5BmBA,8EAA2B,wCA8B1CA,uCACIA,0CACAA,kCAAGA,sBAAaA,uEAAbA,4FAeKA,uCAKIA,sBAIJA,8GANIA,qDAEAA,iMAZZA,uCAIC,WAJDA,CAIC,YAEiCA,sBAAeA,2BACzCA,yCAUJA,2BACAA,uCAGIA,uDACJA,2BACAA,6CAEIA,wIAAiBA,kDAAgC,GACpDA,wFApB6BA,+DAGrBA,yEAYLA,sHAGAA,gGA5BZA,0CAA4B,QACpBA,sCAAaA,6BAErBA,sCACIA,yCA4BJA,qEAzByBA,0EAhIrC,MAiMayyB,UAAoCj3B,YAsB7CC,YACYE,EACyBke,GAEjC/d,QAHQC,YACyBA,aAtBpBA,WAAQ,IAAIqF,eAEtBrF,aAAU,GAUVA,gBAAsC,GAEtCA,gBAAuB,GAW1BA,KAAK0Q,QAAU,iBAClB,CAVUimB,WACP,OAAO32B,KAAKJ,KAAKg3B,aACpB,CAUY32B,WAAQ,gCACjB42B,EAAKnmB,QAAU,kBACfmmB,EAAKJ,MAAQ,IAAIK,gBAAcD,EAAK/Y,MAAM2Y,OAC1CI,EAAKrF,YAAcqF,EAAK/Y,MAAMiZ,kBAC1BF,EAAKJ,MAAMze,OAAOxJ,OAAO8E,OAAOxJ,WAEpC+sB,EAAK/Y,MAAM+X,KAAK9sB,UAAWC,IACvB6tB,EAAKnmB,QAAU,kBACf,MAAM0iB,GAAa,YAAOpqB,EAAK+F,IAAKd,GAASA,EAAKsP,WAC5CxO,EAAM,GACZ,UAAWioB,KAAO5D,EACdrkB,EAAIioB,GAAOhuB,EAAKgF,OAAQC,GAEhBA,EAAKsP,WAAayZ,IAClB,2BACI/oB,EACA4oB,EAAKrF,MACLqF,EAAKJ,MAAMze,QAK3B6e,EAAKzD,WAAaA,EAClByD,EAAKI,WAAaloB,EAClB8nB,EAAKK,uBACLL,EAAK31B,QAAQ,gBAAiB,IAAO21B,EAAKnmB,QAAU,GAAK,IAAzD,EAzBa,IA2BpB,CAEM2kB,QAAQpnB,EAAoBkpB,GAA0B,GACzD,MAAMC,EAAWp3B,KAAKy2B,MAAMtM,MAAMhS,KAC7Bkf,GACGA,EAAI/tB,KAAO2E,EAAK3E,IAChB+tB,EAAI9mB,QAAQtH,SACRouB,EAAI9mB,QAAQiM,OACR,CAAClf,EAAGK,IACAL,GACC2Q,EAAKsC,QAAQ4H,KAAMmf,GAAQ35B,EAAE2L,KAAOguB,EAAIhuB,IACnC,EACA,GACV,IAGZ6tB,GAAkBlpB,EAAKsC,SAAStH,OAChCjJ,KAAK8d,MAAMyZ,cAActpB,EAAKsC,SAASinB,KAAMjnB,IACzC,MAAMknB,EAAW,IAAInF,eAAa,IAAKrkB,EAAMsC,YAC7CvQ,KAAKq1B,QAAQoC,GAAU,EAAvB,GAGJz3B,KAAKy2B,MAAQ,IAAIK,gBADdY,EAC4B,IACxB13B,KAAKy2B,MACRtM,MAAOnqB,KAAKy2B,MAAMtM,MACbnc,OACItQ,KAEOA,EAAE4L,KAAO2E,EAAK3E,IACd5L,EAAE82B,iBAAmBvmB,EAAKumB,iBAGrC2B,OAAO,CACJ,IAAI7D,eAAa,IACVrkB,EACHimB,SAAUkD,EAASlD,SAAW,OAKf,IACxBl0B,KAAKy2B,MACRtM,MAAOnqB,KAAKy2B,MAAMtM,MAAMgM,OAAO,CAC3B,IAAI7D,eAAa,IAAKrkB,EAAMimB,SAAU,QAIlDl0B,KAAKk3B,sBACR,CAEM/b,WAAWlN,GACdjO,KAAKy2B,MAAQ,IAAIK,gBAAc,IACxB92B,KAAKy2B,MACRtM,MAAOnqB,KAAKy2B,MAAMtM,MAAMnc,OACnBtN,GACGA,EAAE4I,KAAO2E,EAAK3E,IAAM5I,EAAE8zB,iBAAmBvmB,EAAKumB,kBAG1Dx0B,KAAKk3B,sBACR,CAEMS,mBAAmB1pB,EAAoBwO,GAC1C,MAAM2a,EAAWp3B,KAAKy2B,MAAMtM,MAAMhS,KAC7Bkf,GACGA,EAAI/tB,KAAO2E,EAAK3E,IAAM+tB,EAAI7C,iBAAmBvmB,EAAKumB,gBAE1D,IAAIrK,EAAQ,IAAInqB,KAAKy2B,MAAMtM,OAEvBA,EADAiN,EACQp3B,KAAKy2B,MAAMtM,MACdnc,OACItQ,KAEOA,EAAE4L,KAAO2E,EAAK3E,IACd5L,EAAE82B,iBAAmBvmB,EAAKumB,iBAGrC2B,OAAO,CAAC,IAAI7D,eAAa,IAAKrkB,EAAMimB,SAAUzX,MAE3Czc,KAAKy2B,MAAMtM,MAAMgM,OAAO,CAC5B,IAAI7D,eAAa,IAAKrkB,EAAMimB,SAAUzX,MAG9C0N,EAAMtb,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAEiM,KAAKgU,cAAcjX,EAAEiD,OAC5CxJ,KAAKy2B,MAAQ,IAAIK,gBAAc,IACxB92B,KAAKy2B,MACRtM,UAEJnqB,KAAKk3B,sBACR,CAEMA,uBACH,UAAWF,KAAOh3B,KAAKi3B,WACnB,UAAWhpB,KAAQjO,KAAKi3B,WAAWD,GAC9B/oB,EAAaimB,SAAWl0B,KAAKy2B,MAAMtM,MAAM3N,OACtC,CAAClf,EAAGI,IAAOA,EAAE4L,KAAO2E,EAAK3E,GAAKhM,EAAII,EAAEw2B,SAAW52B,EAC/C,EAIf,CAEMs6B,WAAW3pB,GACd,OAAOA,EAAKsC,QAAQxB,IAAKrR,GAAMA,EAAE8L,MAAMc,KAAK,KAC/C,CAEMutB,YACH73B,KAAKgY,MAAMhI,KAAK,CACZqT,OAAQ,OACR0B,SAAU,CAAE0R,MAAOz2B,KAAKy2B,QAE/B,CAEMqB,eACH93B,KAAK+3B,oBAAqB,CAC7B,EA5WL54B,sEAiMau3B,GAA2BzyB,mFAwBxB6C,mBAAe,kDAxBlB4vB,EAA2BxyB,o0DA9LhCD,wCA8EAA,2CAiCAA,wFAMAA,iIArHiCA,0CAAgB,cA+E5CA,2lCCzGb,iBAOA3G,cACAiC,kIA6CwB0E,kCACIA,uDACJA,sEADIA,qJAURA,uCAIIA,sBACJA,qDADIA,6FA4CwBA,uCAIIA,uDAIJA,8GAJIA,iJAjBZA,oDAIC,WAJDA,CAIC,YAOWA,sBACJA,2BACAA,yCASJA,uDAnBAA,qCAQQA,wEAICA,qIA/BrBA,uCAGIA,mDAGIA,uNAAqC,6IAGjEA,iDACV,GACsCA,oDAAuC,aACnCA,yBACSA,6BAGbA,sDAwBJA,2BACJA,yHAnCQA,iFAYoBA,4GAwChBA,uCAIIA,uDAIJA,8GAJIA,uLAnBZA,gDAEIA,0LAAkC,iHAGhEA,qDACR,GACsCA,uCAEC,YAIOA,sBACJA,2BACAA,yCASJA,wFAtBAA,uDAWQA,wEAICA,8FAjBbA,qGACoBA,mFArDhCA,uCAIC,YAEOA,sBACJA,2BACAA,uCACIA,iDA0CAA,yFA4BJA,oFA5EAA,wCAGIA,wEAIKA,oEAAuB,8EAhEpDA,uCACIA,0CACIA,4CAIAA,yCAGIA,kHAASA,uCAAY,GAGrBA,yCAAUA,mCAAUA,6BAExBA,yCAKIA,kHAASA,2CAAgB,GAGzBA,yCAAUA,sBAERA,+BAGVA,sCAAsD,eAAtDA,CAAsD,SAAtDA,CAAsD,WAItCA,uBACJA,2BACAA,uCAGJA,2BACAA,8CACIA,2HAAaA,0CAC/B,GAEeA,6BAELA,4CACIA,0CAMJA,2BACAA,+BACAA,4CAAmC,aAE3BA,0CAiFJA,+BAGRA,wCAA2D,gBAMnDA,qIAA2BA,sDAAyB,GAEpDA,wCAA8C,kBACfA,uBAEzBA,2BACFA,mCACIA,uBACJA,iCAIhBA,gFAzJYA,wEAcAA,sEAAyB,uBAKfA,2FASFA,6EAEAA,0EAKJA,2EAA2B,QAA3BA,CAA2B,wBAQXA,uEAUMA,oEAsF1BA,qEAK+BA,gFAIvBA,oIAOhBA,uCAGC,UACGA,yBAEAA,8BAvKhB,MAwLa+zB,EAxLbt4B,cA0LoBM,aAAkB,EAClBA,UAAe,EACfA,UAAe,MAEdA,eAAY,IAAIqF,eAChBrF,kBAAe,IAAIqF,eACnBrF,WAAQ,IAAIqF,eAEtBrF,kBAAwC,GACxCA,iBAAsC,EAsDhD,CAnDUqrB,YAAYC,GACXA,EAAQrd,MAAQjO,KAAKiO,MACrBjO,KAAK4Z,SAEZ,CAEMqe,kBAAkB7V,EAA4B9Y,GACjD,GAAK8Y,EACL,MAAK8V,YAAY9V,EAAM5Y,MAAQF,EAC/B,UAAW6rB,KAAU/S,EAAM7R,QACvB4kB,EAAOf,OAASe,EAAO7rB,KAAOA,EAErC,CAEM6uB,mBAAmB7uB,EAAYsT,GAClC,MAAMuY,EAASn1B,KAAKiO,MAAMsC,QAAQ4H,KAAMzX,GAAMA,EAAE4I,KAAOA,GACnD6rB,IAAQA,EAAOf,OAASxX,EAC/B,CAEOhD,UACJ,IAAK5Z,KAAKiO,KAAM,OACXjO,KAAKiO,KAAKimB,WACVl0B,KAAKiO,KAAaimB,SAAW,GAElCl0B,KAAKo4B,aAAe,GACpBp4B,KAAKk4B,YAAc,GACnB,MAAMhW,GAAS,YAAOliB,KAAKiO,KAAKsC,QAAQxB,IAAKrR,GAAMA,EAAE0kB,OAAS,UACxDiW,EAAa,GACnB,UAAWjW,KAASF,EAAQ,CACxB,MAAM3R,EAAUvQ,KAAKiO,KAAKsC,QAAQvC,OAAQtQ,GAAMA,EAAE0kB,QAAUA,GAC5DiW,EAAWxb,KAAK,CACZrT,KAAM4Y,EACNoQ,WAAYjiB,EAAQ4H,KAAMza,GAAMA,EAAE80B,UAClCjiB,WAEP,CAED,GADAvQ,KAAKkiB,OAASmW,EACVr4B,KAAKiO,KAAKkmB,YACV,UAAWmD,KAAOt3B,KAAKiO,KAAKkmB,YAAa,CACrC,MAAMgB,EAASn1B,KAAKiO,KAAKsC,QAAQ4H,KAAMzX,GAAMA,EAAE4I,KAAOguB,EAAIhuB,IACtD6rB,IACAA,EAAOf,QAAS,EAChBp0B,KAAKo4B,aAAad,EAAIhuB,KAAM,EAC5BtJ,KAAKi4B,kBACDj4B,KAAKkiB,OAAO/J,KAAMjS,GAAMA,EAAEsD,OAAS2rB,EAAO/S,OAC1C+S,EAAO7rB,IAGlB,CAER,EAxPLnK,uEAwLa64B,EAA4B,kDAA5BA,EAA4B9zB,yQAzGQoU,iFAsFMA,s8DAlK/CrU,mDA6JAA,iIA7JeA,sCAAY,+hBCnBnC,oBACA1E,oHAkEQ0E,6DAEAA,2FAMIA,+CAIIA,sIAAiBA,4CAAoB,iCAErCA,sBACJA,2FAJIA,qIADAA,kCAIAA,oEA9EhB,MAAMq0B,EAAQ,CACVC,OAAQ,knNAgBRC,OAAQ,glEAaRC,OAAQ,krLAMRC,MAAO,ioMAcX,MAsCaC,EAWTj5B,YAAoB6M,iBAVJvM,aAAS,EAETA,WAAQs4B,EAERt4B,aAAUA,KAAKuM,OAAOmO,QAEtB1a,gBAAcoG,GAAMpG,KAAKuM,OAAOqsB,WAAWxyB,GAE3CpG,gBAAaA,KAAKuM,OAAO6mB,UAEgB,CAE5CyF,eAAervB,GAAY,gCACpC,MAAQ4pB,oBAAqBltB,EAAKwU,QAAQ9Z,MAAK,UAAK,IAAIC,YACpDuyB,EAAW1wB,SAAS8G,GACpBtD,EAAK0yB,WAAW,CACZxF,WAAYA,EAAWplB,OAAQtN,GAAMA,IAAM8I,KAE9CtD,EAAK0yB,WAAW,CAAExF,WAAY,IAAIA,EAAY5pB,IANf,IAOvC,CAEYsvB,UAAUtF,GAAW,gCAC9B,MAAQjB,cAAersB,EAAKwU,QAAQ9Z,MAAK,UAAK,IAAIC,YAC9C0xB,EAAK7vB,SAAS8wB,GACdttB,EAAK0yB,WAAW,CAAErG,KAAMA,EAAKvkB,OAAQtN,GAAMA,IAAM8yB,KAChDttB,EAAK0yB,WAAW,CAAErG,KAAM,IAAIA,EAAMiB,IAJT,IAKjC,EAjELr0B,uEAsCaw5B,GAA4B10B,6GAA5B00B,EAA4Bz0B,iHAxBsCoU,ihBAXvErU,sCAAwD,qBAAxDA,CAAwD,gBAEZA,+BAAMA,2BAC1CA,wCAGIA,0DAAiBuE,wBAA8B,iCAHnDvE,+BAQRA,uCAGAA,sCAKIA,+EAQJA,uCA3B4BA,+CAKhBA,0HAMuCA,kEAK/CA,uEAA0B,qBAILA,yfC7EjC,oBACA1E,4EAmBoB0E,uCAIIA,sBACJA,qEADIA,+GAEJA,2EAGIA,mGAWAA,qCACIA,uDACJA,qEADIA,qJAEJA,uCAIIA,sBACJA,qEADIA,kGAEJA,uCAIIA,6BACJA,kDACAA,uCAIIA,6BACJA,kDACAA,uCAIIA,4BACJA,kDACAA,uCAIIA,4BACJA,kDACAA,uCAIIA,4BACJA,4BA3ExB,MA8Fa80B,EA9Fbr5B,cAgGoBM,aAAS,EACTA,eAAW,EACXA,gBAAY,EACXA,eAAY,IAAIqF,eAChBrF,YAAS,IAAIqF,cAKjC,CAHckL,cACP,OAAOvQ,KAAKiO,KAAKkmB,YAAYplB,IAAKrO,GAAMA,EAAE8I,MAAMc,KAAK,KACxD,EAxGLnL,wEA8Fa45B,EAA6B,kDAA7BA,EAA6B70B,g7EA3FlCD,qCAIC,cAKOA,iDAASuE,eAAa,GAEtBvE,sCAGIA,wCAMAA,wCAKJA,2BACAA,sCAAwC,UAAxCA,CAAwC,SAE3BA,sBAAyBA,2BAC9BA,sCACIA,uBACJA,6BAEJA,uCACIA,uCAGAA,0CAMAA,0CAMAA,0CAMAA,0CAMAA,0CAMAA,0CAMJA,+BAGRA,2CAKIA,iDAASuE,kBAAgB,GAEzBvE,0CAAUA,uBAERA,sCAnFNA,kDAcaA,oFAKAA,sGAOIA,4EAEDA,iFAIoBA,0EAKnBA,kFAMAA,mHAMAA,6GAMAA,kHAMAA,sHAMAA,qHAWbA,8EAGUA,2QCzF1B,iBAOA3G,WACAC,cAGAgC,8HAaoB0E,0DAOIA,mIAAaA,0CAAkB,EAA/BA,CAAgC,yGACtBA,wCAAiB,GAAK,GACnCA,sFANGA,iCAAa,gCAAbA,CAAa,cAAbA,CAAa,2DAVzBA,uCACIA,qCAA2BA,qCAAYA,2BACvCA,oCACIA,oDACJA,2BAEAA,qCACIA,0FAUJA,2BACJA,oFAfQA,mJAMqBA,uKAmBrBA,0DAOIA,mIAAaA,0CAAkB,EAA/BA,CAAgC,yGACtBA,wCAAiB,GAAK,GACnCA,sFANGA,iCAAa,gCAAbA,CAAa,4CAAbA,CAAa,2DAPrBA,qCAIIA,0FAUJA,sEARyBA,8HAP7BA,uCACIA,sEAeJA,kHAbSA,yHAAmC,qCAgB5CA,uCAGC,UAEOA,8EACJA,oDAIJA,uCAIIA,0CACAA,qCAAsBA,mDAA0BA,oCADnCA,gEA5D7B,MAmEa+0B,EAoBTt5B,YAAoB6M,iBAnBJvM,YAAiB,GACjBA,cAAmB,GACnBA,oBAAiC,GACjCA,eAAsB,GACrBA,eAAY,IAAIqF,eAChBrF,cAAW,IAAIqF,eAEhBrF,UAAO,IAAIkN,kBAAgC,IAC3ClN,aAAUA,KAAKuM,OAAOmE,QACtB1Q,eAAYA,KAAKuM,OAAO0sB,cACxBj5B,mBAAe,mBAAc,CACzCA,KAAKgJ,KACLhJ,KAAKuM,OAAO2sB,iBACbt4B,MAAK,SAAI,EAAEorB,EAAGmN,KAAOnN,EAAEhe,OAAQtN,GAAMA,EAAEyzB,aAAalrB,SAME,CAJ9C0tB,WACP,OAAO32B,KAAKuM,OAAOqqB,aACtB,CAIMvL,YAAYC,GACXA,EAAQ8N,iBACRl5B,QAAQuZ,IAAI,YAAazZ,KAAKo5B,gBAC9Bp5B,KAAKgJ,KAAKsE,KAAKtN,KAAKo5B,gBAAkB,IAE7C,CAEMtd,YAAYud,GACf,OAAOr5B,KAAK+b,WAAWrZ,SAAS22B,EACnC,CAEMC,WAAWrrB,EAAoBsrB,GAAuB,GACzDv5B,KAAKkc,SAASlM,KAAK/B,GACfsrB,GACAtrB,EAAKsC,QAAQyE,QAAStU,UAAaA,EAAE0zB,OAE5C,EAzGLj1B,oEAmEa65B,GAAyB/0B,6GAAzB+0B,EAAyB90B,29BAhE9BD,sCACIA,+EAmBAA,qCAA2BA,gCAAOA,2BAClCA,oCACIA,oDACJA,2BACAA,+EAiBJA,2BACAA,yFAUAA,2IAnDmBA,4HAqBXA,uJAEWA,gGAA0B,+OCvCrD,iBAEAzG,GADA+B,QACAA,UACA9B,WACAC,WAQAC,UACAC,2CAoBA,MAGa47B,EAoGT95B,YACYE,EACAD,GADAK,YACAA,iBArGJA,cAAW,IAAIkN,kBAAsC,IACrDlN,cAAW,IAAIkN,kBAAsC,CACzDwQ,OAAQ,GACR6U,KAAM,GACNa,WAAY,KAERpzB,cAAW,IAAIkN,kBAAgB,IAEvBlN,aAAUA,KAAK6Y,SAASzL,eACxBpN,aAAUA,KAAKwa,SAASpN,eAExBpN,cAAWA,KAAKJ,KAAK6P,gBAAgB7O,MACjD,YAAQF,KAAQA,IAChB,eAAWA,IACP,kBAAaA,EAAE4I,GAAI,qBAAqB1I,MACpC,gBAAYF,IAAM,QAAG,QAG7B,SAAKA,GAAMA,EAAEyiB,UACb,SAAKziB,GACDV,KAAKL,UAAU85B,KAAK,2BAA4B/4B,EAAEywB,iBAEtD,iBAAY,IAGAnxB,kBAAeA,KAAKoC,SAASxB,MACzC,SAAKF,GAAMA,EAAEg5B,cAAgB,KAEjB15B,kBAAeA,KAAKoC,SAASxB,MACzC,SAAKF,GAAMA,EAAEi5B,gBAAkB,KAGnB35B,qBAA6C,mBAAc,CACvEA,KAAKod,SACLpd,KAAKJ,KAAK6P,kBACX7O,MACC,YAAO,EAAEF,EAAG8P,OAAWA,IACvB,eAAU,GAAI3G,QAAQ2G,MAClBxQ,KAAK6Y,SAASvL,KAAK,WACZ,kBAAazD,GAAQ2G,EAAIlH,GAAI,YAAY1I,MAC5C,SAAK7C,GAAMA,EAAEolB,QAAQpU,IAAKrO,GAAM,IAAI4xB,eAAa5xB,MACjD,gBAAYA,GAAM,QAG1B,SAAKA,GAAMV,KAAK6Y,SAASvL,KAAK,MAC9B,iBAAY,IAGAtN,gBAAaA,KAAKk5B,eAAet4B,MAC7C,SAAKF,IAAM,YAAOA,EAAEqO,IAAKrR,GAAMA,EAAE6f,aAGrBvd,oBAAgB,mBAAc,CAC1CA,KAAKwa,SACLxa,KAAKk5B,iBACNt4B,MACC,kCACI,YAEQ8c,SACA6U,OACAa,aACAvR,UACApW,OACAC,WACAmK,aAEJmW,IAEA,MAAMwF,QAAc,6BAChB3P,GACFhhB,YAEF,IAAImI,GADJ0U,EAASA,EAAO/D,eAEVqS,EAAEhe,OAAQtN,GAAMA,EAAE8I,KAAKmQ,cAAcjX,SAASgb,IAC9CsO,EACNhjB,SAAOupB,EAAKtpB,OACND,EAAKgF,OAAQtN,GAAM6xB,EAAKxQ,MAAOtkB,GAAMiD,EAAE6xB,KAAK7vB,SAASjF,KACrDuL,EACNA,EAAOoqB,EAAWnqB,OACZD,EAAKgF,OAAQtN,GAAM0yB,EAAW1wB,SAAShC,EAAE6c,WACzCvU,EACNA,EAAOA,EAAKgF,OAAQtN,IAChB,2BAAsBA,EAAG8wB,EAAO,CAC5B/lB,OACAC,WACAmK,eAGD7M,CACV,GAlCL,wDAoCA,iBAAY,GAUZ,CAPO4tB,oBACP,OAAO52B,KAAKJ,KAAKg3B,aACpB,CAOMjuB,WAAWixB,GACd55B,KAAKod,SAAS9P,KAAK,IAAKtN,KAAKod,SAAS3P,cAAemsB,GACxD,CAEMhB,WAAWgB,GACd55B,KAAKwa,SAASlN,KAAK,IAAKtN,KAAKwa,SAAS/M,cAAemsB,GACxD,EAlHLz6B,oEAGaq6B,GAAyBv1B,yIAAzBu1B,EAAyBpqB,QAAzBoqB,EAAyB,qBAFtB,mHClChB,iBAGAh8B,GAFA+B,SACAA,QACAA,YACAA,+LA8DgB0E,0CAKIA,sJAAqB,KAAI,GAL7BA,yBASAA,4BArEhB,MAAMkY,EAAuB,GAE7B,MA4Ha0d,EAsBTn6B,YACYC,EACAm6B,EACAl6B,EACyBke,GAHzB9d,iBACAA,cACAA,YACyBA,aAzB9BA,eAAiC,KACjCA,cAA2B,IAAKA,KAAK8d,MAAM,IAAM,IA0BpD9d,KAAK85B,OAAOlB,WAAW54B,KAAK8d,MAAM,GACrC,CAzBU/B,gBACP,OACI/b,KAAKL,UAAUwC,IAAc,yBAA2Bga,CAE/D,CAEUG,mBACP,OAAOtc,KAAKiQ,SAASlB,IAAKrO,GAAMA,EAAE+zB,WAAWnqB,KAAK,IACrD,CAEUiS,YACP,OAAOvc,KAAKiQ,SAASuM,OAAO,CAAC/e,EAAGC,IAAMD,EAAIC,EAAEw2B,SAAU,EACzD,CAEUyC,WACP,OAAO32B,KAAKJ,KAAKg3B,aACpB,CAWMla,WAAWpT,GACd,OAAOA,GAAMtJ,KAAKsc,aAAa5Z,SAAS4G,EAC3C,CAEMqT,YAAY1O,EAAoB2O,GACnC1c,QAAQuZ,IAAI,UAAWxL,EAAM2O,GAC7B,MAAM5T,EAAOhJ,KAAKiQ,SAASjC,OACtBtN,GAAMA,EAAE+zB,YAAcxmB,EAAKwmB,WAEhC,GAAI7X,EAAO,CACP,MAAM6a,EAAW,IAAInF,eAAarkB,GAClCjF,EAAK6T,KAAK4a,GACVz3B,KAAK+5B,UAAYtC,CACpB,CACDz3B,KAAKiQ,SAAWjH,CACnB,CAEM8T,gBAAgB7O,GACnB,MAAM8O,EAAW/c,KAAK+b,UACHgB,EAASra,SAASuL,EAAK3E,IAOtCtJ,KAAKL,UAAUqd,gBACX,uBACAD,EAAS/O,OAAQtN,GAAMA,IAAMuN,EAAK3E,KAPtCtJ,KAAKL,UAAUqd,gBAAgB,uBAAwB,IAChDD,EACH9O,EAAK3E,IAQhB,EA1LLnK,yEA4Ha06B,GAA8B51B,+LA0B3B6C,mBAAe,kDA1BlB+yB,EAA8B31B,mGA9GlBoU,yFA6DRA,wFAcwCA,wFAGNA,4EAC/B,mDA5BHA,8wDA9DTrU,sCAEC,aAFDA,CAEC,aAFDA,CAEC,cAOqBA,8BAAKA,6BAEnBA,2DAAqBA,6BAEzBA,uCAGIA,mDAGAA,sCAGIA,oDAIAA,sDAKIA,sDAAauE,oBAAuB,EAApCvE,CAAqC,8CAGxCA,6BAELA,yDAMIA,yDAAgBuE,4BAA+B,EAA/CvE,CAAgD,8BAMnCuE,8BAA2B,EANxCvE,CAAgD,sCAO3B,IAAI,GAC5BA,6BAELA,2CAGIA,6CAUAA,qEASAA,6BAEJA,2CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAOqCA,oCAAUA,2BACpCA,kEAA6CA,+BAGrDA,gEAEAA,2BACAA,2CAIIA,iDAERuE,2BAC0CA,2DAGpD,GACkBvE,wCAA+B,kBACDA,uBAExBA,2BACFA,wCACIA,uBAKJA,0CA3GJA,+EAkBIA,6DAGAA,uGAA+B,0BAA/BA,CAA+B,4BAA/BA,CAA+B,yBAYnCA,wEAA2B,uBAF3BA,2CAAmB,qFAAnBA,CAAmB,cAAnBA,CAAmB,wFAsBlBA,oEAUDA,qEADAA,sDAaAA,+EAUJA,oFAIIA,uHADAA,gDAU8BA,kIAItBA,kbCxH5B,iBACA3G,WAGAC,4HA6CoC0G,uCAIIA,uDACJA,8GADIA,iJAbZA,oDAIC,WAJDA,CAIC,YAGWA,sBACJA,2BACAA,yCAMJA,uDAZAA,qCAIQA,wEAICA,qIArBrBA,uCACIA,mDAIIA,mKAAiBA,iDAAgC,GAEjDA,oDAA6C,aACXA,6BAAIA,6BAEtCA,sDAiBJA,2BACJA,0FAhB4BA,4GA0BhBA,uCAIIA,uDACJA,8GADIA,uLAZZA,gDAEIA,0LAEAA,uCAA8C,YAEtCA,sBACJA,2BACAA,yCAMJA,wFAZAA,uDAIQA,wEAICA,8FAVbA,qGACoBA,mFAtChCA,sCAIC,WAC2CA,sBAAgBA,2BACxDA,sCACIA,iDA6BAA,wFAkBJA,oFAnDAA,wCAEwCA,+DAErBA,oEAAuB,eAjB1D,MAmFa+1B,EASTt6B,YACqCoe,gBARpB9d,WAAQ,IAAIqF,eAItBrF,kBAAiC,GACxBA,UAAOA,KAAK8d,MAAM6Y,KAK9B,MAAMzU,GAAS,YACXliB,KAAK8d,MAAMvN,QAAQxB,IAAKrR,GAAMA,EAAE0kB,OAAS,UAEvCiW,EAAa,GACnB,UAAWjW,KAASF,EAAQ,CACxB,MAAM3R,EAAUvQ,KAAK8d,MAAMvN,QAAQvC,OAAQtQ,GAAMA,EAAE0kB,QAAUA,GAC7DiW,EAAWxb,KAAK,CACZrT,KAAM4Y,EACNoQ,WAAYjiB,EAAQ4H,KAAMza,GAAMA,EAAE80B,UAClCjiB,WAEP,CACDvQ,KAAKkiB,OAASmW,CACjB,CAEMJ,kBAAkB7V,EAA4B9Y,GACjD,UAAW6rB,KAAU/S,EAAM7R,QACvBvQ,KAAKo4B,aAAajD,EAAO7rB,IAAM6rB,EAAO7rB,KAAOA,CAEpD,CAEM2wB,cACH,MAAM1pB,EAAUvQ,KAAK8d,MAAMvN,QAAQvC,OAC9BspB,GAAQt3B,KAAKo4B,aAAad,EAAIhuB,KAEnCtJ,KAAKgY,MAAMhI,KAAK,CAAEqT,OAAQ,OAAQ0B,SAAU,CAAExU,YACjD,EAzHLpR,6EAmFa66B,GAAkC/1B,8BAU/B6C,mBAAe,kDAVlBkzB,EAAkC91B,y4BAhFvCD,uCAAQ,QACAA,uCAAcA,2BAClBA,yCAAyC,cAC3BA,8BAAKA,+BAGvBA,uCACIA,wCAwDJA,2BACAA,yCAAoB,cACgBA,iDAASuE,eAAa,GAClDvE,gCACJA,oCA1DsBA,kgBCzBlC,iBAGA3G,UAGA6B,sBAAa+6B,EA0BTx6B,YAAYa,EAA+B,IACvCP,KAAKsJ,GAAK/I,EAAK+I,IAAM,UAAS,eAAU,QAAW,OACnDtJ,KAAKm6B,UAAY55B,EAAK45B,WAAa,GACnCn6B,KAAK0mB,SAAWnmB,EAAKmmB,UAAYnmB,EAAKyX,OAAO1O,IAAM,GACnDtJ,KAAKmqB,OAAS5pB,EAAK4pB,OAAS,IAAIpb,IAAKrR,GAAM,IAAI40B,eAAa50B,IAC5DsC,KAAKo6B,WAAap6B,KAAKmqB,MAAM3N,OACzB,CAACC,EAAQxO,IAASwO,EAASxO,EAAKimB,SAChC,GAEJl0B,KAAKu0B,WAAav0B,KAAKmqB,MAAM3N,OACzB,CAACC,EAAQxO,IAASwO,GAAUxO,EAAKsmB,YAAc,GAC/C,GAEJv0B,KAAKq6B,YAAc95B,EAAK85B,aAAe,GACvCr6B,KAAKiiB,OAAS1hB,EAAK0hB,QAAU,WAC7BjiB,KAAKs6B,eAAiB/5B,EAAK+5B,gBAAkB,GAC7Ct6B,KAAKgY,MAAQzX,EAAKyX,OAAS,KAC3BhY,KAAKu6B,MAAQh6B,EAAKg6B,OAAS,GAC3Bv6B,KAAKw6B,WACDj6B,EAAKi6B,YACJj6B,EAAakL,MACdzL,KAAKgY,OAAOvM,OACZ,IAAIgB,MAAOguB,SAClB,EAjDLt7B,mGCJA,iBAIA3B,GAFA+B,SACAA,SACAA,2HAyCgB0E,0CAA+EA,6BAAIA,sEAA/BA,mHApC5DA,sCAKC,UALDA,CAKC,UALDA,CAKC,cASqBA,qCAAYA,+BAG9BA,sCACIA,mDACJA,2BACAA,sCACIA,sBAKJA,2BACAA,uCACIA,uBAKJA,2BACAA,wCAAkBA,uBAAwCA,2BAC1DA,wCACIA,6CACJA,2BACAA,wCACIA,uBACJA,2BACAA,wCAAkB,eAAlBA,CAAkB,aASNA,uBACJA,2BACAA,6CAAuBA,yCAAeA,+BAG9CA,wCAAkB,gBACUA,wKACpBA,0CAAUA,uBAIRA,0GA3DVA,qDAAiC,4BAM7BA,6EAAgC,oCAUhCA,8HAGAA,qMAOAA,2NAMcA,2FAELA,sEAGTA,0GAOIA,mGACAA,8CAGIA,mGAOMA,wIAclBA,sCAIIA,oEAVRA,sCAMIA,wCAMJA,qEATIA,8CACAA,2DAKqBA,yIAKrBA,0CAIIA,8HAASA,6CAAuB,GAEhCA,kCAIAA,wCAAwBA,sBAAiBA,yDAFrCA,8EAEoBA,gEA5FxC,MAmHay2B,EAcTh7B,YAAoB42B,kBAXbt2B,iBAAa,EAEJA,cAAW26B,oBAEX36B,kBAAgBnC,GAC5BmC,KAAKs2B,QAAQsE,aAAa56B,KAAKy2B,MAAO54B,EAMY,CAJ3CokB,aACP,OAAOjiB,KAAK66B,SAAS1iB,KAAMza,GAAMA,EAAE4L,KAAOtJ,KAAKy2B,MAAMxU,OACxD,EA/HL9iB,iEAmHau7B,GAAsBz2B,yGAAtBy2B,EAAsBx2B,i2CAhH3BD,0CAiEAA,uCAaAA,gDACIA,2CAYJA,kCAvFKA,uCA8DAA,gGAesBA,qgBA6BnB,CAACxE,sICxHjB,iBACAnC,WACAC,WAEAC,WACAC,WACAC,WAEAC,sBA0BA,MAGam9B,UAA8Br7B,YA0CvCC,cACIK,QA1CIC,WAAQ,IAAIkN,kBAAwB,GACpClN,cAAW,IAAIkN,mBAAyB,GACxClN,cAAW,IAAIkN,kBAAsC,IAG7ClN,aAAsC,mBAAc,CAChEA,KAAKwa,SACLxa,KAAK4Y,QACNhY,MACC,kBAAa,MACb,eAAU,GAAI6K,OAAM7B,aAChB5J,KAAK6Y,SAASvL,MAAK,GACnB,MAAM6S,GAAQ,kBAAY,gBAAW1U,GAAQgB,KAAKiM,QAC5C0H,GAAM,kBAAY,cAAS3U,GAAQgB,KAAKiM,QAC9C,OAAO,iBAAY,CACfkW,UAAWhlB,GAAS,IAAIU,KAAK,KAC7BwP,aAAcqG,EACdpG,WAAYqG,GAHT,IAMX,SAAKjG,IAAW,aAAQA,EAAOpL,IAAKiJ,GAAUA,EAAM+iB,IAAI,gBACxD,SAAI,IAAM/6B,KAAK6Y,SAASvL,MAAK,KAC7B,iBAAY,IAGAtN,aAAUA,KAAK6Y,SAASzL,eAUxBpN,cAAWA,KAAKg7B,OAAOp6B,MACnC,SAAKoI,GACDA,EAAKgF,OAAQyoB,GAvDzB,WACIA,EACA/b,GAEA,MAAM7c,GAAK6c,EAAQgD,QAAU,IAAI/D,cACjC,QAAS8c,EAAMtM,MAAMhS,KAChBlK,GACGA,EAAKzE,KAAKmQ,cAAcjX,SAAS7E,MAC/BoQ,EAAKsC,QAAQ4H,KAAMgd,GACjBA,EAAO3rB,KAAKmQ,cAAcjX,SAAS7E,IAGlD,CA2CkCo9B,CAAWxE,EAAOz2B,KAAKwa,SAAS/M,eAM3DzN,KAAK6I,aAAa,UAAW7I,KAAKg7B,OAAOjyB,YAC5C,CAjBU2R,cACP,OAAO1a,KAAKwa,SAAS/M,UACxB,CAEUiN,YAAQA,GACf1a,KAAKwa,SAASlN,KAAKoN,EACtB,CAcMtD,aAAawD,EAAgB,MAChC5a,KAAK6a,SACD,UACA,IAAM7a,KAAK4Y,MAAMtL,MAAK,IAAIb,MAAOiX,WACjC9I,EAEP,CAGMI,cACHhb,KAAKib,cAAc,UACtB,CAOM2f,aAAanE,EAAsBxU,GACtC,MAAMiZ,EAAgB,IAAIpE,gBAAc,IAAKL,EAAOxU,WAC9CjK,EAAQ,IAAImjB,gBAAc,IACzB1E,EAAMze,MACTojB,SAAU,IACH3E,EAAMze,MAAM+iB,IAAI,YAAY/sB,OAAQrQ,GAAMA,EAAE2L,KAAOmtB,EAAMntB,IAC5D4xB,GACFnsB,IAAKrR,GAAM,IAAIo5B,gBAAc,IAAKp5B,OAExC,OAAO,eAAUsa,EACpB,EA/EL7Y,gEAGa27B,EAAqB,qDAArBA,EAAqB1rB,QAArB0rB,EAAqB,qBAFlB,4ICnChB,iBAEAt9B,GADA+B,QACAA,UACA9B,cACA8B,yKA0CwB0E,sCAGIA,+HAASA,2CAAoB,GAE7BA,mCACIA,2CAIJA,2BACAA,mCAAIA,sBAAsCA,2BAC1CA,sCAAuB,yEAcfA,qDAOJA,oGAzBIA,qFAGJA,+EAIIA,4IAIC,0FAODA,gOAxDxBA,uCAGC,YAHDA,CAGC,YAHDA,CAGC,OAHDA,CAGC,WAMgCA,kHAASA,qCAAW,KAAI,GACrCA,uGAYJA,2BACAA,8BACAA,sCACIA,sDACJA,+BAGRA,uCACIA,0EAoCJA,qFAtDgBA,8IAGC,yHAULA,uIAMcA,yHAkDlCA,wCAGIA,0CACAA,kCAAGA,qDAA4BA,8BA/F/C,MA2Gao3B,EAMT37B,YACYu1B,EACAr1B,GADAI,iBACAA,YAPLA,cAAU,EACVA,cAAqB,GACZA,YAAQ,0BAAqBA,KAAKJ,KAAK8P,SAASpG,IAChDtJ,kBAAeA,KAAKi1B,UAAU3E,YAK1C,CAESgL,WAAWhyB,GAAU,gCAC9B,GAAW,MAAPA,EAAY,CACZ,MAAMiyB,QAAcr5B,EAAKq5B,MAAM36B,MAAK,UAAK,IAAIC,YAEzCqB,EAAK+N,SADL/N,EAAK+N,SAAShH,SAAWsyB,EAAMtyB,OACfsyB,EAAMxsB,IAAKrO,GAAMA,EAAE4I,IAClB,EACxB,MAEOpH,EAAK+N,SADL/N,EAAK+N,SAASvN,SAAS4G,GACPpH,EAAK+N,SAASjC,OAAQtN,GAAMA,IAAM4I,GACjC,IAAIpH,EAAK+N,SAAU3G,EATd,IAWjC,CAEYkyB,iBAAc,gCACvB96B,EAAKgQ,SAAU,EAEf,MAAM1H,SADsBtI,EAAK4vB,aAAa1vB,MAAK,UAAK,IAAIC,aACjCmN,OAAQtN,IAAOA,EAAKuP,SAASvN,SAAShC,UAC3DA,EAAKu0B,UACNwG,aAAa,CAAE9B,eAAgB3wB,IAC/BrG,MAAM,IAAM,MACjBjC,EAAKgQ,SAAU,CAPQ,IAQ1B,CAEYgrB,kBAAe,gCACxB,MAAMC,QAAsBj7B,EAAK4vB,aAAa1vB,MAAK,UAAK,IAAIC,YACtDmI,GAAO,YAAO2yB,EAAcxF,OAAOz1B,EAAKuP,iBACxCvP,EAAKu0B,UACNwG,aAAa,CAAE9B,eAAgB3wB,IAC/BrG,MAAM,IAAM,MACjBjC,EAAKgQ,SAAU,CANS,IAO3B,EApJLvR,2EA2Gak8B,GAAgCp3B,6JAAhCo3B,EAAgCn3B,08BAxGrCD,oCAAK,aAALA,CAAK,UAEmBA,4DAAmCA,2BACnDA,yCAAyC,cAC3BA,8BAAKA,+BAGvBA,2CAqEAA,yCAEC,cACsBA,iDAASuE,kBAAgB,GACxCvE,2CACJA,2BACAA,0CAAmBA,iDAASuE,mBAAiB,GACzCvE,4CACJA,+BAGRA,mIA9ESA,mEAAgB,gZClBjC1E,eACAhC,WAKAC,WACAC,WAWAC,WAWAE,GAFA2B,QAEAA,SAIA1B,WAIAC,WAIAC,UACAoG,WACAC,UAKAC,WAIAC,sDAQA,MAGas3B,UAA6Bn8B,YA+CtCC,YACYE,EACAmL,EACApL,GAA0B,MAElCI,QAFkCuG,OAF1BtG,YACAA,eACAA,iBAjDJA,cAAW,IAAIkN,kBAAgB,GAE/BlN,WAAQ,IAAIkN,kBAAgC,IAE5ClN,cAAW,IAAIkN,mBAAyB,GAExClN,eAAY,IAAIkN,kBAAwB,OAEhClN,UAAOA,KAAK67B,MAAMzuB,eAElBpN,aAAUA,KAAK6Y,SAASzL,eAExBpN,cAAWA,KAAK87B,UAAU1uB,eAE1BpN,cAAWA,KAAKJ,KAAK6P,gBAAgB7O,MACjD,YAAQF,KAAQA,IAChB,eAAWA,IACP,kBAAaA,EAAE4I,GAAI,qBAAqB1I,MACpC,gBAAYF,IAAM,QAAG,QAG7B,SAAKA,GAAOA,EAAEyiB,SAAgC,KAC9C,SAAKziB,GACDV,KAAKL,UAAU85B,KAAK,2BAA4B/4B,GAAGywB,iBAEvD,iBAAY,IAGAnxB,kBAAeA,KAAKoC,SAASxB,MACzC,SAAKF,GAAMA,EAAEg5B,cAAgB,KAEjB15B,kBAAeA,KAAKoC,SAASxB,MACzC,SAAKF,GAAMA,EAAEi5B,gBAAkB,KAG5B35B,UAAO,GAiBVA,KAAK6I,aACD,WACA7I,KAAKJ,KAAK6P,gBAAgB1G,UAA1B,mBAAoC,UAAOyH,GACvC,GAAIA,EAAK,CACL,MAAMqlB,SAAcvvB,EAAKy1B,mBAAmBvrB,EAAIlH,KAAKyF,IAChDrR,GAAM,IAAI40B,eAAa50B,IAE5B4I,EAAKw1B,UAAUxuB,KACXhH,EAAK3G,UAAUwC,IAAI,iBACfqO,EAAImlB,UACJ,OAERrvB,EAAKu1B,MAAMvuB,KAAKuoB,EACnB,CACJ,GAZD,uDAcP,CA/BUN,kBACP,OAAQv1B,KAAK6J,MAAQ7J,KAAK6J,OAAS7J,KAAKJ,KAAK8P,UAAUpG,EAC1D,CAEU8pB,iBACP,MAAMyC,EAAO71B,KAAK67B,MAAMpuB,WACxB,OAAO,YAAOooB,EAAK9mB,IAAKrR,GAAMA,EAAE6f,UACnC,CA8BYye,oBAAoBvF,GAAoB,gCACjD,MAAM9qB,EAAMswB,EAAKlxB,QAAQP,KAGvB0xB,8BAA6B,CAC3B37B,KAAM,CACFo2B,KAAMsF,EAAKH,UAAUruB,WACrBgpB,QACAZ,KAAMoG,EAAKpG,KACXnlB,QAASurB,EAAKvrB,QACdqmB,kBAAoBr2B,GAAMu7B,EAAKlF,kBAAkBr2B,GACjD62B,cAAgB72B,GAAMu7B,EAAK1E,cAAc72B,MAG3CyiB,QAAgB5hB,QAAQmjB,KAAK,CAC/B/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBxiB,YACL8K,EAAIG,cAAcjL,cAEtB8K,SAAIhI,QACGwf,GAAS4B,UAAU0R,OAASA,CArBc,IAsBpD,CAEYpB,QAAQpnB,EAAqB,IAAIqkB,gBAAc,gCACxD,MAAM3mB,EAAMswB,EAAKlxB,QAAQP,KAGvB2xB,6BAA4B,CAC1B57B,KAAM,CACF0N,OACAmlB,WAAY6I,EAAK7I,cAGnBjQ,QAAgB5hB,QAAQmjB,KAAK,CAC/B/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBxiB,YACL8K,EAAIG,cAAcjL,cAEtB,GAAwB,SAApBsiB,GAASE,OAAmB,OAChC,MAAMwS,EAAOoG,EAAKJ,MAAMpuB,WAClBsmB,EAAQ8B,EAAKlT,UAAW0U,GAAQA,EAAI/tB,KAAO2E,EAAK3E,IAClDyqB,GAAS,EACT8B,EAAKnT,OAAOqR,EAAO,EAAG5Q,EAAQ4B,SAAS9W,MAEvC4nB,EAAKhZ,KAAKsG,EAAQ4B,SAAS9W,MAE/BguB,EAAKG,WAAWH,EAAKr8B,KAAK8P,SAASpG,GAAIusB,GAAM2B,KACzC,KACIyE,EAAKJ,MAAMvuB,KAAK,IAAIuoB,IACpBlqB,EAAIhI,OAAJ,EAEJ,IAAOgI,EAAII,kBAAkB2E,SAAU,EA7Ba,IA+B3D,CAEM+kB,WAAWxnB,GACd,MAAM4nB,EAAO71B,KAAK67B,MAAMpuB,WAClBsmB,EAAQ8B,EAAKlT,UAAW0U,GAAQA,EAAI/tB,KAAO2E,EAAK3E,IAClDyqB,GAAS,EAAG8B,EAAKnT,OAAOqR,EAAO,EAAG9lB,GACjC4nB,EAAKhZ,KAAK5O,GACfjO,KAAKo8B,WAAWp8B,KAAKJ,KAAK8P,SAASpG,GAAIusB,GAAM2B,KAAK,IAC9Cx3B,KAAK67B,MAAMvuB,KAAK,IAAIuoB,IAE3B,CAEYX,UACTjnB,EACAknB,EAAyB,IAAS,gCAElC,MAAMa,GAAQ,YAAO/nB,EAAKsC,QAAQxB,IAAKrR,GAAMA,EAAE0kB,QACzCzW,EAAMtF,EAAK0E,QAAQP,KAGvB6xB,mCAAkC,CAChC97B,KAAM,CACF21B,OAAQjoB,EACRknB,SACAa,WAGF7S,QAAgB5hB,QAAQmjB,KAAK,CAC/B/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBxiB,YACL8K,EAAIG,cAAcjL,cAEtB,GAAwB,SAApBsiB,GAASE,OAAmB,OAChC,MAAMwS,EAAOxvB,EAAKw1B,MAAMpuB,WAClBsmB,EAAQ8B,EAAKlT,UAAW0U,GAAQA,EAAI/tB,KAAO2E,EAAK3E,IAClDyqB,GAAS,EACT8B,EAAKnT,OAAOqR,EAAO,EAAG5Q,EAAQ4B,SAAS9W,MAEvC4nB,EAAKhZ,KAAKsG,EAAQ4B,SAAS9W,MAE/B5H,EAAK+1B,WAAW/1B,EAAKzG,KAAK8P,SAASpG,GAAIusB,GAAM2B,KACzC,KACInxB,EAAKw1B,MAAMvuB,KAAK,IAAIuoB,IACpBlqB,EAAIhI,OAAJ,EAEJ,IAAOgI,EAAII,kBAAkB2E,SAAU,EAhCT,IAkCrC,CAEY6mB,cAAchnB,GAAyB,gCAChD,MAAM5E,EAAMswB,EAAKlxB,QAAQP,KAGvB8xB,qCAAoC,CAClC/7B,KAAM,CACFo2B,KAAMsF,EAAKH,UAAUruB,WACrB8C,aAGF4S,QAAgB5hB,QAAQmjB,KAAK,CAC/B/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBxiB,YACL8K,EAAIG,cAAcjL,cAEtB,MAAwB,SAApBsiB,GAASE,OAA0B,IACvC1X,EAAIhI,QACGwf,EAAQ4B,SAASxU,QAlBwB,IAmBnD,CAEY+kB,WAAWrnB,GAAkB,gCACtC,MAAMkV,QAAgB,sBAClB,CACI5M,MAAO,uBACPxC,QAAS,qDAAqD9F,EAAKzE,sBACnE4Z,KAAM,CACFxa,KAAM,OACN2zB,MAAO,iBACPxoB,QAAS,WAGjBkoB,EAAKlxB,SAET,GAAuB,SAAnBoY,EAAQE,OAAmB,OAC/BF,EAAQzS,QAAQ,6BAChB,MAAMmlB,EAAOoG,EAAKJ,MAAMpuB,WAAWO,OAAQqpB,GAAQppB,EAAK3E,KAAO+tB,EAAI/tB,IACnE2yB,EAAKG,WAAWH,EAAKr8B,KAAK8P,SAASpG,GAAIusB,GAAM2B,KACzC,KACIyE,EAAKJ,MAAMvuB,KAAK,IAAIuoB,IACpB1S,EAAQxf,OAAR,EAEJ,IAAMwf,EAAQzS,QAAQ,IArBY,IAuBzC,CAEY0kB,aAAannB,EAAoBknB,GAAsB,gCAChE,MAAMhS,QAAgB,sBAClB,CACI5M,MAAO,8BACPxC,QAAS,wDAAwDohB,EAAO3rB,eAAeyE,EAAKzE,SAC5F4Z,KAAM,CACFxa,KAAM,OACN2zB,MAAO,iBACPxoB,QAAS,WAGjB1N,EAAK0E,SAET,GAAuB,SAAnBoY,EAAQE,OAAmB,OAC/BF,EAAQzS,QAAQ,oCAChB,MAAMmlB,EAAOxvB,EAAKw1B,MAAMpuB,WACxBooB,EAAKnT,OACDmT,EAAKlT,UAAW0U,GAAQA,EAAI/tB,KAAO2E,EAAK3E,IACxC,EACA,IAAIgpB,eAAa,IACVrkB,EACHsC,QAAStC,EAAKsC,QAAQvC,OAAQspB,GAAQA,EAAIhuB,KAAO6rB,EAAO7rB,OAGhEjD,EAAK+1B,WAAW/1B,EAAKzG,KAAK8P,SAASpG,GAAIusB,GAAM2B,KACzC,KACInxB,EAAKw1B,MAAMvuB,KAAK,IAAIuoB,IACpB1S,EAAQxf,OAAR,EAEJ,IAAMwf,EAAQzS,QAAQ,IA7BsC,IA+BnE,CAEY8rB,aAAU,gCACnB,MAAMlL,QAAepvB,EAAK60B,kBAAkB70B,EAAKtC,KAAK8P,SAASpG,KACvD6nB,uBAAwBjvB,EAAKE,SAASxB,MAAK,UAAK,IAAIC,YACtDg1B,EAAO3zB,EAAK25B,MAAMpuB,WAClBuoB,GAAQ,aAAO,aAAQH,EAAK9mB,IAAKrR,GAAM,CAACA,EAAE6f,YAAa7f,EAAE60B,SACzD5mB,EAAMzJ,EAAK6I,QAAQP,KAGvBiyB,+BAA8B,CAC5Bl8B,KAAM,CACF+wB,SACA0E,QACA7E,gBACAS,UAAYrrB,GAAMrE,EAAKu5B,aAAa,CAAEtK,cAAe5qB,OAGvD4c,QAAgB5hB,QAAQmjB,KAAK,CAC/B/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBxiB,YACL8K,EAAIG,cAAcjL,cAEE,SAApBsiB,GAASE,QACbnhB,EAAKw6B,aAAax6B,EAAKtC,KAAK8P,SAASpG,GAAI6Z,EAAQ4B,UAAUyS,KACvD,IAAM7rB,EAAIhI,QACV,IAAOgI,EAAII,kBAAkB2E,SAAU,EAzBxB,IA2BtB,CAEYisB,aAAU,gCACnB,MAAMhxB,EAAMzJ,EAAK6I,QAAQP,KAAKoyB,oCACxBzZ,QAAgB5hB,QAAQmjB,KAAK,CAC/B/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBxiB,YACL8K,EAAIG,cAAcjL,cAEtB,GAAwB,SAApBsiB,GAASE,OAAmB,OAChC1X,EAAII,kBAAkB2E,QAAU,mBAChC,MAAMmlB,EAAO3zB,EAAK25B,MAAMpuB,WAClB+C,EAAMtO,EAAKtC,KAAK8P,SAChBmtB,GAAe,YAAO1Z,EAAQ4B,SAASoR,OAAON,GAAO,YACrD3zB,EAAKk6B,WAAW5rB,EAAIlH,GAAIuzB,GAAcl6B,MAAOjC,IAC/C,uBAAY,iCACZiL,EAAIhI,QACEjD,KAEV,mBACI,wCAAwCyiB,EAAQ4B,SAAS9b,yBAE7D0C,EAAIhI,OArBe,IAsBtB,CAEOy4B,WAAWva,EAAiBgU,GAChC,OAAO,oBAAehU,EAAS,CAC3BvY,GAAIuY,EACJrY,KAAM,WACN2Z,QAAS0S,EACTnsB,YAAa,qBAAqBmY,MACnChhB,WACN,CAEY46B,aAAar5B,GAA0B,gCAChD,MAAM06B,QAAqBb,EAAK75B,SAASxB,MAAK,UAAK,IAAIC,YACvD,OAAO,oBAAeo7B,EAAKr8B,KAAK8P,SAASpG,GAAI,CACzCA,GAAI2yB,EAAKr8B,KAAK8P,SAASpG,GACvBE,KAAM,oBACN2Z,QAAS,IAAK2Z,KAAiB16B,GAC/BsH,YAAa,yBAAyBuyB,EAAKr8B,KAAK8P,SAASpG,OAC1DzI,WAP6C,IAQnD,CAEak7B,mBAAmBla,GAAe,qBAC5C,MAAMgU,SAAc,kBAAahU,EAAS,YAAYhhB,aACjDsiB,QACL,OAAO0S,aAAgBpU,MAAQoU,EAAO,EAHM,IAI/C,CAEYkB,kBACTlV,EAAkB7hB,KAAKJ,KAAK8P,SAASpG,IAAE,qBAEvC,MAAMkoB,SACI,kBAAa3P,EAAS,mBAAmBhhB,aACjDsiB,QACF,OAAOqO,aAAiB/P,MAAS+P,EAAgB,EALV,IAM1C,CAEOkL,aAAa7a,EAAiByP,GAClC,OAAO,oBAAezP,EAAS,CAC3BvY,GAAIuY,EACJrY,KAAM,kBACN2Z,QAASmO,EACT5nB,YAAa,4BAA4BmY,MAC1ChhB,WACN,CAEMk8B,eAAetG,EAAsBgB,GACxC,IAAItN,EAAQsM,EAAMtM,MAClB,MAAM6S,EAAQ7S,EAAMhS,KACflK,GACGA,EAAK3E,KAAOmuB,EAASnuB,IACrBmuB,EAASlnB,SAAStH,SACdgF,EAAKsC,SAASiM,OACV,CAAClf,EAAGK,IACAL,GACCm6B,EAASlnB,QAAQ4H,KAAMmf,GAAQ35B,EAAE2L,KAAOguB,EAAIhuB,IACvC,EACA,GACV,IAGhB0zB,SACQA,EAAc9I,UAAY,EAC3B/J,EAAQA,EAAMgM,OAAO,CAClB,IAAI7D,eAAa,IAAKmF,EAAUvD,SAAU,MAElC,IAAI4C,gBAAc,IAC7BL,EACHtM,QACAnS,MAAO,MAGd,EAhYL7Y,+DAGay8B,GAAoB33B,2KAApB23B,EAAoBxsB,QAApBwsB,EAAoB,qBAFjB,6FCjBHz8B,aAAyB,CAClC,CAAEmK,GAAI,aAAcE,KAAM,qBAC1B,CAAEF,GAAI,cAAeE,KAAM,sBAC3B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,YAAaE,KAAM,2BACzB,CAAEF,GAAI,eAAgBE,KAAM,+BAC5B,CAAEF,GAAI,eAAgBE,KAAM,gBAC5B,CAAEF,GAAI,SAAUE,KAAM,kBARY,iGC7CtC,iBAEAjM,GADAgC,SACAA,UACA/B,WACAC,WACAC,WACAC,WACAC,WACAC,WACAC,WACAC,SAEAoG,WAEAC,aAEA7E,SACAA,QACAA,SACAA,SACAA,SACAA,SACAA,SACAA,QACAA,SACAA,SACAA,SAEAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,mBA0BA,MAoBa09B,GApBb99B,+DAoBa89B,EAAoB,iDAApBA,uDAjBLx9B,eACA+H,gBACAG,gBACAP,wBACAN,kBACAW,oBACAK,iBACAD,mBACAzC,cACAA,sBACAgkB,mBACAriB,qBACAtB,yGC5ER4V,2BACAA,0BACAA,2BACAA,0BACAA,0BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,sHCfalc,oBAAgC,CACzC,CAAEmK,GAAI,UAAWE,KAAM,UAAW4Z,KAAM,CAAEmZ,MAAO,kBAAoBW,OAAQ,QAC7E,CAAE5zB,GAAI,WAAYE,KAAM,WAAY4Z,KAAM,CAAEmZ,MAAO,mBAAqBW,OAAQ,WAChF,CACI5zB,GAAI,YACJE,KAAM,YACN4Z,KAAM,CAAEmZ,MAAO,oBACfW,OAAQ,WAEZ,CAAE5zB,GAAI,QAASE,KAAM,QAAS4Z,KAAM,CAAEmZ,MAAO,gBAAkBW,OAAQ,WACvE,CACI5zB,GAAI,YACJE,KAAM,YACN4Z,KAAM,CAAEmZ,MAAO,oBACfW,OAAQ,WAEZ,CACI5zB,GAAI,YACJE,KAAM,YACN4Z,KAAM,CAAEmZ,MAAO,oBACfW,OAAQ,WApB6B,gICD7C39B,eACAhC,WACAC,cACA+B,mLAeY0E,sCAOC,qBAPDA,CAOC,aAIWA,mLAFJA,6BAMJA,yCAAwBA,2HAASA,wCAAa,GAC1CA,yCAAUA,+BAAMA,sFALZA,uGAfhBA,uCAIIA,wCAmBJA,qEAfJA,0EACE,4FAeEA,0CAGC,eAEOA,uCACAA,yCAGIA,oHAAUA,8CAAwB,GAHtCA,6BAMJA,0CAAgCA,kHAASA,oCAAS,GAC9CA,mCACJA,2BACAA,0CAAgCA,kHAASA,4CAAiB,GACtDA,uCACJA,oDAGAA,wCAGIA,0CACAA,kCAAGA,0DAAiCA,8BAzDpD,MA+Dak5B,EAITz9B,YACY6M,EACA0gB,GADAjtB,cACAA,mBALLA,kBAAyB,GACzBA,cAAU,CAKb,CAESC,WAAQ,gCACjBiC,EAAKw3B,oBACMx3B,EAAKqK,OAAOmtB,aAAa94B,MAAK,UAAK,IAAIC,cAAgB,EAFjD,IAGpB,CAEMu8B,UACHp9B,KAAK05B,aAAa7c,KAAK,GAC1B,CAEMwgB,WAAWtJ,GACd/zB,KAAK05B,aAAahX,OAAOqR,EAAO,EACnC,CAMMuJ,iBAAiBtlB,GAEpB,GAAIA,EAAMga,OAAQ,CACd,MAAME,EAAOla,EAAMga,OAAOC,MAAM,GAEhC,GAAIC,EAAM,CACN,MAAMqL,EAAS,IAAInL,WACnBmL,EAAO7K,WAAWR,EAAM,SACxBqL,EAAOlL,iBAAiB,OAASmL,IAC7B,MAAMx0B,GACF,eAAWw0B,EAAIC,WAAmBr6B,SAAW,GACjD,UAAauzB,UAAuB3tB,EAChChJ,KAAK05B,aAAa7c,KAAK8Z,GAE3B32B,KAAK05B,cAAe,YAAO15B,KAAK05B,cAChC1hB,EAAMga,OAAO1uB,MAAQ,KAEzBi6B,EAAOlL,iBAAiB,QAAU3xB,IAC9B,iBAAY,uBAEnB,CACJ,CACJ,CAEYg9B,kBAAe,gCACxBx7B,EAAKwO,SAAU,EACf,MAAMitB,EAAgBz7B,EAAKw3B,aAAa1rB,OAAQtN,GAAMA,GAAKA,EAAEkzB,cACvD1xB,EAAKqK,OAAOkvB,aAAa,CAAE/B,aAAciE,IAC/Cz7B,EAAK+qB,YAAYtpB,OAJO,IAK3B,CAEM2T,UAAUiN,EAAatW,GAC1B,OAAOsW,CACV,EA1HLplB,uEA+Dag+B,GAA4Bl5B,sJAA5Bk5B,EAA4Bj5B,ugCA5DjCD,uCAAQ,QACAA,0CAAiBA,2BACrBA,yCAAyC,cAC3BA,8BAAKA,+BAGvBA,yCAwBAA,2CAmBAA,iIA1CKA,mEAAgB,cAyBhBA,iXCzCb,iBAEA3G,WAIAC,WACAC,WACAC,WAEMmgC,EAA+D,GAErEz+B,qCACI0iB,EACAgc,GAAiB,GAEjB,OAAKhc,KACA+b,EAAc/b,IAAYgc,KAC3BD,EAAc/b,IAAW,kBAAaA,EAAS,mBAAmBjhB,MAC9D,SAAKF,GAAMA,EAAEyiB,UACb,gBAAY5jB,IAAM,QAAG,OAEtBq+B,EAAc/b,KANA,QAAG,GAO3B,EAED1iB,mCACI8O,EACAujB,EACAxZ,GAEA,IAAI8lB,GAAe,EACnB,UAAWC,KAAQvM,EACf,GACIvjB,EAAKsP,WAAawgB,EAAKv0B,MACvByE,EAAKskB,KAAK7vB,SAASq7B,EAAKv0B,OACxBwO,EAAMnC,UAAUsC,KAAMzX,GAAMA,EAAEkJ,MAAMlH,SAASq7B,EAAKv0B,QAClDwO,EAAMxJ,OAAO5E,MAAMlH,SAASq7B,EAAKv0B,OACnB,MAAdu0B,EAAKv0B,KACP,CACE,IAAIw0B,EAAU,EACd,UAAWC,KAAaF,EAAKvM,MAAO,CAChC,MAAM/lB,EAAO,IAAIgB,KAAKuL,EAAMvM,MAC5B,OAAQwyB,EAAU,QACT,YACDD,IAAW,cACPvxB,KAAKiM,OACL,cAASjN,EAAMwyB,EAAU,KAEvB,EACA,EACN,UACC,eACDD,IAAW,aACPvxB,KAAKiM,OACL,cAASjN,EAAMwyB,EAAU,KAEvB,EACA,EACN,UACC,aACDD,IAAW,aAAQvyB,GAAM,cAASA,EAAMwyB,EAAU,KAC5C,EACA,EACN,UACC,cACDD,IAAW,cAASvyB,GAAM,cAASA,EAAMwyB,EAAU,KAC7C,EACA,EACN,UACC,aACDD,GACIhmB,EAAMtM,WAAY,qBAAgBuyB,EAAU,IACtC,EACA,EACV,UACC,aACDD,GACIhmB,EAAMtM,WAAY,qBAAgBuyB,EAAU,IACtC,EACA,EACV,UACC,eACDD,GACIhmB,EAAM+iB,IAAI,kBAAoBkD,EAAU,GAAK,EAAI,EACrD,cAEAD,GAAW,EAEtB,CACDF,EAAeE,GAAWD,EAAKvM,MAAMvoB,MACxC,CAEL,OAAO60B,CACV,CApED3+B,oFCzBAkc,2BACAA,2BACAA,2BACAA,kKCHA,iBAEalc,8BAA6B,aAAQ,OAAQ,EACtD,gBAAW,SAAU,EACjB,WAAM,CAAE++B,QAAS,EAAGh7B,OAAQ,KAC5B,aAAQ,KAAK,WAAM,CAAEg7B,QAAS,EAAGh7B,OAAQ,UAE7C,gBAAW,SAAU,EACjB,WAAM,CAAEg7B,QAAS,EAAGh7B,OAAQ,OAC5B,aAAQ,KAAK,WAAM,CAAEg7B,QAAS,EAAGh7B,OAAQ,SAIpC/D,kCAAiC,aAAQ,OAAQ,EAC1D,WAAM,QAAQ,WAAM,CAAE++B,QAAS,EAAGh7B,OAAQ,QAC1C,WAAM,QAAQ,WAAM,CAAEg7B,QAAS,EAAGh7B,OAAQ,EAAG,iBAAkB,WAC/D,gBAAW,iBAAiB,aAAQ,mBAHM,wFCP9C/D,2BAA8B4P,GAC1B,IAAIovB,EAAM,GACV,GAAIpvB,EACA,UAAW4V,KAAO5V,EACV4V,KAAO5V,GAAP4V,MAAc5V,EAAI4V,KAClBwZ,GAAO,GAAIA,EAAM,IAAM,KAAMxZ,KAAO8D,mBAAmB1Z,EAAI4V,OAIvE,OAAOwZ,CACV,CAVDh/B,gICJA,iBACA5B,WAEA,IAAI6gC,0BA6BJ,UAA8BC,GAC1B,GAAIA,EAAMC,kBAAmBD,EAAME,kBAAkB,CAEjD,IADA,SAAI,QAAS,8CACFF,EAAMG,kBAAkB,QACnC,gBAAW,gDAAiD,UAAW,IACnEh8B,SAASwB,SAEhB,CACJ,0BA7BD7E,wBACIk/B,EACAxjB,EAAmB,KAEfwjB,EAAMC,YACFF,GAAQnjB,cAAcmjB,GAC1BA,EAAcK,YAAY,MACtB,SAAI,QAAS,sCAcVD,2BAbHA,CAAeH,EAAD,EACfxjB,GAEV,EAED1b,+BACQi/B,GAAQnjB,cAAcmjB,EAC7B,uFC3BD,4BAIA,MAGaM,EAHbh/B,cAKcM,aAAsC,GAEtCA,gBAAyC,GAEzCA,oBAEN,GAEeA,kBAAe,IAAIkN,mBAAyB,GAE/ClN,iBAAcA,KAAK2+B,aAAavxB,cAkInD,CA/HcwxB,qBACP,OAAO5+B,KAAK2+B,aAAalxB,UAC5B,CAEM+oB,cACHx2B,KAAK6+B,SACR,CAESA,UACN,UAAWla,KAAO3kB,KAAK8+B,QACfna,KAAO3kB,KAAK8+B,SACZ9+B,KAAKyB,aAAakjB,GAG1B,UAAWA,KAAO3kB,KAAK++B,WACfpa,KAAO3kB,KAAK++B,YACZ/+B,KAAKib,cAAc0J,GAG3B,UAAWA,KAAO3kB,KAAKg/B,eACfra,KAAO3kB,KAAKg/B,gBACZh/B,KAAKi/B,MAAMta,EAGtB,CAQSzjB,QAAQsI,EAAcqgB,EAAgBjP,EAAgB,KAC5D,KAAIpR,GAAQqgB,GAAMA,aAAcqV,UAO5B,MAAM,IAAIC,MACN31B,EACM,6CACA,8CATVxJ,KAAKyB,aAAa+H,GAClBxJ,KAAK8+B,QAAQt1B,GAAa41B,WAAW,KACjCvV,WACO7pB,KAAK8+B,QAAQt1B,IACrBoR,EAQV,CAMSnZ,aAAa+H,GACfxJ,KAAK8+B,QAAQt1B,KACb/H,aAAazB,KAAK8+B,QAAQt1B,WACnBxJ,KAAK8+B,QAAQt1B,GAE3B,CAQSqR,SAASrR,EAAcqgB,EAAgBjP,EAAgB,KAC7D,KAAIpR,GAAQqgB,GAAMA,aAAcqV,UAI5B,MAAM,IAAIC,MACN31B,EACM,8CACA,+CANVxJ,KAAKib,cAAczR,GACnBxJ,KAAK++B,WAAWv1B,GAAai1B,YAAY,IAAM5U,IAAMjP,EAQ5D,CAMSK,cAAczR,GAChBxJ,KAAK++B,WAAWv1B,KAChByR,cAAcjb,KAAK++B,WAAWv1B,WACvBxJ,KAAK++B,WAAWv1B,GAE9B,CAOSX,aAAaW,EAAcy1B,GACjCj/B,KAAKi/B,MAAMz1B,GACXxJ,KAAKg/B,eAAex1B,GAAQy1B,CAC/B,CAES3lB,gBAAgB9P,GACtB,OAAOxJ,KAAKg/B,eAAex1B,aAAiB0D,kBAAkBlN,KAAKg/B,eAAex1B,EACrF,CAMSy1B,MAAMz1B,GACRA,KAAQxJ,KAAKg/B,iBACTh/B,KAAKg/B,eAAex1B,aAAiB0D,eACpClN,KAAKg/B,eAAex1B,GAAc2F,cAC5BnP,KAAKg/B,eAAex1B,IAC1BxJ,KAAKg/B,eAAex1B,YAElBxJ,KAAKg/B,eAAex1B,GAElC,CAGSsP,UAAUumB,GAChB,MAAMC,EAAO7pB,OAAOC,KAAK1V,KAAKg/B,gBAAgBhxB,OAAQ8J,GAClDA,EAAEpV,SAAS28B,IAEf,UAAW1a,KAAO2a,EACdt/B,KAAKi/B,MAAMta,EAElB,EAhJLxlB,oDAGau/B,EAAS,qDAATA,EAAStvB,QAATsvB,EAAS,qBAFN,0KCLhB,iBACAphC,WACAC,WACAC,WAoBA,WAAmBiO,GACf,MAAM8zB,GAAW,qBAAgB9zB,EAAM,OACvC,MAAO,IAAG,YAAO8zB,EAAU,gBAAe,YAAOA,EAAU,YAC9D,CAED,WAAsB9zB,GAClB,MAAO,IAAG,YAAOA,EAAM,aAC1B,CAsFD,WAA2B0yB,GACvB,OAAOA,EACFhhB,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,SAAU,MAClBA,QAAQ,OAAQ,OAChBA,QAAQ,iBAAkB,MAClC,CA3FDhe,sCAAyC6Y,GACrC,MAAMwnB,EAA0B,GAC1B91B,EAAc+1B,EAAkB,GAAGznB,EAAMoP,QACzC5kB,EAAWi9B,EAAkB,GAAGznB,EAAMxV,YAC5Cg9B,EAAO3iB,KAAK,CAAC,QAAS,cACtB2iB,EAAO3iB,KAAK,CAAC,UAAW,QACxB2iB,EAAO3iB,KAAK,CAAC,QAAS,WACtB2iB,EAAO3iB,KAAK,CAAC,MAAO,GAAG7E,EAAM0nB,gBAC7BF,EAAO3iB,KAAK,CAAC,UAAW,GAAG,IAAIpQ,KAAKuL,EAAMvM,MAAMk0B,kBAChDH,EAAO3iB,KAAK,CACR,QACA,IAAG,gBAAW7E,EAAMvM,KAAMuM,EAAMtM,UAAY,IAAIi0B,kBAEpDH,EAAO3iB,KAAK,CAAC,UAAW,GAAG7E,EAAMzB,UACjCipB,EAAO3iB,KAAK,CAAC,cAAenT,IAC5B81B,EAAO3iB,KAAK,CAAC,WAAYra,IACzB,MAAM4H,EACF4N,EAAMxM,WAAWhC,MACjBwO,EAAM5N,MAAMrH,MAAM,MAClBiV,EAAMgO,WACN,OACJwZ,SAAO3iB,KAAK,CACR,YACA,MAAMzS,YAAe4N,EAAM5N,MAAQ4N,EAAMwM,eAKtC,mCAHUgb,EACZzwB,IAAI,EAAE4V,EAAKrhB,KAAW,GAAGqhB,KAAO8D,mBAAmBnlB,MACnDgH,KAAK,OAEb,EAEDnL,wCAA2C6Y,GACvC,MAAM4nB,EAAM5nB,EAAMyL,QAAUoc,EAAeC,EACrC3c,EAAe,CACjB3P,OAAQ,WACRusB,KAAM/nB,EAAMzB,MACZ4M,QAASnL,EAAMoP,KACf5kB,SAAUwV,EAAMxV,SAChBw9B,KAAK,EACLC,MAAO,GAAGL,EAAI5nB,EAAMvM,SAASm0B,GACzB,gBAAW5nB,EAAMvM,KAAMuM,EAAMtM,UAAY,QAG3Cw0B,GAAUloB,EAAMzM,WAAa,IAAIwD,IAAKrO,GAAWA,EAAEoC,OAASpC,GAC5DmV,IACDmC,EAAMnC,WAAW5M,OAAS+O,EAAMnC,UAAY,OAAS,CAACmC,EAAMlC,SAC/D/G,IAAKrO,GAAWA,GAAGoC,OAASpC,GAC9B,OAAIw/B,EAAOj3B,QAAU4M,EAAU5M,UAC3Bka,EAAQgd,KAAM,YAAO,IAAID,KAAWrqB,IAAYvL,QAC7C,gDAA+C,mBAClD6Y,IAEP,EAEDhkB,2CACI6Y,EACApP,EAA6B,WAExBoP,EAAMvM,OAAMuM,EAAMvM,KAAOgB,KAAKiM,OACnC,MAAMnY,EAAY,CACdtC,KAAM,2BACNmiC,IAAK,WACLC,QAAS,IAAI5zB,KAAKuL,EAAMvM,MAAMk0B,cAC9BW,OAAO,gBAAWtoB,EAAMvM,KAAMuM,EAAMtM,UAAY,IAAIi0B,cACpDY,QAASvoB,EAAMzB,MACf6Q,KAAMpP,EAAMoP,KACZ5kB,SAAUwV,EAAMxV,SAChBg+B,OAAQxoB,EAAMyL,UAAW,GAEvByc,GAAUloB,EAAMzM,WAAa,IAAIwD,IAAKrO,GAAWA,EAAEoC,OAASpC,GAC5DmV,IACDmC,EAAMnC,WAAW5M,OAAS+O,EAAMnC,UAAY,OAAS,CAACmC,EAAMlC,SAC/D/G,IAAKrO,GAAWA,GAAGoC,OAASpC,GAC9B,OAAIw/B,EAAOj3B,QAAU4M,EAAU5M,UAC3B1I,EAAKkgC,IAAK,YAAO,IAAIP,KAAWrqB,IAAYvL,QAChC,WAAT1B,EACD,2DAA0D,mBACtDrI,KAEJ,yDAAwD,mBACpDA,IAEb,CASA,6LC5HD,eAASkV,oFAAS,IAClB,eAASA,8GAAsB,IAC/B,eAASA,8FAAc,IACvB,eAASA,gGAAe,IACxB,eAASA,4FAAa,IACtB,eAASA,gFAAO,IAEhB4F,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,uKCjBA9b,eACAhC,cAEAgC,SACAA,kDAEAJ,2BAAsBuhC,IAItB,MAGaC,EACTjhC,YACYwI,EACAvI,EACAC,GAFAI,eACAA,iBACAA,WACR,CAES3B,cAAW,gCACpB,OAAO+F,EAAKw8B,cADQ,IAEvB,CAEYtiC,UAAO,gCAChB,OAAO8F,EAAKw8B,cADI,IAEnB,CAEaA,eAAY,sCAChBx8B,EAAKxE,KAAKe,YAAYC,MAAK,WAAOF,GAAMA,IAAIG,kBAC5CuD,EAAKzE,UAAUgB,YAAYC,MAAK,WAAOF,GAAMA,IAAIG,YAEvD,MAAMggC,IADWz8B,EAAKzE,UAAUwC,IAAI,0BAA4B,IACjCgW,KAAMzX,GACjC0D,EAAK8D,QAAQsT,IAAI9Y,SAAShC,IAE9B,OAAKmgC,GACDz8B,EAAK8D,QAAQK,SAAS,CAAC,QAElBs4B,CAVa,IAWzB,EA7BL1hC,gEAGawhC,GAAqB18B,wKAArB08B,EAAqBvxB,QAArBuxB,EAAqB,qBAFlB,qGCXhB,iBAIAxhC,8BAAiCgkB,GAC7B,IAAI2d,EAAkB3d,EAAQ2d,SAAW,GACzCA,SAAUA,EAAQC,OAAO,GAAGC,cAAgBF,EAAQG,MAAM,GACnDH,EAAU,GAAGA,YAAiB,YAAO,IAAIr0B,KAAK0W,EAAQ/C,KAAM,iBAAmB,iBACzF,CAJDjhB,ibCLA,iBAEA5B,WACAC,WAiBA,IAAI0jC,EAAY,MA6EhB,WAA0BC,EAAc3gB,EAAgB,GACpD,OAAOD,KAAKC,MAAMD,KAAKmR,UAAYyP,EAAO3gB,IAAUA,CACvD,yBAmCM,UACHjgB,EACA8C,GAEA,MAAMsI,EAAMtI,EAAOmH,KACf42B,wBACA,IACOA,mBACH7gC,SAGR,MAAO,UACOgB,QAAQmjB,KAAK,CACnB/Y,EAAII,kBAAkBiM,MACjBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBxiB,YACL8K,EAAIG,cAAcjL,cAEtB6P,QAAU7S,GAAO8N,EAAII,kBAAkB2E,QAAU7S,EACjD8F,MAAO,IAAMgI,EAAIhI,QAExB,0BArIDxE,wBAA2BqK,GACvB03B,EAAY13B,CACf,EAUDrK,iBACIyJ,EACAy4B,EACAC,EACAC,EAAwB,QACxBve,GAAiB,EACjBwe,EAAmBN,GAEnB,IAAI9gC,OAAOqhC,OACPrhC,OAAOshC,OAAS1e,GAAO,CACvB,MAAM2e,EAAmB,CACrB,iBACA,iBACA,kBAEAL,EACAphC,QAAQqhC,GACJ,MAAMC,QAAe54B,QAAWy4B,OAC7BM,EACHL,GAGJphC,QAAQqhC,GAAQ,MAAMC,QAAe54B,QAAWy4B,OAAUM,EAEjE,CACJ,EAODxiC,6BAAgCuW,EAAgB3G,GAC5C,MAAM4V,EAAMjP,EAAK,GACjB,OAAI3G,GAAO4V,KAAO5V,EACP2G,EAAKzM,OAAS,EACf24B,EAAgBlsB,EAAKurB,MAAM,GAAIlyB,EAAI4V,IAAQ,IAC3C5V,EAAI4V,GAEP,IACV,EAODxlB,oBAAgCyP,EAAa,GAAI+V,EAAc,IAC3D,OAAO/V,EAAMZ,OACT,CAAC6zB,EAAIC,EAAK/zB,IACNA,EAAIimB,QAEMjmB,EAAIoK,KADVwM,EACgBjnB,GAAMA,EAAEinB,KAASkd,EAAGld,GACpBjnB,GAAMA,IAAMmkC,MAC1BC,EAEjB,EAOD3iC,cASAA,uBAA0Bg/B,EAAsBl1B,EAAiB,GAE7D,IADAk1B,EAAM,GAAGA,IACFA,EAAIl1B,OAASA,GAAQk1B,EAAM,IAAIA,IACtC,OAAOA,CACV,EAODh/B,0BACI8J,EACA84B,EAAgB,iEAEhB,IAAI5D,EAAM,GACV,QAASzgC,EAAI,EAAGA,EAAIuL,EAAQvL,IACxBygC,GAAO4D,EAAMC,EAAUD,EAAM94B,SAEjC,OAAOk1B,CACV,EAQDh/B,8BAAsB8iC,qCA2BtB9iC,uBAA0B+iC,EAAaC,EAAoB,KACvD,MAAMC,EAAa,IAAIC,OACnB,+DACA,MAEJ,IAAIC,EAAa,KACjB,MAAMC,EAAU,CAAC,IACjB,KAAQD,EAAaF,EAAWI,KAAKN,IAC7BI,EAAW,GAAGr5B,QAA4B,MAAlBq5B,EAAW,IAAYC,EAAQ1lB,KAAK,IAChE0lB,EAAQA,EAAQt5B,OAAS,GAAG4T,KACxBylB,EAAW,GACLA,EAAW,GAAGnlB,QAAQ,IAAIklB,OAAO,KAAM,KAAM,KAC7CC,EAAW,IAGzB,MAAMG,EAAoBF,EAAQ7f,OAAO,EAAG,GAAG,GAe/C,OAdiB6f,EAAQxzB,IAAK2zB,IAC1B,MAAM3b,EAAU,GAChB,QAASrpB,EAAI,EAAGA,EAAIglC,EAAIz5B,OAAQvL,IAAK,CACjC,MAAMinB,GAAO8d,EAAQ/kC,IAAM,IAAIqF,MAAM,KAAKuH,KAAK,KAAKqP,cACpD,IACIoN,EAAQpC,GAAO/iB,KAAK2f,MAAMmhB,EAAIhlC,GAGjC,CAFA,MACGqpB,EAAQpC,GAAO+d,EAAIhlC,IAAM,EAC5B,EACoB,SAAjBqpB,EAAQpC,IAAoC,UAAjBoC,EAAQpC,MACnCoC,EAAQpC,GAAwB,SAAjBoC,EAAQpC,GAC9B,CACD,OAAOoC,GAGd,EAED5nB,wCAA2C6Y,GACvC,OAAO,IAAIzW,QAAgB,CAACC,EAASmhC,KAEjC,GAAI3qB,EAAMga,OAAQ,CACd,MAAMjL,EAAU/O,EAAMga,OAChBE,EAAOnL,EAAQkL,MAAM,GAE3B,GAAIC,EAAM,CACN,MAAMqL,EAAS,IAAInL,WACnBmL,EAAO7K,WAAWR,EAAM,SACxBqL,EAAOlL,iBAAiB,OAASmL,IAC7Bh8B,EAASg8B,EAAIC,WAAmBr6B,QAChC2jB,EAAQzjB,MAAQ,KAEpBi6B,EAAOlL,iBAAiB,QAAU3xB,IAC9BV,KAAK0Q,QAAU,GACfiyB,EAAO,CAAC,qBAAsBjiC,GAAxB,EAEb,CACJ,GAER,EAMDvB,uBAA0ByjC,GACtB,GAAIA,aAAgBnhB,OAASmhB,EAAK35B,OAAS,EAAG,CAE1C,MAAM45B,EAAantB,OADCA,KAAKktB,EAAK,IACN50B,OAAQ2W,GAAQA,KAAOie,EAAK,IACpD,MAAO,GAAGC,EAAWv4B,KAAK,SAASs4B,EAC9B7zB,IAAKd,GACF40B,EAAW9zB,IAAK4V,GAAQ/iB,KAAKC,UAAUoM,EAAK0W,KAAOra,KAAK,MAE3DA,KAAK,OACb,CACD,MAAO,EACV,EAODnL,0BAA6B2jC,EAAkBC,GAC3C,MAAMhc,EAAUjM,SAASkM,cAAc,KACvCD,EAAQic,aACJ,OACA,iCAAmCva,mBAAmBsa,IAE1Dhc,EAAQic,aAAa,WAAYF,GAEjC/b,EAAQE,MAAM9S,QAAU,OACxB2G,SAASsM,KAAKC,YAAYN,GAE1BA,EAAQkc,QAERnoB,SAASsM,KAAKQ,YAAYb,EAC7B,EAED5nB,sBAAyBuE,GAErB,MAAMw/B,EAASC,EADSpgC,MAAM,KAAK,GACVoa,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACpDimB,EAAcC,mBAChBC,KAAKJ,GACAngC,MAAM,IACNgM,IAAKzR,GACK,KAAO,KAAOA,EAAEimC,WAAW,GAAGC,SAAS,KAAKvC,OAAM,IAE5D32B,KAAK,KAEd,OAAO1I,KAAK2f,MAAM6hB,EACrB,EAODjkC,qBAAiCskC,GAC7B,MAAMC,EAAQ,IAAID,GACZE,EAAM,GACZ,KAAOD,EAAMz6B,QAAQ,CAEjB,MAAMqE,EAAOo2B,EAAMrhB,MACfZ,MAAMmiB,QAAQt2B,GAEdo2B,EAAM7mB,QAAQvP,GAEdq2B,EAAI9mB,KAAKvP,EAEhB,CAED,OAAOq2B,EAAIE,SACd,EASD1kC,kCAAqC2kC,EAAQC,EAAMC,EAAQC,GACvD,OACKH,GAAUE,GAAUF,EAASG,GAC7BF,EAAOC,GAAUD,EAAOE,GACxBD,GAAUF,GAAUE,EAASD,GAC7BE,EAAOH,GAAUG,GAAQF,CAEjC,EAED,MACMG,EAmBN,WAAe3mC,EAAGgJ,EAAGjJ,EAAGS,GACpB,OAAO,WAKH,IAAIN,GAJJF,KAAO,IACPgJ,KAAO,GAGW,EAClBhJ,SAAIgJ,EAAKA,IAAM,EACfA,GAJAjJ,KAAO,IAIGA,GAAK,GAAM,EAGrBG,EAAKA,GADLM,EAAS,GALTA,KAAO,GAKO,GACA,EACdT,GAHAA,EAAKA,GAAK,GAAOA,IAAM,IAGdG,EAAK,GACNA,IAAM,GAAK,UACtB,CACJ,CAlCY0mC,CAAM,WAAY,UAAY,WAO3C,WAAehG,GACX,IAAIh4B,EAAI,WAAag4B,EAAIl1B,OACzB,QAASvL,EAAI,EAAGA,EAAIygC,EAAIl1B,OAAQvL,IAC3ByI,EAAIoa,KAAK6jB,KAAKj+B,EAAIg4B,EAAIoF,WAAW7lC,GAAI,YACjCyI,EAAKA,GAAK,GAAOA,IAAM,GAChC,OAAO,WACHA,SAAIoa,KAAK6jB,KAAKj+B,EAAKA,IAAM,GAAK,YAC9BA,EAAIoa,KAAK6jB,KAAKj+B,EAAKA,IAAM,GAAK,aACtBA,GAAKA,IAAM,MAAQ,CAC9B,CACJ,CAlBYk+B,CAAM,UACoCC,IA0CvD,aAEI,MAAMC,GAAe94B,IADJgB,MAEZC,mBACGoO,SAAS0pB,cAAc,QAAQC,aAAa,SACxCC,UAAUC,UAEjBhrB,cACL,OAAO4qB,EAAavQ,QAAQ,MAAQ,GAAKuQ,EAAavQ,QAAQ,MAAQ,CACzE,CAjDD70B,kCAAqCgiC,EAAe,IAAK3gB,EAAgB,GACrE,OAAOD,KAAKC,MAAM0jB,KAAU/C,EAAO3gB,IAAUA,CAChD,EAiCDrhB,gCACI,OAAOylC,IAAiB,QAAU,QACrC,EAGDzlC,iBAWAA,8BAAiCiJ,EAAiBy8B,EAAiB,IAC/D,IAAIC,EAAU,GACd,UAAWngB,KAAOvc,EAAKmK,SACfnK,EAAKmK,SAASoS,aAAgBvf,YAC9B0/B,EAAU,IACHA,KACAC,EAAiB38B,EAAKmK,SAASoS,GAAmB,GAAGA,OAEpDvc,EAAKmK,SAASoS,GAAKta,OAC3By6B,EAAQjoB,KAAK,GAAGgoB,IAASlgB,KAGjC,OAAOmgB,CACV,EAED3lC,+BAAkC6lC,GAC9B,UAAWrgB,KAAOqgB,GACVA,QAAIrgB,IAAwD,KAAbqgB,EAAIrgB,YAC5CqgB,EAAIrgB,EAGtB,EAEDxlB,mCAAsC8lC,GAClC,MAAO,GAAGA,EAAK,GAAGjE,gBAAgBiE,EAAKC,UAAU,IACpD,CAFD/lC,mGC/XAI,mCASA,MAGa4lC,EAeTzlC,YAAoB6W,GAEX,IAAS7Y,EAAGG,EAAGF,EAASJ,EAAG47B,EAFhBn5B,aATbA,cAAU,EAEVA,cAAW,SAKVA,YAAqC,GAGpCI,OAAOglC,KACE1nC,EASP0C,OATUvC,EASFid,SATKnd,EASK,SARjBD,EAAE2nC,sBAQ0E,KAP3E3nC,EAAE2G,GACC3G,EAAE2G,IACF,YAAc3G,EAAE2G,GAAG0a,EAAIrhB,EAAE2G,GAAG0a,GAAK,IAAIlC,KAAKyoB,UAAa,EAAI5nC,EAAE2G,GAAG2nB,EAAI,EAAK,IAAIvf,KAChFlP,EAAIM,EAAEmpB,cAAcrpB,GAAMw7B,EAAIt7B,EAAE0nC,qBAAqB5nC,GAAG,GACzDJ,EAAEioC,MAAQ,EACVjoC,EAAEkoC,IAEyB,gDAD3BtM,EAAEuM,WAAWC,aAAapoC,EAAG47B,GAEjCj5B,QAAQuZ,IAAI,UAAW,wCAE3BzZ,KAAK4lC,QAAUxlC,OAAOglC,EACzB,CAMMS,KAAKC,GACR,IAAK9lC,KAAK6F,QAAW,MAAM,IAAIs5B,MAAM,iEACrC,IAAKn/B,KAAK4lC,QAAW,MAAM,IAAIzG,MAAM,uDACrCj/B,QAAQuZ,IAAI,UAAW,2BAA2BqsB,KAClD9lC,KAAK4lC,QAAQ,SAAUE,EAAa,QACpC9lC,KAAK4lC,QAAQ,OAAQ,WACxB,CAKMG,QAAQz8B,GACX,IAAKtJ,KAAK4lC,QAAW,MAAM,IAAIzG,MAAM,uDACjCn/B,KAAK6F,SACL7F,KAAKkB,QAAQ,QAAQoI,IAAM,KACvBpJ,QAAQuZ,IAAI,UAAW,gBAAgBnQ,KACvCtJ,KAAK4lC,QAAQ,MAAO,SAAUt8B,GAC9BtJ,KAAKgY,MAAM,iBAAkB,oBAA7B,EACD,IAEV,CASMA,MAAMuF,EAAkB/J,EAAgBwyB,EAAgB1iC,GAC3D,IAAKtD,KAAK4lC,QAAW,MAAM,IAAIzG,MAAM,uDACjCn/B,KAAK6F,SACL7F,KAAKkB,QAAQ,SAASqc,KAAY/J,KAAUwyB,KAAS1iC,IAAS,KAE1DpD,QAAQuZ,IAAI,UAAW,UAAU8D,MAAa/J,IADpCwyB,EAAQ,KAAOA,EAAQ,KAC0B1iC,EAAQ,KAAOA,EAAQ,MAElFtD,KAAK4lC,QAAQ,OAAQ,QAAS,GADf5lC,KAAKimC,WAAajmC,KAAKimC,WAAa,IAAM,KACf1oB,IAAY/J,EAAQwyB,EAAO1iC,EAArE,EACD,IAEV,CAOM4iC,OAAO18B,EAAcg4B,GACxB,IAAKxhC,KAAK4lC,QAAW,MAAM,IAAIzG,MAAM,uDACjC31B,GAAQxJ,KAAK6F,SACb7F,KAAKkB,QAAQ,SAASsI,KAAQg4B,GAAYxhC,KAAKwhC,WAAY,KACvDthC,QAAQuZ,IAAI,UAAW,WAAWjQ,IAAOg4B,EAAW,KAAOA,EAAW,MACtExhC,KAAK4lC,QAAQ,OAAQ,aAAc,CAC/BO,QAAS3E,GAAYxhC,KAAKwhC,SAC1B4E,WAAY58B,GAFhB,EAID,IAEV,CAOM68B,KAAKC,EAAe7jC,GAAkB,GACzC,IAAKzC,KAAK4lC,QAAW,MAAM,IAAIzG,MAAM,uDACjCn/B,KAAK6F,UACL7F,KAAKumC,WAAaD,GAAS,IAC3BtmC,KAAKkB,QAAQ,QAAQolC,IAAS,KAC1BpmC,QAAQuZ,IAAI,UAAW,SAAS6sB,KAChCtmC,KAAK4lC,QAAQ,OAAQ,WAAY,GAAGnjC,EAASD,SAASC,OAAS,KAAK6jC,IAApE,EACD,KAEV,CASME,OAAOjpB,EAAkBkpB,EAAkBnjC,EAAe0iC,GAC7D,IAAKhmC,KAAK4lC,QAAW,MAAM,IAAIzG,MAAM,uDACjCn/B,KAAK6F,SACL7F,KAAKkB,QAAQ,QAAQqc,KAAYkpB,KAAYnjC,KAAS0iC,IAAS,KAC3D9lC,QAAQuZ,IAAI,UAAW,WAAW8D,MAAakpB,MAAanjC,IAAQ0iC,EAAQ,KAAOA,EAAQ,MAC3FhmC,KAAK4lC,QAAQ,OAAQ,SAAUroB,EAAUkpB,EAAUnjC,EAAO0iC,EAA1D,EACD,IAEV,CAQO9kC,QAAQsI,EAAcqgB,EAAgBjP,EAAgB,KACtD5a,KAAK0mC,OAAOl9B,KACZ/H,aAAazB,KAAK0mC,OAAOl9B,WAClBxJ,KAAK0mC,OAAOl9B,IAEvBxJ,KAAK0mC,OAAOl9B,GAAa41B,WAAW,KAC5BvV,aAAcqV,UAAYrV,WACvB7pB,KAAK0mC,OAAOl9B,IACpBoR,EACN,EAlJLzb,iEAGagmC,GAAsBlhC,mFAAtBkhC,EAAsB/1B,QAAtB+1B,EAAsB,qBAFnB,mGCVhB,iBAGA7nC,sBAGMqpC,EAAoC,CAAC,UAAW,QAAS,MAAO,OAAQ,MAE9E,MAGaC,EAcTlnC,cAZQM,oBAAmD,GAEnDA,uBAAiD,GAEjDA,eAAsB,GAEtBA,uBAAgC,GAEhCA,aAAkB,EAKtBI,OAAOiyB,iBAAiB,UAAYra,IAChC,MAAM2e,EAAO32B,KAAK6mC,QAAQ7uB,EAAM2e,MAAQ,IAAIhd,eACxC3Z,KAAK8mC,YAAcnQ,IACd32B,KAAK+mC,eAAepQ,KACrB32B,KAAK+mC,eAAepQ,GAAQ,IAAIzpB,kBAAgB,MAChDlN,KAAKgnC,kBAAkBrQ,GAAQ32B,KAAK+mC,eAAepQ,GAAMvpB,gBAE7DpN,KAAK+mC,eAAepQ,GAAMrpB,OAAOtN,KAAKinC,SAClCjnC,KAAKknC,UAAUlT,QAAQ2C,IAAS,GAChC3e,EAAMmvB,iBAEVnnC,KAAK8mC,UAAYnQ,KAIzBv2B,OAAOiyB,iBAAiB,QAAUra,IAC9B,MAAM2e,EAAO32B,KAAK6mC,QAAQ7uB,EAAM2e,MAAQ,IAAIhd,eAC5C3Z,KAAK+mC,eAAepQ,GAAMrpB,KAAK,MAC3BtN,KAAK8mC,YAAcnQ,IACnB32B,KAAK8mC,UAAY,OAG5B,CAOM3tB,OAAOiuB,EAA0B95B,GAEpC,MAAM+5B,GADND,EAASA,aAAiB3lB,MAAQ2lB,EAAQA,EAAMrkC,MAAM,MAClBgM,IAAIrR,GAAKsC,KAAK6mC,OAAOnpC,EAAEic,gBAC3D,GAAI0tB,EAAYp+B,OAAS,GAAKjJ,KAAKsnC,iBAAiBD,GAAc,CAC9DrnC,KAAKunC,kBAAkB1qB,KAAKwqB,GAC5B,MAAMG,EAAWH,EAAYA,EAAYp+B,OAAS,GAClD,OAAKjJ,KAAK+mC,eAAeS,KACrBxnC,KAAK+mC,eAAeS,GAAY,IAAIt6B,kBAAgB,MACpDlN,KAAKgnC,kBAAkBQ,GAAYxnC,KAAK+mC,eAAeS,GAAUp6B,gBAErEpN,KAAKynC,2BACEznC,KAAKgnC,kBAAkBQ,GAAUz+B,UAAWwT,IAC/C,GAAIA,EAAO,CACP,MAAMmrB,EAAoB,GAC1B,GAAIL,EAAYp+B,OAAS,EAAG,CAExB,UAAW0b,KAAO0iB,EAAa,CAC3B,MAAMzqB,EAAQ5c,KAAK+mC,eAAepiB,GAClC+iB,EAAQ7qB,KAAKD,GAAQA,EAAMnP,aAAc,EAC5C,CAED,QAAS/P,EAAI,EAAGA,EAAI2pC,EAAYp+B,OAAS,EAAGvL,IACxC,GAAIgqC,EAAQhqC,GAAKgqC,EAAQhqC,EAAI,GAAM,MAE1C,CAEGiqC,EADkBnrB,OAAO,CAACjf,EAAGiH,IAAMjH,GAAKiH,EAAI,EAAI,GAAI,GAAK,IAChD6iC,EAAYp+B,QACrBqE,GAEP,GAER,CACD,OAAO,IACV,CAMOu5B,OAAOlQ,GACX,OAAIA,EAAK3C,QAAQ,QAAU,GAAK2C,EAAK3C,QAAQ,UAAY,GAAK2C,EAAK3C,QAAQ,YAAc,EAC9E2C,EAAKxZ,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAE9CwZ,CACV,CAKO8Q,2BAEJ,UAAWL,KAASpnC,KAAKunC,kBACrBvnC,KAAKknC,UAAUrqB,KAAKuqB,EAAMA,EAAMn+B,OAAS,IAE7CjJ,KAAKknC,WAAY,YAJA,GAKpB,CAMOI,iBAAiBF,GACrB,IAAIQ,EAAW,EACf,UAAWjjB,KAAOyiB,EACVT,EAAwB3S,QAAQrP,GAAO,GACvCijB,IAGR,OAAOA,EAAW,CACrB,EApHLzoC,yDAGaynC,EAAc,qDAAdA,EAAcx3B,QAAdw3B,EAAc,qBAFX,wBCRhB,IAAI3+B,EAgBJ,WACIW,EACAi/B,EACAr0B,EAAiB,KACjBs0B,EACAxW,EAAqC,IAErC,IAAKrpB,EACD,OAAQ7H,OAAOqhC,MAAQvhC,QAAQ6nC,KAAK,4CAExC,MAAMC,EAAe//B,EAASuC,KAAKq9B,EAASr0B,EAAQ,CAChDa,WAAY,CAACzL,GACb8C,SAAU,OACP4lB,IAEH9d,IACAs0B,EAAYA,GAAc,KAAME,EAAap4B,WAC7Co4B,EAAaC,WAAWl/B,UAAU,IAAM++B,KAE/C,4IA/BD3oC,6BAAgC+oC,GAC5BjgC,EAAWigC,CACd,EAUD/oC,WA4BAA,2BACIkiC,EACA7tB,EACAs0B,EACAxW,EAAqC,KAEpClxB,OAAOqhC,MAAQvhC,QAAQwhC,MAAML,GAC9B8G,EAAO,UAAW9G,EAAK7tB,EAAQs0B,EAAWxW,EAC7C,EASDnyB,yBACIkiC,EACA7tB,EACAs0B,EACAxW,EAAqC,KAEpClxB,OAAOqhC,MAAQvhC,QAAQ0C,MAAMy+B,GAC9B8G,EAAO,QAAS9G,EAAK7tB,EAAQs0B,EAAWxW,EAC3C,EASDnyB,wBACIkiC,EACA7tB,EACAs0B,EACAxW,EAAqC,KAEpClxB,OAAOqhC,MAAQvhC,QAAQ6nC,KAAK1G,GAC7B8G,EAAO,OAAQ9G,EAAK7tB,EAAQs0B,EAAWxW,EAC1C,EASDnyB,wBACIkiC,EACA7tB,EACAs0B,EACAxW,EAAqC,KAEpClxB,OAAOqhC,MAAQvhC,QAAQC,KAAKkhC,GAC7B8G,EAAO,OAAQ9G,EAAK7tB,EAAQs0B,EAAWxW,EAC1C,CARDnyB,8GCjGA,iBACA5B,mCAwBO,UAA0B6E,GAC7B,MAAMgmC,EAAWhmC,EAASgmC,UAAY5lC,SAAS4lC,SACzCh+B,EAAOhI,EAASimC,QAAU7lC,SAAS8lC,SACnCC,EAAOnmC,EAASmmC,MAAQ/lC,SAAS+lC,KACjC/sB,EAAMpZ,EAASomC,WACf,GAAGJ,MAAah+B,KAAQm+B,IACxB/lC,SAASC,OACT6jC,GAAS9jC,SAASQ,SAAW,KAAKma,QAAQ,KAAM,KAChD5a,EACFH,EAASG,MACTC,SAASoB,KAAKlB,SAAS,cACU,SAAjC+lC,aAAa5kC,QAAQ,QAEnBytB,EAA2B,CAC7BoX,UAAW,YACXC,MAAO,SACPv+B,KAAM,GAAGA,IAAOm+B,EAAO,IAAMA,EAAO,KACpCK,SAAU,GAAGptB,yBACbqtB,UAAW,GAAGrtB,qBACdstB,aAAc,GAAGtmC,SAASC,SAAS6jC,mBACnCyC,cAAe3mC,EAASC,YACxB2mC,YAAY,EACZzmC,QAEJ,OAAIkmC,cACAA,aAAa9mC,QACT,OACA,KAAKY,IAASC,SAASoB,KAAKlB,SAAS,iBAGzCH,IACA,gBAAW,8BAER,WAAM+uB,EAChB,0BAlCDnyB,wBAAsB8pC,kCAAtB9pC,iGCxBA,iBACA7B,WACAC,WAEAC,WACAC,sBAUA,WACIyrC,EACAC,EACAC,GAEA,IAAIC,EAAmBH,EAAWC,GACjCD,SAAmBC,GAAkB,IAAI7H,KACtC8H,EAAgB9H,GACf+H,EAAyBC,KAAKJ,KAAe5H,EAA7C,EAEE+H,CACV,CAED,MAGaE,UAA6B9pB,YAsBtC/f,cACIK,QAtBIC,gBAAa,IAAIkN,kBAAwB,IACzClN,aAAU,IAAIkN,UAEdlN,oBAAiBA,KAAKwpC,QAAQ5oC,MAAK,iBAAY,MAE/CZ,uBAAoBA,KAAKypC,WAAW7oC,MACxC,YAAQF,KAAQA,IAChB,eAAW4I,IAAO,mBAAc,EAAC,QAAGA,GAAKtJ,KAAK0pC,QAAQpgC,EAAI,eAC1D,YAAO,EAAE5I,EAAGmF,OAAeA,IAC3B,SAAI,EAAEyD,KACFtJ,KAAK6I,aACD,cACA7I,KAAK2pC,eAAe5gC,UAAWhL,IAC3B,eAAUuL,EAAI,UAAUsgC,QAAQ,aAAc,CAAC7rC,QAM/CiC,aAAUA,KAAK2pC,eAI3B3pC,KAAK6pC,uBACL7pC,KAAK8pC,kBAAkB/gC,WAC1B,CAEMghC,UAAUzgC,GACbtJ,KAAKypC,WAAWn8B,KAAKhE,EACxB,CAEOugC,uBACJ,MAAM7T,EAA2B,CAC7B,MACA,QACA,OACA,OACA,SAEJ,UAAWrR,KAAOqR,EACdgU,EAAW9pC,QAASykB,EAAK,IAAI2c,IACzBthC,KAAKiqC,aAAatlB,EAAK2c,GAGlC,CAEO2I,aAAarhC,EAAcrI,EAAW2pC,EAAkB,WAC5D3pC,EAAK,GAAwB,iBAAZA,EAAK,GAAkBA,EAAK,GAAG4c,QAAQ,MAAO,IAAM5c,EAAK,GAC1EP,KAAKwpC,QAAQl8B,KAAK,CACdhE,GAAI,GAAG4gC,MAAc,eAAU,cAC/BthC,KAAMshC,EACNC,QAASvhC,EACTwhC,UAAW39B,KAAKiM,MAChBnY,KAAMA,EAAKyN,OAAOtN,GAAkB,iBAANA,IAAmBA,EAAE2pC,WAAW,YAErE,CAGOX,QAAQpgC,EAAYE,EAAc8gC,EAAc,UACpD,MAAMC,GAAS,eAAUjhC,EAAIghC,GAAKrxB,QAAQzP,GAC1C,YAAKX,aAAa,QAAQW,IAAQ+gC,EAAOhxB,QAClCgxB,EAAOpxB,QACjB,EAlELha,+DAGaoqC,EAAoB,qDAApBA,EAAoBn6B,QAApBm6B,EAAoB,qBAFjB,sHCvBHpqC,kBAAkB,CAAC5B,EAAsBgJ,KACrB,IAAKhJ,KAAMgJ,IAI/BpH,oBAAoB,CAC7BqrC,EAAuC,GACvCC,EAAmC,MAEnC,MAAM17B,EAAM,GACZy7B,EAAgBx1B,QAAS5O,GAAO2I,EAAI3I,EAAEkD,IAAMlD,GAC5C,MAAMskC,EAA8B,GACpCD,SAAYz1B,QAAS3Q,IACX0K,EAAI1K,EAAEiF,KACRohC,EAAO7tB,MAAK,qBAAgB9N,EAAI1K,EAAEiF,IAAKjF,GAAvC,GAGDqmC,EAZmBC,mHCX9BprC,cACAhC,WACAC,WACAC,WACAC,WAEAC,WACAC,WAEAC,WAEAC,WACAC,WACAoG,gCASA,MAGaymC,UAAwBnrB,YAwDjC/f,YAAoBmrC,GAChB9qC,QADgBC,cAtDZA,eAAY,UAEZA,gBAAa,IAAIkN,kBAA2B,IAE5ClN,oBAAiB,IAAIkN,kBAAyB,IAE9ClN,eAA2C,GAE3CA,kBAAyC,GAEzCA,uBAA6B,GA8CjC,MAAM0Y,EAAM,IAAIjM,KACVq+B,EAAO,IAAIr+B,KAAKs+B,UAAQD,MACxBE,GAAQ,eAAUtyB,EAAKoyB,GACvB,aAAY,YAAOA,EAAM,YACzB,YAAOA,EAAM,uBACnB,SAAI,OAAQ,GAAGC,UAAQE,SAAU,KAAM,SAAS,IAChD,SAAI,MAAO,GAAGF,UAAQG,iBAAiBF,IAAS,KAAM,SAAS,GAC/DhrC,KAAKmrC,MACR,CAjDUC,cAAU9nC,GACjBtD,KAAKqrC,WAAW/9B,KAAKhK,GACrBtD,KAAKsrC,oBACR,CAGMnyB,OAAgB3P,GACnB,OAAKxJ,KAAKurC,aAAa/hC,KACnBxJ,KAAKwrC,UAAUhiC,GAAQ,IAAI0D,kBAAmB,MAC9ClN,KAAKurC,aAAa/hC,GAAQxJ,KAAKwrC,UAAUhiC,GAAM4D,gBAE5CpN,KAAKurC,aAAa/hC,EAC5B,CAGMiwB,KAAQjwB,EAAclG,GACpBtD,KAAKurC,aAAa/hC,KACnBxJ,KAAKwrC,UAAUhiC,GAAQ,IAAI0D,kBAAmB,MAC9ClN,KAAKurC,aAAa/hC,GAAQxJ,KAAKwrC,UAAUhiC,GAAM4D,gBAEnDpN,KAAKwrC,UAAUhiC,GAAM8D,KAAKhK,EAC7B,CAEMA,MAAekG,GAClB,OAAOxJ,KAAMurC,aAAa/hC,GAEpBxJ,KAAKwrC,UAAUhiC,GAAMiE,WADrB,IAET,CAGU8I,YACP,OAAOvW,KAAK6qC,OAAOY,UACtB,CACUl1B,UAAMjT,GACbtD,KAAK6qC,OAAOa,SACR,GAAGpoC,OAAWtD,KAAKmC,IAAI,aAAenC,KAAKkhC,YAElD,CAiBYiK,OAAI,gCACb3mC,EAAKmnC,eACDnnC,EAAKrC,IAAI,WAAU/B,OAAOshC,OAAQ,GAClCl9B,EAAKrC,IAAI,QAAQqH,OACjBhF,EAAK08B,UAAY18B,EAAKrC,IAAI,OAAOqH,MAErChF,EAAK08B,UACD1+B,SAASQ,SAASma,QAAQ,UAAW,IAAIyW,QAAUpvB,EAAK08B,WAC5D,gBAAW18B,EAAK08B,UAAUn+B,MAAM,KAAKuH,KAAK,KAAK02B,gBAC/C,SAAI,WAAY,gCAChBx8B,EAAKm6B,aAAarxB,MAAK,GACnBlN,OAAOshC,QACFthC,OAAOwrC,cAAaxrC,OAAOwrC,YAAc,IAC9CxrC,OAAOwrC,YAAYxpC,SAAWoC,GAElCA,EAAKqE,aACD,gBACArE,EAAKqnC,eAAe9iC,UAAWrI,GAAM8D,EAAKsnC,mBAAmBprC,KAEjE,MAAMgZ,QAAaqyB,eAAanrC,MAAK,WAAOF,KAAQA,IAAIG,YAClDN,QAAa,kBAAamZ,EAAKpQ,GAAI,YAAYzI,YACrD2D,EAAKqnC,eAAev+B,KAAK/M,EAAK4iB,SAAW,IACzC3e,EAAKmnC,eACLnnC,EAAKwnC,cAvBQ,IAwBhB,CAGUxK,eACP,OAAOxhC,KAAKkhC,SACf,CAMM/+B,IAAawiB,GAChB,MAAMjP,EAAOiP,EAAI5hB,MAAM,KACvB,GAAgB,QAAZ2S,EAAK,GACL,OACI,qBAAgBA,EAAM1V,KAAKisC,qBAC3B,qBAAgBv2B,EAAM1V,KAAK6rC,eAAep+B,cAC1C,qBAAgBiI,EAAMw2B,oBAG9B,MAAMC,EAAoB,IAAInsC,KAAKqrC,WAAW59B,YAC9C,UAAW2+B,KAAYD,EAAmB,CACtC,MAAM7oC,GAAQ,qBAAgBoS,EAAKurB,MAAM,GAAImL,GAC7C,GAAa,MAAT9oC,EACA,OAAOA,CAEd,CACD,OAAO,qBAAgBoS,EAAMw2B,mBAChC,CAEMlvB,gBAAmBxT,EAAclG,GACpCtD,KAAKisC,kBAAkBziC,GAAQlG,EAClB,cAATkG,GAAsBxJ,KAAK2rC,eAClB,cAATniC,GAAsBxJ,KAAKgsC,eAC/BhsC,KAAKkB,QAAQ,gBAAiB,IAAMlB,KAAKqsC,sBAAuB,IACnE,CAEOf,qBACJ,MAAMgB,EAAetsC,KAAKmC,IAAI,sBAAwB,GACtD,IAAIoqC,EAAa,UACjB,UAAW5nB,KAAO2nB,EACdC,GAAc,KAAK5nB,MAAQ2nB,EAAa3nB,OAE5C4nB,GAAc,IACd,IAAIxlB,EAAUjM,SAAS0xB,eAAe,qBACjCzlB,IACDA,EAAUjM,SAASkM,cAAc,SACjCD,EAAQzd,GAAK,oBACbwR,SAAS2xB,KAAKplB,YAAYN,IAE9BA,EAAQ2lB,UAAYH,CACvB,CAEaF,sBAAmB,gCAC7B,MAAM3yB,GAAO,oBACRA,GAAMpQ,KAAOmM,OAAOC,KAAKlR,EAAKynC,mBAAmBhjC,eAChD,oBAAeyQ,EAAKpQ,GAAI,CAC1BE,KAAM,WACNE,YAAa,GACbyZ,QAAS,IACF3e,EAAKqnC,eAAep+B,cACpBjJ,EAAKynC,qBAEbprC,YACH2D,EAAKqnC,eAAev+B,KAAK,IAAK9I,EAAKqnC,eAAep+B,cAAejJ,EAAKynC,oBACtEznC,EAAKynC,kBAAoB,GAZI,IAahC,CAEaH,mBAAmB1pC,GAAiB,yBAIjD,CAEO4pC,eACAhsC,KAAKmC,IAAI,eACT2Y,SAASsM,KAAKulB,cAAc1lB,MAAM2lB,SAAW,GAAG5sC,KAAKmC,IAAI,iBACzD2Y,SAASsM,KAAKH,MAAM2lB,SAAW,GAAG5sC,KAAKmC,IAAI,iBAElD,CAEOwpC,eAEA3rC,KAAKmC,IAAI,aACT2Y,SAASsM,KAAKylB,UAAU1M,IAAI,QAE5BrlB,SAASsM,KAAKylB,UAAUjsB,OAAO,OAEtC,EA1LLzhB,0DAGayrC,GAAe3mC,mFAAf2mC,EAAex7B,QAAfw7B,EAAe,qBAFZ,mGCqJHzrC,mBAAwB,CACjCuiC,OAAO,EACPoL,SAAU,CACNzE,OAAQ,GACR/B,MAAO,SACP8B,SAAU,GACVG,KAAM,GACNC,YAAY,EACZnmC,aAAa,GAEjB0qC,IAlDa,CACbvjC,KAAM,YACN+M,MAAO,wBACP7M,YAAa,sDACbsjC,WAAY,QACZC,WAAY,CACRrkC,KAAM,MACN68B,IAAK,yBAETyH,UAAW,CACPtkC,KAAM,MACN68B,IAAK,wBAET/3B,SAAU,CAAC,SAAU,QAAS,UAAW,UAAW,OAAQ,YAC5Dy/B,aAAa,EACbC,QAjJiB,CACjBC,OAAQ,CACJ/jC,GAAI,IACJV,KAAM,OACNmL,QAAS,IAEbu5B,UAAW,UACXpmB,SAAU,SA2IVqmB,KAtIc,CACdC,MAAO,CACH,CACIhkC,KAAM,gBACNikC,KAAM,qCACNrqB,KAAM,CACFxa,KAAM,OACN2zB,MAAO,iBACPxoB,QAAS,OAEb25B,WACI,qKAER,CACIlkC,KAAM,oBACNikC,KAAM,8DACNrqB,KAAM,CACFxa,KAAM,OACN2zB,MAAO,iBACPxoB,QAAS,QAEb25B,WAAY,4BAEhB,CACIlkC,KAAM,kBACNikC,KAAM,qCACNrqB,KAAM,CACFxa,KAAM,OACN2zB,MAAO,iBACPxoB,QAAS,QAEb25B,WACI,kWAER,CACIlkC,KAAM,WACNikC,KAAM,4BACNrqB,KAAM,CACFxa,KAAM,OACN2zB,MAAO,iBACPxoB,QAAS,YAEb25B,WACI,mWAGZC,QAAS,GAyFTxzB,OApFgB,CAChByzB,iBAAiB,EACjBC,WAAY,EACZC,UAAW,GACX1iC,qBAAqB,EACrBJ,cAAc,GAgFd+iC,cA3EuB,CACvBC,aAAa,GA2EbC,UAtEmB,CACnBC,cAAc,EACdC,kBAAmB,GAqEnBC,QAtDiB,CACjBzM,OAAQ,CACJ,aAAc,UACd,gBAAiB,UACjB,aAAc,UACd,qBAAsB,OACtB,gBAAiB,OASjB,WAAY,UACZ,cAAe,UACf,YAAa,WAEjB0M,qBAAqB,EACrBC,yBAAyB,EACzBC,OAAQ,CACJC,OAAQ,CACJ,CAAE7pB,IAAK,aAAcnb,KAAM,mBAC3B,CAAEmb,IAAK,gBAAiBnb,KAAM,iBAC9B,CAAEmb,IAAK,aAAcnb,KAAM,gBAC3B,CAAEmb,IAAK,qBAAsBnb,KAAM,sBACnC,CAAEmb,IAAK,gBAAiBnb,KAAM,cA4BtC6Q,MAAO,CACHjP,qBAAqB,EACrBqjC,cAAc,EACdC,iBAAiB,GAErBC,UAAW,CACP9oC,SAAS,EACTigC,YAAa,IAEjB8I,eAAe,EACfC,SA3Ea,CACbN,OAAQ,CACJ,CAAE/kC,KAAM,WAAYslC,MAAO,WAC3B,CAAEtlC,KAAM,UAAWslC,MAAO,WAC1B,CAAEtlC,KAAM,WAAYslC,MAAO,aAwE/BC,YAAa,CACTr1B,KAAM,CAAEpG,MAAO,gBAAiBuT,YAAa,kBAOhB,gEC1K9B,UAAgDmoB,GACnDA,EAAUC,sBACJD,EAAUE,QAAQC,aACxBH,EAAUC,eACb,sGAJD9vC,+BAAsBiwC,kCAAtBjwC,+HCHA,iBACA7B,UAGa6B,iBAAiBwmB,MAAMC,kBAAkBC,mBAAmBC,UAAY,mBAErF3mB,6BAAgCsM,EAAqB4jC,EAAalwC,kBAC9D,MAAMmwC,GAAc,uBAAkBD,IAAM,uBAAkBlwC,kBAC9D,OAAO,qBAAgBsM,EAAM6jC,GAAa5rB,SAC7C,EAEDvkB,6BAAgCsM,EAAqB4jC,EAAalwC,kBAC9D,MAAMmwC,GAAc,uBAAkBnwC,mBAAkB,uBAAkBkwC,GAC1E,OAAO,qBAAgB5jC,EAAM6jC,GAAa5rB,SAC7C,CAHDvkB,uKCXA,iBACA7B,WACAC,WAEAC,WAEM+xC,EAAa,IAAI1mB,YAEjB2mB,EAAgB,IAAItiC,kBAA2B,MAExC/N,eAAeqwC,EAAcpiC,eAI1CgyB,WAAW,KACP,IACI,GAAIqC,KAAM,MACJ,CAAT,MAAS,EACV,cAAS,WACJ7gC,MACG,WAAM,MACN,WAAM,KACN,SAAKlD,GAAM,IAAImrB,YAAUnrB,KAE5BqL,UAAW2Q,GAAS81B,EAAcliC,KAAKoM,GAN5C,EAOD,KAGHva,2BACI,OAAOqwC,EAAc/hC,YAAc8hC,CACtC,CAFDpwC,kFC1BaA,UAAU,CACnBswC,OAAS,EACTC,IAAO,UACPxE,KAAQ,UACRyE,SAAY,KACZnc,IAAO,KACPyX,OAAU,KACV2E,OAAU,UACVC,aAAgB,KAChBC,QAAW,SACXhF,KAAQ,cAVW,iHCDvB,iBAEAvtC,cACAgC,8BAEA,MAGawwC,UAAsBtwB,YAI/B/f,YAAoBC,GAChBI,QADgBC,iBAEhBA,KAAK6lC,MACR,CAEaA,OAAI,gCACd,MAAM/vB,EAASjY,EAAK8B,UAAUwC,IAAI,qBAClC,GAAI2T,EAAQ,CACR,MAAMy0B,GAAS,eAAUz0B,EAAQ,UACjC,GAAIy0B,EAAQ,CACR,MAAMtxB,EAAUsxB,EAAOtxB,QAAQ,WAC/Bpb,EAAKgL,aAAa,UAAWoQ,EAAQM,QACrC1b,EAAKgL,aACD,gBACAoQ,EAAQE,SAASpQ,UAAW6T,IACxBA,EACM/e,EAAKmyC,qBACLnyC,EAAKoyC,oBAAL,GAGjB,CACJ,CAhBa,IAiBjB,CAEOD,qBACJhwC,KAAKiwC,qBACLjwC,KAAKkwC,QAAUp1B,SAASkM,cAAc,UACtC,MAAMxL,EAAMxb,KAAKL,UAAUwC,IAAI,kBAC/BnC,KAAKkwC,QAAQzK,IAAMjqB,GAAO,qBAC1BV,SAAS2xB,KAAKplB,YAAYrnB,KAAKkwC,QAClC,CAEOD,qBACAjwC,KAAKkwC,UACLlwC,KAAKkwC,QAAQxK,WAAW9d,YAAY5nB,KAAKkwC,gBAClClwC,KAAKkwC,QACZlwC,KAAKkwC,QAAU,KAEtB,EA7CL/wC,wDAGa4wC,GAAa9rC,6FAAb8rC,EAAa3gC,QAAb2gC,EAAa,qBAFV,4FCPhB10B,0BAEAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,0BACAA,2BACAA,2BAEAA,2BACAA,gNCXYpX,oCAAiE,cAEzDA,sBACJA,uEAHCA,gDAEGA,2HAGRA,sCACIA,yCACJA,kCADiBA,gEApB7B,MAuDaksC,EAvDbzwC,cA2DoBM,eAAoB,iBAQpBA,WAAkC,EACrD,EApEDb,8DAuDagxC,EAAmB,kDAAnBA,EAAmBjsC,seApDxBD,yCAMC,gBAEOA,sBACAA,4BACJA,2BACAA,wCAKAA,wCAGJA,kCAhBIA,uDACAA,yDAGeA,yEAAuB,eAClCA,2EAGoCA,4EAKZA,iuBCrBxC1E,eAUAhC,WACAC,WACAC,iCAEA,MAGa2yC,EACT1wC,YAAoBwI,iBAAmB,CAE1B7J,YACTiP,EACAsP,GAA2B,gCAE3B,OAAOzY,EAAKksC,WAFe,IAG9B,CAEY/xC,QACTgoC,EACAgK,GAAuB,gCAEvB,OAAOnsC,EAAKksC,WAFW,IAG1B,CAEaA,YAAS,sCACb,mBACDzvC,MAAK,WAAOF,GAAMA,IAClBG,YACL,MAAM6Y,QAAaja,eAAamB,MAAK,WAAOF,KAAQA,IAAIG,YAClDggC,EAAennB,GAAQA,EAAKwI,OAAOxf,SAAS,iBAClD,OAAKm+B,GACD/iC,EAAKoK,QAAQK,SAAS,CAAC,kBAEpBs4B,CATY,IAUtB,EA9BL1hC,+DAGaixC,GAAoBnsC,oFAApBmsC,EAAoBhhC,QAApBghC,EAAoB,qBAFjB,oJCfhB7wC,eAUAhC,WACAC,WACAC,iCAIA,MAAsBijC,GAAtBvhC,uBAIA,MAGaoxC,EACT7wC,YACYwI,EACYsoC,GADZxwC,eACYA,cACpB,CAES3B,YACTiP,EACAsP,GAA2B,gCAE3B,OAAOxY,EAAKisC,WAFe,IAG9B,CAEY/xC,QACTgoC,EACAgK,GAAuB,gCAEvB,OAAOlsC,EAAKisC,WAFW,IAG1B,CAEaA,YAAS,sCACb,mBACDzvC,MAAK,WAAOF,GAAMA,IAClBG,YACL,MAAM6Y,QAAwBja,eACzBmB,MAAK,WAAOF,KAAQA,IACpBG,YACCggC,KACFnnB,GACE3b,EAAKyyC,SAASpuB,QAAS1I,EAAKwI,OAAOxf,SAAS3E,EAAKyyC,QAAQpuB,QAE/D,OAAKye,GACD9iC,EAAKmK,QAAQK,SAAS,CAAC,oBAElBs4B,CAdU,IAetB,EAtCL1hC,8DAGaoxC,GAAmBtsC,oDAGKy8B,EAAkB,wDAH1C6P,EAAmBnhC,QAAnBmhC,EAAmB,qBAFhB,qGCtBhB,iBAYAjzC,WAEAC,WACAC,sBAEA,MAGaizC,UACDhxC,YAuBRC,YACYgxC,EACAC,GAER5wC,QAHQC,gBACAA,iBAtBIA,SAAc,GAEdA,SAAc,GAEdA,WAAQ,EAERA,UAAe,GAEfA,UAAe,GAENA,cAAmB,GAE5BA,YAAgB,GAEhBA,WAAkB,KAEjBA,iBAAc,IAAIqF,eAE3BrF,eAAW,CAOlB,CAEMC,YACH,oBACMW,MAAK,WAAOF,GAAMA,IACnBqI,UAAWrI,GAAMV,KAAK4wC,eAC9B,CAEMvlB,YAAYC,IACXA,EAAQulB,KAAOvlB,EAAQgf,KAAOhf,EAAQ/R,OACtCvZ,KAAK4wC,eAGLtlB,EAAQwlB,OACRxlB,EAAQwlB,MAAMC,gBAAkB/wC,KAAK8wC,OACvB,MAAd9wC,KAAK8wC,OAEL9wC,KAAK4pC,UAELte,EAAQ0lB,UAAYhxC,KAAKgxC,UACzBhxC,KAAK6I,aACD,WACA7I,KAAK2wC,UAAUx3B,OACXnZ,KAAK0wC,SAASO,cACdjxC,KAAKgxC,SACL,IAAMhxC,KAAK4pC,WAI1B,CAGOgH,gBAEA,kBACA5wC,KAAKuZ,MACLvZ,KAAK6wC,KACL7wC,KAAKsqC,MACJtqC,KAAKkxC,UAENlxC,KAAKkB,QACD,OACA,KAEI,MAAM+X,GAAUsxB,EADDjtC,aAAU0C,KAAK6wC,IAAK7wC,KAAKsqC,IAAKtqC,KAAK+zB,OAC3B9a,QAAQjZ,KAAKuZ,MACpCvZ,KAAKkxC,UAAW,EAChBlxC,KAAK6I,aAAa,UAAWoQ,EAAQM,QACrCvZ,KAAK6I,aACD,aACAoQ,EACKE,SACAvY,MAAK,YAAQF,GAAW,MAALA,IACnBqI,UAAWzF,IACR87B,WAAW,KACPp/B,KAAKkxC,UAAW,EAChBlxC,KAAKyB,aAAa,SAClBzB,KAAK8wC,MAAQxtC,EACbtD,KAAKmxC,YAAYnhC,KAAKhQ,KAAK8wC,MAA3B,EACD,GALO,IAQtB9wC,KAAKkB,QAAQ,QAAS,IAAOlB,KAAKkxC,UAAW,EAAQ,IAArD,EAEJ,GAGX,CAGOtH,UACJ,IAAI,kBAAe5pC,KAAKwiC,MAAQxiC,KAAK6wC,KAAO7wC,KAAKsqC,IAAK,CAClD,MAAMC,GAAS,eAAUvqC,KAAK6wC,IAAK7wC,KAAKsqC,IAAKtqC,KAAK+zB,OAC9C/zB,KAAKuZ,OAAMvZ,KAAK4f,OAAS5f,KAAK4f,QAAU,CAAC5f,KAAK8wC,QAClDvG,EAAOX,QAAQ5pC,KAAKwiC,KAAMxiC,KAAK4f,QAAQ4X,KAAMp0B,IAEpCpD,KAAKuZ,OACNvZ,KAAK8wC,MAAQ1tC,EACbpD,KAAKmxC,YAAYnhC,KAAKhQ,KAAK8wC,OAA3B,EAGX,CACJ,CAKMrmB,WAAWnnB,GACdtD,KAAK8wC,MAAQxtC,EACbtD,KAAKmxC,YAAYnhC,KAAKhQ,KAAK8wC,OAC3B9wC,KAAK4pC,SACR,EA1HLzqC,2DAGasxC,GAAgBxsC,yIAAhBwsC,EAAgBvsC,uZCnB7B,iBAEA5G,sGAeQ2G,yGAGIA,sIAGAA,sCAAiE,gBAClCA,8BAAKA,2BAChCA,sCAAkBA,qCAAYA,8BAjB9C,MAuBamtC,EAIT1xC,YAA6Coe,eAA6B,CAG/DuzB,gBACP,OAAO,YAAOrxC,KAAK8d,MAAMuzB,WAAa,GACzC,EAhCLlyC,kEAuBaiyC,GAAuBntC,8BAIZ6C,mBAAe,kDAJ1BsqC,EAAuBltC,gcApB5BD,uCAAQ,UACiBA,kCAASA,2BAC9BA,yCAAyC,cAC3BA,8BAAKA,+BAGvBA,yCAKAA,iIAHKA,oEAAiB,4MCpB9B1E,eACAjC,WACAC,WACAC,WACAC,WACAC,WACAC,SACAC,WACAC,WACAC,WACAC,WACAoG,WACAC,WACAC,WAEAC,WACAC,WACAC,WAEA0B,WACAC,WAKAjE,GAFA3C,SACAA,SACAA,UAKAgH,GAJAhH,SACAA,SAEAA,SACAA,UASAslB,GALAtlB,SACAA,SACAA,SACAA,SACAA,SACAA,UAEA0pB,GADA1pB,SACAA,UAGA+xC,GAFA/xC,SACAA,SACAA,UAGAm4B,GAFAn4B,SACAA,SACAA,UAIAgyC,GAHAhyC,QACAA,SACAA,SACAA,UACAiyC,eACAjyC,SACAA,wFAEMkyC,EAAqB,CACvBrqC,wBACAI,gBACAT,qBACAM,kBACAT,kBACAQ,wBACAC,kBACAP,kBACAD,sBACAI,iBACAyqC,kBACAxqC,2BACAI,iBACAqqC,qBACAC,iBACAC,eACAC,gBACAC,mBAmCJ,MAcaC,IAdb7yC,+DAca6yC,GAAgB,mDAAhBA,2DALE,CACP,CAAEtnB,QAASunB,mBAAkBC,SAAU,KAC1CrtC,SARGpF,eACA2F,cACAA,sBACAD,mBACGssC,EA3DPrqC,wBACAI,gBACAT,qBACAM,kBACAT,kBACAQ,wBACAC,kBACAP,kBACAD,sBACAI,iBACAyqC,kBACAxqC,2BACAI,iBACAqqC,qBACAC,iBACAC,eACAC,gBACAC,kBA+CwDxqC,sDA3BxD4qC,0BAAuB,6DAfvBC,gBAKAH,2BAAuB,qCAavBI,wBAAqB,+LAPrBC,0BAAsB,0BAatBC,gBAbsB,qHC1F1B,iBACAj1C,sGA8BQ2G,uCAIIA,sCAAoD,SAMxDA,qEANcA,+DAINA,kKAGRA,yCAGC,cAEOA,sBACJA,2BACAA,yCAA8CA,kHAASA,sCAAW,GAC9DA,sBACJA,yEAJIA,+EAGAA,0GAIJA,wCAAc,YAINA,0CACAA,kCAAGA,sBAAaA,yEAAbA,mEAzCV9E,mBAAmB,CAC5B+D,OAAQ,OACRC,MAAO,OACPqvC,UAAW,oBACXC,SAAU,qBAGd,MAyCaC,EAuBThzC,YACYutB,EACyBnP,GADzB9d,mBACyBA,aArBpBA,WAAQ,IAAIqF,eAEbrF,WAAgBA,KAAK8d,MAAMvH,OAAS,UAEpCvW,aAAkBA,KAAK8d,MAAM/J,SAAW,gBAExC/T,kBAAuBA,KAAK8d,MAAM60B,cAAgB,SAElD3yC,iBAAsBA,KAAK8d,MAAM80B,aAAe,SAEhD5yC,UAAwBA,KAAK8d,MAAMsF,MAAQ,CACvDmZ,MAAO,iBACPxoB,QAAS,QAGG/T,kBAAe,IAAOA,KAAKitB,YAAY4lB,cAAe,EAEtD7yC,iBAAc,IAAOA,KAAKitB,YAAY4lB,cAAe,CAKjE,CAGGC,YACH9yC,KAAKgY,MAAMhI,KAAK,CAAEqT,OAAQ,QAC7B,EAxELlkB,gEAyCauzC,GAAqBzuC,4EAyBlB6C,mBAAe,kDAzBlB4rC,EAAqBxuC,utBAtC1BD,uCAAQ,UACiBA,sBAAWA,6BAEpCA,yCAWAA,2CAWAA,iIAxByBA,gEAGpBA,mEAAgB,cAYhBA,gRC5Cb,iBAWA3G,WACAC,WACAC,WACAC,WACAC,2FAQoBuG,uCAQIA,sBACJA,2HANIA,8DAA8C,yCAK9CA,kHAUAA,uCAEKA,sBAAiBA,gIAAjBA,mFAGDA,yRACKA,yDAGP,+FAjBNA,uCAQIA,kDAIAA,yFAYJA,sKArBIA,8DAA8C,yCAG9CA,qCAGKA,uEAAyB,wCArB1CA,uCAA4D,KAEpDA,wCAUAA,wCAyBJA,gEApCcA,wFAuClBA,4GAIAA,2CAGIA,8HAASA,8CAAqB,GAEjCA,qDAEGA,qCACIA,sBACJA,qEADIA,gGAxDpB,MA+Ea8uC,UACDtzC,YAhFZC,kCAqFoBM,iBAAa,EAEbA,eAAY,EAQZA,iBAAwB,GAIxBA,cAA6C,GAE5CA,iBAAc,IAAIqF,eAEnBrF,iBAAqC,IAAI4xC,qBACrD,GAsDP,CAhDUoB,kBACHhzC,KAAKizC,YAAYpkC,KAAO7O,KAAKkzC,MAC7BlzC,KAAKizC,YAAYE,UAAYnzC,KAAKozC,WAAapzC,KAAKqzC,WAAa,KACjErzC,KAAKizC,YAAYK,gBAAkB,CAAC51C,EAAQG,KACxC,UAAW8mB,KAAOjnB,EAAG,CACjB,GACsB,iBAAXA,EAAEinB,IACTjnB,EAAEinB,GAAKhL,cAAcjX,SAAS7E,EAAE8b,eAEhC,OAAO,EACJ,GAAIjc,EAAEinB,KAAS9mB,EAClB,OAAO,CAEd,CACD,OAAO,EAEd,CAEMwtB,YAAYC,GACXA,EAAQioB,YAAcvzC,KAAKuzC,aACvBvzC,KAAKuzC,sBAAsBrmC,aAC3BlN,KAAK6I,aACD,OACA7I,KAAKuzC,WAAWxqC,UACXxI,GAAUP,KAAKizC,YAAY1yC,KAAOA,IAI3CP,KAAKizC,YAAY1yC,KAAOP,KAAKuzC,YAGjCjoB,EAAQ8nB,aACRpzC,KAAKizC,YAAYE,UAAYnzC,KAAKozC,WAC5BpzC,KAAKqzC,WACL,MAEN/nB,EAAQtd,SACRhO,KAAKizC,YAAYjlC,QAAUhO,KAAKgO,QAAU,IAAI4lB,OAAOja,eAErD2R,EAAQqiB,SAAW3tC,KAAK2tC,UACxB3tC,KAAKwzC,eAAiBxzC,KAAK2tC,QAAQ5+B,IAC/B,CAACrO,EAAG6jB,KAASvkB,KAAKwzC,gBAAkB,IAAIjvB,IAAQ7jB,EAAEqC,MAAM,KAAKuH,KAAK,OAGrEtK,KAAKyzC,cACNzzC,KAAKyzC,YAAc,GAE1B,EA7JLt0C,wHA+Ea4zC,KAAoBt1C,GAApBs1C,EAAoB,qDAApBA,EAAoB7uC,sFA4BlBytC,eAAY,2BACZG,UAAO,6vDAzGd7tC,4CACIA,iDAwCAA,mDAIAA,4CAMAA,gDAKJA,2BACAA,sCACIA,2CAMJA,kCAhEWA,mDAC0BA,qEA0C5BA,6EAMoBA,8EAQjBA,wEAEJA,wEAAsB,kBAAtBA,CAAsB,qiBC/EtC1E,aACAjC,WACAC,WAcAC,qFAoBoByG,2DADJA,uCACIA,iDAGJA,+EAFSA,+EAA4B,kEAGrCA,uCACIA,kEACJA,+EADSA,qJAGLA,2DADJA,uCACIA,iDAGJA,+EAFSA,8EAA2B,4DAXxCA,sCACIA,iDAKAA,iDAGAA,iDAKJA,qEAdqCA,0CAClBA,4EAKAA,wEAtB/B,MACayvC,EAGTh0C,YAAY3B,GACRiC,KAAKO,KAAOxC,EAAEwC,KACdP,KAAK2D,MAAQ5F,EAAE4F,OAAU,KAAM,KAClC,EAPLxE,iIACau0C,EAAiBtkC,QAAjBskC,EAAiB,YAS9B,MAwBaC,UACDl0C,YA8BRC,YACYgxC,EACAkD,EACAC,GAER9zC,QAJQC,gBACAA,gBACAA,iBAtBIA,eAAW,EAEXA,YAAQ,EAEjBA,UAA0C,WAIzCA,kBAA2B,KAIIA,aAAU,IAAMA,KAAKwK,OAClBxK,aAAU,IAAMA,KAAKwK,OACnBxK,aAAU,IAClDA,KAAK8zC,MAAQ9zC,KAAKwK,OAAS,GACaxK,aAAU,IAClDA,KAAK8zC,MAAQ9zC,KAAK2D,QAAU,EAQ/B,CAEM0nB,YAAYC,GACftrB,KAAK+zC,kBAED/zC,KAAKg0C,eACJ1oB,EAAQ2oB,OAAS3oB,EAAQ4oB,OAAS5oB,EAAQvX,UAE3C/T,KAAKwK,MAEZ,CAEMgsB,cACHz2B,MAAMy2B,cACNx2B,KAAK2D,OACR,CAEM6G,QACExK,KAAK+T,SACV/T,KAAKkB,QAAQ,OAAQ,KACjBlB,KAAKm0C,cACDn0C,KAAKg0C,cAAch0C,KAAK2D,QACvB3D,KAAKo0C,UACEp0C,KAAK0wC,SAASO,cAAcoD,wBAGxCr0C,KAAKg0C,aAAeh0C,KAAK4zC,SAASU,OAAO,CACrCC,cAAev0C,KAAKw0C,SACpBC,iBAAkBz0C,KAAK4zC,SAClB1sB,WACAwtB,oBAAoB10C,KAAK0wC,UACzBiE,cAAc,CACX,CACIC,QAAS50C,KAAKi0C,OATZ,MAUFY,SACoB,QAAf70C,KAAKk0C,MACA,SACc,UAAdl0C,KAAKk0C,MACL,MACAl0C,KAAKk0C,QAdb,MAeFY,SAAU90C,KAAKi0C,OAhBb,MAiBFc,SAAU/0C,KAAKk0C,OAhBb,WAoBlBl0C,KAAKg0C,aAAagB,OAAOh1C,KAAKo0C,SAC1Bp0C,KAAKw0C,UACLx0C,KAAK6I,aACD,WACA7I,KAAKg0C,aAAaiB,gBAAgBlsC,UAAU,IAAM/I,KAAK2D,UAF3D,EAKL,GACN,CAEMA,QACH3D,KAAKyB,aAAa,QACdzB,KAAKg0C,eACLh0C,KAAKg0C,aAAakB,UAClBl1C,KAAKg0C,aAAe,KAE3B,CAEOG,cACJn0C,KAAK4I,KACuB,iBAAjB5I,KAAK+T,QACN,OACA/T,KAAK+T,mBAAmB1O,cACxB,WACA,WACb,CAEO0uC,kBACJ/zC,KAAKm1C,SAAW9vC,WAASivC,OAAO,CAC5Bc,UAAW,CACP,CACI1qB,QAASgpB,EACTxB,SAAU,CAAE3xC,KAAMP,KAAKO,KAAMoD,MAAO,IAAM3D,KAAK2D,WAGvDuyB,OAAQl2B,KAAK6zC,WAEpB,EA/IL10C,iEAwBaw0C,GAAsB1vC,iLAAtB0vC,EAAsBzvC,4FAsBpB2tC,YAAS,8KAtBXrpC,WAAS,gCAATA,WAAS,kCAATA,WAAS,kCAATA,WAAS,+jBArBdvE,4BAEAA,gTChCR,iBACA3G,WAGAE,GADA+B,SACAA,UAKA7B,GAJA6B,SAIAA,oEAuE4B0E,uCACIA,sEAKKA,sBAASA,2BAElBA,wFALQA,iHAGCA,oFAGTA,uCACIA,2BAACA,wCASIA,+BAAMA,2BACVA,2BACLA,uHANQA,0EAAwB,SAAxBA,CAAwB,WAAxBA,CAAwB,yCAOhCA,uCAA+BA,sBAE7BA,wFAF6BA,oFA5BvCA,uCAKIA,0CACIA,kDASAA,kDAaAA,kDAGJA,oCACJA,oFA7BIA,+CAEcA,sEACKA,uEASAA,mGA7C3BA,sCAMC,YAIOA,mDACJA,2BACAA,oCAOIA,sBACJA,2BACAA,oCAOIA,sBACJA,2BACAA,yCAiCJA,oFArDQA,2HAGAA,gHAMAA,wEAGAA,qIAMAA,2EAIgBA,4FA6CpBA,wCACIA,oDACJA,4EADIA,gNAtFhBA,sCAGC,mCAKOA,uEAgEJA,2BACAA,sCAEC,eAKOA,2HAAiBA,yCAAmB,iCAJxCA,2BAQAA,sCACIA,wEAGAA,sDACJA,mFA9EyCA,gHAEnD,oCAkEcA,iGAMyBA,uHAGzBA,gIAjHpB,MAAMoxC,EAAY,CACdn1C,QAAS,mBACTo1C,QAAS,kBACTC,IAAK,mBAEL97B,IAAK,iBACLtZ,KAAM,iBACN4nC,KAAM,mBACNrG,MAAO,iBACP9+B,MAAO,iBAGL4yC,EAAa,CACf,OACA,UACA,QACA,SACA,OACA,MACA,QAGJ,MAkGaC,UAA8Bh2B,YAoBvC/f,YACYg2C,EACAC,GAER51C,QAHQC,aACAA,eArBIA,WAAO,EACPA,YAASq1C,EACTr1C,kBAAe41C,uBACf51C,YAAS,IAAIkN,kBAAwB,IACrClN,UAAO,IAAIkN,kBAA+B,IAC1ClN,oBAAgB,mBAAc,CAC1CA,KAAKgO,OACLhO,KAAK61C,OACNj1C,MACC,SAAI,EAAE/C,EAAGg4C,KACLA,EAAK7nC,OACAtN,GACGA,EAAEkI,KAAK+Q,cAAcjX,SAAS7E,EAAE8b,gBAChCjZ,EAAEypC,QAAQxwB,cAAcjX,SAAS7E,EAAE8b,gBACnC,GAAGjZ,EAAEH,OAAOoZ,cAAcjX,SAAS7E,EAAE8b,iBAUpD,CAEM1Z,WACHD,KAAK6I,aACD,OACA7I,KAAK01C,MAAMr1C,QAAQ0I,UAAWiP,GAC1BhY,KAAK61C,KAAKvoC,KAAK,IAAItN,KAAK61C,KAAKpoC,WAAYuK,MAGjDhY,KAAK6I,aACD,SACA7I,KAAK21C,QAAQx8B,OACT,CAAC,UAAW,aACZ,IAAOnZ,KAAK81C,MAAQ91C,KAAK81C,MAGpC,CAEMltC,KAAKqF,GACR,MACoB,iBAATA,GACPunC,EAAWr9B,KAAMgI,GAAUlS,EAAKo8B,WAAWlqB,IAEpC,OACAlS,aAAgBwH,OAChB,SAEJ,QACV,CAEM6B,UAAU5W,EAAWuN,GACxB,OAAOA,GAAMm8B,SAChB,EA3JLjrC,gEAkGas2C,GAAqBxxC,wJAArBwxC,EAAqBvxC,0iDA/F1BD,+CAEKA,iICtCb,4BAEA,MAGa8xC,EAOFngC,UAAU3M,EAAgB+sC,GAAmB,GAChD,IAAItqC,GAAW,oBAAe,CAAE4U,MAAOC,KAAKC,MAAMvX,EAAS,IAAKwX,QAASxX,EAAS,KAClF,OAAI+sC,IACAtqC,EAAWA,EAASyR,QAAQ,OAAQ,KAAKA,QAAQ,SAAU,KAAKA,QAAQ,MAAO,KAE5EzR,CACV,EAhBLvM,uDAGa42C,EAAY,8DAAZA,EAAYE,gHCJzB,MAGaC,EAOFtgC,UAAUtS,EAAe6yC,EAAiB,GAC7C,OAAO7yC,EAAM8yC,QAAQD,EACxB,EAZLh3C,oDAGa+2C,EAAS,6DAATA,EAASD,2GCJtB12C,qIAWQ0E,sCAMC,WACuBA,sBAAqBA,2BACzCA,yCAAwBA,kHAASA,kCAAO,GACpCA,yCAAUA,8BAAKA,2EAPnBA,8EAA4D,oCAA5DA,CAA4D,oCAKxCA,8FAVhC,MAyBaoyC,EAYT32C,YAAoBC,mBAA8B,CAXvC22C,iBACP,OACKt2C,KAAKqtC,QAAQt5B,SACd00B,aAAa5kC,QAAQ,uBAAyB7D,KAAKqtC,OAAO/jC,EAEjE,CAEU+jC,aACP,OAAOrtC,KAAKL,UAAUwC,IAAI,qBAC7B,CAIMwB,QACH8kC,aAAa9mC,QAAQ,oBAAqB3B,KAAKqtC,QAAQ/jC,IAAM,GAChE,EAzCLnK,gEAyBak3C,GAAqBpyC,mGAArBoyC,EAAqBnyC,iTAtB1BD,6CAKKA,+VChBb,iBACA1G,WACAC,cAEA+B,qFAKQ0E,sCAIIA,gFACJA,kDACAA,sCAKIA,yCACJA,kCADiBA,gEAdzB,MA8BasyC,UAA+B92C,YAOxCC,YACYE,EACAD,GAERI,QAHQC,YACAA,gBAGX,CATUw2C,aACP,OAAO,eACV,CASYv2C,WAAQ,gCACjBqE,EAAKoM,SAAU,QACTpM,EAAK1E,KAAKe,YAAYC,MAAK,WAAOF,GAAMA,IAAIG,kBAC5CyD,EAAK3E,UAAUgB,YAAYC,MAAK,WAAOF,GAAMA,IAAIG,YACvDyD,EAAKuW,SAAS,YAAa,MACnB,eACAvW,EAAKoM,SAAU,EACfpM,EAAK2W,cAAc,aAAnB,EAEL,IATc,IAUpB,EAtDL9b,iEA8Bao3C,GAAsBtyC,wJAAtBsyC,EAAsBryC,yoBA3B3BD,wCAMAA,+CALKA,yCAMAA,uyCCVDA,kCAIIA,sBACAA,4BACJA,qEAJIA,sEAEAA,4HAGJA,wGAGIA,4GAdhB,MA0BawyC,EA1Bb/2C,cA2BoBM,eAAoB,gBAGvC,EA9BDb,wDA0Bas3C,EAAa,kDAAbA,EAAavyC,gWAvBlBD,sCACIA,sCAOAA,wCAKJA,kCAXSA,qFAQAA,4YCJDA,oFAGIA,2FATRA,sCAMIA,wCAKJA,mFAPIA,sEAIKA,iFAITA,sCAGC,iBAC8BA,4CAAmBA,2BAC9CA,kCAAGA,kCAASA,6FAEhBA,0CAKIA,4JAA2B,EAAC,GAE5BA,4CAA2BA,qCAAYA,yEAHvCA,gHAKJA,0CAKIA,4JAA2B,EAAC,GAE5BA,4CAA2BA,sCAAaA,yEAHxCA,8GASAA,yFAEIA,4EANRA,uCAIIA,4CAMJA,qEAHwBA,qEAhDpC,MAoEayyC,EApEbh3C,cAqEoBM,YAAmB,GAE5BA,YAAS,CACnB,EAxEDb,iEAoEau3C,EAAsB,kDAAtBA,EAAsBxyC,kwDAjE3BD,sCACIA,wCAYAA,wCAOAA,2CASAA,2CASAA,wCAWJA,kCA7C0BA,oEAWjBA,2FAOAA,4FASAA,4FASAA,keC7CjB,iBAkBA1G,WAEAC,WAcAC,WACAC,uGAWYuG,8CAGIA,+DAJRA,uCACIA,gDAKJA,8EAJSA,mGAwBWA,2DADJA,uCACIA,kDAMJA,sIALSA,+EAGnB,sEAGUA,uCACIA,mEACJA,yFADSA,qJAGLA,2DADJA,uCACIA,kDAMJA,yFALSA,8EAGlB,4DA1BCA,oCAAqB,eAUbA,kDAQAA,kDAGAA,kDAQJA,gHArBIA,8EAJAA,+CAAkC,mBAAlCA,CAAkC,sBAAlCA,CAAkC,oBAMnBA,4EAQAA,iGAzB3BA,uCAOIA,wCA+BJA,8DA/BUA,oFARdA,sCACIA,iDAuCJA,qEApCAA,sEACF,mDAqCMA,uCAA+D,YACnCA,+BAAMA,8BA1DjC9E,mBAAmB,IAAIkG,iBAChC,yBAGJ,MAyEasxC,UACDl3C,YA6DRC,YAAoBm0C,GAChB9zC,QADgBC,iBArDJA,UAAO,EAEPA,YAAgB,CAAEqG,EAAG,GAAK9B,EAAG,IActCvE,eAAwB,GAExBA,kBAAgC,GAK/BA,iBAAuC,IAAIkN,kBAAgB,MAE3DlN,iBAAc,CAClB42C,OAAQ52C,KAAK62C,YAAYj2C,MAAK,SAAKF,GAAMA,EAAEo2C,QAC3CC,WAAY/2C,KAAK62C,YAAYj2C,MAAK,SAAKF,GAAMA,EAAEs2C,YAC/CC,MAAOj3C,KAAK62C,YAAYj2C,MAAK,SAAKF,GAAMA,EAAEuT,OAC1CiT,SAAUlnB,KAAK62C,YAAYj2C,MAAK,SAAKF,GAAMA,EAAEqsB,SA0BhD,CAlBqCmqB,WAClCl3C,KAAKiU,KAAO,EACZjU,KAAK+sB,OAAS,CAAE1mB,EAAG,GAAK9B,EAAG,IAC3BvE,KAAKm3C,eACR,CAEMvuC,KACHmL,GAEA,MAA0B,iBAAZA,EACR,OACAA,aAAmB1O,cACnB,WACA,WACT,CAMMpF,YACH,wBACH,CAEMu2B,cACCx2B,KAAKsnB,SACL,kBAAatnB,KAAKsnB,OAEzB,CAEM+D,YAAYC,GACXA,EAAQma,KAAOzlC,KAAKylC,KACpBzlC,KAAKo3C,aAEL9rB,EAAQ5d,UACR1N,KAAKq3C,kBAELr3C,KAAKsnB,SACDgE,EAAQxX,OAAS9T,KAAK8T,MACtB9T,KAAKs3C,QAAQt3C,KAAK8T,QACXwX,EAAQrX,MAAQqX,EAAQyB,SAC/B/sB,KAAKm3C,iBAGL7rB,EAAQpX,QACRoX,EAAQ5d,UACR4d,EAAQisB,QACRjsB,EAAQksB,UAERx3C,KAAKkB,QAAQ,cAAe,IAAMlB,KAAKy3C,cAGlD,CAEMzE,kBACHhzC,KAAKo3C,YACR,CAGOK,aACJ,IACI,KAAK,eAAUz3C,KAAKsnB,SAAWtnB,KAAK0Q,QAChC,OAAO1Q,KAAKkB,QAAQ,cAAe,IAAMlB,KAAKy3C,cAElDz3C,KAAK03C,qBACL,kBAAa13C,KAAKsnB,OAAQ,CACtBpT,OAAQlU,KAAKkU,OACbxG,SAAU1N,KAAK0O,aACf6oC,OAAQv3C,KAAKu3C,OACbC,QAASx3C,KAAKw3C,QACdjnC,QAASvQ,KAAKuQ,SAER,CAAb,MAAa,CACjB,CAGO4mC,gBACJ,KACI,kBAAan3C,KAAKsnB,OAAQ,CACtBrT,KAAMjU,KAAKiU,KACX0jC,aAAc33C,KAAKiU,KACnB8Y,OAAQ/sB,KAAK+sB,OACb6qB,eAAgB53C,KAAK+sB,OACrBxc,QAASvQ,KAAKuQ,SAER,CAAb,MAAa,CACjB,CAEa6mC,aAAU,gCAChB7wC,EAAKk/B,KAAOl/B,EAAKsxC,YAAY5G,gBAAkB1qC,EAAKmK,SACpDnK,EAAKmK,SAAU,EACXnK,EAAK+gB,YACL9pB,gBAAa+I,EAAK+gB,OAAQ,CACtBpT,OAAQ3N,EAAK2N,OACbxG,SAAU,GACV6pC,OAAQhxC,EAAKgxC,OACbC,QAASjxC,EAAKixC,QACdjnC,QAAShK,EAAKgK,WAElB,kBAAahK,EAAK+gB,SAEtB/gB,EAAKmxC,oBACLnxC,EAAK+gB,aAAe,kBAAa,CAC7BP,QAASxgB,EAAKsxC,YAAY5G,cAC1Bz1B,IAAKjV,EAAKk/B,IACVvxB,OAAQ3N,EAAK2N,OACbD,KAAM1N,EAAK0N,KACX0jC,aAAcpxC,EAAK0N,KACnB8Y,OAAQxmB,EAAKwmB,OACbrf,SAAUnH,EAAKmI,aACf6oC,OAAQhxC,EAAKgxC,OACbC,QAASjxC,EAAKixC,QACdjnC,QAAShK,EAAKgK,UAElBhK,EAAKmK,SAAU,EACfnK,EAAKsC,aACD,gBACA,2BAAsBtC,EAAK+gB,SAASve,UAAWvE,IAEvC+B,EAAKsxC,WAAW5G,cAAcoD,wBAClC9tC,EAAKswC,YAAYvpC,KAAK,IAAK9I,GAA3B,IAGJ+B,EAAKuN,OAAOvN,EAAK+wC,QAAQ/wC,EAAKuN,SAEjCvN,EAAKk/B,MAAQl/B,EAAKsxC,YAAY5G,eAC/B1qC,EAAKmK,UAELnK,EAAKrF,QAAQ,cAAe,IAAMqF,EAAK6wC,aAxCvB,IA0CvB,CAEOE,QAAQhuC,GACZ,IAAKA,IAAOtJ,KAAKsnB,OAAQ,OACzB,MAAMA,GAAiB,eAAUtnB,KAAKsnB,QACtC,IAAKA,EAAQ,OACb,MAAMwwB,EAAOxwB,EAAOE,SAASle,IACxBwuC,IACL93C,KAAK+sB,OAAS,CACV1mB,EAAG,GAAKyxC,EAAKzxC,EAAIyxC,EAAKpgB,EAAI,GAC1BnzB,EAAG,GAAKuzC,EAAKvzC,EAAIuzC,EAAK3xC,EAAI,IAE9BnG,KAAKm3C,gBACR,CAGM7/B,UAAUyc,EAAepmB,GAC5B,OAAOA,GAASoqC,UAAYn2C,KAAKC,UAAU,IAAK8L,GACnD,CAEO+pC,oBACJ13C,KAAK0O,cAAgB1O,KAAK0N,UAAY,IACjCqB,IAAI,CAAC3I,EAAGme,KAAS,IACXne,EACH2N,QAAS/T,KAAKg4C,cAAcC,UAAU1zB,IAAM0sB,iBAE/CjjC,OAAQ5H,GAAMA,EAAE2N,QACxB,CAEOsjC,kBACJ,MAAMa,EAAgBl4C,KAAKm4C,WAAa,GACxCn4C,KAAKm4C,WAAan4C,KAAK0N,UAAY,IAAIqB,IAClC3I,GACG8xC,EAAc//B,KACTzX,GAAMA,EAAEyB,IAAIhD,qBAAmB44C,UAAYr3C,EAAEyB,IAAIhD,qBAAmB44C,WAAa3xC,EAAE2xC,WAExF1yC,WAASivC,OAAO,CACZc,UAAW,CACP,CACI1qB,QAASvrB,mBACT+yC,SAAU,CACN6F,SAAU3xC,EAAE2xC,YACT3xC,EAAE7F,QACFP,KAAKo4C,eAIpBliB,OAAQl2B,KAAK6zC,YAG5B,EA3SL10C,kEAyEaw3C,GAAuB1yC,4FAAvB0yC,EAAuBzyC,kYAAvBsE,YAAU,g3BAtEfvE,mCACAA,iDAOAA,wCAyCAA,iIAjD8DA,yCAC/CA,8DAAW,cAObA,+iBCpDrB1E,SACAA,SADA,4BAGA,MAQa84C,EAKT34C,YAAwBoe,GACpB9d,KAAK4iC,KAAO9kB,GAAOvd,MAAQ,GAC3BP,KAAKs4C,mBACR,CAEMjtB,YAAYC,GACXA,EAAQsX,MACR5iC,KAAKs4C,mBAEZ,CAEOA,oBACJt4C,KAAKu4C,eAAiB32C,KAAKC,UAAU7B,KAAK4iC,UAAM9jB,EAAW,EAC9D,EA1BL3f,+DAQak5C,GAAoBp0C,uGAApBo0C,EAAoBn0C,6SALzBD,sCAAqG,WAClDA,sBAAoBA,oCAApBA,8MCP3D1E,eACAhC,WAKAE,GAJA8B,SAIAA,0EAaoB0E,kCACIA,sBACJA,qEAFiCA,qCAC7BA,0GAEJA,wGAEIA,2KAIJA,uCACIA,uCAA2B,cAQnBA,mCACJA,2BACAA,kDAAqC,iBAI7BA,wHAAeA,uCAAY,GAH/BA,+BAORA,uCAA2B,cACDA,iCAAQA,2BAC9BA,mDAAqC,kBAI7BA,wHAAeA,kCAAO,GAH1BA,2BAKAA,2CAAWA,sDAA4BA,+BAGnDA,6GA1BYA,oFAEC,iGA0BjBA,uCAAsE,eAC/BA,kHAASA,kCAAO,GAC/CA,gCACJA,oDAKRA,uCAGIA,0CACAA,kCAAGA,qDAA4BA,8BAhE/C,MAuFau0C,EAkBT94C,YAAoBC,oBAdJK,UAAO,IAAIoF,YAAU,CACjCqzC,SAAU,IAAIrzC,cAAY,GAAI,CAACA,aAAWuZ,WAC1C+5B,SAAU,IAAItzC,cAAY,GAAI,CAACA,aAAWuZ,YAYI,CAJvCg6B,WACP,OAAO34C,KAAKL,UAAUwC,IAAI,kBAAoB,CAAEyG,KAAM,OACzD,CAIY3I,WAAQ,gCACjBsE,EAAKmM,SAAU,QACTnM,EAAK5E,UAAUgB,YAAYC,MAAK,WAAOF,GAAMA,IAAIG,YACvD0D,EAAKmM,SAAU,CAHE,IAIpB,CAGMkoC,aACC54C,KAAK64C,WAAa74C,KAAK64C,UAAU5H,eACjCjxC,KAAK64C,UAAU5H,cAAcn9B,OAEpC,CAGMglC,QACH94C,KAAK0Q,SAAU,EAUf1Q,KAAKoI,KAAK2wC,UAAU,CAAEL,SAAU,gCACnC,EArILv5C,yDAuFaq5C,GAAcv0C,mGAAdu0C,EAAct0C,4gCApFnBD,sCAAyC,WAAzCA,CAAyC,WAQ7BA,sCAGAA,wCAIJA,2BACAA,sCACIA,kDA+BJA,2BACAA,wCAKJA,6BAEJA,iIAlDYA,yGAEIA,iGAICA,gGAKUA,mEAAgB,cAgCmBA,wpCC5DtE,iBACA3G,WAGAC,WAGAE,GAFA8B,SAEAA,yDAiBQ0E,sCAIC,aAMOA,yCACJA,2BACAA,sCAGIA,sBACJA,uEAVIA,sEAAoB,qBAApBA,CAAoB,uBASpBA,kGAtBhB,MA2Ca+0C,UAAgCv5C,YAczCC,YACqCoe,EACzBle,GAERG,QAHiCC,aACzBA,YAdKA,WAAQ,IAAIqF,eAEtBrF,UAAkBA,KAAK8d,MAAM7P,KAI7BjO,eAA0B,EAWhC,CATUsT,YACP,OAAOtT,KAAKiO,KAAKqF,OAAStT,KAAKJ,KAAKsY,YAAYlY,KAAKiO,KAAKrE,OAAS,GACtE,CASM3J,WACHD,KAAKkB,QAAQ,OAAQ,KACjBlB,KAAK0S,iBACL1S,KAAK2S,eAAL,EACD,IACN,CAEMA,gBACH,MAAMuB,EAAuB,GACzBlU,KAAKiO,MAAMxE,SACXyK,EAAO,UAAY,CAAEC,QAAS,QAC9BD,EAAO,UAAY,CAAEC,QAAS,SAElCnU,KAAK6S,UAAYqB,CACpB,CAGMxB,iBACH,IAAK1S,KAAKiO,KAAM,OAAO,KAWvBjO,KAAK0N,SAAW,CAVF,CACVlL,SAAUxC,KAAKiO,KAAKxE,OACpBsuC,SAAU,aACVhkC,QAASyX,kBACTjrB,KAAM,CACFiJ,KAAMxJ,KAAKiO,KAAKzE,MAEpBwK,QAAS,GACTC,KAAM,KAGb,EA9FL9U,kEA2Ca65C,GAAuB/0C,8BAepB6C,mBAAe7C,uGAflB+0C,EAAuB90C,6lBAxC5BD,yCAA0B,cACZA,8BAAKA,2BACfA,qCAAiBA,sBAAeA,6BAEpCA,wCAkBAA,yCAEC,cAEOA,gCACJA,oCAzBiBA,oEAKhBA,sUC1Bb,gEAYQA,sCAKIA,sBACJA,qEADIA,2IAEJA,mEAKIA,kHAASA,mCAAQ,GAEjBA,kCACIA,kCAQJA,yEAZAA,2CAKQA,gEAAmB,oBAnBvC,MAqEag1C,EAaTv5C,YAA8Cw5C,mBAX9Bl5C,aAAUA,KAAKk5C,SAASrR,QAExB7nC,UAAOA,KAAKk5C,SAASC,MAAQ,UAE7Bn5C,YAASA,KAAKk5C,SAASE,QAAU,OAEjCp5C,YAASA,KAAKk5C,SAAS1lC,QAAU,IAKqB,CAE/DvT,WACHm/B,WAAW,IAAOp/B,KAAK81C,MAAO,EAAO,KACrC1W,WAAW,IAAOp/B,KAAKq5C,cAAe,EAAO,IAChD,EAvFLl6C,0DAqEa85C,GAAeh1C,8BAaJguC,oBAAgB,kDAb3BgH,EAAe/0C,6tBAlEpBD,wCAOAA,+CALKA,yDAMAA,uqBCrBb1E,eACAjC,WAEAC,sBAmBA,MAkEa+7C,UAA4B75C,YAyBrCC,YACsCw5C,EAC1BK,GAERx5C,QAHkCC,gBAC1BA,YAzBLA,UAAOA,KAAKk5C,SAAS1vC,KAErBxJ,UAAO,GAAGA,KAAKk5C,SAASpK,OAAS,cAEjC9uC,YAASA,KAAKk5C,SAASpK,OAAS,UAChC9uC,aAAU,GACVA,WAAQ,EACRA,YAAS,EACAA,eAAY,GAWrBA,YAAS,SAASA,KAAKkD,UAAUlD,KAAKmD,SAASnD,KAAKkD,UAAUlD,KAAKmD,UAEnEnD,gBAAiC,EAOvC,CAlBUw5C,YACP,OAAOx5C,KAAKk5C,SAASlC,WAAa,CACrC,CAEU/iC,WACP,OAAOjU,KAAKk5C,SAASO,YAAc,CACtC,CAcMx5C,WACCD,KAAKk5C,SAASQ,OACd15C,KAAK6I,aACD,OACA7I,KAAKk5C,SAASQ,MAAM3wC,UAAWrI,IAC3BV,KAAKwJ,KAAO9I,EAAE8I,KACdxJ,KAAKm5C,KAAO,GAAGz4C,EAAEouC,OAAS,cAC1B9uC,KAAKo5C,OAAS14C,EAAEouC,OAAS,UACzB9uC,KAAK25C,cAAcj5C,EAAEk5C,OAArB,IAIZ55C,KAAK6I,aACD,QACA7I,KAAKk5C,SAAStC,QAAQ7tC,UAAWrI,IAC7BV,KAAKk5C,SAASpC,MAAQp2C,EACtBV,KAAK25C,cAAc35C,KAAKk5C,SAASU,OAAjC,IAGR55C,KAAK6I,aACD,OACA7I,KAAKk5C,SAASjC,OAAOluC,UAChBrI,GAAOV,KAAKk5C,SAASO,WAAa/4C,IAG3CV,KAAK6I,aACD,YACA7I,KAAKk5C,SAASnC,YAAYhuC,UACrBrI,GAAOV,KAAKk5C,SAASlC,UAAYt2C,IAG1CV,KAAK25C,cAAc35C,KAAKk5C,SAASU,OACpC,CAEMD,cAAcC,GACjB,MAAMC,EAA+BD,EAAOp9B,OACxC,CAAC2c,GAAI9yB,EAAG9B,MAAQ,CACZu1C,MAAOzzC,EAAI8yB,EAAE2gB,MAAQzzC,EAAI8yB,EAAE2gB,MAC3BC,MAAO1zC,EAAI8yB,EAAE4gB,MAAQ1zC,EAAI8yB,EAAE4gB,MAC3BC,MAAOz1C,EAAI40B,EAAE6gB,MAAQz1C,EAAI40B,EAAE6gB,MAC3BC,MAAO11C,EAAI40B,EAAE8gB,MAAQ11C,EAAI40B,EAAE8gB,QAE/B,CACIH,MAAO,IACPC,OAAO,IACPC,MAAO,IACPC,OAAO,MAGTC,IACCL,EAAKE,MAAQF,EAAKC,MADnBI,IAECL,EAAKI,MAAQJ,EAAKG,OAEjBlD,SAAU92C,KAAKk5C,SACvBl5C,KAAKmD,MAAkB,IAAV+2C,IACbl6C,KAAKkD,OAAmB,IAAVg3C,KAAiBpD,GAAS,GACxC92C,KAAKmD,MAAQod,KAAKC,MAAmB,IAAbxgB,KAAKmD,OAC7BnD,KAAKkD,OAASqd,KAAKC,MAAoB,IAAdxgB,KAAKkD,QAC9BlD,KAAK45C,OAASA,EACTp9B,OACG,CAAC3e,GAAIwI,EAAG9B,KACJ,GAAG1G,IAAIA,EAAI,IAAM,MACVwI,EAAIwzC,EAAKC,OAASI,IAAWl6C,KAAKmD,MAAS,OAC3CoB,EAAIs1C,EAAKG,OAASE,IAAWl6C,KAAKkD,OAAU,KACvD,IAEHia,QAAQ,OAAQ,KACrBnd,KAAKm6C,WAAaP,EAAO7qC,IAAI,EAAE1I,EAAG9B,KAAO,EAClC8B,EAAIwzC,EAAKC,OAASI,IAAWl6C,KAAKmD,MAAS,IAC3CoB,EAAIs1C,EAAKG,OAASE,IAAWl6C,KAAKkD,OAAU,KAEnDlD,KAAKu5C,KAAKtK,eACb,EA1KL9vC,8DAkEam6C,GAAmBr1C,8BA0BhBguC,oBAAgBhuC,qGA1BnBq1C,EAAmBp1C,mlBA/DxBD,sCAIC,WAMOA,mEAUIA,mCAaJA,+BAGRA,oEAIIA,sBACJA,kCAtCIA,iEAIIA,sEAA2B,uBAIvBA,wGAWIA,gEAAmB,mBADnBA,2CAmBZA,6bCjEZ1E,eACAjC,WAEAC,0DA8BgB0G,uCACIA,sBACJA,sEADIA,wHARRA,sCAMIA,sBACAA,yCAGJA,sEAPIA,0DAGAA,2EACOA,oIAhBfA,yCAAqCA,mHAAiBA,yCAAc,kCAChEA,iCAQAA,wCAWJA,gFAhBQA,0EAA6B,+BAA7BA,CAA6B,6BAA7BA,CAA6B,+BAM5BA,mFAbjB,MAmDam2C,EAoBT16C,YACsCw5C,EAC1BmB,GAD0Br6C,gBAC1BA,WArBLA,UAAO,EAEPA,YAASA,KAAKk5C,SAASoB,QAAU,GAExBt6C,aAAUA,KAAKk5C,SAASrR,QAExB7nC,UAAOA,KAAKk5C,SAASC,MAAQ,UAE7Bn5C,YAASA,KAAKk5C,SAASE,QAAU,UAEjCp5C,eAAoBA,KAAKk5C,SAASqB,WAAa,EAa3Dv6C,KAAKk5C,SAASjC,OAAOluC,UAAWvE,GAC5B+b,KAAKqM,IAAI,GAAM5sB,KAAKiU,KAAOzP,GAAK,GAEvC,CAdUg2C,mBACP,OAAO,yBAAqC,IAAjBx6C,KAAKu6C,WAAoB,MACvD,CAcMt6C,WACHm/B,WAAW,IAAOp/B,KAAK81C,MAAO,EAAO,KACrC1W,WAAW,IAAOp/B,KAAKq5C,cAAe,EAAO,IAChD,CAEMrG,kBACHhzC,KAAKy6C,cACR,CAEMA,eACH,MAAMC,EAAM16C,KAAKq6C,IAAIpJ,cAAcoD,wBACnC,IAAKqG,EAAIv3C,MAAO,OAAOi8B,WAAW,IAAMp/B,KAAKy6C,eAAgB,KAC7Dz6C,KAAKs6C,OAAS/5B,KAAKqM,IACf,IACC5sB,KAAKk5C,SAASoB,QAAU,KAAOI,EAAIv3C,OAAS,IAEpD,EAhGLhE,6DAmDai7C,GAAkBn2C,8BAqBfguC,oBAAgBhuC,8FArBnBm2C,EAAkBl2C,uhBAhDvBD,sDAAeA,ohBCfvB,MAyCa02C,GAzCbx7C,iEAyCaw7C,EAAsB,kDAAtBA,EAAsBz2C,sFAlCsBoU,yHAGGA,mLAIlBA,0UAXlCrU,sCAGC,UACGA,wBAEAA,2BACAA,4DAGAA,2BACAA,0DAEAA,6cClBZ,iBACA3G,sHAUQ2G,yCAKIA,uHAAS22C,2BAAoBr9C,gCAAS,EAAK,GAE3C0G,sCACJA,+FAJIA,uDAGUA,2DAVtB,MAkDa42C,UAA4Bp7C,YAlDzCC,kCAoDoBM,aAA0B,GAEzBA,YAAS,IAAIqF,cAOjC,CAHU1B,QACH3D,KAAKkB,QAAQ,QAAS,IAAOlB,KAAK81C,MAAO,EAC5C,EA5DL32C,uHAkDa07C,KAAmBp9C,GAAnBo9C,EAAmB,qDAAnBA,EAAmB32C,obA/CxBD,2CASAA,yCAIIA,kEAAsB,iCACCuE,UAAU,EAAE,kCAEnCvE,yCAAUA,sBAAgCA,oCAbzBA,4CASjBA,gEAIUA,8qBC1BtB1E,eACAhC,cAEAgC,SACAA,oDAEA,MAKau7C,EACTp7C,YAAoBC,EAAoCC,EAAmCsI,GAAvElI,iBAAoCA,YAAmCA,cAAmB,CAEjGC,WAAQ,sCACXkE,EAAKxE,UAAUgB,YAAYC,MAAK,WAAMF,GAAKA,IAAIG,kBAC/CsD,EAAKvE,KAAKe,YAAYC,MAAK,WAAMF,GAAKA,IAAIG,YAC5CsD,EAAMxE,UAAUwC,IAAI,sBACxBgC,EAAK+D,QAAQK,SAASpE,EAAKxE,UAAUwC,IAAI,qBAAqBY,MAAM,KAJnD,IAKpB,EAbL5D,4DAKa27C,GAAiB72C,gMAAjB62C,EAAiB52C,4JCX9B3E,mCAEA,MAGaw7C,EACTr7C,YAAoBs7C,mBAA2B,CAOxCplC,UACHtS,EACAsF,EAAyD,QAEzD,OAAQA,OACC,WACD,OAAO5I,KAAKg7C,UAAUC,+BAA+B33C,GAA9C,IACN,MACD,OAAOtD,KAAKg7C,UAAUE,uBAAuB53C,GAAtC,IACN,SACD,OAAOtD,KAAKg7C,UAAUG,0BAA0B73C,GAAzC,IACN,QACD,OAAOtD,KAAKg7C,UAAUI,yBAAyB93C,GAAxC,QAEP,OAAOtD,KAAKg7C,UAAUK,wBAAwB/3C,GAEzD,EA3BLnE,mDAGa47C,GAAQ92C,2GAAR82C,EAAQ9E,kGCLrB12C,mCAEA,IAAK+7C,EAOJ,MAPD,OAAKA,QAAe,KAChBA,iBACAA,mBACAA,qBACAA,uBACAA,iBACAA,mCANCA,EAAL,IAAKA,GAOJ,GAED,MAGaC,EACT77C,YAAoBs7C,mBAA2B,CAE/CplC,UACItS,EACAsF,EAAyD,QAEzD,OAAQA,OACC,WACD,OAAO5I,KAAKg7C,UAAUQ,SAASF,EAAgBG,aAAcn4C,GAAtD,IACN,MACD,OAAOtD,KAAKg7C,UAAUQ,SAASF,EAAgBI,IAAKp4C,GAA7C,IACN,SACD,OAAOtD,KAAKg7C,UAAUQ,SAASF,EAAgBK,OAAQr4C,GAAhD,IACN,QACD,OAAOtD,KAAKg7C,UAAUQ,SAASF,EAAgBM,MAAOt4C,GAA/C,QAEP,OAAOtD,KAAKg7C,UAAUQ,SAASF,EAAgBO,KAAMv4C,GAEhE,EAtBLnE,uDAGao8C,GAAYt3C,+GAAZs3C,EAAYtF,+LCILhyC,uCACIA,4BACJA,6FAGAA,oCAOIA,sBACJA,qDAHIA,8EAEAA,kGArBZA,uCACIA,sCAIC,cACaA,sBAA8BA,6BAE5CA,sCACIA,iDAGJA,2BACAA,sCACIA,sCASJA,2BACJA,2GArBQA,0EAA6B,sBAGnBA,+EAGKA,iEAAc,cASRA,6FAS5BA,oCAASA,sBAAWA,qEAAXA,0FAGVA,0CACAA,qCAAuCA,sBAAaA,qEADvCA,sCAC0BA,mEAtCnD,MA2Ca63C,EA3Cbp8C,cA6CoBM,aAAkB,GAElBA,WAAgB,GAEhBA,WAA2B,EAC9C,EAlDDb,iEA2Ca28C,EAAsB,kDAAtBA,EAAsB53C,0sBAxC3BD,sCAIIA,iDAyBJA,2BACAA,wFAGAA,iIA7BmBA,mEAAgB,qNCR3C,MAwCa83C,GAxCb58C,gEAwCa48C,EAAqB,kDAArBA,EAAqB73C,qFAjCIoU,8FACLA,sKAIbA,kVATZrU,sCAEC,UACwBA,4BAAGA,2BACxBA,6DAA2CA,2BAC3CA,4DAGAA,2BACAA,0DAGAA,odChBZ1E,yEAUY0E,sCAKIA,sBACJA,sEADIA,sGAVRA,sCAKIA,wCAOJA,kGATIA,6CAKKA,sEAAmB,wCAMxBA,wGAA2BA,8GAjBvC,MAoCa+3C,EAIEC,eACP,IAAKj8C,KAAK0Z,KAAM,MAAO,KACvB,MAAMlQ,EAAOxJ,KAAK0Z,KAAKlQ,MAAQ,GACzB0yC,EAAQ1yC,EAAK2T,QAAQ,oBAAqB,IAAIpa,MAAM,KAC1D,OAAOm5C,EAAMjzC,OAAS,EAChB,GAAGizC,EAAM,GAAG,KAAKA,EAAMA,EAAMjzC,OAAS,GAAG,KACzCO,EAAKy3B,MAAM,EAAG,EACvB,EA/CL9hC,8DAoCa68C,EAAmB,kDAAnBA,EAAmB93C,wfAjCxBD,wCAaAA,8FAXKA,4bCRb1E,aACAjC,WASAE,GARA+B,SAQAA,4EA2C4B0E,2EAIIA,wHAvBZA,uCACIA,sCAMIA,mHAASA,uCAAY,EAArBA,CAAsB,wGACbA,4CAAmB,GAE5BA,sBASAA,wCAMJA,2BACJA,gEArBQA,mFAAkD,uBAHlDA,iCAQAA,gJAUKA,+FAzBjBA,sCAKIA,iDA2BJA,qDA3BkCA,uFATtCA,sCAIIA,wCAiCJA,qEA9BwBA,2EApB9Bk4C,EAAe,CACjB,aAAap5C,MAAM,IACnB,aAAaA,MAAM,IACnB,YAAYA,MAAM,IAClB,UAAUA,MAAM,IAChB,CAAC,SAAU,UAAW,gBAG1B,MA4Eaq5C,UAAiC38C,YAoB1CC,YACYgxC,EACAkD,GAER7zC,QAHQC,gBACAA,gBAlBIA,YAASm8C,EAElBn8C,WAAqC,SAEpCA,kBAA2B,KAILA,aAAU,MAC/Bo8C,EAAyBv2C,UAC9B7F,KAAKwK,OACLxK,KAAKyB,aAAa,QAAlB,EAEyBzB,YAAS,IAClCA,KAAKkB,QAAQ,OAAQ,IAAMlB,KAAK2D,QAOnC,CAEM6yB,cACHz2B,MAAMy2B,cACNx2B,KAAK2D,OACR,CAEM04C,aACHr8C,KAAK0wC,UAAUO,eAAeqL,OAC9Bt8C,KAAK0wC,UAAUO,eAAen9B,OACjC,CAEMtJ,OACCxK,KAAKg0C,eACJh0C,KAAKo0C,UACVp0C,KAAKg0C,aAAeh0C,KAAK4zC,SAASU,OAAO,CACrCG,iBAAkBz0C,KAAK4zC,SAClB1sB,WACAq1B,SACAC,SACAC,uBAETz8C,KAAKg0C,aAAagB,OAAOh1C,KAAKo0C,SACjC,CAEMzwC,QACC3D,KAAKg0C,eACLh0C,KAAKg0C,aAAakB,UAClBl1C,KAAKg0C,aAAe,KAE3B,CAEM0I,eAAe/3B,GAClB,IAAIg4B,EAAa38C,KAAK0wC,SAASO,cAAc2L,eAC7C,MAAMze,EAAMn+B,KAAK0wC,SAASO,cAAc3tC,OAAS,GACjD,OAAQqhB,EAAIhL,eAAJ,IACC,aACA,UACD3Z,KAAK4c,MAAQ,QACb,UACC,cACD5c,KAAK0wC,SAASO,cAAc3tC,MAAQ,GAAG66B,EAAI0e,OACvC,EACAF,EAAa,KACbxe,EAAI0e,OAAOF,EAAYxe,EAAIl1B,UAC/B0zC,EAAap8B,KAAKqM,IAAI,EAAG+vB,EAAa,GACtC,UACC,UACD38C,KAAK0wC,SAASO,cAAc3tC,MAAQ,GAAG66B,EAAI0e,OACvC,EACAF,MACMxe,EAAI0e,OAAOF,EAAYxe,EAAIl1B,UACrC0zC,GAAc,EACd,cAEmB,UAAf38C,KAAK4c,QAAmB5c,KAAK4c,MAAQ,UACzC5c,KAAK0wC,SAASO,cAAc3tC,MAAQ,GAAG66B,EAAI0e,OACvC,EACAF,KACAh4B,IAAMwZ,EAAI0e,OAAOF,EAAYxe,EAAIl1B,UACrC0zC,GAAc,EAEtB38C,KAAK0wC,SAASO,cAAc6L,cAAc,IAAIC,WAAW,UACzD/8C,KAAKg9C,iBACLh9C,KAAKkB,QACD,QACA,KACIlB,KAAKq8C,aACLr8C,KAAK0wC,SAASO,cAAc2L,eAAiBD,EAC7C38C,KAAK0wC,SAASO,cAAcgM,aAAeN,GAE/C,GAEP,CAEMK,iBACHh9C,KAAKk9C,OAASl9C,KAAKk9C,OAAOnuC,IAAKrO,GAC3BA,EAAEqO,IAAK+I,GACHA,EAAE7O,OAAS,EACL6O,EACAA,EACmB,WAAf9X,KAAK4c,MACC,cACA,kBAI3B,EA5LLzd,mEA4Eai9C,GAAwBn4C,uIAAxBm4C,EAAwBl4C,uHAUtB2tC,YAAS,8KAVXrpC,WAAS,4BAATA,UAAQ,gzBAzEbvE,4BACAA,2pBCxBRoX,2BACAA,2BACAA,2BACAA,4HCHA,kDA4B4BpX,8DAA2CA,qDATvDA,sCAKIA,2CACAA,sCAAc,SACLA,sBAAeA,2BACpBA,uCACIA,0CACJA,uFALWA,0DAENA,+DAEMA,0EA1BnC,MAmCak5C,EAnCbz9C,cAoCoBM,UAAe,GACfA,UAAc,GACbA,WAAQ,IAAIqF,cAChC,EAvCDlG,gEAmCag+C,EAAqB,kDAArBA,EAAqBj5C,2IAtBIoU,oMADiCA,4EACnD,kCAAkB8kC,YAa6B9kC,8lBAvB3DrU,sCAEC,UAFDA,CAEC,cAIqCA,iDAASuE,cAAY,GAC/CvE,yCAAUA,mCAAUA,6BAExBA,8DAEAA,6BAEJA,sCACIA,wCAaJA,oCAhBIA,8DAAMuE,eAANvE,2BAMqBA,oKCtBrC,iBAGAzG,GAFA+B,SACAA,SACAA,UACA9B,WAGAE,GADA4B,SACAA,aACAA,6EAMY0E,uCAA2BA,sBAAWA,sEAAXA,iGAD/BA,qCACIA,yCACAA,mDACAA,uCAA2BA,mDAA+BA,uEAFnDA,mEACPA,uIAC2BA,yJAiFnBA,uCAGC,cACaA,mCAAUA,2BACpBA,uCAAkBA,gCAAOA,uDAuB7BA,uCASIA,4CACJA,qDADmBA,oFAEnBA,uCAA2D,YAInDA,sBACJA,wEADIA,qKAnBZA,uCAIIA,uEAWAA,yCAOJA,sEAdPA,8MAOkCA,iQAtHnCA,oCAMIA,kHAASA,wCAAa,GAGtBA,sCAEC,UAC4BA,sBAAkBA,2BAC3CA,sCAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,cAkCZA,sBASJA,6BAEJA,uCAAkBA,uBAAYA,+BAGtCA,wCAEC,YAFDA,CAEC,eAEiBA,sCAAYA,2BACtBA,wCACIA,uBACJA,6BAEJA,wCAAoC,eACtBA,wCAAcA,2BACxBA,wCACIA,uBAIJA,6BAEJA,0CAOAA,wCAAoC,eACtBA,gCAAMA,2BAChBA,wCACIA,uBAMJA,+BAGRA,6CAGIA,yCACJA,2BACAA,0CAuBJA,+EA1HAA,uEAAqB,+EAQQA,yFAIjBA,0IAGC,0FAHDA,CAGC,sFAHDA,CAGC,sCAaGA,wIAGC,yFAHDA,CAGC,oFAHDA,CAGC,2CAYGA,qOAWUA,iEASdA,4EAMAA,6MAQHA,uHAQGA,uOAgBPA,8HAjHrB,MAkJao5C,UAA2B59C,YAMpCC,YACYqL,EACA2U,EACA9f,GAERG,QAJQC,eACAA,cACAA,YAPIA,eAAoB,EACnBA,UAAO,IAAIqF,eACXrF,YAAS,IAAIqF,cAQ7B,CAEMpF,WACHD,KAAK6I,aACD,cACA7I,KAAK0f,OAAOC,cAAc5W,UAAW6W,GACjCA,EAAOC,IAAI,UAAY7f,KAAKgY,OAAO1O,KAAOsW,EAAOzd,IAAI,SAC/CnC,KAAK+f,cACL,IAGjB,CAEUC,UACP,MAAMvU,EAAOzL,KAAKgY,OAAOvM,MAAQgB,KAAKiM,MAEtC,MAAO,IAAGuH,EADOziB,aAAUiP,KAAKiM,MAAOjN,GAClB,SAAU,YAAOA,EAAM,SAC/C,CAEUjJ,eACP,MAAM86C,EACFt9C,KAAKgY,OAAOxJ,OAAO5E,OAClB5J,KAAKgY,OAAOlC,QAAQlM,OACrB,GACEC,EACF7J,KAAKJ,KAAKsY,YAAYolC,IACtBt9C,KAAKJ,KAAKsS,UAAUiG,KAAMzX,GAAM48C,EAAU56C,SAAShC,EAAE4I,KACzD,MAAO,GAAGO,GAAQA,EAAKwO,cAAgBxO,EAAKL,MAAQ,KAAO,MACvDxJ,KAAKgY,MAAMxJ,OAAO6J,cAAgBrY,KAAKgY,MAAMxJ,OAAOhF,MAE3D,CAEU0W,aACP,MAAMC,EAAQngB,KAAKgY,OAAOvM,MAAQgB,KAAKiM,MACjChN,EAAW1L,KAAKgY,OAAOtM,UAAY,GACnC0U,GAAM,gBAAWD,EAAOzU,GACxB2U,GAAM,oBAAe,CACvBC,MAAOC,KAAKC,MAAM9U,EAAW,IAC7B+U,QAAS/U,EAAW,KAEnByR,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,MAAO,IAAG,YAAOgD,EAAO,gBAAe,YAAOC,EAAK,cAAcC,IACpE,CAEMN,eACE/f,KAAKgY,OACVhY,KAAKkB,QAAQ,OAAQ,KACjB,MAAMyK,EAAM3L,KAAK+K,QAAQP,KAAK+yC,6BAA4B,CACtDh9C,KAAMP,KAAKgY,QAEfhY,KAAK6I,aACD,OACA8C,EAAII,kBAAkB4U,KAAK5X,UAAU,IAAM/I,KAAK2gB,KAAK3Q,SAEzDhQ,KAAK6I,aACD,SACA8C,EAAII,kBAAkB6U,OAAO7X,UAAU,IAAM/I,KAAK4gB,OAAO5Q,QAF7D,EAKP,EA1NL7Q,6DAkJak+C,GAAkBp5C,kMAAlBo5C,EAAkBn5C,slDA/IvBD,uCAKAA,+CALoCA,uCAY/BA,kUCzBb,iBACA1G,WACAC,WAGAE,GADA6B,SACAA,UAEA3B,GADA2B,SACAA,UACA1B,WACAC,WACAC,WACAoG,WACAC,gFAkBgBH,uCAIIA,6CAIJA,qEAHQA,yLAmEAA,0CAUIA,mHAASA,oCAAS,GAElBA,uCAEC,cACaA,sBAIRA,2BACFA,gEAMAA,4EAnBJA,kEAAgD,wCAAhDA,CAAgD,iDAQlCA,sGAWVA,uJAGRA,0CAKC,cACaA,mCAAUA,oGAJpBA,wEApCRA,uCAKIA,4CA6BAA,4CAQJA,qEAlCSA,qGA8BAA,+FAqHOA,uCAIIA,sBACJA,qDADIA,kGAnBZA,uCAMC,YAKOA,sBACJA,2BACAA,uCAA4B,YACHA,sBAAeA,2BACpCA,yCAMJA,uDAVIA,4EAGqBA,+DAGDA,+FA5BxCA,uCACIA,uCAEC,WACGA,yBAKAA,2BACAA,uCACIA,yCAuBJA,6BAERA,8EApBbA,mHAmCiBA,+DAMAA,qDACAA,6GAIIA,yKAURA,uCAA0D,sBAIlDA,4JAA0B,EAAK,GAClCA,yEAHGA,0EAAwB,0FA9RhD,MA4Tau5C,EA0CT99C,YACqCylB,EACzBvlB,EACAkV,EACAnV,GAHyBK,cACzBA,YACAA,mBACAA,iBA7CKA,UAAO,IAAIqF,eACXrF,YAAS,IAAIqF,eAEvBrF,iBAAc,GACdA,qBAA0B,EACjBA,WAAQA,KAAKmlB,OACtBnlB,cAAW,CACd,CACIwC,SAAUxC,KAAKgY,OAAOlC,QAAQrM,OAC9BsK,QAASyX,oBAIDxrB,kBAAeA,KAAKgY,OAAO+iB,IAAI,aAAa9xB,OAAS,EAE9DjJ,WAAuB,IAAIy9C,gBAC3Bz9C,cAAqB,IAAI09C,WACzB19C,WAAe,IAAIqwB,QAEnBrwB,kBAAeA,KAAKmlB,OAAO5Z,UAAUiR,OACxC,CAAClf,EAAGI,IAAOJ,GAA2B,aAAtBI,EAAEigD,gBAAiC,EAAI,GACvD,GAEG39C,oBAAiBA,KAAKmlB,OAAO5Z,UAAUiR,OAC1C,CAAClf,EAAGI,IAAOJ,GAA2B,aAAtBI,EAAEigD,gBAAiC,EAAI,GACvD,GAEG39C,mBAAgBA,KAAKmlB,OAAO5Z,UAAUiR,OACzC,CAAClf,EAAGI,IACCJ,GACyB,cAAtBI,EAAEigD,iBACoB,gBAAtBjgD,EAAEigD,gBACI,EACA,GACd,GAaA39C,KAAK49C,QAAQpmB,MAChB,CAXUqmB,iBACP,OAAQ79C,KAAKL,UAAUwC,IAAI,iCAC9B,CAWU+d,aACP,MAAMC,EAAQngB,KAAKgY,OAAOvM,MAAQgB,KAAKiM,MACjChN,EAAW1L,KAAKgY,OAAOtM,UAAY,GACnC0U,GAAM,gBAAWD,EAAOzU,GACxB2U,GAAM,oBAAe,CACvBC,MAAOC,KAAKC,MAAM9U,EAAW,IAC7B+U,QAAS/U,EAAW,KAEnByR,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,MAAO,IAAG,YAAOgD,EAAO,gBAAe,YAAOC,EAAK,cAAcC,IACpE,CAEYy9B,UAAO,gCAChB,MAAMxT,GAAM,eAAUzlB,EAAKrW,OAAOlF,GAAI,aACjCghC,UACCA,EACDV,QAAQ,UAAW,EAAC,iBAAY/kB,EAAK7M,MAAMvM,QAC3C9I,MAAOpD,IAAM,iBAAY,8BAA8BA,MAL5C,IAMnB,CAEaq+C,QAAK,gCACf/4B,EAAKrW,YAAcqW,EAAK/P,YAAYc,UAChCiP,EAAKM,OAAOrP,QAAQxM,IAAMub,EAAKM,OAAOrP,QAAQhT,OAElD+hB,EAAKvR,MAAQuR,EAAKjlB,KAAKsY,YAAY2M,EAAKrW,MAAM5E,OAC9Cib,EAAKnV,SAAWmV,EAAKjlB,KAAKsS,UAAUiG,KAAM3H,GACtCqU,EAAKrW,MAAM5E,MAAMlH,SAAS8N,EAAIlH,KAElCub,EAAKnX,SAAW,CACZ,CACIlL,SAAUqiB,EAAKrW,MAAM/E,OACrBsK,QAASyX,mBAXF,IAclB,EAlZLrsB,qEA4Taq+C,GAA0Bv5C,8BA2CvB6C,mBAAe7C,mMA3ClBu5C,EAA0Bt5C,mHAFxB,CAACU,eAAUimB,wEAtL8CvS,sFAmCXA,sFAOpCA,sFASuCA,gFAMAA,+EAMAA,oFAM3CA,mFAmGSA,uFAQAA,yFAxMyBA,4EACnB,oCA8GXA,uFAgDJA,koIAxQbrU,sCAEC,UAFDA,CAEC,SAMWA,0EAIHA,2BACDA,wCASAA,qCAKIA,sBACJA,2BACAA,sCAAyD,UAAzDA,CAAyD,UAAzDA,CAAyD,UAAzDA,CAAyD,eAqCrCA,uBASJA,6BAEJA,uCAAkBA,uBAAYA,+BAGtCA,0CA2CJA,6BAEJA,wCAAwC,YAAxCA,CAAwC,YAIhCA,0BAEAA,2BACAA,wCAA8C,eAChCA,+BAAKA,2BACfA,qCAAKA,qDAA0CA,6BAEnDA,wCAA8C,eAChCA,kCAAQA,2BAClBA,qCAAKA,uBAAYA,6BAErBA,wCAA8C,eAChCA,6BAAGA,2BACbA,qCACIA,uBAKJA,6BAEJA,wCAA8C,eAChCA,+BAAKA,2BACfA,qCACIA,uBAEJA,+BAGRA,wCAEC,YAFDA,CAEC,YAIOA,0BAA8CA,2BAC9CA,2CAIIA,mEAA0B,CAAI,GAJlCA,0BAQAA,6BAEJA,wCAAmC,YAAnCA,CAAmC,aAINA,uBAAuBA,2BAC5CA,kEAAuCA,6BAE3CA,wCAEC,aACwBA,uBAAyBA,2BAC9CA,kEAAsCA,6BAE1CA,wCAEC,aACwBA,uBAAwBA,2BAC7CA,kEAA2CA,+BAGnDA,iEAKAA,2BACAA,wCACIA,6CACAA,wCAAqB,UACZA,uBAA2BA,2BAChCA,wCAAwBA,uBAAgBA,iCAIpDA,mDAqCAA,wCAIIA,+CAMJA,2BACAA,wCAGIA,yCAOAA,0CAMJA,2BACAA,2CAIC,eACaA,+BAAKA,6BAEnBA,0CAOJA,2BACAA,gDAA6C,gBAKrCA,iDAASuE,oBAAgB,GAEzBvE,0CAAUA,8BAAIA,2BACdA,+DAAoBA,6BAExBA,2CAGIA,iDAASuE,eAAa,GAEtBvE,0CAAUA,gCAAMA,2BAChBA,+DAAsBA,wCAzStBA,uEAAuB,mDAOtBA,2JAUDA,2JAEAA,+EAMQA,0IAGC,0FAHDA,CAGC,sFAHDA,CAGC,sCAaGA,wIAGC,yFAHDA,CAGC,oFAHDA,CAGC,2CAcGA,qOAWUA,iEAMrBA,+EAmDIA,sHAIAA,iEAKDA,0RAUAA,wMA0BqBA,2EAMAA,4EAMAA,2EAWVA,0EAENA,4GACmBA,qEAIrBA,uEA2CPA,yFAAqB,sBAArBA,CAAqB,6CAUpBA,qEAQAA,qEAW2BA,gMCzSpD,iBACA1G,WACAC,WACAC,WAWAC,WACAC,WAWAE,GAFA0B,SAEAA,UAIAzB,WACAC,WACAoG,WACAC,WACAC,WAEAE,GADAhF,QACAA,UAEA2G,GADA3G,SACAA,UACA4G,WACAC,WACA1F,WACAwB,4EAEMif,EAAe,CACjB,cACA,eACA,gBACA,kBACA,YAyBJ,MAGa48B,UAAyBt+C,YAmMlCC,YACYE,EACAsI,EACAmZ,EACA1hB,EACAoL,GAERhL,QANQC,YACAA,eACAA,iBACAA,iBACAA,eAvMJA,WAAQ,IAAIkN,kBAA+B,QAC3ClN,cAAW,IAAIkN,kBAAkC,CACrD0hB,SAAU,GACVlhB,SAAU,KAEN1N,YAAQ,yBACRA,WAAQ,IAAIkN,kBAAgBT,KAAKiM,OACjC1Y,YAAS,IAAIkN,kBAA+B,MAC5ClN,cAAW,IAAIkN,kBAAwB,IAGxClN,kBAA8B,IAAIm7B,gBACrCv5B,KAAK2f,MAAM7f,eAAemC,QAAQ,8BAAgC,OAEtD7D,aAAUA,KAAK6Y,SAASzL,eACxBpN,aAAUA,KAAKod,SAAShQ,eAExBpN,aAAS,mBAAc,CACnCA,KAAKod,SAASxc,MAAK,6BAAwB,aAC3CZ,KAAKJ,KAAK6P,gBAAgB7O,MACtB,YAAQF,KAAQA,IAChB,6BAAwB,SAE7BE,MACC,kBAAa,MACb,SAAKF,GAAMV,KAAK8Y,UAAU,WAC1B,eAAU,GAAI8V,gBACV5uB,KAAK6Y,SAASvL,KAAK,sCACdshB,GAAU3lB,SAAQ2lB,EAAW,CAAC5uB,KAAKJ,KAAK8P,UAAUpG,MAChD,cAASslB,EAAS7f,IAAKzF,IAAO,0BAAqBA,QAE9D,SAAK0iB,IAAM,aAAQA,KACnB,SAAKtrB,GAAMV,KAAK6Y,SAASvL,KAAK,MAC9B,iBAAY,IAGAtN,cAAWA,KAAKuO,OAAO3N,MACnC,SAAKorB,IAAM,aAAO,aAAQA,EAAEjd,IAAKrO,GAAMA,EAAEgN,cAG7B1N,sBAAkB,mBAAc,CAC5CA,KAAKuO,OACLvO,KAAKuQ,UACN3P,MACC,SAAI,EAAE2N,GAAU8d,WAAU3e,WAAU0c,eAChC7b,EACKP,OAAQnQ,IACL,MAAMwqC,MAAU1qC,kBAAemF,OAAS,KAAKC,MAAM,KAAK,GAClD8G,GAAQ7J,KAAKL,UAAUwC,IACzB,+BACC,IAAIkmC,GACH2V,EACFh+C,KAAKL,UAAUwC,IAAI,4BAA8B,GAC/C87C,EAAgBxoC,OAAOC,KAAKsoC,GAC5BE,GAAargD,EAAE+L,MAAMuO,KAAMzX,IAC7Bu9C,EAAcv7C,SAAShC,KAE3B,OACI7C,EAAEikB,YACAjY,GAAQhM,EAAE+L,MAAMlH,SAASmH,OACzBq0C,IAAcF,EAAUE,MAAgB7V,MACxChc,GAAYrsB,KAAKm+C,gBAAgBz7C,SAAS7E,EAAEyL,MAC9CoE,EAASqU,MAAO3b,IAAMvI,EAAE6P,SAAShL,SAAS0D,MAC1CvI,EAAEusB,UAAY7J,KAAKqM,IAAI,EAAGxC,GAAY,EAAxB,GAGrB6W,MAAM,EAAG1gB,KAAKsM,IAAI,IAAKte,EAAOtF,WAEvC,iBAAY,IAGRjJ,sBAAkB,mBAAc,CACpCA,KAAKuO,OACLvO,KAAKo+C,kBACNx9C,MACC,0BAAqB,EAAEmY,IAAMC,KAAQD,IAAOC,IAC5C,eAAU,EAAEtY,EAAGsI,MACJ,oBACFA,GAAQ,IAAI+F,IAAKrO,IACd,MAAMuY,GAAU,eAAUvY,EAAE4I,GAAI,YAAY2P,QACxC,YAEEC,EAAMD,EACPE,SACAvY,MACG,SAAKF,IACAA,GAAK,IAAIqO,IAAKrR,GAAM,IAAIy9B,gBAAcz9B,MAGnD,OAAKsC,KAAKsZ,gBAAgB,QAAQ5Y,EAAE4I,OAChCtJ,KAAK6I,aAAa,QAAQnI,EAAE4I,KAAM2P,EAAQM,QAEvCL,OAInB,iBAAY,IAGAlZ,+BAA2B,mBAAc,CACrDA,KAAKo+C,gBACLp+C,KAAKwZ,kBACN5Y,MACC,SAAI,EAAEoI,EAAMuR,MACR,MAAQ9O,OAAMC,YAAa1L,KAAK0hB,MAAME,cACtC,OAAQ5Y,GAAQ,IACXgF,OAAO,CAACtN,EAAG6jB,KACR,0BACI9Y,EACAA,EAvIR,IAuIeC,EACP6O,EAASgK,IAAQ,KAGxB1V,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAE6sB,SAAW7jB,EAAE6jB,SAR5B,IAUX,iBAAY,IAGApqB,8BACZ,mBAAc,CAACA,KAAKo+C,kBAAkBx9C,MAClC,YAAO,KAAOZ,KAAK6Y,SAASpL,aAC5B,kBAAa,MACb,eAAU,EAAEc,MACR,IAAKA,EAAOtF,OAAQ,OAAO,QAAG,IAC9BjJ,KAAK6Y,SAASvL,KAAK,kCACnB,MAAQ7B,OAAMC,YAAa1L,KAAK0hB,MAAME,cAChC/H,EAAQ,CACVC,cAAc,iBAAYrO,GAC1BsO,YAAY,iBAAYtO,EA1J5B,IA0JmCC,IAEnC,OACK1L,KAAKq+C,cASA,4BACI,IACOxkC,EACHykC,WAAY/vC,EACPQ,IAAI,EAAGzF,QAASA,GAChBgB,KAAK,MAEdtK,KAAKJ,OAfT,+BACI2O,EAAOQ,IAAI,EAAGzF,QAASA,GACvB,IAAKuQ,EAAOjR,KAAM,SACpBhI,MACE,SAAKF,GACDA,EAAEqO,IAAKzF,GAAOiF,EAAO4J,KAAMta,GAAMyL,IAAOzL,EAAEyL,QAY1D1I,MACE,SAAKF,GACDA,EAAEqO,IAAI,EAAGzF,QAASiF,EAAO4J,KAAMta,GAAMyL,IAAOzL,EAAEyL,OAElD,gBAAY5I,GAAM,IAvBf,IA0BX,SAAKA,GACDA,EAAEsN,OACGQ,IACIA,EAAM8hB,cAAcrnB,QACrBuF,EAAM8hB,cAAcnY,KAAMzX,GAAmB,SAAbA,EAAEuhB,WAG9C,SAAKvhB,GAAMV,KAAK6Y,SAASvL,KAAK,MAC9B,iBAAY,IAGJtN,sBAAmBA,KAAK2Y,MAAM/X,MAC1C,eAAW7C,GAEA87C,KADWp0B,KAAI,sBAAiB1nB,EAAG0O,KAAKiM,QACjC,GACR1Y,KAAKu+C,yBACLv+C,KAAKw+C,0BAqIHx+C,oBAAiB,IAAMA,KAAKi/B,MAAM,mBAvG9Cj/B,KAAK8U,YAAc,IAAIlQ,YAAU5E,KAAKJ,MACtCI,KAAK6I,aACD,gBACA7I,KAAKkI,QAAQiS,OAAOpR,UAAWiP,IAEvBA,aAAiB5Y,kBAChB+hB,EAAas9B,KAAM/9C,GAAMsX,EAAMwD,IAAI9Y,SAAShC,KAE7CV,KAAKmI,WAAL,IAIZnI,KAAK6I,aACD,cACA7I,KAAK0hB,MAAM5Y,aAAaC,UAAU,EAAG0C,WAC7BA,GAAQA,IAASzL,KAAK2Y,MAAMlL,YAC5BzN,KAAK2Y,MAAMrL,KAAK7B,GACpBzL,KAAK2U,WAAL,IAGR,IAAI4H,EAAQ,EACZvc,KAAK6a,SACD,WACA,KACI,MAAMugB,EAAWp7B,KAAK0hB,MAAMpe,MAAM83B,SAC9B7e,IAAU6e,GAAUnyB,SACxBsT,EAAQ6e,GAAUnyB,OAClB0kB,GACc1kB,SACTjJ,KAAKL,UAAUwC,IAAI,uCAChBnC,KAAKL,UAAU2D,MAAM,4BAEzBtD,KAAK0hB,MACAvf,IAAI,mBACH2rB,cAAc,CAAC1oB,aAAWuZ,WAChC3e,KAAK0hB,MACAvf,IAAI,kBACJiH,WAAWpJ,KAAK0hB,MAAMpe,MAAMo7C,kBAEjC1+C,KAAK0hB,MAAMvf,IAAI,mBAAmBw8C,kBAClC3+C,KAAK0hB,MAAMvf,IAAI,kBAAkB42C,UAAU,OAE/C/4C,KAAK0hB,MAAMk9B,yBAAX,EAEJ,IAEP,CAxEUt8B,WACP,OAAOtiB,KAAKuiB,MAAM9U,UACrB,CACUrF,WACP,OAAOpI,KAAK0hB,KACf,CACU1J,YACP,OAAOhY,KAAKmlB,OAAO1X,UACtB,CAEU0wC,sBACP,OAAOn+C,KAAKL,UAAUwC,IAAc,qBAAuB,EAC9D,CAEUk8C,mBACP,OAAyD,IAAlDr+C,KAAKL,UAAUwC,IAAI,0BAC7B,CA0DM08C,yBACH7+C,KAAK6I,aAAa,eAAgB7I,KAAKiN,iBAAiBlE,YAC3D,CAEM8B,QAAQvH,GACXtD,KAAKuiB,MAAMjV,KAAKhK,EACnB,CAEMqF,WAAWrF,GACdtD,KAAKod,SAAS9P,KAAK,IAAKtN,KAAKod,SAAS3P,cAAenK,GACxD,CAEMkR,QAAQwD,EAAuB,IAAImjB,iBACtCn7B,KAAKmlB,OAAO7X,KAAK0K,GACjBhY,KAAK2Y,MAAMrL,KAAK0K,EAAMvM,MACtBzL,KAAK4iB,WACR,CAEMA,YACH5iB,KAAK0hB,MAAMo9B,QACX,MAAM9mC,EAAQhY,KAAKmlB,OAAO1X,YAAe,GACzCzN,KAAK0hB,MAAMtY,WAAW,IACf4O,KACAA,EAAM6K,eACTpX,MACKuM,EAAM1O,KAAM,cAAS0O,EAAMvM,MAAQ,EAAGgB,KAAKiM,OACtCjM,KAAKiM,MACLV,EAAMvM,KAChBrB,KAAM4N,GAAO5N,OAAQ,mBAActH,QAEvC9C,KAAKod,SAAS9P,KAAK,CAAEI,SAAU,KAC/B1N,KAAK2U,WACR,CAEMxM,YACHzG,eAAeyZ,WAAW,sBAC1Bnb,KAAK8Y,UAAU,WACf9Y,KAAK8Y,UAAU,SACf9Y,KAAKwU,SACR,CAEMG,YACHjT,eAAeC,QACX,qBACAC,KAAKC,UAAU7B,KAAK0hB,MAAME,eAAiB,IAElD,CAEMkB,WACE9iB,KAAK0hB,OAAO1hB,KAAKwU,UACtBxU,KAAK0hB,MAAMtY,WAAW,IACfxH,KAAK2f,MAAM7f,eAAemC,QAAQ,uBAAyB,OAErE,CAIMk7C,mBAAmB/7B,GAAiB,GACvC,MAAM5a,EAAOpI,KAAK0hB,MAElB,GADAtZ,EAAKsM,oBACAtM,EAAKiC,QAAU2Y,EAAO,OAC3B,MAAMhL,EAAQ,IAAImjB,gBAAc,IAAK/yB,EAAKwZ,gBAC9B5hB,KAAK+K,QAAQP,KAAKw0C,0BAAyB,CAAEz+C,KAAMyX,IAC3DlM,cAAc/C,UAAWhL,GACzBA,EAAIiC,KAAKkI,QAAQK,SAAS,CAAC,MAAQ,GAE1C,CAEMwN,SAASiN,GAAiB,GAAK,WAClC,OAAO,IAAIzhB,QAAJ,mBAA2B,UAAOC,EAASmhC,GAC9C1Z,EAAKpQ,SAASvL,KAAK,qBACnB,MAAMlF,EAAO6gB,EAAKvH,MAClBtZ,EAAKsM,mBACL,MAAMsD,EAAQiR,EAAKjR,OAAS,IAAImjB,gBAChC,IAAK/yB,EAAKiC,QAAU2Y,EAChB,SAAKnK,SAASvL,KAAK,IACZq1B,EACH,mCAAkC,sBAC9Bv6B,GACFkC,KAAK,UAGf,MAAQhB,KAAIc,OAAMqB,OAAMC,WAAUuzC,UAASx7B,WACvCrb,EAAKwZ,cACHrT,EAASnG,EAAKjG,IAAI,cAAcmB,OAAS,GAC/C,IAAI83B,EAAWhzB,EAAKjG,IAAI,aAAamB,OAAS,GAC9C,KACMgG,GAAMmC,IAASuM,EAAMvM,MAAQC,IAAasM,EAAMtM,WAClD6C,EAAOtF,OACT,CACE,MAAMkX,GAAQ,iBAAYnI,EAAMvM,YAC1Bwd,EAAKi2B,gCACP3wC,EACA9C,EACAC,EACApC,EACM,CAAE6W,QAAOC,IAAKD,EAAyB,GAAjBnI,EAAMtM,eAC5BoT,EACNxV,GAAM,IACR3G,MAAOjC,KACL,QAAKmY,SAASvL,KAAK,IACnBq1B,EAAOjiC,IACDA,IAEb,CACD,MAAMy+C,GACF/0C,KAAS,oBAAetH,OACxBm8C,KAAY,oBAAen8C,MACzBysB,GAAWhhB,EAAO,IAAIjF,GACtBuQ,GAAQvQ,EACR61C,GACI,CAAEC,SAAUh1C,GAAQ60C,GACpB,CAAE9kB,UAAW5K,IACjB,GACAjsB,GAAQ2lB,EAAKvH,MAAME,cAMzB,GALA1hB,QAAQuZ,IACJ,YACAwP,EAAK5H,UAAUsC,eACfpV,EAAOtF,QAEPggB,EAAK5H,UAAUsC,gBAAkBpV,EAAOtF,OAAQ,CAChD/I,QAAQuZ,IAAI,mBACZ,MAAMmK,QAAgBqF,EAAK5H,UAAUwC,YAAY,CAC7Cjb,KAAM,QACNkb,cAAevV,EAAO,GAAG8J,cAAgB9J,EAAO,GAAG/E,KACnDiC,OACAC,WACA+X,YAEJ,IAAKG,GAASG,QAAS,OAAOkF,EAAKpQ,SAASvL,KAAK,IAChDhK,GAAcuf,eAAiB,CAC5BmB,QAASJ,EACTK,WAAYL,EAAQK,YAExB/jB,QAAQuZ,IAAI,mBAAoBmK,EACnC,CACD,MAAM7lB,EAAIuF,GAAMmgB,SACV,gBAAWngB,GAAMmI,MAAMiY,UACvBpgB,GAAMmI,KACR2vB,EAASnyB,UAAY,UAAWmyB,EAAS,IACzCA,EAAW,CACP,IAAItE,gBAAc,CACd3M,MAAOiR,EACPb,MAAOj3B,GAAMo7C,eACbrkB,YAAa/2B,GAAM+7C,yBAI3BjkB,EAASb,MAAQj3B,GAAMo7C,eACvBtjB,EAASf,YAAc/2B,GAAM+7C,sBAEjC,MAAM9zC,GAAY,YACd,IAAIjI,GAAMiI,UAAWjI,GAAMkI,YAAa,oBACxC,SAEEpI,QAAe6lB,EAAKq2B,aACtB,IAAInkB,gBAAc,IACX73B,GACH8G,KACI6e,EAAKtpB,UAAUwC,IAAI,2BAClB8mB,EAAKtpB,UAAUwC,IAAI,2BACdmB,GAAMuS,UAAU,GAAG/S,MACnB,KACNQ,GAAM8G,KACVmB,YACAE,KAAM1N,EACNq9B,aAEJvhB,IACFlX,MAAOpD,IACLojC,QAAOpjC,GACP0pB,EAAKpQ,SAASvL,KAAK,IACb/N,IAEV0pB,EAAK9gB,YACL8gB,EAAKhf,aAAe7G,EACpB1B,eAAeC,QACX,4BACAC,KAAKC,UAAUuB,IAEnB6lB,EAAKpe,QAAQ,WACbrJ,EAAQ4B,GACR6lB,EAAKpQ,SAASvL,KAAK,GACtB,GAlHM,wDAmHV,CAEagyC,aACVtnC,EACA6B,GAA0B,gCAE1B,OACK0lC,EAAKlB,cASA,eAAUrmC,EAAM2O,SAAU9M,IAR1B,kBACI,iCAA4B,IACrB7B,EAAM2O,SACT1E,OAAQs9B,EAAK5/C,UAAUwC,IAAI,4BACrB,WACA,eAEZvB,MAAK,SAAKF,IAAM,iCAA4BA,MAEtDG,WAbwB,IAc7B,CAEaq+C,gCACV3wC,EACA9C,EACAC,EACA8zC,EACAz2B,GAAe,gCAEf,MAAM02B,SACIl+C,QAAQoU,IACVpH,EAAOQ,IAAKrO,GAAMm2B,EAAK/hB,YAAYc,UAAUlV,EAAE4I,IAAM5I,EAAEoC,UAE7DiM,IAAKrO,GAAMA,EAAE4I,IACTuQ,EAAa,CACfC,cAAc,iBAAYrO,GAC1BsO,YAAY,iBAAYtO,EAAkB,GAAXC,EAAgB,MAE/C8zC,IAAS3lC,EAAM6lC,cAAgB,GAAGF,EAAQr/B,WAAWq/B,EAAQp/B,OACjE,MAAMnL,EAAoB1G,EAAOtF,aACnB4tB,EAAKwnB,cAMP,4BAAuB,IAChBxkC,EACHykC,WAAYmB,EAAUn1C,KAAK,QAP9B,+BAA0Bm1C,EAAW,IAC/B5lC,EACHjR,KAAM,OACNmgB,YAMRloB,YACF,GACN,GAAIoU,EAAWhM,SAAWsF,EAAOtF,OAC7B,MACIsF,EAAOtF,OAASgM,EAAWhM,OADzB,mDAGV,OAAO,CA7BQ,IA8BlB,EA7eL9J,2DAGa4+C,GAAgB95C,kPAAhB85C,EAAgB3uC,QAAhB2uC,EAAgB,qBAFb,4GC3EhB,iBAEAzgD,WAMAE,GADA+B,SACAA,qFAEA,MAkEaogD,EAWTjgD,YACqCylB,EACzBpa,GADyB/K,cACzBA,eAZIA,mBAAe,mCAC3BA,KAAKmlB,QAEOnlB,kBAAc,gCAC1BA,KAAKmlB,QAEOnlB,gBAAY,8BAAyBA,KAAKmlB,QAEnDnlB,mBAAe,CAKlB,CAEG2D,QACH,IAAK3D,KAAK4/C,aACN,OAAO,iBAAY,wEAEvB5/C,KAAK+K,QAAQpH,OAAM,EACtB,EAvFLxE,kEAkEawgD,GAAuB17C,8BAYpB6C,mBAAe7C,gGAZlB07C,EAAuBz7C,2FA/DMoU,uGAYfA,8FAYAA,sGAYAA,+FAOdA,glBA3CLrU,8DAA4DA,2BAC5DA,sCAA+D,SAQvDA,iEAAwB,CAAI,oCAE5BA,iCACAA,6DAA4BA,6BAEhCA,oCAOIA,iEAAwB,CAAI,oCAE5BA,kCACAA,+DAAoCA,6BAExCA,qCAOIA,iEAAwB,CAAI,iCAE5BA,4CAA0BA,kCAAQA,2BAClCA,+DAA6BA,6BAEjCA,2CAGIA,iDAASuE,SAAO,GAHpBvE,0BAOAA,6BAEJA,2CAIC,eACaA,+BAAKA,oCA9CXA,oIAYAA,mIAYAA,mIAmBJA,yZC/DZ,iBAEA3G,WAWAC,WACAC,WACAC,WAMAC,WAEA,IAAImiD,EAA0B,CAAEv2C,GAAI,UAAWE,KAAM,gBAErDrK,+BAAkCua,GAC1BA,IAAMmmC,EAAgBnmC,EAC7B,EAKD,MAAaomC,EAqETpgD,YAAYa,EAAuC,IAC/CP,KAAKsJ,GAAK/I,EAAK+I,IAAM,GACrBtJ,KAAK+/C,YACDx/C,EAAKw/C,cACL,iBACIx/C,EAAKkL,OACD,4BAAsB,gBAAW,IAAIgB,KAAQ,GAAI,CAC7C8Y,UAAW,KAG3BvlB,KAAKggD,UACDz/C,EAAKy/C,YACL,kBACI,gBAA8B,IAAnBhgD,KAAK+/C,YAAoBx/C,EAAKmL,UAAY,KAE7D1L,KAAKo/C,SAAW7+C,EAAK6+C,UAAY,GACjCp/C,KAAKi/C,SACA1+C,EAAK0+C,SAAWY,EAAc/8C,QAAQ6W,eAAiB,GAC5D3Z,KAAKoK,MACD7J,EAAK6J,MACLpK,KAAKi/C,SACLY,EAAc/8C,OACd,IACF6W,cACF,MAAMpO,EAAYhL,EAAKgL,WAAa,GACpCvL,KAAKuL,UAAYA,EACZyC,OAAQ0L,IAAeA,EAAKL,UAC5BtK,IAAKjR,GAAM,IAAI+qB,OAAK/qB,IACzBkC,KAAK6V,WACD,YACItV,EAAKsV,WACDtK,EACKyC,OAAQ0L,GAAUA,EAAaL,UAC/BtK,IAAKlR,GAAM,IAAIwyB,QAAMxyB,IAC9B,UACC,GACTmC,KAAKuW,MAAQhW,EAAKgW,OAAS,gBAC3BvW,KAAKonB,KAAO7mB,EAAK6mB,MAAQ,GACzBpnB,KAAKigD,UAAY1/C,EAAK0/C,QACtBjgD,KAAKyjB,UAAYljB,EAAKkjB,QACtBzjB,KAAKyL,KAA0B,IAAnBzL,KAAK+/C,aAAsB//C,KAAKyL,KAC5CzL,KAAK0L,SAAW1L,KAAKyjB,QACf,KACAljB,EAAKmL,WACL,yBAAqC,IAAjBnL,EAAKy/C,UAAkBhgD,KAAKyL,OAChD,GACNzL,KAAK0lB,SAAWnlB,EAAKmlB,UAAY,GACjC1lB,KAAK0/B,YAAcn/B,EAAKm/B,aAAen/B,EAAK2/C,oBAAsB,GAClElgD,KAAKmgD,WAAa5/C,EAAK4/C,YAAc5/C,EAAK6/C,mBAAqB,GAC/DpgD,KAAKqgD,iBACD9/C,EAAK8/C,kBAAoB9/C,EAAK+/C,yBAA2B,GAC7DtgD,KAAKugD,YAAchgD,EAAKggD,UACxBvgD,KAAKwgD,oBAAsBjgD,EAAKigD,qBAAuB,GACvDxgD,KAAKwL,UAAYxL,KAAKuL,UAAU4M,KAC3BuB,GAASA,EAAK5W,QAAU9C,KAAKoK,MAElCpK,KAAKygD,cAAgBlgD,EAAKkgD,gBAAiB,EAC3CzgD,KAAK0gD,OAASngD,EAAKmgD,OAAS,IAAIZ,EAAcv/C,EAAKmgD,QAAU,KAEzD1gD,KAAK2gD,WADT5iD,EAASwiD,UACa,CACdpgC,MACuB,IAAnBngB,KAAK+/C,aACL,IAAItzC,KACuC,IAAtClM,EAAKogD,WAAmBC,aAC3Bl9B,UACNtD,IACI7f,EAAKogD,WAAWvgC,KAChB,IAAI3T,KACqC,IAApClM,EAAKogD,WAAmBE,WAC3Bn9B,UACN7I,SAAUta,EAAKogD,WAAW9lC,SAC1BimB,QAASvgC,EAAKogD,WAAW7f,QACzBggB,aAAcvgD,EAAKogD,WAAWG,cAGhB,GAEtB,MAAMhrC,EAASvV,EAAKuV,OAEhBA,GAAQhT,QACP9C,KAAK6V,UAAUsC,KAAMzX,GAAMA,EAAEoC,QAAUgT,EAAOhT,QAE/C9C,KAAK6V,UAAUgH,KAAK,IAAIwT,QAAMva,IAElC9V,KAAK8V,OAASA,GAAW9V,KAAK6V,UAAU,IAAc,KACtD7V,KAAK+gD,WAAaxgD,EAAKwgD,YAAcxgD,EAAKuV,OAC1C9V,KAAKghD,YAAczgD,EAAKygD,aAAe,GACvChhD,KAAK6iB,eAAiBtiB,EAAKsiB,gBAAkB,GAC7C7iB,KAAKiiB,QAAS,iBAAY,IAAK1hB,KAASP,QAAW,OACnDA,KAAKwC,SAAWjC,EAAKiC,UAAYxC,KAAKwO,OAAO6J,cAAgBrY,KAAKwO,OAAOhF,MAAQ,GACjFxJ,KAAK4I,KACe,aAAhB5I,KAAKiiB,OACC,YACAjiB,KAAKuL,UAAU4M,KAAMzX,GAAMA,EAAEugD,aAC7B,WACA,WACV,UAAWt8B,KAAOpkB,EACRokB,KAAO3kB,OACTA,KAAK6iB,eAAe8B,GAChBpkB,EAAKokB,IAAQ3kB,KAAK6iB,eAAe8B,IAG7C3kB,KAAK6iB,eAAeuY,UAAYp7B,KAAK6iB,eAAeuY,UAAY,IAAIrsB,IAC/DrR,GAAM,IAAIo5B,gBAAc,IAAKp5B,EAAGsa,MAAOhY,OAE/C,CA7GM+6B,IAAwCpW,GAC3C,OAAO3kB,KAAK6iB,eAAe8B,EAC9B,CA8GUu8B,aACP,OAAOlhD,KAAKuL,UAAUyC,OAAQ5H,KAAQA,EAAE66C,YAC3C,CAEUzyC,YACP,OAAOxO,KAAK6V,UAAU,IAAM,IAC/B,CACUoK,eACP,OAAO,eAAU,IAAIxT,KAAKzM,KAAKyL,MAAO,IAAIgB,KAC7C,CAKMka,SACH,MAAMqe,EAA2B,IAAKhlC,MAChCogB,GAAM,kBAAY,gBAAWpgB,KAAKyL,KAAMzL,KAAK0L,WAC7CD,EAAOzL,KAAKyjB,SAAU,SAAIzjB,KAAKyL,KAAM,CAAE6U,MAAO,KAAQtgB,KAAKyL,KACjEu5B,EAAI+a,aAAc,iBAAYt0C,GAC9Bu5B,EAAIgb,UAAY5/B,EAChB,MAAM7U,EAAYvL,KAAKuL,UACvB,OAAIvL,KAAKugD,YACLvb,EAAI2b,WAAa,IACV3gD,KAAK2gD,WACRC,YAAa5b,EAAI+a,YACjBc,WAAW,iBAAY7gD,KAAK2gD,WAAWvgC,OAG/C4kB,EAAI2b,WAAa3b,EAAI2b,YACflrC,OAAOC,KAAKsvB,EAAI2b,YAAY13C,OACxB+7B,EAAI2b,WAER,KACN3b,EAAIz5B,WAAY,YAAO,IAAIA,KAAcvL,KAAK6V,UAAU9G,IAAIrO,IAAM,IAAKA,EAAG2Y,UAAU,MAAW,SAC1FrZ,KAAKyjB,UACNuhB,EAAIniB,eAAeirB,UAAY,IAEnC9I,EAAIniB,eAAeuY,SAAW4J,EAAIniB,eAAeuY,SAASrsB,IACrDrR,GAAM,IAAIo5B,gBAAc,IAAKp5B,EAAGsa,MAAO,QAE5CgtB,EAAI7K,UAAYn6B,KAAK8V,QAAQxM,UACtB07B,EAAI5J,gBACJ4J,EAAIv5B,YACJu5B,EAAIt5B,gBACJs5B,EAAI/iB,QACX,uBAAkB+iB,GACXA,CACV,CAGUpoB,YAMP,MAAMlE,EAAM,IAAIjM,KACVhB,EAAOzL,KAAKyL,KAClB,OAAI,cAASiN,GAAK,SAAIjN,EAAM,CAAEgV,SAAS,MAAgB,UACnD,cAAS/H,EAAKjN,GAAc,YAC5B,cAASiN,GAAK,SAAIjN,EAAM,CAAEgV,QAAS,MAAe,WAClD,cAAS/H,GAAK,SAAIjN,EAAM,CAAEgV,QAASzgB,KAAK0L,YACjC,cACJ,MACV,CAEUy1C,mBACP,MAAMzoC,EAAM,IAAIjM,KAChB,OACIzM,KAAKigB,WACJ,aAAQvH,EAAK1Y,KAAKyL,QACf,cAASiN,GAAK,gBAAW1Y,KAAKyL,KAAMzL,KAAK0L,UAEpD,EA1PLvM,+SChCA,iBACA7B,WACAC,WAEAC,WACAC,WAEAC,WAwBM0jD,EAAkB,uBAkCxB,WAA4B7gD,GACxB,OAAO,UAAK,GAAG6gD,IAAmB,IAAIjmB,gBAAc56B,GAAMomB,UAAU/lB,MAChE,SAAKqN,GAAS,IAAIktB,gBAAcltB,IAEvC,CASD,WACI3E,EACA/I,EACAwe,EAA6B,GAC7BwJ,EAA0B,SAE1B,MAAM1O,GAAQ,mBAAckF,GAC5B,OAAmB,UAAXwJ,EAAqBC,QAAQA,OACjC,GAAG44B,KAAmB34B,mBAAmBnf,KACrCuQ,EAAQ,IAAMA,EAAQ,KAEf,UAAX0O,EAAqBhoB,EAAO,IAAI46B,gBAAc56B,GAAMomB,UACtD/lB,MAAK,SAAKqN,GAAS,IAAIktB,gBAAcltB,IAC1C,CAtDD9O,yBACI4f,GAEA,MAAMlF,GAAQ,mBAAckF,GAC5B,OAAO,SAAI,GAAGqiC,IAAkBvnC,EAAQ,IAAMA,EAAQ,MAAMjZ,MACxD,SAAKoI,GAASA,EAAK+F,IAAKxP,GAAM,IAAI47B,gBAAc57B,MAChD,gBAAWmB,IAAK,QAAG,KAE1B,EAODvB,uBAA0BmK,EAAYyV,EAA6B,IAC/D,MAAMlF,GAAQ,mBAAckF,GAC5B,OAAO,SACH,GAAGqiC,KAAmB34B,mBAAmBnf,KACrCuQ,EAAQ,IAAMA,EAAQ,MAE5BjZ,MAAK,SAAKqN,GAAS,IAAIktB,gBAAcltB,IAC1C,EAMD9O,gBAaAA,gBAoBaA,YAAY,CACrBoB,EACAwe,YAEQxe,GAAc0hB,OACf1hB,EAAK+I,GAAK+3C,EAAY9gD,EAAK+I,GAAI/I,EAAMwe,GAAKuiC,EAAY/gD,IAQjEpB,yBAA4BmK,EAAYyV,EAA6B,IACjE,MAAMlF,GAAQ,mBAAckF,GAC5B,OAAO,SACH,GAAGqiC,KAAmB34B,mBAAmBnf,KACrCuQ,EAAQ,IAAMA,EAAQ,KAE1B,CACI+O,cAAe,QAG1B,EAODzpB,0BAA6BmK,EAAY6wB,GACrC,OAAO,UACH,GAAGinB,KAAmB34B,mBAClBnf,wBACmBmf,mBAAmB0R,KAC1C,IACFv5B,MAAK,SAAKqN,GAAS,IAAIktB,gBAAcltB,IAC1C,EAOD9O,yBAA4BmK,EAAY6wB,GACpC,OAAO,UACH,GAAGinB,KAAmB34B,mBAClBnf,uBACkBmf,mBAAmB0R,KACzC,IACFv5B,MAAK,SAAKqN,GAAS,IAAIktB,gBAAcltB,IAC1C,EAOD9O,8BACImK,EACAyV,EAA6B,IAE7B,MAAMlF,GAAQ,mBAAckF,GAC5B,OAAO,SACH,GAAGqiC,KAAmB34B,mBAAmBnf,YACrCuQ,EAAQ,IAAMA,EAAQ,MAE5BjZ,MAAK,SAAKoI,GAASA,EAAK+F,IAAKd,GAAS,IAAI4a,YAAU5a,KACzD,EASD9O,+BACImK,EACAi4C,EACA3kC,EACAmC,EAA6B,IAE7B,MAAMlF,GAAQ,mBAAc,IAAKkF,EAAGnC,UACpC,OAAO,UACH,GAAGwkC,KAAmB34B,mBAClBnf,aACQi4C,YAAmB1nC,EAAQ,IAAMA,EAAQ,KACrD,IACFjZ,MAAK,SAAKqN,GAAS,IAAI4a,YAAU5a,IACtC,CAbD9O,+FC/KA,iBAEA7B,WACAC,WAEAC,WACAC,WACAC,SACAC,WACAC,WACAC,WAEAC,WACAC,UAEAoG,WACAC,WACAC,cACA9E,gIASA,MAmBaiiD,GAnBbriD,6DAmBaqiD,EAAkB,iDAAlBA,wDAHE,CAACp8C,uBAAoBP,SAb5BpF,eACA2F,cACAA,sBACA0C,iBACAb,iBACAF,qBACAF,sBACAD,kBACAE,kBACAI,2BACAiiB,mBACAC,sDApBJm0B,6BAA0B,oMAC1BkE,yBAAqB,6DAArBA,wBAAqB,yGACrBC,qBAAkB,sKCvBtBrmC,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,4RCLA,iBA+EA,WACIrS,EACA24C,EAAmB,IAEnB,IAAIxhC,EAAQ,IAAI1T,KAAK,GACrB,MAAMm1C,EAAqB,GAC3B54C,EAAK6F,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAEkO,KAAOlF,EAAEkF,MAC/B,UAAWqU,KAAW9W,EAAM,CACxB,MAAM64C,EAAY,IAAIp1C,KAAKqT,EAAQrU,MAC7Bq2C,GAAU,gBAAWhiC,EAAQrU,KAAMqU,EAAQpU,WAC7C,aAAQoU,EAAQrU,KAAM0U,IACTI,KAAKkF,KAAI,yBAAoBo8B,EAAW1hC,KACzCwhC,GACRC,EAAM/kC,KAAK,CACPsD,MAAOA,EAAMuD,UACbtD,IAAKN,EAAQrU,OAGrB0U,EAAQ2hC,IACD,kBAAa3hC,EAAOL,EAAQrU,QACnC0U,EAAQ2hC,EAEf,CACD,MAAMjkD,EAAIsiB,EAAMuD,UAChBk+B,SAAM/kC,KAAK,CACPsD,MAAOtiB,EACPuiB,IAA4B,IAAtBviB,GAAQ4O,KAAKiM,SAEhBkpC,CACV,CAvFDziD,yBACIgkB,GAEA,OAAIA,EAAQtN,WAAW5M,OAEfka,EAAQtN,UAAUkM,MACbrkB,GAA4B,aAAtBA,EAAEigD,iBAAkCx6B,EAAQe,UAGhD,WAEPf,EAAQtN,UAAU4oC,KACb/gD,GACyB,cAAtBA,EAAEigD,iBACoB,gBAAtBjgD,EAAEigD,iBAGH,YAEJ,WAEJ,UACV,EAEDx+C,+BACI0b,WACAimB,UACA1gB,QAEA,IAAI+C,EAAU,GACd,GAAItI,EAAU,CACV,OAAQimB,OACC,QACD3d,EAAUA,EAAQgT,OACdtb,EAAW,EAAI,SAASA,SAAkB,SAE9C,UACC,SACDsI,EAAUA,EAAQgT,OACdtb,EAAW,EAAI,SAASA,UAAmB,UAE/C,UACC,UACDsI,EAAUA,EAAQgT,OACdtb,EAAW,EAAI,SAASA,WAAoB,WAIxDsI,EAAUA,EAAQgT,OAAO,YAAW,YAAO/V,EAAK,kBACnD,CACD,OAAO+C,CACV,EAODhkB,qBA+BAA,kCACIghB,EACAC,EACApX,EACA24C,EAAmB,IAEnB,MAAMI,EAASC,EAAiBh5C,EAAM24C,GACtC,UAAWM,KAAOF,EACd,GACI5hC,GAAS8hC,EAAI9hC,OACbA,EAAQ8hC,EAAI7hC,KACZA,EAAM6hC,EAAI9hC,OACVC,GAAO6hC,EAAI7hC,IAEX,OAAO,EAGf,OAAO,CACV,EAQDjhB,iCACI6J,EACAyC,GAAe,IAAIgB,MAAOiX,UAC1Bi+B,EAAmB,IAEnB,MAAMC,EAAQI,EAAiBh5C,EAAM24C,GAC/B7W,GAAO,iBAAW,mBAAcr/B,GAAO,GAC7C,UAAWy2C,KAASN,EAAO,CACvB,IAAI,aAAQM,EAAM/hC,MAAO2qB,GACrB,OAAOoX,EACJ,IAAI,cAASpX,EAAMoX,EAAM9hC,OAExB1U,EADaytB,uBAAoB+oB,EAAM9hC,IAAK0qB,IAChC6W,EAAU,OAAOO,CAExC,CACD,OAAON,EAAMA,EAAM34C,OAAS,EAC/B,EAED,MAMMk5C,EAA+C,CACjDC,MAHU,MAIVC,OAJU,MAKVC,KANS,MAOTC,MAPS,MAQTviC,IATQ,KAURwiC,KAVQ,KAWR71C,KAZS,GAaT2T,MAbS,GAcT1T,OAfW,EAgBX6T,QAhBW,GAmBTgiC,EAA8B,CAChCC,cAAc,EACdjyB,QAAQ,GAOZ,WAAgC0N,GAC5B,MAAM+d,GAAS/d,GAAO,IAAIp7B,MAAM,KAChC,OAAOm5C,EAAMjzC,OAAS,GAAKizC,EAAM,GAAKiG,EAAajG,EAAM,IAAM,CAClE,CAED,WAA0B/b,EAAa10B,EAAsB,IAAIgB,MAC7D,OAAO,gBAAWhB,EAAMk3C,EAAgBxiB,GAC3C,CAYD,WACIhd,EACAy/B,GAEA,MAAQp0C,SAAU2U,EAClB,UAAWtZ,KAAQ2E,EAAM5E,MACrB,GAAIg5C,EAAQ/4C,IAAOZ,OACf,UAAW45C,KAAWD,EAAQ/4C,GAC1B,GAAIg5C,GAAWC,EAAgB3/B,EAAS0/B,GACpC,MAAO,IAAKJ,KAAkBI,EAAQrxB,OAItD,OAAOixB,CACV,CAED,YACMh3C,OAAMC,WAAUtB,QAClBy4C,GAEA,IAAI7kB,EAAU,EACd,MAAQ+kB,cAAeF,EACvB,OAAKE,IAEDA,EAAW7gC,kBAAkBT,OAC7BshC,EAAW7gC,OAAOH,MAAOrhB,GAAM0J,GAAM8X,QAAQxf,SAAShC,MAEtDs9B,GAAW,GAEX+kB,EAAWC,YACX,eAAS,gBAAWv3C,EAAMC,GAAWu3C,EAAUF,EAAWC,cAE1DhlB,GAAW,GACX+kB,EAAWG,WAAY,aAAQz3C,EAAMw3C,EAAUF,EAAWG,aAC1DllB,GAAW,GAEX+kB,EAAWI,YACXR,EAAgBI,EAAWI,aAAez3C,IAE1CsyB,GAAW,GAEX+kB,EAAWK,YACXT,EAAgBI,EAAWK,aAAe13C,IAE1CsyB,GAAW,GACRA,GAAWvoB,OAAOC,KAAKqtC,GAAY95C,OAC7C,CAjED9J,oBAKAA,cAIAA,mCACIoP,EACA4U,EACAy/B,GAEA,OAAOr0C,EAAOP,OACTtN,IAAO2iD,EAAc,IAAKlgC,EAAS3U,MAAO9N,GAAKkiD,IAAUnyB,OAEjE,EAEDtxB,kBAgBAA,oNC1NA,iBACA7B,WAYAC,WAEAC,WACAC,UACAC,WACAC,WAGA,IAAI2lD,GAAe,UAAI,iBAAW,cAAS,IAAI72C,KAAQ,GAAI,GAAI,CAAE+1C,MAAM,IAEvE,MAAMe,EAAyBC,GAAuCC,GAC9DD,EAAiBlgD,OAAO2F,SAAWw6C,EAAQngD,MACpC,CAAEogD,eAAgB,oCAEtB,KAGXvkD,+BAAkC6Y,EAAuB,IAAImjB,iBACpDnjB,IAAOA,EAAQ,IAAImjB,iBACxB,MAAM/yB,EAAO,IAAIhD,YAAU,CACvBkE,GAAI,IAAIlE,cAAY4S,EAAM1O,IAC1Bc,KAAM,IAAIhF,cACN4S,EAAM5N,MAAQ4N,EAAMxM,WAAW1I,QAAS,oBAAeA,OAAS,GAChE,CAACsC,aAAWuZ,WAEhBnT,UAAW,IAAIpG,cACX4S,EAAMxM,WAAa,IAAIqd,OAAK,CAAE/lB,MAAOkV,EAAM5N,MAAQ,MAEvD60C,QAAS,IAAI75C,cAAY4S,EAAMinC,QAAS,CAAC75C,aAAWuZ,WACpDygC,SAAU,IAAIh6C,cAAY4S,EAAMonC,UAChC7zC,UAAW,IAAInG,cAAY4S,EAAMzM,WAAa,IAC9CsK,UAAW,IAAIzQ,cAAY4S,EAAMnC,WAAa,IAC9CU,MAAO,IAAInR,cAAY4S,EAAMzB,MAAO,CAACnR,aAAWuZ,WAChDyI,KAAM,IAAIhiB,cAAY4S,EAAMoP,MAC5B64B,QAAS,IAAI76C,cAAY4S,EAAMioC,SAC/Bx0C,KAAM,IAAIrG,cAAY4S,EAAMvM,KAAM,CAACrG,aAAWuZ,WAC9CjT,SAAU,IAAItG,cAAY4S,EAAMtM,SAAU,CAACmc,gBAC3CpE,QAAS,IAAIre,cAAY4S,EAAMyL,SAC/B88B,UAAW,IAAIn7C,cAAY4S,EAAMuoC,WACjCI,WAAY,IAAIv7C,cAAY4S,EAAM2oC,YAClCH,oBAAqB,IAAIp7C,cAAY4S,EAAMwoC,qBAC3CE,OAAQ,IAAIt7C,cAAY4S,EAAM0oC,QAC9BM,YAAa,IAAI57C,cAAY4S,EAAMgpC,aACnC5lB,SAAU,IAAIh2B,cAAa4S,EAAM6K,gBAAgBuY,SAAS,IAAIjR,OAAS,IACvEu0B,eAAgB,IAAIt5C,cAAY4S,EAAM6K,gBAAgBuY,SAAS,IAAIb,OAAS,IAC5E8kB,qBAAsB,IAAIj6C,cAAY4S,EAAM6K,gBAAgBuY,SAAS,IAAIf,aAAe,IACxF1c,OAAQ,IAAIvY,cAAY4S,EAAM6K,gBAAgBlF,QAAU,IAExDgmC,aAAc,IAAIv+C,cAAY4S,EAAM6K,gBAAgB8gC,cACpDnhD,SAAU,IAAI4C,cAAY4S,EAAMxV,UAChCohD,YAAa,IAAIx+C,eAAY,GAC7By+C,cAAe,IAAIz+C,cACf4S,EAAM6K,gBAAgBghC,gBAAiB,GAE3C/tC,OAAQ,IAAI1Q,cAAiB4S,EAAMlC,UAEvC1N,SAAKjG,IAAI,aAAa2G,aAAaC,UAAWpL,GAC1CyK,EAAKmK,SAASnI,KAAKkgB,SAAS3sB,GAAGmF,QAEnCsF,EAAKjG,IAAI,aAAa2G,aAAaC,UAAWijB,GAC1C5jB,EAAKmK,SAASuD,OAAOwU,SAAS0B,GAAG/iB,OAAU+iB,EAAE,GAAa,OAE9D5jB,EAAKmK,SAASkR,QAAQ3a,aAAaC,UAAW0a,IACtCA,EAASrb,EAAKmK,SAAS7G,SAAS0c,UAC/BhgB,EAAKmK,SAAS7G,SAAS+W,QAAvB,GAETra,EAAKjG,IAAI,wBAAwB2rB,cAAc,CAACy1B,EAAsBn7C,EAAKjG,IAAI,eAC3E6V,EAAM1O,KACNlB,EAAKjG,IAAI,QAAQimB,UACjBhgB,EAAKjG,IAAI,aAAaimB,WAEN,YAAhBpQ,EAAM4E,OAAqBxU,EAAKjG,IAAI,QAAQimB,UACzChgB,CACV,EAMDjJ,yCAA4C2rC,GACxCwY,GAAe,mBAAc,IAAI72C,KAAKq+B,GACzC,EAQD3rC,gCACIob,EACAuH,EACAgiC,EACAr4C,GAAe,aAAQ,IAAIgB,OAE3B,MAAMiM,EAAM,IAAIjM,KAAKhB,GACfs4C,GAAiB,yBAAoBxpC,EAAU9O,EAAM,GACrD0U,EAAQ,IAAI1T,KAAKs3C,EAAe5jC,OAChCC,EAAM,IAAI3T,KAAKs3C,EAAe3jC,KAC9B4jC,GAAiB,0BACnBv4C,EACAA,EACAs4C,EAAe5jC,MACf4jC,EAAe3jC,KAEb6jC,GAAwB,oBAAe,CACzCxjC,SACM,yBADGujC,EACiB5jC,EACAD,EADKzH,KAG7BwrC,GAAiBF,KAAmB,eAAU7jC,EAAOzH,GAE3D,MAAO,CACHuJ,OAAQ1d,EAEFy/C,EACAF,EACI,uBACA,YACJ,sBALA,eAMNK,gBATeH,KAAmB,eAAU5jC,EAAK1H,GAU3C,oBACAsrC,EACA,eAAc,YAAO5jC,EAAK,aAAa6jC,KACvCC,EACA,oBACA,YAAW,YAAO/jC,EAAO,aAAa8jC,KAEnD,EAED9kD,6BACI6J,EACAo7C,EACAC,GAEA,MAAMC,EAAOD,EAAeC,KACtB7jB,EAAK4jB,EAAe5jB,GAUpB9L,EAAe4vB,EATMv2C,OAAQ8R,IAC/B,MAAMK,EAAQ,IAAI1T,KAAKqT,EAAQrU,MACzB2U,GAAM,gBAAWD,EAAOL,EAAQpU,UACtC,OACKoU,EAAQjK,UAAUsC,KACd3J,GAAUA,EAAM1L,QAAUuhD,EAAe71C,UACxC,0BAAqB81C,EAAM7jB,EAAItgB,EAAMuD,UAAWtD,EAAIsD,UAApD,GAGqByS,OAAOiuB,GAC1CzvB,SAAa9lB,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAEkO,KAAOlF,EAAEkF,OAChC,YAAOkpB,EAAc,KAC/B,EAEDx1B,yCAA4C2gB,GACxC,IAAIvU,EAAY,CAAC,CAAEjC,GAAIwW,EAAQiG,QAASvc,KAAMsW,EAAQkG,UAAWljB,MAAOgd,EAAQ0E,WAAYggC,WAAW,IACvG,MAA6B,YAAzB1kC,EAAQnW,cACR4B,EAAUsR,KAAK,IAAIgM,OAAK,CAAErf,KAAMsW,EAAQvW,YAAcuW,EAAQpW,YAAa5G,MAAOgd,EAAQzW,YAE9FkC,EAAYA,EAAU4qB,OAAOrW,EAAQvU,WAC9B,IAAI4vB,gBAAc,IAClBrb,KACAA,EAAQ+C,eACXtX,YACAjC,GAAIwW,EAAQxW,IAAMwW,EAAQ+C,eAAevZ,GACzCc,KAAM0V,EAAQ0E,WACdigC,cAAc,GAErB,CAdDtlD,kGCnKA,iBAEaA,cAAeskD,GAEpBA,EAAQvtB,QAAQ/zB,IAAI,UACpB,aACI,IAAIsK,MACJ,gBAAWg3C,EAAQvtB,OAAO/zB,IAAI,QAAQmB,MAAOmgD,EAAQngD,QAGlD,CAAEoI,UAAU,GAEhB,KAIXvM,sBACIskD,GAEA,OAAOA,EAAQngD,QAAS,cAASmgD,EAAQngD,MAAO,IAAImJ,MAC9C,CAAEi4C,WAAW,GACb,IACT,CANDvlD,oFCjBAkc,2BAEAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2HCTA,uCAEA,MAgCaspC,EAhCbjlD,cAsC+BM,eAAY,IAAIqF,eAEpCrF,mBAAe,CASzB,CAJU4kD,gBACH5kD,KAAK6kD,cAAgB7kD,KAAK6kD,aAC1B7kD,KAAK8nC,UAAU93B,MAClB,EAhDL7Q,+DAgCawlD,EAAoB,kDAApBA,EAAoBzgD,gcA7BzBD,sCAOIA,yDAAiBuE,iBAAe,GAEhCvE,sCAGIA,iDAASuE,iBAAe,GAExBvE,4BACJA,2BACAA,2CAA0BA,iDAASuE,iBAAe,GAC9CvE,sBACJA,oCAfAA,+CAA0B,eActBA,qZCtBhB,iBACA3G,WAIAG,GAHA8B,SACAA,SAEAA,2IASY0E,sCAKIA,iCACAA,sCAAkB,WAEVA,sBACJA,2BACAA,4DAAsCA,2BACtCA,sCAEC,eAKOA,8HAASA,uCAAgB,GAEzBA,sEACIA,qCAEJA,qDAEJA,2CAIIA,8HAASA,yCAAkB,GAE3BA,uEACIA,qCAEJA,yDAIZA,2CAKIA,8HAASA,6CAAsB,GAE/BA,0CAAUA,uBAIRA,yFAzCEA,iFAEkCA,oFAgCtCA,8FAGUA,iHAnD9B,MAAMkY,EAAuB,GAE7B,MA+Ea2oC,EAYTplD,YACYC,EACAoL,GADA/K,iBACAA,eAbLA,WAAiB,GACjBA,eAAW,EAIXA,cAAoB,GA4BXA,sBAAoB6pB,GAC/B7pB,KAAK8pB,UAAYD,EACN7pB,uBAAqB6pB,GAChC7pB,KAAK+pB,SAAWF,EACL7pB,sBAAoBnC,GAAgBmC,KAAKgqB,SAAWnsB,CAvBhE,CAPOke,gBACP,OAAO/b,KAAKL,UAAUwC,IAAc,qBAAuBga,CAC9D,CAWMmO,SAASE,GACZxqB,KAAKmqB,MAAQK,EACTxqB,KAAK8pB,WAAW9pB,KAAK8pB,UAAU9pB,KAAKmqB,MAC3C,CAMMM,WAAWnnB,GACdtD,KAAKmqB,MAAQ7mB,GAAS,EACzB,CAQMyhD,YAAY9oC,GACf,MAAM0Y,EAAe30B,KAAKmqB,MAAMnc,OAAQtN,GAAMA,EAAE4I,KAAO2S,EAAM3S,IAC7DtJ,KAAKsqB,SAASqK,EACjB,CAEMqwB,UAAU/oC,GACDjc,KAAK+K,QAAQP,KAAK2U,4BAA2B,CACrD5e,KAAMP,KAAKmqB,QAEXre,cAAc/C,UAAW4U,KACpBA,GACL3d,KAAKsqB,SAAS3M,EAAd,EAEP,CAEMb,gBAAgBb,GACnB,MAAMc,EAAW/c,KAAK+b,UACHgB,EAASra,SAASuZ,EAAM3S,IAOvCtJ,KAAKL,UAAUqd,gBACX,mBACAD,EAAS/O,OAAQtN,GAAMA,IAAMub,EAAM3S,KAPvCtJ,KAAKL,UAAUqd,gBAAgB,mBAAoB,IAC5CD,EACHd,EAAM3S,IAQjB,EApJLnK,kEA+Ea2lD,GAAuB7gD,8IAAvB6gD,EAAuB5gD,0EATrB,CACP,CACIwmB,QAAStlB,oBAETulB,aAAa,gBAAW,IAAMm6B,GAC9Bl6B,OAAO,MAEdC,oDA/DyBvS,wHAWEA,sHAAc,mDAWdA,wHAAe,y1BAjCvCrU,sCACIA,yCAoDJA,2BACAA,yCAIIA,iDAASuE,aAAW,GAEpBvE,sCAAwD,cAC1CA,+BAAMA,2BAChBA,qCAAMA,kCAASA,sCA1DGA,wNCjBlC,iBACA3G,4CAEA,MAkDa2nD,EAlDbvlD,cAoDoBM,UAAO,EAEPA,SAAM,GAENA,SAAM,CAgFzB,CA9DUmgC,MACEngC,KAAKsD,QACNtD,KAAKsD,MAAQtD,KAAK6sB,KAAO,GAG7B7sB,KAAKsD,OADQtD,KAAKklD,SAAW,IAAMllD,KAAKmlD,KAAOnlD,KAAKolD,UAAY,GAAKplD,KAAKmlD,KAAOnlD,KAAKmlD,MAAQ,EAE1FnlD,KAAKsD,MAAQtD,KAAK4sB,MAClB5sB,KAAKsD,MAAQtD,KAAK4sB,KAAO,IAE7B5sB,KAAKsqB,SAAStqB,KAAKsD,MACtB,CAGMsd,SACE5gB,KAAKsD,QACNtD,KAAKsD,MAAQtD,KAAK6sB,KAAO,GAG7B7sB,KAAKsD,OADQtD,KAAKklD,SAAW,IAAMllD,KAAKmlD,KAAOnlD,KAAKolD,UAAY,GAAKplD,KAAKmlD,KAAOnlD,KAAKmlD,MAAQ,EAE1FnlD,KAAKsD,MAAQtD,KAAK6sB,MAClB7sB,KAAKsD,MAAQtD,KAAK6sB,KAAO,GAE7B7sB,KAAKsqB,SAAStqB,KAAKsD,MACtB,CAMMgnB,SAASE,GACZxqB,KAAKsD,MAAQknB,EAETxqB,KAAK8pB,WACL9pB,KAAK8pB,UAAUU,EAEtB,CAMMC,WAAWnnB,GACdtD,KAAKsD,MAAQA,CAChB,CAOM+hD,iBAAiBx7B,GACpB7pB,KAAK8pB,UAAYD,CACpB,CAOMy7B,kBAAkBz7B,GACrB7pB,KAAK+pB,SAAWF,CACnB,EAvIL1qB,2DAkDa8lD,EAAgB,kDAAhBA,EAAgB/gD,kIATd,CACP,CACIwmB,QAAStlB,oBAETulB,aAAa,gBAAW,IAAMs6B,GAC9Br6B,OAAO,MAEdC,8XA7CG5mB,sCAGIA,sEAAoC,CAAI,iCAAxCA,CAAyC,gDACJ,CAAI,iCADzCA,CAAyC,6CAEP,CAAI,iCAFtCA,CAAyC,6CAGP,CAAK,iCAHvCA,CAAyC,8CAIN,CAAK,iCAJxCA,CAAyC,2CAKT,CAAK,kCAErCA,yCAKIA,iDAASuE,UAAQ,GAEjBvE,yCAAUA,+BAAMA,6BAEpBA,sCAAmCA,sBAAmDA,2BACtFA,yCAKIA,iDAASuE,OAAK,GAEdvE,yCAAUA,4BAAGA,sCAbbA,sFAK+BA,wGAK/BA,sVC9BhB,iBAOA3G,WACAC,WAMAC,WAQAC,oEAIM8nD,QADN,MACMA,UAAyBh+C,oBAC3Bi+C,OAAO/5C,EAAYg6C,GACf,OACW,YAAOh6C,EADI,UAAlBg6C,EACoB,eAEJ,WACvB,wGANCF,KAAgB9nD,GAAhB8nD,EAAgB,wDAAhBA,EAAgBn2C,QAAhBm2C,EAAgB,YAAhBA,MAoBN,MAsCaG,UACDjmC,YAvCZ/f,kCA2C0BM,YAAgB,IAAIyM,MAAOiX,UAIjC1jB,cAA6B,QAE7BA,YAA2B,QAmF9C,CArEcskD,WACP,OAAO,IAAI73C,KAAKzM,KAAK2lD,SAAU,gBAAW,IAAIl5C,KACjD,CAEUm5C,YACP,OAAO,IAAIn5C,KAAKzM,KAAK6lD,OAAQ,eAAS,cAAS,IAAIp5C,MAAS,EAC/D,CAEUq5C,kBACP,OAAO,YAAO,IAAIr5C,KAAKzM,KAAKyL,MAAO,cACtC,CAEMxL,WACHD,KAAKyL,MAAO,IAAIgB,MAAOkzB,aAC1B,CAMMrV,SAASE,GAEZ,MAAMu7B,EAAW,IAAIt5C,KAAKzM,KAAKyL,MAC/B,IAAIu6C,GAAW,SAAIx7B,EAAW,CAC1BlK,MAAOylC,EAASE,WAChBxlC,QAASslC,EAASG,eACnBxiC,UAECsiC,EAAWhmD,KAAKskD,KAAK5gC,YACrBsiC,EAAWhmD,KAAKskD,KAAK5gC,WAEzB1jB,KAAKyL,MAAO,eAAUu6C,GAAY,IAAIv5C,MAClCzM,KAAK8pB,WACL9pB,KAAK8pB,UAAUk8B,GAEnBhmD,KAAK6kD,cAAe,CACvB,CAOMp6B,WAAWnnB,GACdtD,KAAKyL,MAAO,eAAUnI,GAAS,IAAImJ,MACnCzM,KAAK6kD,cAAe,CACvB,CAOMQ,iBAAiBx7B,GACpB7pB,KAAK8pB,UAAYD,CACpB,CAOMy7B,kBAAkBz7B,GACrB7pB,KAAK+pB,SAAWF,CACnB,CAEMs8B,iBAAiBn8B,GACpBhqB,KAAKgqB,SAAWA,CACnB,EAnIL7qB,sHAsCaumD,KAAkBjoD,GAAlBioD,EAAkB,qDAAlBA,EAAkBxhD,+KAVhB,CACP,CAAEwmB,QAASnjB,cAAa6+C,SAAUb,GAClC,CAAE76B,QAASnjB,mBAAkB2qC,SA1CM,CACvC3wB,MAAO,CACH8kC,UAAW,MAEflyC,QAAS,CACLkyC,UAAW,QACXC,eAAgB,WAChBC,cAAe,KACfC,mBAAoB,eAmCpB,CACI97B,QAAStlB,oBACTulB,aAAa,gBAAW,IAAM+6B,GAC9B96B,OAAO,KAEd3mB,0VAjCGA,iDAAqCA,iHAASA,iCAAa,GACvDA,wCAMIA,0DAAiBuE,aAAgB,GANrCvE,2BASAA,mDAGyB,2BAEzBA,0CAAWA,4BAAyBA,wEAZhCA,kEAAgB,sBAAhBA,CAAgB,aAAhBA,CAAgB,cAAhBA,CAAgB,mBAShBA,idC7DhB,iBACA3G,WACAC,WAEAC,yFAgBoByG,6CACIA,sBACJA,qDAFoDA,qCAChDA,yEAbxB,MAuCawiD,EAvCb/mD,cAyCoBM,SAAM,IAENA,SAAM,GAENA,UAAO,GAMPA,oBAA2B,GAEpCA,cAAW,EAwGrB,CA/FUC,WACHD,KAAK0mD,iBAAmB1mD,KAAK2mD,wBAAwB3mD,KAAK4sB,IAAK5sB,KAAK6sB,IAAK7sB,KAAKmlD,MAC9EnlD,KAAK4mD,eACR,CAEMv7B,YAAYC,IAEXA,EAAQsB,KAAOtB,EAAQuB,KAAOvB,EAAQ65B,MAAQ75B,EAAQwf,QACtD9qC,KAAK0mD,iBAAmB1mD,KAAK2mD,wBAAwB3mD,KAAK4sB,IAAK5sB,KAAK6sB,IAAK7sB,KAAKmlD,MAC9EnlD,KAAK4mD,gBAEZ,CAMMt8B,SAASE,GACZxqB,KAAK0L,SAAW8e,EAEZxqB,KAAK8pB,WACL9pB,KAAK8pB,WAAWU,EAEvB,CAOMC,WAAWnnB,GACdtD,KAAK0L,SAAWpI,EAChBtD,KAAK4mD,eACR,CAEMT,iBAAiBn8B,GACpBhqB,KAAKgqB,SAAWA,CACnB,CAOMq7B,iBAAiBx7B,GACpB7pB,KAAK8pB,UAAYD,CACpB,CAOMy7B,kBAAkBz7B,GACrB7pB,KAAK+pB,SAAWF,CACnB,CAEO88B,wBAAwB/5B,EAAaC,EAAas4B,GACtD,MAAMpD,EAAyC,GAC/C,IAAIjX,EAAOje,EACX,MAAMphB,EAAOzL,KAAK8qC,KAAO+b,EAAM7mD,KAAK8qC,MAAQ,KAG5C,UAAW3V,KAAUn1B,KAAK8mD,eACtB/E,EAAOllC,KAAK,CACRvT,GAAI6rB,EACJ3rB,KAAMiC,EACA,GAAGA,EAAK00B,IAAIhL,EAAQ,KAAKqwB,OAAO,eAAc,oBAAe,CACzDllC,MAAOC,KAAKC,MAAM2U,EAAS,IAC3B1U,QAAS0U,EAAS,QAEtB,IAAG,oBAAe,CAAE7U,MAAOC,KAAKC,MAAM2U,EAAS,IAAK1U,QAAS0U,EAAS,SAIpF,KAAO2V,GAAQle,GACXm1B,EAAOllC,KAAK,CACRvT,GAAIwhC,EACJthC,KAAMiC,EACA,GAAGA,EAAK00B,IAAI2K,EAAM,KAAK0a,OAAO,eAAc,oBAAe,CACvDllC,MAAOC,KAAKC,MAAMsqB,EAAO,IACzBrqB,QAASqqB,EAAO,QAEpB,IAAG,oBAAe,CAAExqB,MAAOC,KAAKC,MAAMsqB,EAAO,IAAKrqB,QAASqqB,EAAO,SAE5EA,GAAQqa,EAEZ,OAAOpD,CACV,CAEO6E,gBACC5mD,KAAK0mD,kBAAkBz9C,QAExBsb,KADamiC,iBAAiB/jC,UAAWjiB,GAAMA,EAAE4I,KAAOtJ,KAAK0L,UACvD,GAAG1L,KAAKsqB,SAAStqB,KAAK6sB,IACnC,EA5JL1tB,iEAuCasnD,EAAsB,kDAAtBA,EAAsBviD,mLARpB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAM87B,GAC9B77B,OAAO,KAEd3mB,ySAlCGA,sCAAuD,qBAAvDA,CAAuD,oBAO3CA,wDAAeuE,aAAgB,GAE/BvE,+CAGJA,2BACAA,0CAAWA,4BAAyBA,sCAbhBA,+CAIhBA,oEAAkB,sBAAlBA,CAAkB,qCAKaA,6ZCpBnD1E,eACAjC,WACAC,WAEAC,SACAC,WACAC,WACAC,WACAC,WACAC,WACAC,WAEAC,UAQAmI,GANA3G,SACAA,SACAA,SACAA,SACAA,SACAA,SACAA,UASAiH,GARAjH,SACAA,SACAA,SACAA,QACAA,SACAA,SACAA,SACAA,SACAA,UACAyhB,uHAoBA,MAmBa+lC,GAnBb5nD,2DAmBa4nD,EAAgB,iDAAhBA,uDAhBLtnD,eACA2F,cACAA,sBACA2B,qBACAE,iBACAI,kBACAD,wBACAS,mBACAJ,oBACAK,iBACAR,iBACAoqC,kBACAtoB,sDA1BJ49B,2BAAwB,uVCvC5B,iBACA1pD,WACAC,WACAC,UAGAC,WACAC,WACAC,oGAagBsG,6CAIC,UAJDA,CAIC,SAEYA,sBAAeA,2BACpBA,uCAAqBA,kCAAaA,2BAClCA,sCAAgCA,sBAAgBA,yDANpDA,kCAISA,+DAE2BA,sFAMhDA,kCAzBR,MAoCagjD,EApCbvnD,cAsCoBM,YAAQ,QAAG,GAAGY,MAC1B,eAAU,KACN,sBAAiBA,MAAK,gBAAYF,IAAM,QAAG,QAE/C,eAAWsI,IACP,YACOA,EAAK+F,IAAKrO,IACT,eAAUA,EAAE4I,IAAI1I,MAAK,gBAAYF,IAAM,QAAG,YAItD,SAAKA,IAAM,YAAO,EAAC,sBAAkBA,GAAI,WACzC,iBAAY,IAETV,eAAW,EAyBFA,sBAAoB6pB,GAC/B7pB,KAAK8pB,UAAYD,EACN7pB,uBAAqB6pB,GAChC7pB,KAAK+pB,SAAWF,EACL7pB,sBAAoBnC,GAAgBmC,KAAKgqB,SAAWnsB,CACvE,CArBUysB,SAASE,GACZxqB,KAAKiO,KAAOuc,EACRxqB,KAAK8pB,WAAW9pB,KAAK8pB,UAAU9pB,KAAKiO,KAC3C,CAMMwc,WAAWnnB,GACdtD,KAAKiO,KAAO3K,EACPA,GAAOR,QACR9C,KAAKiO,MAAO,mBAEnB,EA3EL9O,mEAoCa8nD,EAAwB,kDAAxBA,EAAwB/iD,2EARtB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMs8B,GAC9Br8B,OAAO,MAEdC,kDA1BwBvS,wFAeDA,yXApBpBrU,iDAAoD,kBAG5CA,0DAAiBuE,aAAgB,GAKjCvE,6EAWJA,2BACAA,kEAAgCA,6BAEpCA,sFApBQA,kEAAqB,uBAOAA,gGAadA,kWCnCvB,iBACA1G,WACAC,WAGAE,GADA6B,SACAA,SAKA5B,WAEAC,WACAC,WAEAC,4LAuFYmG,uCAMC,WANDA,CAMC,WANDA,CAMC,eASmCA,8HAASA,sCAAa,GAC1CA,yCAAUA,6BAAIA,6BAElBA,0CAAwBA,8HAASA,uCAAc,GAC3CA,yCAAUA,mCAAUA,6BAExBA,0CAAwBA,8HAASA,yCAAgB,GAC7CA,0CAAUA,+BAAKA,6FAlB3BA,mEAAmD,0DA+BnDA,sGAEIA,2CAAuB,sCAI3BA,4CACKA,gCAAOA,kDAEZA,uCAIC,iBACwCA,8BAAKA,6FAtBlDA,uCAMIA,8HAASA,yCAAiB,GAE1BA,0DAMAA,8CAGAA,yCAOJA,qFApBIA,mEACAA,6CAIKA,iEAKMA,gEAKNA,gIAMTA,0CAKIA,4JAA2B,EAAC,GAE5BA,yCAAUA,qCAAYA,yEAJtBA,gHAMJA,0CAKIA,4JAA2B,EAAC,GAE5BA,yCAAUA,sCAAaA,yEAJvBA,oEA/HhB,WAA2BiuB,GACvB,OAAO,IAAIhlB,aAAYg6C,IACnB,MAAM/0B,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAY9yB,IACpC,MAAM4nD,EAAc5nD,EAAEyyB,OAAO5uB,OACvBgkD,EAAgC,CAClC99C,IAAI,eAAU,cACdE,KAAM0oB,EAAK1oB,KACX69C,SAAU,EACV5Z,KAAM,GACN6Z,gBAAgB,4BAAuBp1B,EAAKjU,MAC5CA,KAAMiU,EAAKjU,KACXspC,OAAQ,MAENC,EAAOC,EAASC,kBAAkBP,EAAaj1B,EAAKtpB,MAEpD2+C,GAASI,EADKjqD,eAAY,CAAC8pD,GAAO,CAAEI,UAAW11B,EAAK1oB,OAC/B,GAC3B49C,EAAeG,OAASA,EACxBA,EAAOtlC,OACFrhB,MAAK,eAAWF,GAAmB,aAAbA,EAAEuhB,QAAuB,IAC/ClZ,UACI6T,IACO2qC,EAAOM,aACPT,EAAe3Z,KAAO8Z,EAAOM,YACjCT,EAAeC,SAAWzqC,EAAMyqC,SAChCH,EAAS55C,KAAK85C,GACO,UAAjBxqC,EAAMqF,QACNilC,EAAStkD,MAAM,IACRwkD,EACHxkD,MAAOga,EAAMha,QAEA,aAAjBga,EAAMqF,QAAuBilC,EAASY,UAAT,EAEpCvoD,GAAO6nD,EAAexkD,MAAQrD,GAEvC2nD,EAAS55C,KAAK85C,EAAd,GAEJj1B,EAAW41B,kBAAkB71B,EAA7B,EAEP,CAvCD/yB,eAyCA,MA2Ia6oD,UAAgCvoD,YAwBzCC,YAAoBuoD,GAChBloD,QADgBC,kBAtBbA,UAAiB,GAEjBA,gBAAa,IAAIkN,kBAA0B,IAC1ClN,kBAAe,IAAIkN,kBAAiC,IAC5ClN,iBAAcA,KAAKkoD,aAAa96C,eACzCpN,YAAiB,EAEjBA,gBAAqB,EAEZA,gBAAa,CAACmzB,QAAOA,SAErBnzB,cAAU,mBAAc,CACpCA,KAAK2nD,YACL3nD,KAAKmoD,aACNvnD,MAAK,SAAI,EAAEoI,EAAMo/C,KAASp/C,EAAKgF,OAAQtQ,GAAM0qD,EAAI1lD,SAAShF,EAAE4L,OAsF/CtJ,sBAAoB6pB,GAC/B7pB,KAAK8pB,UAAYD,EACN7pB,uBAAqB6pB,GAChC7pB,KAAK+pB,SAAWF,CA/EpB,CARU5gB,aACP,OAAOjJ,KAAKgJ,KAAKC,OAASjJ,KAAKkoD,aAAaz6C,WAAWxE,OAAS,CACnE,CAaM+pC,kBACH,MAAM0H,EAAM16C,KAAKqoD,SAASpX,cAAcoD,wBACxCr0C,KAAKsoD,WAAa/nC,KAAKC,MAAMk6B,EAAIv3C,MAAQ,KACzCnD,KAAK6I,aACD,iBACA7I,KAAK2nD,YAAY5+C,UAAWC,IACxB,MAAMwM,EAAUxV,KAAKmoD,WAAW16C,WAChC,UAAWnE,KAAMkM,EAAS,CACtB,MAAMvH,EAAOjF,EAAKmP,KAAMzX,GAAMA,EAAE4I,KAAOA,GACnC2E,GAAQA,EAAKo5C,UAAY,MACzBrnD,KAAKuoD,YAAYt6C,EAAKw/B,MACtBztC,KAAKmoD,WAAW76C,KACZtN,KAAKmoD,WAAW16C,WAAWO,OAAQtN,GAAMA,IAAM4I,IAG1D,IAGZ,CAEMk/C,SAAShtC,GACZxb,KAAKioD,WAAWQ,KAAKjtC,IACrB,gBAAW,gCACd,CAEMktC,UAAUltC,GAAe,CAEzBmtC,YAAYntC,GACfxb,KAAKsqB,SAAStqB,KAAKgJ,KAAKgF,OAAQtN,GAAMA,IAAM8a,GAC/C,CAEMotC,SAAS5wC,IACPA,EAAM1U,QACXtD,KAAKsqB,UAAS,YAAO,IAAItqB,KAAKgJ,KAAMgP,EAAM1U,SAC1C0U,EAAM6wC,UAAUC,aAAaxlD,MAAQ,GACxC,CAEMilD,YAAY/sC,GACfxb,KAAKsqB,UAAS,YAAO,IAAItqB,KAAKgJ,KAAMwS,IACvC,CAEYutC,aAAa/wC,GAAK,gCAC3B,MAAM+O,EAA4B/O,EAAMga,OAExC,GAAIjL,GAASkL,MAAO,CAChB,MAAMA,EAAkBlL,EAAQkL,MAEhC,GAAIA,EAAMhpB,OACN,QAASvL,EAAI,EAAGA,EAAIu0B,EAAMhpB,OAAQvL,IAAK,CACnC,MAAM4L,QAAWub,EAAKmkC,WAAW/2B,EAAMv0B,IACvCmnB,EAAKsjC,WAAW76C,KAAK,IAAIuX,EAAKsjC,WAAW16C,WAAYnE,GACxD,CAER,CAZ0B,IAa9B,CAEMghB,SAAShnB,GACZtD,KAAKgJ,KAAO1F,EACRtD,KAAK8pB,WAAW9pB,KAAK8pB,UAAUxmB,EACtC,CAMMmnB,WAAWnnB,GACdtD,KAAKgJ,KAAO1F,CACf,CAOM0lD,WAAW92B,GACd,OAAO,IAAI3wB,QAAiBC,IACxB,IAAIynD,GAAW,EACf,MAAMC,EAAa/lC,IACV8lC,IACDznD,EAAQ2hB,EAAQ7Z,IAChB2/C,GAAW,GAEfjpD,KAAKkoD,aAAa56C,KAAK,IAChBtN,KAAKkoD,aACHz6C,WACAO,OAAQtN,GAAMA,EAAE4I,KAAO6Z,EAAQ7Z,IACpC6Z,GAJJ,EAOJ6lC,EAAW92B,GAAMnpB,UAAUmgD,EAAWA,EAAW,KAC7ClpD,KAAKmpD,sBAAL,EADJ,EAIP,CAEOA,uBACJ,MAAMC,EAAYppD,KAAKkoD,aAClBz6C,WACAO,OAAQkkB,GAASA,EAAKm1B,UAAY,KACvC+B,EAAUp0C,QAAStX,UAAaA,EAAE6pD,QAC9B9e,cACAA,aAAa9mC,QACT,oBACAC,KAAKC,UAAUunD,GAG1B,EAtRLjqD,kEA2Ia6oD,GAAuB/jD,6FAAvB+jD,EAAuB9jD,kOARrB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMq9B,GAC9Bp9B,OAAO,KAEd3mB,4FA1HsCqU,2FAiFVA,sqFA7FzBrU,wCAIIA,kDAAiBuE,mBAAiB,kCAElCvE,sCAIC,gBACyCA,4BAAGA,2BACzCA,4DAA0CA,2BAC1CA,wCAGIA,mDAAUuE,iBAAoB,GAHlCvE,6BAMJA,yCA2BAA,uEAyBAA,4CASAA,6CASJA,2BACAA,mDAAoD,yBAApDA,CAAoD,eAQxCA,iEAAwBuE,aAAgB,GAN5CvE,yEAnFAA,4FAYgBA,kEA2BCA,mGAyBhBA,8EASAA,8EAaGA,qEAA4B,6CAA5BA,CAA4B,myBClLhD,iBACA3G,WAGAC,+HAkDgB0G,2CAIIA,gIAAWA,oCAAY,GAEvBA,sBACAA,2CAAwBA,8BAAKA,yDAL7BA,wCAAmB,gBAInBA,oEAlDpB,WACIw/C,EACAzrC,GAEA,IAAKyrC,EAAS,OACd,MAAM9vB,EAAQ3b,EAAM2b,MACdrwB,EAAQ0U,EAAM1U,MACd+lD,EAAY5F,EAAQngD,OACrBA,GAAS,IAAIswB,SACdy1B,EAAUxsC,KAAKvZ,GACfmgD,EAAQn5B,SAAS++B,IAIjB11B,IACAA,EAAMrwB,MAAQ,GAErB,CAMD,WACImgD,EACAx1C,GAEA,IAAKw1C,EACD,OAEJ,MAAM4F,EAAY5F,EAAQngD,MACpBywB,EAAQs1B,EAAUr1B,QAAQ/lB,GAE5B8lB,GAAS,IACTs1B,EAAU3mC,OAAOqR,EAAO,GACxB0vB,EAAQn5B,SAAS++B,GAExB,CArCDlqD,gBAuBAA,mBAgBA,MAmCamqD,EAnCb5pD,cAoCoBM,gBAAuB,CAACmzB,QAAOA,QAAOA,SAEtCnzB,iBAAc,GAEvBA,WAAa,GAUJA,SAAOT,GACnBgqD,EACI,CAAEjmD,MAAOtD,KAAKsD,MAAOgnB,SAAW5sB,GAAMsC,KAAKsqB,SAAS5sB,IACpD6B,GAIQS,YAAUiO,GACtBu7C,EACI,CAAElmD,MAAOtD,KAAKsD,MAAOgnB,SAAW5sB,GAAMsC,KAAKsqB,SAAS5sB,IACpDuQ,EAwCX,CAjCUqc,SAASE,GACZxqB,KAAKsD,MAAQknB,EAETxqB,KAAK8pB,WACL9pB,KAAK8pB,UAAUU,EAEtB,CAMMC,WAAWnnB,GACdtD,KAAKsD,MAAQA,CAChB,CAOM+hD,iBAAiBx7B,GACpB7pB,KAAK8pB,UAAYD,CACpB,CAOMy7B,kBAAkBz7B,GACrB7pB,KAAK+pB,SAAWF,CACnB,EAnGL1qB,iEAmCamqD,EAAsB,kDAAtBA,EAAsBplD,oIATpB,CACP,CACIwmB,QAAStlB,oBAETulB,aAAa,gBAAW,IAAM2+B,GAC9B1+B,OAAO,MAEdC,iXA9BG5mB,iDAAoD,uBAE5CA,6CASAA,wCAMIA,iEAAwBuE,QAAW,GANvCvE,wEARqBA,mEASjBA,+FAA+C,oBAA/CA,CAA+C,6CAA/CA,CAA+C,iPChEnE,iBACA3G,WACAC,WACAC,mDAEA,MAiBaisD,UAA+BhqD,YAjB5CC,kCAkBoBM,iBAAc,GACdA,eAAW,EAMnBA,eAAY,IAAMA,KAAKsqB,SAAStqB,KAAK0pD,QAAQC,KAAKC,WAM1C5pD,sBAAoB6pB,GAA4B7pB,KAAK8pB,UAAYD,EACjE7pB,uBAAqB6pB,GAA4B7pB,KAAK+pB,SAAWF,CA6CpF,CA3CUwB,YAAYC,GAElB,CAEM0nB,kBACHhzC,KAAK6pD,mBACR,CAMMv/B,SAASE,GAERxqB,KAAK8pB,WACL9pB,KAAK8pB,UAAUU,EAEtB,CAMMC,WAAWnnB,GACd,GAAItD,KAAK0pD,QAAS,CACd,MAAMI,EAAQ9pD,KAAK0pD,QAAQK,UAAUC,QAAQ1mD,GAC7CtD,KAAK0pD,QAAQO,YAAYH,EAAO,SACnC,MACG9pD,KAAKkB,QAAQ,QAAS,IAAMlB,KAAKyqB,WAAWnnB,GAEnD,CAEOumD,oBACJ7pD,KAAK0pD,QAAU,IAAIQ,EAAMlqD,KAAKmqD,WAAWlZ,cAAe,CACpDmZ,OAAQpqD,KAAKqqD,cAAcpZ,cAC3BqZ,YAAatqD,KAAKsqD,YAClBC,SAAUvqD,KAAKwqD,SACfC,MAAO,SAEXzqD,KAAK0pD,QAAQgB,GAAG,cAAe1qD,KAAK2qD,WACpC3qD,KAAK6I,aAAa,UAAW,IAAM7I,KAAK0pD,QAAQkB,IAAI,cAAe5qD,KAAK2qD,WAC3E,EA3ELxrD,0HAiBasqD,KAAsBhsD,GAAtBgsD,EAAsB,qDAAtBA,EAAsBvlD,4YATpB,CACP,CACIwmB,QAAStlB,oBAETulB,aAAa,gBAAW,IAAM8+B,GAC9B7+B,OAAO,KAEd3mB,6JAZGA,2CACIA,sCACJA,kICVR,iBACA3G,WAKAG,GAJA8B,SAEAA,SAEAA,aACAA,iIAuCoB0E,qFAAoDA,0FAEhDA,iGARZA,uCAIC,YAEOA,yCACAA,yFAMJA,2BACAA,uCAA4B,YAEpBA,sBACJA,2BACAA,uCAAiD,iBACbA,+BAAKA,2BACrCA,mCAAGA,uBAAoFA,6BAE3FA,wCAAiD,kBACbA,gCAAMA,2BACtCA,6DAEAA,6BAEJA,wCAEC,gBAKOA,8HAASA,0CAAmB,GAE5BA,uEACIA,qCAEJA,qDAEJA,2CAIIA,8HAASA,yCAAkB,GAE3BA,uEACIA,qCAEJA,yDAIZA,2CAKIA,kHAASA,mDAAsB,GAE/BA,0CAAUA,uBAIRA,4HA5DIA,4FAA4B,cAU9BA,yGAIGA,+JAMHA,0EAAI6rB,YAAJ7rB,4BAiCJA,uHAGUA,oLA7FxBkY,EAAuB,GAE7B,MAwHa0uC,EAYTnrD,YACYC,EACAC,EACAmL,GAFA/K,iBACAA,YACAA,eAdLA,eAAY,EACZA,YAAkB,GAClBA,eAAW,EAsDFA,sBAAoB6pB,GAC/B7pB,KAAK8pB,UAAYD,EAEN7pB,uBAAqB6pB,GAChC7pB,KAAK+pB,SAAWF,EACL7pB,sBAAoBnC,GAAgBmC,KAAKgqB,SAAWnsB,CA9ChE,CAROke,gBACP,OAAO/b,KAAKL,UAAUwC,IAAc,qBAAuBga,CAC9D,CAQM7I,MAAM1J,GACT,OAAO5J,KAAKJ,KAAKsY,YAAYtO,EAChC,CAGMkhD,eACH,MAAMn/C,EAAM3L,KAAK+K,QAAQP,KAAKugD,+BAA8B,CACxDxqD,KAAM,CAAEgO,OAAQvO,KAAKuO,OAAQgC,QAAS,CAAE6Z,SAAUpqB,KAAKqqB,cAE3D1e,EAAIG,cAAc/C,UAAWwF,IACpBA,IAAQA,EAAS5C,EAAII,kBAAkBkE,UAC5CjQ,KAAKsqB,SAAS/b,EAAd,EAEP,CAGMy8C,YAAYx8C,GACfxO,KAAKsqB,SAAStqB,KAAKuO,OAAOP,OAAQtN,GAAMA,EAAE4I,KAAOkF,EAAMlF,IAC1D,CAMMghB,SAASE,GACZxqB,KAAKuO,OAASic,EACVxqB,KAAK8pB,WAAW9pB,KAAK8pB,UAAU9pB,KAAKuO,OAC3C,CAOMkc,WAAWnnB,GACdtD,KAAKuO,OAASjL,GAAS,EAC1B,CAUMwZ,gBAAgBtO,GACnB,MAAMuO,EAAW/c,KAAK+b,UACHgB,EAASra,SAAS8L,EAAMlF,IAOvCtJ,KAAKL,UAAUqd,gBACX,mBACAD,EAAS/O,OAAQtN,GAAMA,IAAM8N,EAAMlF,KAPvCtJ,KAAKL,UAAUqd,gBAAgB,mBAAoB,IAC5CD,EACHvO,EAAMlF,IAQjB,EAtMLnK,kEAwHa0rD,GAAuB5mD,mMAAvB4mD,EAAuB3mD,0EARrB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMkgC,GAC9BjgC,OAAO,MAEdC,iEAhH2BvS,2FAAgB,oCAAO,sCAQQA,4FAGAA,4FAGCA,4FAuFrCA,sFArD+CA,+LAD1CA,4EACJ,kCAA8C2yC,YAa1C3yC,sHAAc,mDAWdA,wHAAe,s4CA3EvCrU,oCAAK,UAALA,CAAK,UAALA,CAAK,WAGOA,6BAA4BA,gCAAcA,mDAC1CA,sCAA+B,uBAIvBA,0EAGAA,2EAEAA,2BACAA,6EAEAA,2BACAA,6EAEAA,qCAMpBA,uCACIA,2CAqEJA,2BACAA,2CAIIA,iDAASuE,gBAAc,GAEvBvE,wCAAwD,eAC1CA,gCAAMA,2BAChBA,gEAAoBA,sCAhGRA,uEAAuB,mDAGLA,2DAGAA,2DAGAA,4DAYZA,+RC3ClC,iBASA3G,WAEAE,GADA+B,SACAA,UACA9B,kJAyCgBwG,6CAIIA,sBACJA,qDAHIA,qCAEAA,wIAXZA,iDAAyD,oBAKjDA,yHAAeA,sCAAgB,GAE/BA,+CAMJA,yEAVIA,gEAAc,uBAKSA,2EA9BvC,MAqDainD,UACDzrD,YAtDZC,kCAyDoBM,UAAO,GAIPA,oBAAgB,EAEzBA,WAAe,IAAIyM,MAAOiX,UAE1B1jB,WAAe,YAAO,IAAIyM,KAAQ,QA4J5C,CA/IUxM,WACHD,KAAKmrD,aAAc,EACnBnrD,KAAKorD,cAAgBprD,KAAKqrD,uBACtBrrD,KAAKyL,MACJzL,KAAKsrD,cACNtrD,KAAKmlD,MAETnlD,KAAKkB,QAAQ,OAAQ,IAAOlB,KAAKmrD,aAAc,EAClD,CAEM9/B,YAAYC,IACXA,EAAQggC,eAAiBhgC,EAAQ65B,QACjCnlD,KAAKorD,cAAgBprD,KAAKqrD,uBACtBrrD,KAAKyL,MACJzL,KAAKsrD,cACNtrD,KAAKmlD,MAGhB,CAGUoG,mBACP,MAAMzgB,GAAQ9qC,KAAK8qC,MAAQ,SAAS/nC,MAAM,KACpC0I,GAAO,SAAIzL,KAAKyL,KAAM,CAAE6U,OAAQwqB,EAAK,GAAIrqB,SAAUqqB,EAAK,KAC9D,OACIr/B,EAAKy6C,aAAe,IAAO,IAC1BlmD,KAAKorD,cAAcjzC,KACf2yB,GAASA,EAAKxhC,MAAO,YAAOmC,EAAM,YAGvCzL,KAAKorD,cAAcvuC,KAAK,CACpBrT,KAAM,IAAG,YAAOiC,GAAM,2BACtBnC,IAAI,YAAOmC,EAAM,WAErBzL,KAAKorD,cAAcv8C,KAAK,CAACtR,EAAGgJ,IACxB,GAAGhJ,EAAE+L,KAAKkU,cAAc,GAAGjX,EAAE+C,QAG9BtJ,KAAKorD,aACf,CAMM9gC,SAASE,GAEZ,GADAxqB,KAAK8qC,KAAOtgB,EACRxqB,KAAK8pB,UAAW,CAChB,MAAMghB,GAAQ9qC,KAAK8qC,MAAQ,SAAS/nC,MAAM,KACpC0I,GAAO,oBACT,SAAIzL,KAAKyL,KAAM,CAAE6U,OAAQwqB,EAAK,GAAIrqB,SAAUqqB,EAAK,MAErD9qC,KAAK8pB,UAAUre,EAAKiY,UACvB,CACJ,CAMM+G,WAAWnnB,GACdtD,KAAKyL,KAAOnI,GAAStD,KAAKyL,KAC1B,IAAIA,GAAO,mBAAczL,KAAKyL,MAC9BA,GAAO,2BAAsBA,EAAM,CAAE8Z,UAAW,IAChDvlB,KAAK8qC,MAAO,YAAOr/B,EAAM,SACzBzL,KAAKorD,cAAgBprD,KAAKqrD,uBACtBrrD,KAAKyL,MACJzL,KAAKsrD,cACNtrD,KAAKmlD,KAEZ,CAEMgB,iBAAiBn8B,GACpBhqB,KAAKgqB,SAAWA,CACnB,CAMMq7B,iBAAiBx7B,GACpB7pB,KAAK8pB,UAAYD,CACpB,CAMMy7B,kBAAkBz7B,GACrB7pB,KAAK+pB,SAAWF,CACnB,CAKM2hC,aACHxrD,KAAKmrD,aAAc,EACnBnrD,KAAKkB,QAAQ,WAAY,KACjBlB,KAAKyrD,eACLzrD,KAAKyrD,aAAa33C,QAClB9T,KAAKyrD,aAAajhD,OAClBxK,KAAK6I,aACD,eACA7I,KAAKyrD,aAAaC,aAAa3iD,UAAW6T,IACjCA,IACD5c,KAAKmrD,aAAc,MAJ/B,EAUX,CAOOE,uBACJM,EACAC,EACAzG,EAAe,IAEf,MAAMzsC,EAAM,IAAIjM,KAChB,IAAIhB,EAAO,IAAIgB,KAAKk/C,GACpB,MAAM5J,EAAS,GACX6J,KAAe,eAAUngD,EAAMiN,KAAQ,aAAQjN,EAAMiN,GACrDjN,GAAO,gBAAWA,IACX,aAAQA,EAAMiN,KACrBjN,EAAOiN,GAEXjN,GAAO,2BAAsBA,EAAM,CAAE8Z,UAAW4/B,IAChD,MAAM/kC,GAAM,cAAS3U,GAErB,MAAO,aAAQ2U,EAAK3U,IAChBs2C,EAAOllC,KAAK,CACRrT,KAAM,IAAG,YAAOiC,GAAM,2BACtBnC,IAAI,YAAOmC,EAAM,WAErBA,GAAO,gBAAWA,EAAM05C,GAE5B,OAAOpD,CACV,EA5NL5iD,sHAqDa+rD,KAAkBztD,GAAlBytD,EAAkB,qDAAlBA,EAAkBhnD,ySARhB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMugC,GAC9BtgC,OAAO,KAEd3mB,gjBAhDGA,iDAGIA,yDAAiBuE,cAAY,GAE7BvE,wCAKIA,0DAAiBuE,aAAgB,GALrCvE,2BAOAA,yCAAkEA,iDAASuE,cAAY,GACnFvE,2CACIA,0CACJA,6BAEJA,0CAAWA,4BAAyBA,6BAExCA,0DAjBIA,2DAMIA,uEAAqB,kBAWSA,0eC9C9C,iBACA3G,WACAC,WAEAC,WAEAC,WACAC,0FAqBgBuG,uCACIA,sCACIA,mDAMAA,uCAGIA,sBACJA,6BAERA,+EAXYA,+DAAe,yBAQfA,2GAIZA,qCAMC,cACaA,6BAAIA,wEANdA,oIA1BRA,sCAMC,WAEOA,sBACJA,2BACAA,iDAeAA,sCASAA,yCAAwBA,kHAASA,qCAAW,MAAK,GAC7CA,yCAAUA,8BAAKA,2EA/BnBA,yDAAuC,oCAInCA,6EAEWA,gGAkBVA,oGAYTA,uCAEC,UACGA,yBAA4DA,8BApD5E,MAiEa4nD,EAjEbnsD,cAwEoBM,sBAAoB6pB,GAAQ7pB,KAAK8pB,UAAYD,EAC7C7pB,uBAAqB6pB,GAAQ7pB,KAAK+pB,SAAWF,CA2DhE,CArDUS,SAASE,GACZxqB,KAAKiO,KAAOuc,EACRxqB,KAAK8pB,WAAW9pB,KAAK8pB,UAAU9pB,KAAKiO,KAC3C,CAMMwc,WAAWnnB,GACdtD,KAAKiO,KAAO3K,CACf,CAEMwoD,YAAY9zC,GACf,MAAM+O,EAA4B/O,EAAMga,OAEnCjL,GAASkL,OAAOhpB,QAMrBjJ,KAAK+rD,YALmBhlC,EAAQkL,MAKT,GAJJhkB,IACfjO,KAAKiO,KAAOA,EACZjO,KAAKsqB,SAAStqB,KAAKiO,KAAnB,EAGP,CAEO89C,YAAY75B,EAAY85B,GAC5B,MAAM75B,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAY9yB,IACpC,MACMioD,EAAOC,EAASC,kBADFnoD,EAAEyyB,OAAO5uB,OACwB8uB,EAAKtpB,MAEpD2+C,GAASI,EADKjqD,eAAY,CAAC8pD,GAAO,CAAEI,UAAW11B,EAAK1oB,OAC/B,GACrB49C,EAA6B,CAC/B99C,GAAI,IAAG,eAAU,gBACjBE,KAAM0oB,EAAK1oB,KACX69C,SAAU,EACVppC,KAAMiU,EAAKjU,KACXguC,WAAYx/C,KAAKiM,MACjB8C,IAAK,IAET+rC,EAAOtlC,OACFrhB,MAAK,eAAWF,GAAmB,aAAbA,EAAEuhB,QAAuB,IAC/ClZ,UAAW6T,IACJ2qC,EAAOM,aACPT,EAAe5rC,IAAM+rC,EAAOM,YAChCT,EAAeC,SAAWzqC,EAAMyqC,SACX,UAAjBzqC,EAAMqF,SAAoBmlC,EAAeC,UAAW,GACxD2E,EAAU5E,EAAD,GAEjB4E,EAAU5E,EAAD,GAEbj1B,EAAW41B,kBAAkB71B,EAChC,EAnIL/yB,mEAiEa0sD,EAAwB,kDAAxBA,EAAwB3nD,qEARtB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMkhC,GAC9BjhC,OAAO,MAEdC,gDAXsCvS,wqCAjDnCrU,sCAA4G,aAIpGA,mDAAUuE,gBAAmB,GAHjCvE,2BAKAA,wCAsCJA,2BACAA,iIArCSA,+DAAY,yMCpB7B,iBACA3G,WACAC,WAEAC,WAEAC,WACAC,0FAsCwBuG,uCAGIA,uCACIA,mDAMAA,uCAGIA,sBACJA,6BAERA,wFAXYA,+DAAe,oBAQfA,sGAIZA,qCAMC,cACaA,6BAAIA,iFANdA,+HA9BRA,uCAMC,YAIOA,sBACJA,2BACAA,kDAiBAA,uCASAA,0CAAwBA,+HAASA,wCAAgB,GAC7CA,yCAAUA,8BAAKA,2DAnCnBA,oDAAuC,+BAMnCA,wEAGCA,sFAmBAA,kGArCbA,uCAKIA,yCA0CJA,qEAxCyBA,yFA4C7BA,uCAEC,UACGA,yBAA4CA,8BAzE5D,MAsFaioD,EAtFbxsD,cAuFWM,UAAqB,GAMZA,sBAAoB6pB,GAAQ7pB,KAAK8pB,UAAYD,EAC7C7pB,uBAAqB6pB,GAAQ7pB,KAAK+pB,SAAWF,CAmEhE,CA7DUS,SAASE,GACZxqB,KAAKgJ,KAAOwhB,EAAUxc,OAAQtN,GAAMA,EAAE8a,KAAO9a,EAAE2mD,UAAY,KACvDrnD,KAAK8pB,WAAW9pB,KAAK8pB,UAAU9pB,KAAKgJ,KAC3C,CAMMyhB,WAAWnnB,GACdtD,KAAKgJ,KAAO1F,EAAMyL,IAAIrO,IAAM,CAAE4I,GAAI,SAAQ,eAAU,gBAAoB5I,IAC3E,CAEMyrD,WAAWl+C,GACdjO,KAAKgJ,KAAOhJ,KAAKgJ,KAAKgF,OAAOtN,GAAKA,EAAE4I,KAAO2E,EAAK3E,GACnD,CAEMwiD,YAAY9zC,GACf,MAAM+O,EAA4B/O,EAAMga,OAExC,IAAKjL,GAASkL,OAAOhpB,OAAQ,OAC7B,MAAMgpB,EAAkBlL,EAAQkL,MAC1B+5B,EAAa/9C,IACfjO,KAAKgJ,KAAO,KACJhJ,KAAKgJ,MAAQ,IAAIgF,OAAQtN,GAAMA,EAAE4I,KAAO2E,EAAK3E,KACnDuF,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAE0uD,WAAa1lD,EAAE0lD,YAClCjsD,KAAKsqB,SAAStqB,KAAKgJ,KAAnB,EAEJ,QAAStL,EAAI,EAAGA,EAAIu0B,EAAMhpB,OAAQvL,IAC9BsC,KAAK+rD,YAAY95B,EAAMv0B,GAAIsuD,EAElC,CAEOD,YAAY75B,EAAY85B,GAC5B,MAAM75B,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAY9yB,IACpC,MACMioD,EAAOC,EAASC,kBADFnoD,EAAEyyB,OAAO5uB,OACwB8uB,EAAKtpB,MAEpD2+C,GAASI,EADKjqD,eAAY,CAAC8pD,GAAO,CAAEI,UAAW11B,EAAK1oB,OAC/B,GACrB49C,EAA6B,CAC/B99C,GAAI,IAAG,eAAU,gBACjBE,KAAM0oB,EAAK1oB,KACX69C,SAAU,EACVppC,KAAMiU,EAAKjU,KACXguC,WAAYx/C,KAAKiM,MACjB8C,IAAK,IAET+rC,EAAOtlC,OACFrhB,MAAK,eAAWF,GAAmB,aAAbA,EAAEuhB,QAAuB,IAC/ClZ,UAAW6T,IACJ2qC,EAAOM,aACPT,EAAe5rC,IAAM+rC,EAAOM,YAChCT,EAAeC,SAAWzqC,EAAMyqC,SACX,UAAjBzqC,EAAMqF,SAAoBmlC,EAAeC,UAAW,GACxD2E,EAAU5E,EAAD,GAEjB4E,EAAU5E,EAAD,GAEbj1B,EAAW41B,kBAAkB71B,EAChC,EAhKL/yB,mEAsFa+sD,EAAwB,kDAAxBA,EAAwBhoD,qEARtB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMuhC,GAC9BthC,OAAO,MAEdC,uDA5EuCvS,uFACaA,+EACJA,kFA+DVA,6gDAtEnCrU,sCAAyC,UAAzCA,CAAyC,gBAIDA,oCAAWA,2BAC3CA,4DAAsCA,2BACtCA,4DAA2CA,2BAC3CA,iEAA2CA,2BAC3CA,yCAIIA,mDAAUuE,gBAAmB,GAJjCvE,6BAOJA,wCACIA,0CAgDJA,6BAEJA,oIA/CaA,yFAAoB,iNC/BzC,iBASA3G,WACAC,WASAC,WASAE,GADA6B,SACAA,UACA5B,WAEAC,WACAC,WACAC,UACAC,WACAoG,+NAoBwBF,4CAGIA,gIAAWA,wCAAgB,GAE3BA,4CAAuBA,iCAAQA,2BAC/BA,sBACAA,0CAA6B,cACfA,+BAAMA,2DAFpBA,uGAmBJA,yGAQJA,8CAEIA,kHAASA,6CAAkB,GAF/BA,yBAMAA,uOACAA,8CAEIA,8HAASA,qCAAa,GAGtBA,sBAAeA,8BACfA,wCAAsBA,sBAAgBA,yDADtCA,uEACsBA,gIAIlCA,uCAIC,eAMOA,kHAASA,6CAAkB,GAL/BA,8BAQIA,uCACaA,mCACbA,2BACJA,mDACAA,wEAOIA,uCACgBA,mCAChBA,2BACAA,yCAGIA,oHAAUA,8CAAwB,GAHtCA,2BAKJA,mDACAA,2CAKIA,2GAAS0uB,+BAAuB1uB,0CAAe,GALnDA,+BAQIA,wCACIA,oCACJA,2BACJA,sDAhHhB,WAAuBnB,GAGnB,MAAOspD,4JAAGC,KAAKvpD,EAClB,CAED,MA4HawpD,UACD7sD,YAgFRC,YACYqL,EACApL,GAERI,QAHQC,eACAA,iBA5EIA,WAAQ,EAERA,aAAS,EAEIA,mBAAe,EAE5BA,sBAAkB,EAIjBA,cAAW,IAAIqF,eAEfrF,cAAW,IAAIqF,eAEvBrF,wBAAqB,CAACmzB,QAAOA,SAG/BnzB,cAAU,EACDA,aAAU,IAAIkN,kBAAgB,IAKvClN,gBAAaA,KAAKusD,QAAQ3rD,MAC7B,kBAAa,MACb,eAAWF,IACPV,KAAK0Q,SAAU,GAEXhQ,EACMV,KAAKkhD,QACD,mBAAc,EAAC,iBAAYxgD,IAAI,kBAAaA,KAAKE,MAC7C,SAAI,EAAE4rD,EAAOtL,MACT,MAAMuL,EAAgB,GAChBryC,EACFpa,KAAKL,UAAUwC,IAAI,qBACnB,GACJ,UAAW8L,KAAQmM,EAAU,CACzB,MAAOtX,EAAO0G,EAAMse,GAChB7Z,EAAKlL,MAAM,KACf0pD,EAAc5vC,KAAK,CACf/Z,QACA0G,OACAse,WAEP,CACD,OAAO,YACF0kC,EACIr2B,OAAO+qB,GACP/qB,OAAOs2B,GACZ,QAJG,KAQf,iBAAY/rD,IAChB,QAAG,KACXE,MAAK,gBAAYF,IAAM,QAAG,SAEhC,SAAKA,GAAOV,KAAK0Q,SAAU,IAGxB1Q,iBAAsB,GAObA,aAAWnC,GAAM6uD,EAAc7uD,GAC/BmC,gBAAa,IAAMA,KAAK2sD,iBAAiB,IAAI9jC,OAW5D,CATU+jC,yBACP,OAAOF,EAAc1sD,KAAKusD,QAAQ9+C,WACrC,CASMo/C,aAAariC,EAAoB,IACpCxqB,KAAKkB,QAAQ,SAAU,IAAMlB,KAAKusD,QAAQj/C,KAAKkd,GAClD,CAEMsiC,iBAAiBhqD,EAAgB,IAEpC,GADKA,IAAOA,EAAQ9C,KAAKusD,QAAQ9+C,aAC5Bi/C,EAAc5pD,GAAQ,OAC3B,MAAM4W,EAAO,IAAImP,OAAK,CAAEvf,GAAIxG,EAAOA,QAAO0G,KAAM1G,EAAMC,MAAM,KAAK,KACjE/C,KAAK+sD,QAAQrzC,GACb,MAAQlQ,OAAM+kB,gBAAiB7U,EACzB2U,EAAkB,GAAGvrB,KAAS0G,KAAQ+kB,IACtCD,EAAetuB,KAAKL,UAAUwC,IAAI,qBAAuB,GAC/DnC,KAAKL,UAAUqd,gBAAgB,mBAAoB,IAC5CsR,EAAatgB,OAAQtN,IAAOA,EAAEgC,SAASI,IAC1CurB,IAEJruB,KAAKkB,QACD,eACA,KACIlB,KAAKusD,QAAQj/C,KAAK,IAClBtN,KAAKgtD,WAAW/b,cAAc3tC,MAAQ,IAE1C,IAEP,CAMMypD,QAAQrzC,GACX,MAAM1Q,EAAOhJ,KAAKitD,YAAYj/C,OAAQtN,GAAMA,EAAEoC,QAAU4W,EAAK5W,OAC7D9C,KAAKsqB,SAAS,IACPthB,EACH,IAAI6f,OAAK,IACFnP,EACHpQ,GAAIoQ,EAAKpQ,IAAMoQ,EAAK5W,MACpBoqD,gBACMxzC,EAAKpQ,KAA2B,IAArBoQ,EAAKunC,YAEZ,KADAvnC,EAAKwzC,kBACI,MAG3BltD,KAAKkB,QACD,eACA,KACIlB,KAAKusD,QAAQj/C,KAAK,IAClBtN,KAAKgtD,WAAW/b,cAAc3tC,MAAQ,IAE1C,IAEP,CAMM6pD,WAAWzzC,GACd,MAAM1Q,EAAOhJ,KAAKitD,YAAYj/C,OACzBo/C,GAAWA,EAAOtqD,QAAU4W,EAAK5W,OAEtC9C,KAAKsqB,SAASthB,EACjB,CAMMqkD,iBAAiBr1C,GAEpB,GAAIA,EAAMga,OAAQ,CACd,MAAME,EAAOla,EAAMga,OAAOC,MAAM,GAEhC,GAAIC,EAAM,CACN,MAAMqL,EAAS,IAAInL,WACnBmL,EAAO7K,WAAWR,EAAM,SACxBqL,EAAOlL,iBAAiB,OAASmL,IAC7Bx9B,KAAKstD,eAAgB9vB,EAAIC,WAAmBr6B,QAC5C4U,EAAMga,OAAO1uB,MAAQ,KAEzBi6B,EAAOlL,iBAAiB,QAAU3xB,IAC9B,iBAAY,uBAEnB,CACJ,CACJ,CAMO4sD,eAAe/sD,GACnB,MAAMyI,GAAO,eAAUzI,IAAS,GAC1B+I,GAAK,oBAAeikD,UAAY,UACtC,UAAW1rB,KAAM74B,EAAM,CACnB64B,EAAGr4B,KAAOq4B,EAAGr4B,MAAQ,GAAGq4B,EAAG2rB,cAAc3rB,EAAG4rB,YAC5C,MAAMt5C,GACF0tB,EAAGr4B,MAAQ,GAAG+W,KAAKC,MAAsB,SAAhBD,KAAKmR,aAE7B3uB,MAAM,KACNuH,KAAK,KACLqP,cAEAkoB,EAAG/+B,QACJ++B,EAAG/+B,MAAQ,GAAGqR,KAAW7K,WAAYokD,iBAEzC,MAAMC,EAAkB3tD,KAAKL,UAAUwC,IACnC,gCACC,CAAC,cACN0/B,EAAGqrB,eACCrrB,EAAGqrB,iBACFS,EAAgBx1C,KAAMzX,GAAMmhC,EAAG/+B,MAAM8qD,SAASltD,IAGnDmhC,EAAGgsB,MAAQ,GAAKhsB,EAAGgsB,MAEnB7tD,KAAK+sD,QAAQ,IAAIlkC,OAAKgZ,GACzB,CACJ,CAIMisB,sBACC9tD,KAAK+tD,kBAET,kBAAa,eADI,sJAEpB,CAMMzjC,SAASE,GACZxqB,KAAKitD,YAAcziC,EACfxqB,KAAK8pB,WACL9pB,KAAK8pB,UAAUU,EAEtB,CAOMC,WAAWnnB,GACdtD,KAAKitD,YAAc3pD,CACtB,CAEM6iD,iBAAiBn8B,GACpBhqB,KAAKgqB,SAAWA,CACnB,CAOMq7B,iBAAiBx7B,GACpB7pB,KAAK8pB,UAAYD,CACpB,CAOMy7B,kBAAkBz7B,GACrB7pB,KAAK+pB,SAAWF,CACnB,CAEMmkC,UAAU//C,GACb,OAAOA,GAAMzE,MAAQ,EACxB,CAKMmjD,iBAAiBjzC,EAAa,IAAImP,QACrC,MAAMld,EAAM3L,KAAK+K,QAAQP,KACrByjD,wBACA,CACI9qD,MAAO,OACPD,OAAQ,OACR3C,KAAM,CAAEmZ,UAGhB/N,EAAII,mBAAmBiM,MAClBpX,MAAK,WAAOF,GAAmB,SAAbA,EAAE2iB,SACpBta,UAAWiP,IACRhY,KAAK+sD,QAAQ/0C,EAAM+M,UACnBpZ,EAAIhI,OAAJ,EAEX,EApZLxE,iEA4HamtD,GAAsBroD,8IAAtBqoD,EAAsBpoD,gbARpB,CACP,CACIwmB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAM2hC,GAC9B1hC,OAAO,KAEd3mB,kGAjGoCqU,iGAwBpBA,0GACiC,qCAyBlCA,0IACa,2CAAuC,oCACpD,qCASAA,uJACgB,sCAAkC,oCAClD,mCACA,+CAcAA,wIACI,uCAAkC,+CACtC,i0CAtGZrU,sCAAwD,UAAxDA,CAAwD,uBAAxDA,CAAwD,uBASxCA,6CAWAA,0CAMIA,0DAAiBuE,iBAAoB,EAArCvE,CAAsC,0CAMhEuE,2BACA,iCAbsBvE,2BAcAA,iDAKJA,6BAEJA,0DACIA,iDAOAA,gFAQJA,6BAEJA,2CA8CJA,kGAzG6BA,+CAWQA,yEAcjBA,mGAA2B,oBAA3BA,CAA2B,oBAA3BA,CAA2B,sDAU1BA,kEAQJA,6EAOgBA,uGAYxBA,ieC3GjB,iBAQA3G,WACAC,WACAC,WAQAC,WACAC,WACAC,UACAC,uDA0BgBqG,yGAUAA,8CAEIA,uHAASiqD,qBAAkBjqD,sCAAW,GAEtCA,uCAA2BA,sBAAiBA,2BAC5CA,uCACIA,sBACJA,yDAH2BA,+DAEvBA,yIAGRA,8CAGC,YAGOA,+CACiC+sB,2BACpDA,kBACH,EAHsB/sB,CAEC,yBAEgC+sB,2BACpDA,kBACH,EANsB/sB,CAEC,qFAMlBkqD,gCACJn9B,oBACE/sB,2CACH,GACsBA,gEAEAA,mOAGRA,8CAGIA,kHAASA,qCAAU,GAEnBA,sBACJA,uEAJIA,+CAGAA,gHAvEpB,MAiGamqD,UACD3uD,YAlGZC,kCA6GoBM,WAAQ,GAQRA,cAA+C+e,IAC3D,iBAAYA,GAUT/e,aAAU,IAAIkN,UAEdlN,qBAAsCA,KAAKusD,QAAQ3rD,MACtD,kBAAa,MACb,6BACA,eAAWiZ,IACP7Z,KAAK0Q,SAAU,EACR1Q,KAAKuQ,SAAWvQ,KAAKuQ,QAAQtH,OAAS,GACvC,QAAGjJ,KAAKuQ,SACRsJ,EAAM5Q,QAAU,EAChBjJ,KAAMkhD,QAEF,cAAS,EAAC,iBAAYrnC,IAAQ,kBAAaA,KAD3C7Z,KAAKquD,SAASx0C,IAElB,QAAG,OAEb,gBAAYnZ,IAAM,QAAG,MACrB,SAAKsI,IACDhJ,KAAK0Q,SAAU,EACf1H,GAAO,aAAQA,GACf,MAAM0U,GAAU1d,KAAKsuD,YAAc,IAAI30C,cACvC,OAAO3Q,EAAKgF,OACPC,IAAUjO,KAAKgO,QAAUhO,KAAKgO,OAAOC,EAAMyP,GADzC,IAcR1d,iBAAc,IAAMA,KAAKyB,aAAa,SAEtCzB,eAAY,KACfA,KAAKkB,QAAQ,OAAQ,IAAMlB,KAAKuuD,WAAWtd,eAAeqL,OAA1D,CAwEP,CArEUr8C,WAEHD,KAAK6I,aACD,iBACA7I,KAAKwuD,gBAAgBzlD,UAAWC,GAAUhJ,KAAKyuD,UAAYzlD,GAElE,CAKM0lD,oBACH1uD,KAAKkB,QACD,QACA,IAAOlB,KAAKsuD,WAAatuD,KAAK2uD,aAAanlD,MAAQ,GACnD,IAEP,CAMM8gB,SAASE,EAA0B1nB,GAEb,iBAAd0nB,GACNA,IAAsBxqB,KAAKsuD,aAE5B9jC,EAAY,IAAI3B,OAAK,CACjBrf,MAAOxJ,KAAKsuD,YAAcxrD,GAAS,IAAIC,MAAM,KAAK,GAClDD,MAAO9C,KAAKsuD,YAAcxrD,GAAS,MAGrC0nB,aAAqB3B,SAC3B7oB,KAAK2uD,YAAcnkC,EACfxqB,KAAK8pB,WACL9pB,KAAK8pB,UAAUU,GAEnBxqB,KAAK0uD,oBACR,CAMMjkC,WAAWnnB,GACdtD,KAAK2uD,YAAcrrD,EACnBtD,KAAK0uD,mBACR,CAEMvI,iBAAiBn8B,GACpBhqB,KAAKgqB,SAAWA,CACnB,CAMMq7B,iBAAiBx7B,GACpB7pB,KAAK8pB,UAAYD,CACpB,CAMMy7B,kBAAkBz7B,GACrB7pB,KAAK+pB,SAAWF,CACnB,EA5OL1qB,4HAiGaivD,KAAwB3wD,GAAxB2wD,EAAwB,qDAAxBA,EAAwBlqD,gGA8DLmB,sUAtEjB,CACP,CACIqlB,QAAStlB,oBACTulB,aAAa,gBAAW,IAAMyjC,GAC9BxjC,OAAO,KAEd3mB,yFAlCyDqU,mGACX,6yBA3D3CrU,sCAA0C,qBAA1CA,CAA0C,eAO9BA,2EAAwB,mCACPuE,kBAAuB,GAAG,EAD3CvE,CAAwB,4CAOxCuE,yBACAA,yBAEJ,EAAE,EAVkBvE,CAAwB,yBAUhBuE,qBAAmB,EAV3BvE,CAAwB,0BAWfuE,eAAa,GAhB1BvE,2BAkBAA,2CAA8CA,+BAAMA,2BACpDA,gDAKJA,2BACAA,qDAEIA,2DAAkBuE,0BAA6B,GAE/CvE,+CASAA,gDAuBAA,iDAOJA,sEA/DQA,wEAAwB,sBAAxBA,CAAwB,kDAAxBA,CAAwB,qBAevBA,kEAUkBA,uEASlBA,2GAuBAA,8ZC1FrB9E,sGCAaA,cAAc,CACvB,CACImK,GAAI,IACJE,KAAM,OACN+T,SAAU,aACVhC,OAAQ,CACJ,CAAE/R,KAAM,aAAcgS,IAAK,kCAC3B,CAAEhS,KAAM,cAAegS,IAAK,mCAC5B,CAAEhS,KAAM,aAAcgS,IAAK,oCAGnC,CAAElS,GAAI,IAAKE,KAAM,SAAU+T,SAAU,cACrC,CAAEjU,GAAI,IAAKE,KAAM,SAAU+T,SAAU,cACrC,CAAEjU,GAAI,IAAKE,KAAM,QAAS+T,SAAU,aACpC,CAAEjU,GAAI,IAAKE,KAAM,SAAU+T,SAAU,aACrC,CAAEjU,GAAI,IAAKE,KAAM,QAAS+T,SAAU,aACpC,CAAEjU,GAAI,IAAKE,KAAM,QAAS+T,SAAU,aACpC,CAAEjU,GAAI,IAAKE,KAAM,YAAa+T,SAAU,SAjBjB,wFCD3B,iBACAjgB,WACAC,WAEa4B,cAEb,cACI,0BAAqB,CACjBlB,KAAM,wBACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAW/S,GACQkuD,iBAKvB,0BAAqB,CACjB3wD,KAAM,4BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAW/S,IACP,MAAMsX,EAAQ42C,cAAYz2C,KAAM5Y,GAAMA,EAAE+J,KAAO5I,EAAEmuD,aAAavlD,IAC9D,IAAK0O,EACD,KAAM,CACFiK,OAAQ,IACR4lB,QAAS,kCAAkCnnC,EAAEmuD,aAAavlD,MAElE,OAAO0O,MAIf,0BAAqB,CACjB/Z,KAAM,wBACN8mB,SAAU,GACVwD,OAAQ,OACR9U,SAAWq7C,IACP,MAAMC,EAAY,IACXD,EAAQ1nC,KACX9d,GAAI,WAAU,0BAAqB,QAEvCslD,qBAAY/xC,KAAKkyC,GACVA,MAgBf,0BAAqB,CACjB9wD,KAAM,4BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWu7C,GAhBK,EAAC1lD,EAAI/I,KACrB,MAAMwzB,EAAQ66B,cAAYjsC,UAAWpjB,GAAMA,EAAE+J,KAAOA,GACpD,GAAIyqB,EAAQ,EACR,KAAM,CACF9R,OAAQ,IACR4lB,QAAS,kCAAkCv+B,KAEnD,MAAMylD,EAAY,IAAKxuD,GACvBquD,qBAAYlsC,OAAOqR,EAAO,EAAGg7B,GACtBA,GAOY/vC,CAAYgwC,EAAIH,aAAavlD,GAAI,IAAK0lD,EAAI5nC,UAGjE,0BAAqB,CACjBnpB,KAAM,4BACN8mB,SAAU,GACVwD,OAAQ,SACR9U,SAAWu7C,IACP,MAAMj7B,EAAQ66B,cAAYjsC,UACrBpjB,GAAMA,EAAE+J,KAAO0lD,EAAIH,aAAavlD,IAErC,GAAIyqB,EAAQ,EACR,KAAM,CACF9R,OAAQ,IACR4lB,QAAS,kCAAkCmnB,EAAIH,aAAavlD,MAEpEslD,cAAYlsC,OAAOqR,EAAO,EAA1B,GAIX,CA9E0Bk7B,EA8E1B,0FClFD,iBACA3xD,WACAC,WACAC,UAEAC,WACAC,UAGA,IAAIwxD,GAAa,UAAI,aAAQziD,KAAKiM,MAAO,GAAI,CACzC4H,MAAO,EACPG,QAAS,EACT0uC,QAAS,EACTC,aAAc,IAGlB,MAAMC,EAAgB,CAACC,GAAO,KAC1B,MAAMhiD,GAAO,gBAAW4hD,EAA4C,OAA/B/1B,wBAAqB,GAAK,IAC/D,OAAIm2B,IAAMJ,EAAa5hD,IAChB,iBAAYA,EAAZ,EAGLiiD,EAAQ,CAAC,OAAQ,UAAW,iBAC5BC,EAAW,CAAC,aAAc,aAAc,eAEjCrwD,gBAAgB,IAAIsiB,MAAM,KAAK03B,KAAK,GAAGpqC,IAAI,CAACrO,EAAGqzB,MACrC,0BAAqB,QAAxC,MACMra,EAAO+1C,cAAW,0BAAqBA,aAAWxmD,UAAY,GAC9DL,EAAO2mD,GAAM,0BAAqBA,EAAMtmD,SACxCuH,EAAMk/C,kBAAe,0BAAqBA,iBAAezmD,SACzD0mD,EAAOD,cAAY1hD,OAAQtN,GAAMA,EAAEoJ,YAAc0G,GAAKlH,IACtD4lB,EAAMygC,GAAK,0BAAqBA,EAAK1mD,SACrC2mD,EAAaC,cAAY7hD,OAAOtN,GAAKA,EAAEkJ,MAAMlH,SAASwsB,GAAK5lB,MAAQ,GACnE4a,GAAW,0BAAqB,QAAU,EAC1C4rC,EAAWL,cAAW,0BAAqBA,aAAWxmD,SACtD8mD,GAAc,0BAAqB,EAAG,GACtC7oC,GAAW,eACZ6M,EAAQ,GAAM,EAA6B,IAAzBxT,KAAKC,MAAMuT,EAAQ,IACtC,GAEJ,MAAO,CACHzqB,GAAI,WAAWyqB,IACfzO,cAAe+pC,GAAc,GAC7B7pC,YAAa6pC,IACbtpC,QAASrM,EAAKpQ,GACd0c,UAAWtM,EAAKlQ,KAChBgb,WAAY9K,EAAK5W,MACjBsjB,eAAgB1M,EAAKlQ,KACrB6c,gBAAiB3M,EAAK5W,MACtBuG,SAAmB,YAATT,EAAqB,QAAQse,IAAa,QAAQgI,GAAK5lB,MAAMyqB,IACvExqB,WAAqB,YAATX,EAAqBse,EAAW,GAAGgI,GAAK5lB,MAAMyqB,IAC1DrqB,YAAsB,YAATd,EAAqBse,EAAW,QAAQ6M,IACrDxd,MAAO,GAAG3N,aAAgBmrB,IAC1BnrB,OACAe,aAAcf,EACdsY,YAAY,0BAAqB,QAAU,GAAM,EACjDuF,QAAQ,0BAAqB,QAAU,GAAM,EAC7CvC,SAAuB,IAAbA,EACV+B,SAAuB,IAAb/B,EACVoC,YAA0B,IAAbpC,EAAiB4rC,EAASxmD,GAAK,GAC5Ckd,cAA4B,IAAbtC,EAAiB4rC,EAAStmD,KAAO,GAChD+c,eAA6B,IAAbrC,EAAiB4rC,EAAShtD,MAAQ,GAClD8G,MAAO,CAAC4G,GAAKlH,GAAI4lB,GAAK5lB,IACtBuZ,eAAgB,CACZpZ,OAAQ,cAAcsqB,IACtBi8B,cAAc,kBAAa,EAAG,wCAC9BryC,OAAQ,IAAI8D,MAAMsuC,GAAa5W,KAAK,GAAGpqC,IAAIrO,IAAM,IAAKkuD,eAAY,0BAAqBmB,IAAetzC,QAAQ,0BAAqB,EAAG,MACtIwzC,SAAuB,IAAb/rC,EAAiBsrC,GAAS,0BAAqBA,EAASvmD,SAAW,aAC7EsmB,SAAUqgC,GAAW,0BAAqBA,EAAW3mD,UAAUK,IA5BhE,EAfkB,0FCzB7B,iBACAhM,WAEAC,WAEa4B,gBAEb,cACI,0BAAqB,CACjBlB,KAAM,yBACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAW/S,GACQwvD,gBAAcliD,OACxBgK,IACG,0BACItX,EAAEyvD,aAAar2C,aACfpZ,EAAEyvD,aAAap2C,WACf/B,EAAMsN,cACNtN,EAAMwN,eACJxN,EAAMpP,OAASlI,EAAEyvD,aAAavnD,MAAQoP,EAAMrO,eAAiBjJ,EAAEyvD,aAAavnD,UAMlG,0BAAqB,CACjB3K,KAAM,6BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAW/S,IACP,MAAMsX,EAAQk4C,gBAAc/3C,KAAM5Y,GAAMA,EAAE+J,KAAO5I,EAAEmuD,aAAavlD,IAChE,IAAK0O,EACD,KAAM,CACFiK,OAAQ,IACR4lB,QAAS,kCAAkCnnC,EAAEmuD,aAAavlD,MAElE,OAAO0O,MAIf,0BAAqB,CACjB/Z,KAAM,yBACN8mB,SAAU,GACVwD,OAAQ,OACR9U,SAAWq7C,IACP,MAAMC,EAAY,IACXD,EAAQ1nC,KACX9d,GAAI,aAAY,0BAAqB,QAEzC4mD,uBAAcrzC,KAAKkyC,GACZA,KAIf,MAAMrmC,EAAgB,CAACpf,EAAI/I,KACvB,MAAMwzB,EAAQm8B,gBAAcvtC,UAAWpjB,GAAMA,EAAE+J,KAAOA,GACtD,GAAIyqB,EAAQ,EACR,KAAM,CACF9R,OAAQ,IACR4lB,QAAS,kCAAkCv+B,KAEnD,MAAMylD,EAAY,IAAKxuD,GAEvB,OADgB2vD,gBAAcxtC,OAAOqR,EAAO,EAAGg7B,GACxCA,IAGX,0BAAqB,CACjB9wD,KAAM,6BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWu7C,GAAQtmC,EAAcsmC,EAAIH,aAAavlD,GAAI,IAAK0lD,EAAI5nC,UAGnE,0BAAqB,CACjBnpB,KAAM,6BACN8mB,SAAU,GACVwD,OAAQ,QACR9U,SAAWu7C,GAAQtmC,EAAcsmC,EAAIH,aAAavlD,GAAI,IAAK0lD,EAAI5nC,UAGnE,0BAAqB,CACjBnpB,KAAM,qCACN8mB,SAAU,GACVwD,OAAQ,OACR9U,SAAWu7C,GACPtmC,EAAcsmC,EAAIH,aAAavlD,GAAI,IAC5B0lD,EAAI5nC,KACPlD,UAAU,EACV+B,UAAU,OAItB,0BAAqB,CACjBhoB,KAAM,oCACN8mB,SAAU,GACVwD,OAAQ,OACR9U,SAAWu7C,GACPtmC,EAAcsmC,EAAIH,aAAavlD,GAAI,IAC5B0lD,EAAI5nC,KACPlD,UAAU,EACV+B,UAAU,OAItB,0BAAqB,CACjBhoB,KAAM,sCACN8mB,SAAU,GACVwD,OAAQ,OACR9U,SAAWu7C,GACPtmC,EAAcsmC,EAAIH,aAAavlD,GAAI,IAC5B0lD,EAAI5nC,KACPlG,WAAuC,SAA3B8tC,EAAImB,aAAavzC,WAIzC,0BAAqB,CACjB3e,KAAM,6BACN8mB,SAAU,GACVwD,OAAQ,SACR9U,SAAWu7C,IACP,MAAMj7B,EAAQm8B,gBAAcvtC,UACvBpjB,GAAMA,EAAE+J,KAAO0lD,EAAIH,aAAavlD,IAErC,GAAIyqB,EAAQ,EACR,KAAM,CACF9R,OAAQ,IACR4lB,QAAS,kCAAkCmnB,EAAIH,aAAavlD,MAEpE4mD,gBAAcxtC,OAAOqR,EAAO,EAA5B,GAIX,CAhI4Bk7B,EAgI5B,2FCrID,iBAEA3xD,WACAC,UAEAC,WACAC,WAEa0B,iBAEb,cACI,0BAAqB,CACjBlB,KAAM,0BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,MAAMp1C,EAAO+1C,cAAW,0BAAqBA,aAAWxmD,SAClDmnD,EAAQX,cAAW,0BAAqBA,aAAWxmD,SACnDonD,EAAQZ,cAAW,0BAAqBA,aAAWxmD,SACzD,MAAO,CACH,CACIK,GAAImmD,cAAY3sD,MAChBqtB,QAASs/B,cAAYjmD,KACrB0mB,SAAS,EACTE,UAAU,EACVK,QAAQ,GAEZ,CACInnB,GAAIoQ,EAAK5W,MACTqtB,QAASzW,EAAKlQ,KACd0mB,SAAS,EACTE,UAAU,EACVK,QAAQ,GAEZ,CACInnB,GAAI8mD,EAAMttD,MACVqtB,QAASigC,EAAM5mD,KACf0mB,SAAS,EACTE,UAAU,EACVK,QAAQ,GAEZ,CACInnB,GAAI+mD,EAAMvtD,MACVqtB,QAASkgC,EAAM7mD,KACf0mB,SAAS,EACTE,UAAU,EACVK,QAAQ,GA3BT,IAiCf,MAAM6/B,EAA2BxB,IAC7B,MAAM3uC,GAAS2uC,EAAQqB,aAAar2C,aAC9BsG,GAAO0uC,EAAQqB,aAAap2C,WAC5BnQ,GAASklD,EAAQqB,aAAavhC,UAAY,IAC3C7rB,MAAM,KACNiL,OAAQtQ,KAAQA,GACf6yD,GAAWzB,EAAQqB,aAAa7R,YAAc,IAC/Cv7C,MAAM,KACNiL,OAAQtQ,KAAQA,GA4BrB,OA1BemyD,cAAY7hD,OAAQQ,GAC/B5E,EAAMX,OACAW,EAAM4S,OACF,CAACqD,EAAKhW,IAASgW,GAAOrR,EAAM5E,MAAMlH,SAASmH,IAC3C,IAEJ0mD,EAAQtnD,QACRsnD,EAAQ7tD,SAAS8L,EAAMlF,KAE/B0E,OAAQQ,IACN,MAAM+L,EAAWi2C,cAAYxiD,OAAQgK,GACjCA,EAAMzM,UAAU4M,KAAMuB,GAASA,EAAKpQ,KAAOkF,EAAMlF,KAErD,UAAW0O,KAASuC,EAChB,IACI,0BACI4F,EACAC,EACApI,EAAM+nC,YACN/nC,EAAMgoC,WAGV,OAAO,EAEf,OAAO,GAxBI,GA6BnB,0BAAqB,CACjB/hD,KAAM,uCACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,GACPwB,EAAwBxB,GAAS//C,IAAKrO,IAAO,CACzC2Y,SAAU3Y,QAItB,0BAAqB,CACjBzC,KAAM,oCACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,GACPwB,EAAwBxB,GAAS//C,IAAKrO,IAAO,CACzC2Y,SAAU3Y,MAGzB,CAtG6BuuD,EAsG7B,8GC9GD,iBACA3xD,WAEa6B,YAAY,CACrB,CACImK,GAAI,SACJE,KAAM,SACNipB,WAAY,IACZlV,SAAU,SACVgV,KAAM,CAAC,QAAS,gBAAiB,kBACjChiB,QAAS,CACL,CAAEjH,GAAI,QAASE,KAAM,YAAa4Y,MAAO,QACzC,CAAE9Y,GAAI,QAASE,KAAM,QAAS4Y,MAAO,QACrC,CAAE9Y,GAAI,QAASE,KAAM,UAAW4Y,MAAO,SAAUqQ,WAAY,IAC7D,CAAEnpB,GAAI,QAASE,KAAM,UAAW4Y,MAAO,SAAUqQ,WAAY,IAC7D,CAAEnpB,GAAI,QAASE,KAAM,UAAW4Y,MAAO,SAAUqQ,WAAY,IAC7D,CAAEnpB,GAAI,QAASE,KAAM,UAAW4Y,MAAO,SAAUqQ,WAAY,MAGrE,CACInpB,GAAI,SACJE,KAAM,OACNipB,WAAY,IACZlV,SAAU,SACVgV,KAAM,CAAC,SACPhiB,QAAS,CACL,CAAEjH,GAAI,QAASE,KAAM,QAAS4Y,MAAO,QACrC,CAAE9Y,GAAI,QAASE,KAAM,UAAW4Y,MAAO,QACvC,CAAE9Y,GAAI,QAASE,KAAM,OAAQ4Y,MAAO,QACpC,CAAE9Y,GAAI,QAASE,KAAM,YAAa4Y,MAAO,UAGjD,CAAE9Y,GAAI,SAAUE,KAAM,QAASipB,WAAY,IAAKlV,SAAU,UAC1D,CACIjU,GAAI,SACJE,KAAM,SACNipB,WAAY,IACZlV,SAAU,SACVhN,QAAS,CACL,CAAEjH,GAAI,QAASE,KAAM,YAAa4Y,MAAO,QACzC,CAAE9Y,GAAI,QAASE,KAAM,SAAU4Y,MAAO,QACtC,CAAE9Y,GAAI,QAASE,KAAM,YAAa4Y,MAAO,UAGjD,CACI9Y,GAAI,SACJE,KAAM,UACNipB,WAAY,IACZlV,SAAU,SACVhN,QAAS,CACL,CAAEjH,GAAI,QAASE,KAAM,YAAa4Y,MAAO,QACzC,CAAE9Y,GAAI,QAASE,KAAM,YAAa4Y,MAAO,QACzC,CAAE9Y,GAAI,QAASE,KAAM,YAAa4Y,MAAO,UAGjD,CACI9Y,GAAI,SACJE,KAAM,eACNipB,WAAY,IACZlV,SAAU,eACVhN,QAAS,CACL,CACIjH,GAAI,QACJE,KAAM,eACN4Y,MAAO,QACPqQ,WAAY,IAEhB,CAAEnpB,GAAI,QAASE,KAAM,YAAa4Y,MAAO,QAASqQ,WAAY,IAC9D,CACInpB,GAAI,QACJE,KAAM,gBACN4Y,MAAO,QACPqQ,WAAY,IAEhB,CACInpB,GAAI,QACJE,KAAM,qBACN4Y,MAAO,QACPqQ,WAAY,MAIxB,CACInpB,GAAI,SACJE,KAAM,WACNipB,WAAY,IACZlV,SAAU,eACVhN,QAAS,CACL,CAAEjH,GAAI,QAASE,KAAM,eAAgB4Y,MAAO,QAC5C,CAAE9Y,GAAI,QAASE,KAAM,UAAW4Y,MAAO,QACvC,CAAE9Y,GAAI,QAASE,KAAM,cAAe4Y,MAAO,WAKvDjjB,mCAAsC6Y,GAClC,MAAMtM,GAAW,yBAAoBsM,EAAM+nC,YAAa/nC,EAAMgoC,WACxDyQ,GAAK,0BAAqBtxD,YAAU8J,QAC1C,MAAO,CACHK,GAAI,UAAS,0BAAqB,UAClCod,SAAU1O,EAAM1O,GAChBgxB,eAAgB,KAAI,0BAAqB,UACzCD,YAAa,KAAI,0BAAqB,QACtCG,YAAY,gBACY,IAApBxiB,EAAM+nC,YAC2C,GAAjD,0BAAqBx/B,KAAKC,MAAM9U,EAAW,KAE/C6uB,OAAO,0BAAqB,UAAa,GAAM,EAAI,aAAe,GAClEpQ,MAAO,IAAI1I,MAAM,GAAG03B,KAAK,GAAGpqC,IAAI,CAACrO,EAAG6jB,KAAS,IACtCplB,YAAWsxD,EAAKlsC,EAAOplB,YAAU8J,QACpCsH,QAAS,GACT2jB,UAAU,0BAAqB,GAAI,MAG9C,CAnBD/0B,uFC9FaA,SAAS,aAETA,MAAM,uGCHnB,iBACA7B,WACAC,WACAC,UACAC,WAEA,IAAIyxD,EAAarI,IAAQ6J,QAAQ,KAAK/jD,KAAK,GAE3C,MAAM0iD,EAAgB,CAACC,GAAO,KAC1B,MAAMhiD,EAAO4hD,EAAW/uB,IAAoC,OAA/BhH,wBAAqB,GAAK,GAAS,KAChE,OAAIm2B,IACAJ,EAAa5hD,GAEVA,EAAKqjD,MAAL,EAGLC,EAAe,CAAC,YAAa,YAAa,aAC1CC,EAAe,KACjB,MAAMC,GAAM,0BAAqB,IACjC,OAAOA,EAAM,EACPF,EAAa,GACbE,EAAM,EACNF,EAAa,GACbA,EAAa,IAGVzxD,cAAc,IAAIsiB,MAAM,KAAK03B,KAAK,GAAGpqC,IAAI,CAACrO,EAAGqzB,KACtD,MAAMg9B,EAAStB,aAAWt5B,OAAOs5B,eACjC,IAAIlkD,EAAmB,IAAIkW,OAAM,0BAAqB,EAAG,IACpD03B,KAAK,GACLpqC,IAAI,IAAMgiD,GAAO,0BAAqBA,EAAO9nD,UAClDsC,EAAUsD,KACN,CAACtR,EAAGgJ,KAAOhJ,EAAE2vD,eAAiB,GAAI,IAAO3mD,EAAE2mD,eAAiB,GAAI,IAEpE,MAAM1+C,EAAQqhD,eAAY,0BAAqBA,cAAY5mD,SAC3DsC,EAAYA,EAAU4qB,OAAO,IAAK3nB,EAAO6K,UAAU,KACnD,EAAI8f,wBAAqB,MAAQ,GAAM,EAAG5tB,EAAUylD,QAAQvB,eACvDlkD,EAAUylD,QAAQvB,cAAW,0BAAqBA,aAAWxmD,UAClEsC,GAAY,YAAOA,EAAW,UAAY,CAAC,IAC3C,MAAMw0C,EAAcsP,GAAc,GAC5BrP,EAAYqP,IACZ3vB,GACF,0BAAqB,MAAQ,GAAM,EAAI,0BAA4B,GACvE,MAAO,CACHp2B,GAAI,aAAayqB,IACjB9R,OAAQ4uC,IACRzmD,KAAMmB,EAAU,GAAGzI,MACnBs8C,SAAU,cACVH,QAAS,oBACT1zC,cAAY4tB,UAAO5tB,EAAW,UAAY,IAAIwD,IAAI,CAACrO,EAAG6jB,KAAS,IACxD7jB,EACH8jD,UAAmB,IAARjgC,EACXrD,YAAY,0BAAqB,OAAS,GAAM,EAChDy8B,iBACI,0BAAqB,OAAS,GAAM,EAC9B,YACA,0BAAqB,OAAS,GAAM,EACpC,WACA,eAEdpnC,MAAO,gBAAgBwd,IACvB3M,KAAM,gBACN64B,SAAS,EACTF,cACAC,YACAt6B,SAAU,mBACVjC,SAAS,EACTjhB,SAAU,GAAGgM,GAAOhF,OACpB+2C,WAAW,EACXI,WAAY,GACZK,YAAa,GACblrC,OAAQtH,EACRkxB,cACAygB,WAAYzgB,EAAc,KAAI,0BAAqB,QAAU,GAC7D2gB,iBAAkB3gB,EAAc,UAAY,GAC5C7c,eAAgB,CACZuY,UACI,0BAAqB,OAAS,GAAM,EAC9B,EACI,2BAAsB,CAClB9xB,GAAI,aAAayqB,IACjBgsB,cACAC,eAGR,GACViR,MAAiC,GAA1B,0BAAqB,GAC5BnjB,UAAqC,GAA1B,0BAAqB,IA5CjC,GAiDX,MAAMojB,EAAe,GACrB/xD,cAAY6V,QAASgD,IACZk5C,EAAal5C,EAAMlC,QAAQxM,MAC5B4nD,EAAal5C,EAAMlC,QAAQxM,IAAM,IAErC4nD,EAAal5C,EAAMlC,QAAQxM,IAAIuT,KAAK7E,EAApC,EAJJ,wFC7FA,iBACA1a,WACAC,WACAC,WAEa2B,cAEb,cACI,0BAAqB,CACjBlB,KAAM,uBACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAW/S,IACP,IAAIyZ,EAASq2C,cACb,OAAK9vD,EAAEyvD,aAAavhC,WAChBzU,EAASA,EAAOnM,OACXgK,KACKA,EAAMzM,UAAU4M,KACbuB,GAASA,EAAK5W,QAAU2sD,cAAY3sD,SAIjDpC,EAAEyvD,aAAar2C,eACfK,EAASA,EAAOnM,OAAQzO,IACpB,0BACImB,EAAEyvD,aAAar2C,aACfpZ,EAAEyvD,aAAap2C,WACfxa,EAAEwgD,YACFxgD,EAAEygD,aAIP7lC,MAIf,0BAAqB,CACjBlc,KAAM,uBACN8mB,SAAU,GACVwD,OAAQ,OACR9U,SAAWq7C,IACP,MAAMC,EAAY,IACXD,EAAQ1nC,KACX9d,GAAI,eAAc,0BAAqB,QAE3CylD,SAAUxjD,UAAY,CAClBkkD,aAAWt3C,KAAMzX,GAAMA,EAAEoC,QAAUisD,EAAU3kD,SACzC2kD,EAAUxjD,WAAa,IAE/BwjD,EAAUxjD,UAAUyJ,QAAS0E,IACrBA,EAAK9P,QAAO8P,EAAKL,UAAW,KAGhC01C,EAAUj5C,SACVi5C,EAAUxjD,UAAY,IACdwjD,EAAUxjD,WAAa,GAC3B,IAAKwjD,EAAUj5C,OAAQuD,UAAU,KAGzCm3C,cAAY3zC,KAAKkyC,IAGjBj5C,EADexY,cAAWyxD,EAAUj5C,QAAQxM,KACpC6nD,SAAS,IAAIC,iBACdrC,MAIf,0BAAqB,CACjB9wD,KAAM,2BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,MAAM7gD,EAAOuiD,cAAYr4C,KACpBH,GAAUA,EAAM1O,KAAOwlD,EAAQD,aAAavlD,IAEjD,GAAI2E,EACA,OAAOA,EAEX,KAAM,CAAEgU,OAAQ,IAAK4lB,QAAS,kBAAxB,KAId,0BAAqB,CACjB5pC,KAAM,2BACN8mB,SAAU,GACVwD,OAAQ,SACR9U,SAAWq7C,IACP,MAAM/6B,EAAQy8B,cAAY7tC,UACrB3K,GAAUA,EAAM1O,KAAOwlD,EAAQD,aAAavlD,IAEjD,KAAIyqB,EAAQ,GAWZ,KAAM,CAAE9R,OAAQ,IAAK4lB,QAAS,mBAVtB2oB,cAAYz8B,GAAO3pB,OAASqlD,cAAY3sD,MACxC0tD,cAAY9tC,OAAOqR,EAAO,GAEby8B,cAAYz8B,GAAOxoB,UAAU4M,KACrCzX,GAAMA,EAAEoC,QAAU2sD,cAAY3sD,OAE9B66C,gBAAkB,UAIzB,KAId,0BAAqB,CACjB1/C,KAAM,2BACN8mB,SAAU,GACVwD,OAAQ,QACR9U,SAAWq7C,IACP,MAAM/6B,EAAQy8B,cAAY7tC,UACrB3K,GAAUA,EAAM1O,KAAOwlD,EAAQD,aAAavlD,IAEjD,GAAIyqB,GAAS,EACT,OAAOy8B,cAAY9tC,OAAOqR,EAAO,EAAG+6B,EAAQ1nC,MAEhD,KAAM,CAAEnF,OAAQ,IAAK4lB,QAAS,kBAAxB,KAId,0BAAqB,CACjB5pC,KAAM,iDACN8mB,SAAU,GACVwD,OAAQ,OACR9U,SAAWq7C,IACP,MAAM92C,EAAQw4C,cAAYr4C,KACrBH,GAAUA,EAAM1O,KAAOwlD,EAAQD,aAAavlD,IAEjD,GAAI0O,EAGCA,SAAM6K,eAAuB3B,YADzBlJ,EAAM6K,eAAuB3B,YAAc,IACMiV,OAAO,CACzD24B,EAAQD,aAAa/rD,QAElBkV,EAEX,KAAM,CAAEiK,OAAQ,IAAK4lB,QAAS,kBAAxB,GAGjB,CAtI0BonB,EAsI1B,uFC3ID,iBACA3xD,WAEM+zD,EAAsB,KACxB,MAAMjrD,EAAI,CAAC,aAAc,UAAW,YAAa,SAC3CkrD,GAAc,0BAAqBlrD,EAAE6C,OAAS,GAC9C06B,EAAM,GACZ,QAASjmC,EAAI,EAAGA,EAAI4zD,EAAa5zD,IAC7BimC,EAAI9mB,KAAKzW,GAAE,0BAAqBA,EAAE6C,UAEtC,OAAO06B,EAAI31B,OAAO,CAAC6zB,EAAInkC,EAAG2G,IAAMA,EAAE2vB,QAAQ6N,KAAQnkC,EAA3C,EAGEyB,cAAc,CACvB,CACIqK,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,wBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,kBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,YACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,kBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,eACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,iBAEtB,CACIJ,KAAM,uBACNC,OAAQ,mBACRG,MAAO,CAAC,SAAU,kBAExBmF,IAAKhR,IAAM,uBAAkB,IAAKA,EAAG2P,SAAU2jD,IAAuB91C,OAAQ,CAAC,2GAxDtD,yFCb3B,iBAEAje,WACAC,UAEa4B,eAEb,aACI0wD,cAAY76C,QAAQ,CAACxG,EAAYulB,KAAU,kBAAavlB,KAExD,0BAAqB,CACjBvQ,KAAM,yBACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,GACAA,EAAQqB,cAActuC,QACvBguC,cAAY7hD,OAAQtN,GAChBA,EAAEkJ,MAAMlH,SAASosD,EAAQqB,aAAatuC,UAE1CguC,iBAId,0BAAqB,CACjB5xD,KAAM,6BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,MAAMtgD,EAAQqhD,cAAY13C,KAAKzX,GAAKA,EAAE4I,KAAOwlD,EAAQD,aAAavlD,IAClE,IAAKkF,EAAO,KAAM,CAAEyT,OAAQ,KAC5B,OAAOzT,IAGlB,CA5B2BygD,EA4B3B,mHCjCD,iBACA3xD,WAEMi0D,EAAe,CACjB,qBACA,gBACA,UACA,kBACA,cACA,aACA,cACA,WACA,gBACA,cACA,gBACA,qBACA,iBACA,iBAGSpyD,cAAc,CACvBmK,GAAI,UACJE,KAAM,sBACN1G,MAAO,iBACPof,OAAQ,CAAC,QAAS,SAGT/iB,aAAaoyD,EAAaxiD,IAAI,CAACvF,EAAM9L,KAAO,CACrD4L,GAAI,QAAQ5L,EAAI,IAChB8L,KAAM,GAAGA,cACT1G,MAAO,GAAG0G,EAAKzG,MAAM,KAAKuH,KAAK,KAAKqP,iBAAiB63C,cACrDr7B,OAAO,CAACh3B,gBAECA,cAAcoyD,EAAaxiD,IAAI,CAACvF,EAAM9L,KAAO,CACtD4L,GAAI,SAAS5L,EAAI,IACjB8L,KAAM,GAAGA,eACT1G,MAAO,GAAG0G,EAAKzG,MAAM,KAAKuH,KAAK,KAAKqP,uBAAuB63C,WAC3DtE,gBAAgB,0BAAqB,OAAS,GAAM,EACpDrqC,gBAAgB,0BAAqB,OAAS,GAAM,EAAI,CACpD4uC,kBAAmB,CAAEj2C,IAAK,qEAC1Bk2C,QAAS,CAAEl2C,IAAK,yEAChB,KARmB,uFCjC3B,iBAEAle,WACAC,WACAC,UACAC,UAEAC,WACAC,WAEawB,aAEb,cACI,0BAAqB,CACjBlB,KAAM,2BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,GAAgC,YAA5BA,EAAQD,aAAavlD,GACrB,OAAOmmD,cAEX,MAAMkC,EAASlC,aAAWt3C,KACrBuB,GAASA,EAAK5W,QAAUgsD,EAAQD,aAAavlD,IAElD,GAAIqoD,EACA,OAAOA,EAEX,KAAM,CAAE1vC,OAAQ,IAAK4lB,QAAS,iBAAxB,KAId,0BAAqB,CACjB5pC,KAAM,uBACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,GAAIA,EAAQqB,aAAapxC,EAAG,CACxB,MAAMrB,EAASoxC,EAAQqB,aAAapxC,EAAEpF,cACtC,OAAO81C,aAAWzhD,OACb0L,GACGA,EAAKlQ,KAAKmQ,cAAcjX,SAASgb,IACjChE,EAAK5W,MAAM6W,cAAcjX,SAASgb,GAE7C,CACD,OAAO+xC,iBAIf,0BAAqB,CACjBxxD,KAAM,2BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,MAAMxlD,EAAK+5B,mBAAmByrB,EAAQD,aAAavlD,IAC7CqoD,EAASlC,aAAWt3C,KAAMuB,GAASA,EAAK5W,QAAUwG,GACxD,GAAIqoD,EACA,MAAO,IACAA,EACHnvD,SAAUovD,KAGlB,KAAM,CAAE3vC,OAAQ,IAAK4lB,QAAS,iBAAxB,KAId,0BAAqB,CACjB5pC,KAAM,uBACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,GAAIA,EAAQqB,aAAapxC,EAAG,CACxB,MAAMrB,EAASoxC,EAAQqB,aAAapxC,EAAEpF,cACtC,OAAO81C,cAAYzhD,OACd0L,GACGA,EAAKlQ,KAAKmQ,cAAcjX,SAASgb,IACjChE,EAAK5W,MAAM6W,cAAcjX,SAASgb,GAE7C,CACD,OAAO+xC,iBAIf,0BAAqB,CACjBxxD,KAAM,8BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,MAAMhsD,EAAQugC,mBAAmByrB,EAAQD,aAAa/rD,OAChD6uD,EAASlC,cAAYt3C,KAAMuB,GAASA,EAAK5W,QAAUA,GACzD,GAAI6uD,EACA,OAAOA,EAEX,KAAM,CAAE1vC,OAAQ,IAAK4lB,QAAS,kBAAxB,KAId,0BAAqB,CACjB5pC,KAAM,uCACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,GAAIA,EAAQD,aAAa/rD,MAAO,CAC5B,MAAMA,EAAQgsD,EAAQD,aAAa/rD,MAAM6W,cAMzC,OALe62C,cAAYxiD,OAAQgK,GAC/BA,EAAMzM,UAAU4M,KACXuB,GAASA,EAAK5W,MAAM6W,gBAAkB7W,GAIlD,CACD,KAAM,CACFmf,OAAQ,IACR4lB,QAAS,iDAAiDinB,EAAQD,aAAa/rD,QAF7E,IAOd,MAAM+uD,EAAiB,CACnB,UACA,UACA,SACA,SACA,MACA,QAGJ,aACI,MAAMjpD,EACFipD,GAAe,0BAAqBA,EAAe5oD,SACjDqK,EAAQo8C,eAAY,0BAAqBA,cAAYzmD,SACrD6oD,EAAejC,cAAY7hD,OAAQnQ,GACrCA,EAAE+L,MAAMlH,SAAS4Q,EAAMhK,KAErBkF,EACFsjD,GAAa,0BAAqBA,EAAa7oD,UAAY,GACzDzG,EAAoB,GAC1B,OAAQoG,OACC,UACDpG,EAASuvD,QAAU,CACfriD,SAAU4D,EAAMxJ,UAChBwJ,MAAOA,EAAMhK,GACbwM,OAAQtH,EAAMlF,GACdG,OAAQ+E,EAAM/E,OACdid,SAAU,IAEd,UACC,UACDlkB,EAASuvD,QAAU,CACfriD,SAAU4D,EAAMxJ,UAChBwJ,MAAOA,EAAMhK,GACbG,OAAQ+E,EAAM/E,OACdyX,WAAY2lC,IAAQ8J,QAExB,UACC,aACA,SACDnuD,EAASoG,GAAQ,CACb8G,SAAU4D,EAAMxJ,UAChBwJ,MAAOA,EAAMhK,GACbjD,IAAI,0BAAqB,KACzB9B,IAAI,0BAAqB,KACzBg2C,UAAWsM,IACNmL,UAAS,0BAAqB,IAAK,KACnCrB,QAET,UACC,MACDnuD,EAASyvD,IAAM,CACXC,KAAK,0BAAqB,KAAO,GACjCC,KAAK,0BAAqB,KAAO,IACjC5X,UAAWsM,IACNmL,UAAS,0BAAqB,IAAK,KACnCrB,QAIjB,OAAOnuD,CACV,CACJ,CAxKyBysD,EAwKzB,kHClLY9vD,YAAY,CACrB,CACI8sD,WAAY,WACZmG,WAAY,WACZ5oD,KAAM,UACNE,YAAa,GACb6oB,KAAM,MACNhW,MAAO,EACP6N,SAAU,EACVtgB,UAAW,GACXuoD,SAAU,GACV/oD,GAAI,qBAICnK,iBAAiB,CAC1B,CACIqK,KAAM,SACNE,YAAa,GACb6oB,KAAM,WACNhW,MAAO,EACP6N,SAAU,EACVtgB,UAAW,mBACXuoD,SAAU,GACV/oD,GAAI,SACJmjB,OAAQ,CAAC,QAAS,UAEtB,CACIjjB,KAAM,WACNE,YAAa,GACb6oB,KAAM,WACNhW,MAAO,EACP6N,SAAU,EACVtgB,UAAW,mBACXuoD,SAAU,GACV/oD,GAAI,SACJmjB,OAAQ,CAAC,QAAS,WA4BbttB,cAAcA,iBAAe4P,IAAKyB,GAC3CA,EAAIic,OAAO1d,IAAI,CAACuE,EAAOiR,IAzBT,EACdjb,EACAib,EACA7U,EACA4iD,EAAc,QAEd,IAAI7oD,EAASH,EAAGuzC,OAAO,GACvBpzC,SAAS,qBAAqB6oD,QACvB,CACHhpD,GAAI,GAAGoG,EAASpG,MAAMA,IACtBE,KAAM,SAASF,EAAGskD,SAAS,MAAQ,IAAMtkD,EAAGvG,MAAM,KAAK,KACvD+G,UAAW4F,EAASpG,GACpBI,YAAa,GACb6oB,KAAM,QACN9oB,SACAktB,KAAM,gBACN/tB,KAAM,cACN2T,MAAO,EACP6N,SAAU,GACV5nB,SAAU,oBACV6V,aAAc,GAZX,EAkBHk6C,CAAUj/C,EAAOiR,EAAK/T,EAAK8C,EAAMvQ,MAAM,KAAK,MAElDyZ,OAAO,CAACta,EAAG5E,IAAM4E,EAAEi0B,OAAO74B,GAAI,CAO5B,CACIgM,GAAI,WACJQ,UAAW,SACXN,KAAM,WACN+oB,KAAM,CAAC,QAAS,WAChB9oB,OAAQ,6BAhBW,wGChE3B,iBACAnM,WACAC,WACAC,WACAC,UAEM+0D,EAAgB,CAClB1tC,QAAS,CACL2tC,SAAU,CACNjpD,KAAM,WACNE,YAAa,GACbyZ,QAAS,CACL,CACI7Z,GAAI,SACJE,KAAM,+BACN1G,MAAO,iBACP0qD,WAAY,WACZC,UAAW,aAEf,CACInkD,GAAI,SACJE,KAAM,0BACN1G,MAAO,kBACP0qD,WAAY,OACZC,UAAW,gBAOlBtuD,iBAAiB,GAEjBA,aAEb,cACI,0BAAqB,CACjBlB,KAAM,uBACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,GAAkC,QAA9BA,EAAQqB,aAAa59B,KACrB,OAAOm9B,YACJ,GAAkC,WAA9BZ,EAAQqB,aAAa59B,KAC5B,MAAO,GACJ,GAAkC,aAA9Bu8B,EAAQqB,aAAa59B,KAC5B,OAAOm9B,iBACJ,GAAkC,UAA9BZ,EAAQqB,aAAa59B,KAC5B,OAAOm9B,cAEX,KAAM,CAAEztC,OAAQ,IAAK4lB,QAAS,kBAAxB,KAId,0BAAqB,CACjB5pC,KAAM,8BACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,GAAkC,aAA9BA,EAAQqB,aAAa3mD,KACrB,MAAO,CACHkpD,SAAU,CACNvvC,QAAS,CACLwvC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,SAAU,aAK1B,GAAkC,aAA9BhE,EAAQqB,aAAa3mD,KACrB,MAAO,CACH4xB,SAAU,CACNjY,QAAS4vC,cAIrB,GAAkC,UAA9BjE,EAAQqB,aAAa3mD,KAAkB,CACvC,MAAM0yC,EAAQ4S,EAAQD,aAAavlD,GAAGvG,MAAM,KAE5C,OAAOiwD,EADI9W,EAAMA,EAAMjzC,OAAS,GAEnC,CACD,GAAkC,mBAA9B6lD,EAAQqB,aAAa3mD,KAA2B,CAChD,MAAM0yC,EAAQ4S,EAAQD,aAAavlD,GAAGvG,MAAM,KAE5C,OA8FZ,WAA+BuG,GAC3B,OAAKnK,iBAAemK,KAChBnK,iBAAemK,GAAM,CACjB,iBAAkB,CACd6Z,QAAS,IAAI1B,MAAM,KAAQ03B,KAAK,GAAGpqC,IAAI,CAACrO,EAAG6jB,KACvC,MAAM2C,GAAW,eACZ3C,EAAM,GAA6B,IAAvBhE,KAAKC,MAAM+D,EAAM,IAC9B,GAEE0uC,GACF,0BAAqB,MAAQ,GAAM,EAC7BxD,cACI,0BAAqBA,aAAWxmD,SAEnC,GACX,MAAO,CACHK,GAAI,QAAQ4d,IACZzd,OAAQ,QAAQyd,IAChB1d,KAAM,GAAG0d,IACTpF,UAAU,0BAAqB,MAAQ,GAAM,EAC7CoxC,YAAaD,EAASnwD,OAAS,GAC/BqwD,cAAeF,EAASzpD,MAAQ,GAN7B,MAYhBrK,iBAAemK,EACzB,CA1HkB8pD,CADIlX,EAAMA,EAAMjzC,OAAS,GAEnC,CACD,MAAkC,iBAA9B6lD,EAAQqB,aAAa3mD,MACPslD,EAAQD,aAAavlD,GAAGvG,MAAM,KAErC,CAAE22B,aAAc,CAAEvW,QAAS,IAAI1B,MAAM,IAAI03B,KAAK,GAAGpqC,IAAI,CAACrO,EAAG6jB,IAAQ,KAAKA,QAE/C,gBAA9BuqC,EAAQqB,aAAa3mD,KACd,CACH6pD,YAAa,CACTlwC,QAAS,CACLmwC,MAAO,CACH,CACIhqD,GAAI,YACJiqD,WAAY,CACRnpC,SAAU,IACVopC,eAAgB,CAAEntD,EAAG,IAAM9B,EAAG,MAGlCkvD,SAAU,CACNC,YAAa,CACT,CAAC,EAAI,GACL,CAAC,EAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,MAIjB,CACIpqD,GAAI,YACJiqD,WAAY,CACRnpC,SAAU,IACVopC,eAAgB,CAAEntD,EAAG,IAAM9B,EAAG,OAGtC,CACI+E,GAAI,YACJiqD,WAAY,CACRnpC,SAAU,IACVopC,eAAgB,CAAEntD,EAAG,IAAM9B,EAAG,WAStDiuD,EAAc1D,EAAQD,aAAavlD,KACnCkpD,EAAc1D,EAAQD,aAAavlD,IAC/BwlD,EAAQqB,aAAa3mD,MAGlBgpD,EAAc1D,EAAQD,aAAavlD,IAE1CkpD,EAAc1D,EAAQD,aAAavlD,MAClCwlD,EAAQqB,aAAa3mD,MAEfgpD,EAAc1D,EAAQD,aAAavlD,KAEvC,OAIf,0BAAqB,CACjBrL,KAAM,8BACN8mB,SAAU,GACVwD,OAAQ,QACR9U,SAAWq7C,IACF0D,EAAc1D,EAAQD,aAAavlD,MACpCkpD,EAAc1D,EAAQD,aAAavlD,IAAM,IAC7CkpD,EAAc1D,EAAQD,aAAavlD,IAAIwlD,EAAQ1nC,KAAK5d,MAChDslD,EAAQ1nC,QAIpB,MAAMusC,EAAgB,CAAC,eAAgB,iBAAkB,gBAEzD,WAAkCrqD,GAC9B,MAAO,CACH+Q,MAAO,CACH8I,QAAS,IAAI1B,MAAM,IAAI03B,KAAK,GAAGpqC,IAAI,CAACrO,EAAG6jB,KAAS,CAC5Cjb,GAAI,UAAS,eAAUA,EAAI,OAAM,eAAUib,EAAM,EAAG,KACpD/a,KAAM,QAAQF,MAAM,eAAUib,EAAM,EAAG,KACvCzC,UAAU,0BAAqB,MAAQ,GAAM,EAC7CM,MAAO,GACP1U,SAAUimD,EAAc3lD,OACnBtN,IAAM,0BAAqB,OAAS,GAAM,OAK9D,EAgCD,0BAAqB,CACjBzC,KAAM,uCACN8mB,SAAU,GACVwD,OAAQ,MACR9U,SAAWq7C,IACP,MAAMjlD,EAAO6lD,iBAAev3C,KACvBzX,GAAMA,EAAE4I,KAAOwlD,EAAQD,aAAavlD,IAEzC,IAAKO,EACD,KAAM,CACFoY,OAAQ,IACR4lB,QAAS,gCAAgCinB,EAAQD,aAAavlD,OAEtE,OAAOomD,cAAY1hD,OAAQtN,GAAMA,EAAEoJ,YAAcD,EAAKP,IAAIyF,IACrDmgB,IACG,MAAMgtB,EAAQhtB,EAAI5lB,GAAGvG,MAAM,KAE3B,MAAO,CACH8G,KAAMqlB,EACNnK,SAAUiuC,EAHH9W,EAAMA,EAAMjzC,OAAS,IACzB,EAJR,GAYlB,CA1MyBgmD,EA0MzB,gBCzOD,IAAY2E,uIAAU,KAClBA,iBACAA,eACAA,mBAGJ,SAAYC,GACRA,mBACAA,qBACAA,kBACH,CAJD,CAAY10D,0BAAS,KAMrB,MAAM20D,EAWFp0D,YAAYgB,GACRV,KAAK+zD,QAAU,CAAC,aAAc,WAAY,eAC7C,CAEDC,KAAKC,GAAkB,CAEvBC,MAAMC,GAAoB,CAE1BC,QAAQ5qD,GAAgB,CAExB6qD,aAAa7qD,GAAgB,EAGpBrK,qBAAqB,CAACqP,EAAgB48B,EAAqB,KACpE,IAAI0oB,EAAa,IAAKtlD,KAAU48B,GADLkpB,gHCtC/B,iBAEA,IAAIz5C,EAEJ,MAAa05C,EAST70D,YAAYgB,GAPZV,YAA2C,UAE3CA,WAAgB,EAMZA,KAAKw0D,WAAY,eAAU,MAC9B,CAEDC,SACIz0D,KAAKiiB,OAAS,UACdpH,EAAW4jB,YAAY,KACfz+B,KAAKw0D,UAAY,GAAGv5C,cAAcJ,GACtC7a,KAAKw0D,UAAYx0D,KAAKw0D,UAAY,EAClCx0D,KAAK8kB,QAAU9kB,KAAK8kB,QAAU,GAC/B,IACN,CAED4vC,SACI10D,KAAKiiB,OAAS,SACdhH,cAAcJ,EACjB,CAED85C,UACI30D,KAAKy0D,QACR,CAEDG,QACI50D,KAAKiiB,OAAS,UACdjiB,KAAK8kB,QAAU,EACf7J,cAAcJ,EACjB,EAnCL1b,kBAuCaA,sBAAsB,CAACqP,EAAgB48B,EAAqB,KACrE,IAAImpB,EAAc,IAAK/lD,KAAU48B,GADLypB,uGC3ChC,iBAMAv3D,WACAC,WAEMu3D,EAAiB,GAEjBC,EAAW,CAAC50C,EAAOC,IAASiX,IACvB,0BAAqBlX,EAAOC,EAAKiX,EAAI29B,aAAc39B,EAAI29B,cAGlE,MAAMC,EACFv1D,YAAYgB,GAAK,CAEjBw0D,gBAAgBpyD,EAAe4W,EAAcyG,EAAeC,GAExD,GADK00C,EAAehyD,KAAQgyD,EAAehyD,GAAS,IAChDgyD,EAAehyD,GAAOmG,OACtB,OAAO6rD,EAAehyD,GAAOkL,OAAO+mD,EAAS50C,EAAOC,IACxD,MAAMjG,EAAS,GACTg7C,GAAY,aAAgB,IAARh1C,GAAc,IAClCi1C,GAAS,aAAc,IAANh1C,EAAY,IACnC,IAAI3U,EAAO,IAAIgB,KAAK0oD,GACpB,MAAO,cAAS1pD,EAAM2pD,IAClB,IAAI3zC,OAAM,eAAU,IACf03B,KAAK,GACLpqC,IAAKrO,IAAO,CACT20D,aAAa,kBAAa,IAC1BL,cAAc,kBACV,cAASvpD,GAAM,eAAU,IAAM,IAEnCC,SAA0B,IAAhB,eAAU,IACpB+sC,SAAUgX,cAAW,eAAUA,aAAWxmD,SAASnG,SAEtDkS,QAASzV,GAAM4a,EAAO0C,KAAKtd,IAChCkM,GAAO,aAAQA,EAAM,GAEzBqpD,SAAehyD,GAASqX,EACjB26C,EAAehyD,GAAOkL,OAAO+mD,EAAS50C,EAAOC,GACvD,EAGQjhB,6BAA6B,CACtCqP,EACA48B,EAAqB,KACpB,IAAI6pB,EAAqB,IAAKzmD,KAAU48B,GAHNkqB,+FC7CvC,iBAmCA,MAAMC,EAiEF71D,YAAYoe,GAnDI9d,UAAO,CACnButC,KAAM,CACFh3B,MAAO,OACPxC,QAAS,qwBAsBb,cAAe,CACXqP,KAAM,YACN7M,MAAO,gBACPxC,QAAS,aAIV/T,UAAO,CACV,CACIojB,KAAM,SACN5Z,KAAM,SACNZ,KAAM,UACN4sD,OAAQ,CAAC,aACTjoB,KAAM,eAEV,CACInqB,KAAM,OACN5Z,KAAM,KACNgsD,OAAQ,CAAC,aACTjoB,KAAM,eACNh7B,SAAU,qBAIXvS,YAAS,EAGZA,KAAKwJ,KAAOsU,EAAMtU,MAAQ,cAC1BxJ,KAAKy1D,UAAY33C,EAAM23C,YAAa,EACpCz1D,KAAKo0B,OAAStW,EAAMsW,SAAU,EAC9Bp0B,KAAK01D,WAAa53C,EAAM43C,WACxB11D,KAAK21D,YAAc73C,EAAM63C,YACzB31D,KAAK41D,YAAc93C,EAAM83C,aAAe,GACxC51D,KAAKw1D,OAAS//C,OAAOC,KAAK1V,KAAK01D,YAAc,KAAO,GACpD11D,KAAK61D,QAAUpgD,OAAOC,KAAK1V,KAAK21D,aAAe,KAAO,GACtD31D,KAAK81D,kBAAoB91D,KAAK61D,YAChB18B,UAAOn5B,KAAK41D,YAAY7mD,IAAKrO,GAAMA,EAAEkI,QAAU,IACvDoM,QACDvX,GACIuC,KAAK,GAAGvC,KAAOuC,KAAK41D,YAChB5nD,OAAQtN,GAAMA,EAAEkI,OAASnL,GACzBsR,IAAKrO,GAAMA,EAAE4I,KAE1BtJ,KAAK41D,YAAY5gD,QACZ+gD,GAAY/1D,KAAK,GAAG+1D,EAAOntD,QAAQmtD,EAAOzsD,MAAQysD,GAEvD/1D,KAAKw1D,OAAOxgD,QACP2P,GAAS3kB,KAAK,SAAS2kB,KAAS3kB,KAAK01D,WAAW/wC,IAErD3kB,KAAK61D,QAAQ7gD,QACR2P,GAAS3kB,KAAK,UAAU2kB,KAAS3kB,KAAK21D,YAAYhxC,GAE1D,CAEDqxC,OAAOp5C,GAAQ,GACX5c,KAAKo0B,OAASxX,CACjB,CAEDq5C,SAAW,CAWXC,OAAOviC,EAAe+W,GACd1qC,KAAKw1D,OAAO9yD,SAASixB,IAAU3zB,KAAK61D,QAAQnzD,SAASgoC,KACrD1qC,KAAKm2D,aAAaxiC,EAAO,CACrB31B,QAAQ,YAAO,IACPgC,KAAK01D,WAAW/hC,GAAO31B,QAAU,GACrC0sC,MAGR1qC,KAAKm2D,aAAazrB,EAAQ,CACtBqrB,OAAQpiC,EACRyiC,UAAWziC,IAGtB,CAMD0iC,WAAa,CAKbC,WAAa,CAEbC,cAAgB,CAMhBC,QAAU,CAKVC,SAAW,CAEXC,SAAW,CAMXC,UAAY,CAOZC,UAAY,CAMZC,QAAQvzD,EAAeyyD,EAAiB,OACrB,QAAXA,IACA/1D,KAAK82D,OAASxzD,EAErB,CAEDyzD,MAAMn6C,GAAiB,EAAMm5C,EAAiB,OAC1C/1D,KAAKm2D,aAAaJ,EAAQ,CAAEiB,KAAMp6C,GACrC,CAKDq6C,QAAQlB,EAAiB,OACrB/1D,KAAK+2D,OAAM,EAAOhB,EACrB,CASDmB,aAAa5tD,EAAYsT,GACrB,MAAMm5C,EAAS/1D,KAAK41D,YAAYz9C,KAAMzX,GAAMA,EAAE4I,KAAOA,GACjDysD,IACA/1D,KAAK,GAAG+1D,EAAOntD,QAAQmtD,EAAOzsD,MAAQ,IAAKysD,EAAQn5C,SAE1D,CAEDu6C,MAAMpB,GACF/1D,KAAKm2D,aAAaJ,EAAQ,CAAEqB,QAAQ,GACvC,CAEDC,QAAQtB,GACJ/1D,KAAKm2D,aAAaJ,EAAQ,CAAEqB,QAAQ,GACvC,CAEDjB,aAAaJ,EAAgBx1D,GACrBP,KAAK,SAAS+1D,MACd/1D,KAAK,SAAS+1D,KAAY,IAAK/1D,KAAK,SAAS+1D,QAAcx1D,GAC3DP,KAAK01D,WAAWK,GAAU,IAAK/1D,KAAK,SAAS+1D,QAAcx1D,IACpDP,KAAK,UAAU+1D,OACtB/1D,KAAK,UAAU+1D,KAAY,IAAK/1D,KAAK,UAAU+1D,QAAcx1D,GAC7DP,KAAK21D,YAAYI,GAAU,IAAK/1D,KAAK,UAAU+1D,QAAcx1D,GAEpE,EAGL,MAAMm1D,EAAsB,CACxB4B,KAAM,CACF9tD,KAAM,cACNZ,KAAM,aACN0hC,IAAK,gBAETitB,KAAM,CACF/tD,KAAM,YACNZ,KAAM,aACN0hC,IAAK,gBAETktB,KAAM,CACFhuD,KAAM,eACNZ,KAAM,aACN0hC,IAAK,gBAETmtB,IAAK,CACDjuD,KAAM,OACNZ,KAAM,MAEV8uD,IAAK,CACDluD,KAAM,OACNZ,KAAM,MAEV+uD,IAAK,CACDnuD,KAAM,OACNZ,KAAM,MAEVgvD,IAAK,CACDpuD,KAAM,OACNZ,KAAM,MAEVivD,KAAM,CACFruD,KAAM,cACNZ,KAAM,UAEVkvD,IAAK,CACDtuD,KAAM,aACNZ,KAAM,UAEVmvD,QAAS,CACLvuD,KAAM,cACNZ,KAAM,SACN0hC,IAAK,YAET0tB,QAAS,CACLxuD,KAAM,eACNZ,KAAM,SACN0hC,IAAK,YAET2tB,QAAS,CACLzuD,KAAM,gBACNZ,KAAM,SACN0hC,IAAK,YAET4tB,QAAS,CACL1uD,KAAM,iBACNZ,KAAM,SACN0hC,IAAK,YAET6tB,IAAK,CACD3uD,KAAM,SACNZ,KAAM,KACN0hC,IAAK,UAET8tB,IAAK,CACD5uD,KAAM,qBACNZ,KAAM,KACN0hC,IAAK,cAIPqrB,EAAuB,CACzB0C,SAAU,CACN7uD,KAAM,YACNZ,KAAM,UACNmtD,OAAQ,MACRzrB,IAAK,aAETguB,SAAU,CACN9uD,KAAM,YACNZ,KAAM,UACN0hC,IAAK,aAETiuB,SAAU,CACN/uD,KAAM,YACNZ,KAAM,UACNmtD,OAAQ,MACRzrB,IAAK,aAETkuB,SAAU,CACNhvD,KAAM,YACNZ,KAAM,UACN0hC,IAAK,aAETmuB,SAAU,CACNjvD,KAAM,YACNZ,KAAM,UACN0hC,IAAK,YACLyrB,OAAQ,QAIVH,EAAqB,CACvB,CACItsD,GAAI,SACJE,KAAM,WACNZ,KAAM,SACN8vD,OAAQ,CAAC,MAAO,eAAgB,UAAW,QAC3C97C,MAAO,OAEX,CACItT,GAAI,SACJE,KAAM,SACNZ,KAAM,SACN8vD,OAAQ,CAAC,MAAO,eAAgB,WAChC97C,MAAO,OAEX,CACItT,GAAI,UACJE,KAAM,SACNZ,KAAM,SACN8vD,OAAQ,CAAC,KAAM,QACf97C,MAAO,SAIFzd,qBAAqB,CAACqP,EAAgB48B,EAAqB,KACpE,IAAImqB,EAAW,IACR/mD,EACHknD,aACAC,cACAC,iBACGxqB,GANoButB,oMC1X/B,iBACAr7D,WACAC,UACAC,WAoBA,MAAao7D,EAAbl5D,cAEIM,cAAkC,GAElCA,wBAAqB,CACjB,YAAayvD,aAAWzhD,OACnBtN,IAAM,0BAAqB,MAAQ,GAAM,GAE9C,cAAe+uD,aAAWzhD,OACrBtN,IAAM,0BAAqB,MAAQ,GAAM,GASrD,CALGm4D,aAAa/1D,EAAe21C,GAAoB,CAEhDqgB,UACIC,EAAgB/4D,KAAM0vD,cACzB,EAjBLvwD,6BAoBA,MAAM65D,EAAa,GAwBnB,WAAiBC,EAAYC,EAAc,GACvC,IAAI/6B,EAAM,GAAG86B,IACb,KAAO96B,EAAIl1B,OAASiwD,GAChB/6B,EAAM,IAAMA,EAEhB,OAAOA,CACV,CAgED,WACImM,EACA7d,GAEA,UAAWyC,KAAOzC,EAAQ,CACtB6d,EAAIpb,EAAI5lB,IAAM,CACVhG,MAAO,IAAIme,OAAM,0BAAqB,KACjC03B,KAAK,GACLpqC,IAAI,IAAM6iD,EAAiB1iC,EAAKob,EAAI,GAAGpb,EAAI5lB,kBAEpD,UAAW6vD,KAAQ7uB,EAAI,GAAGpb,EAAI5lB,YAAYhG,MACtC61D,EAAK58C,OAAQ,eAAU,KAE3B+tB,EAAI,GAAGpb,EAAI5lB,YAAc,IAAKghC,EAAI,GAAGpb,EAAI5lB,YAC5C,CACJ,CAED,WACI4lB,EACA7U,EACAxO,EAAQ4jD,cAER,MAAM2J,GAAQ,0BAAqB,MAAQ,GAAM,EAC3CC,GAAOxtD,GAAS,KAAI,2BAAsBA,GAAS,KAAK5C,UAAUnG,MACxE,OAAOs2D,EACD,CACI52D,SAAU,OACV82D,aAAa,0BAAqB,MAAQ,GAAM,EAChD7vD,OAAQ4Q,GAAM,0BAAqBA,EAAMpR,SACzCswD,IAAKC,OAAKC,QAAQJ,GAAO,IACzB/lD,MAAO4b,EAAI5lB,GACXoG,SAAUwf,EAAIplB,WAElB,CACItH,SAAU,WACVk3D,iBAAkB,cAClBrzD,GAAG,0BAAqB,KAAQ,GAChC9B,GAAG,0BAAqB,KAAQ,GAChC4tD,IAAK,kBACLD,IAAK,kBACLyH,WAAY,eACZJ,IAAKC,OAAKC,QAAQJ,GAAO,IACzBO,SAAU,iBACVrf,UAAWh6B,KAAKC,OAAM,IAAI/T,MAAOiX,UAAY,KAC7Cm2C,UAAW,IACXC,WAAY,IAEzB,CA3ID36D,mCAAa46D,EACTC,oBAAoB3E,GAChB,IAAK2D,EAAW3D,GAAc,CAC1B,MAAM7I,GACF,eAAU,QAAW,GAAM,EACrBiD,cAAW,eAAUA,aAAWxmD,SAChC,CAAEO,KAAM,IAClBwvD,EAAW3D,GAAe,CAAEnC,YAAa1G,EAAMhjD,KAClD,CACD,OAAOwvD,EAAW3D,EACrB,CAEDwD,aAAa/1D,EAAe21C,GACxB,MAAO,CAAC,CACJ7vC,KAAM,WACNse,SAAU,CAAE7gB,EAAG,GAAK9B,EAAG,IACvB+O,MAAOo8C,eAAY,eAAUA,cAAYzmD,SAASK,GAClD2wD,SAAU,GAEjB,GAWL96D,wCACIqP,EACA48B,EAAqB,IAErB,MAAMd,EAAM,IAAIsuB,EAChB,UAAW1pC,KAAOwgC,cACdplB,EAAI4vB,SAAShrC,EAAI5lB,IAAM,CACnB6wD,WAAY,IACZC,WAAY,EACZC,gBAAiB,IACjBC,aAAc,EACdC,iBAAkB,EAClBC,eAAgB,EAChBC,eAAgB,KAEpBnwB,EAAI,GAAGpb,EAAI5lB,eAAiB,IAAImY,MAAM6oB,EAAI4vB,SAAShrC,EAAI5lB,IAAI6wD,YACtDhhB,KAAK,GACLpqC,IAAI,CAACrO,EAAG6jB,IAAQ,SAAS2K,EAAIwrC,UAAUC,EAAQp2C,MACpD+lB,EAAI,GAAGpb,EAAI5lB,MAAQ,CAAEhG,MAAO,IAC5BgnC,EAAI,GAAGpb,EAAI5lB,YAAc,CACrBhG,MAAO,CACH,CACIs3D,QAAS,YACTr+C,OAAO,eAAU,KACjB/S,KAAM,cAEV,CACIoxD,QAAS,YACTr+C,OAAO,eAAU,KACjB/S,KAAM,cAEV,CACIoxD,QAAS,YACTr+C,OAAO,eAAU,IACjB/S,KAAM,cAEV,CACIoxD,QAAS,YACTr+C,OAAO,eAAU,KACjB/S,KAAM,cAEV,CACIoxD,QAAS,YACTr+C,OAAO,eAAU,KACjB/S,KAAM,kBAEV,CACIoxD,QAAS,YACTr+C,OAAO,eAAU,KACjB/S,KAAM,kBAEV,CACIoxD,QAAS,YACTr+C,OAAO,eAAU,IACjB/S,KAAM,iBAKtB,OAAO8gC,CACV,EAEDnrC,oBAiBAA,oHC1JA,iBAEA,MAAM07D,EAYFn7D,YAAYgB,GACRV,KAAK82D,QAAS,eAAU,IAC3B,CAVDC,MAAMn6C,GAAiB,GACnB5c,KAAKg3D,KAAOp6C,CACf,CAEDi6C,QAAQvzD,GACJtD,KAAK82D,OAASxzD,CACjB,EAOQnE,sBAAsB,CAACqP,EAAgB48B,EAAqB,KACrE,IAAIyvB,EAAc,IAAKrsD,KAAU48B,GADL0vB,qHCnBhC,iBAEAx9D,WACAC,WAEA,MAAaw9D,EAwBTr7D,YAAY8O,EAAOsP,GAtBnB9d,eAAY,mBAEZA,uBAAmB,EAEnBA,0BAAsB,EAEtBA,cAAsB,GACtBA,oBAAiB,EACjBA,oBAAiB,EAEjBA,gBAAa,GAEbA,iBAAc,GAEdA,0BAAuB,EACvBA,qBAAkB,KAClBA,kBAAe,KAEfA,gBAAa,uBACbA,YAAS,OACTA,YAAS,KAE+CA,KAAKiY,OAASzJ,CAAO,CAG7EwsD,eAAev9D,GACXuC,KAAKi7D,qBAAuBx9D,CAC/B,CAEDy9D,aAAaz9D,GAAa,CAE1B09D,UAAUjC,EAAaz7D,EAAYE,GAAc,CAEjDyzD,kBAUJ,WAAwB5iD,EAAgB87B,GACpC,MAAM/vB,EACFi2C,cAAYxiD,OAAQgK,GAChBA,EAAMzM,WAAW4M,KACZra,GACGA,EAAEgF,QAAU0L,EAAM1L,OAClBhF,EAAEwL,KAAOkF,EAAMlF,IACf0O,EAAMlC,QAAQxM,KAAOkF,EAAMlF,MAElC,GACTiR,EAAS1L,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAEwiD,YAAcx5C,EAAEw5C,aAC1CzV,EAAI/vB,SAAWA,EACf+vB,EAAI8wB,gBAAkB7gD,EAASpC,KAAMzX,IACjC,0BACI+L,KAAKiM,MACLjM,KAAKiM,MACW,IAAhBhY,EAAEq/C,YACY,IAAdr/C,EAAEs/C,YAGV1V,EAAI+wB,aAAe9gD,EAASpC,KAAMzX,GAAsB,IAAhBA,EAAEq/C,YAAqBtzC,KAAKiM,OACpE,MAAMjN,EAAO,IAAIgB,MACT2uD,kBAAiBC,gBAAiB/wB,EACpCnqB,EAAQ,IAAI1T,MAAM2uD,GAAmBC,IAAetb,aACpDub,GAAU,0BACZ7vD,EACAA,GACA,gBAAW0U,EAAOmqB,EAAIixB,iBACtB,gBAAWp7C,EAAOmqB,EAAIkxB,iBAE1BlxB,EAAIroB,OAASzT,GAAOsT,SACds5C,EACI,OACAE,EACA,UACA,OACJ,cACT,CA9COG,CAAez7D,KAAKiY,OAAQjY,KAC/B,EArCLb,sBAwCaA,uBAAuB,CAChCqP,EACA48B,EAAwC,KACvC,IAAI2vB,EAAkBvsD,EAAO48B,EAuCjC,iGCrFD,MAAMswB,EAGFh8D,YAAYa,GAFLP,2BAAwB,eAEN,CAEzB27D,aAAar6B,GAAe,EAGnBniC,0BAA0B,CACnCgkB,EACAioB,EAAqB,KAErB,IAAIswB,EAAkB,IACfv4C,KACAioB,GANyBwwB,mGCVpC,iBAEA,MAAMC,EAYFn8D,YAAYgB,GACRV,KAAK82D,QAAS,eAAU,IAC3B,CAVDC,MAAMn6C,GAAiB,GACnB5c,KAAKg3D,KAAOp6C,CACf,CAEDi6C,QAAQvzD,GACJtD,KAAK82D,OAASxzD,CACjB,EAOQnE,yBAAyB,CAClCqP,EACA48B,EAAqB,KACpB,IAAIywB,EAAiB,IAAKrtD,KAAU48B,GAHN0wB,iGCnBnC,iBAEA,MAAMC,EAEFC,sBAAsBpzD,GAErB,CAEDqzD,oBAAoBrzD,EAAcua,GAEjC,CAED+4C,oBAAoB5yD,EAAY4W,GAC5B,MAAO,CAAC,KAAO,GAClB,CAEDi8C,uBAAuB1/C,EAAgBs5C,GACnC,OAAO,kBAAa,GACvB,CAEDqG,wBAAwB9yD,GAEvB,CAED+yD,uBAAuB/yD,GACtB,CAEDgzD,oBAAoBh7B,GAChB,MAAO,WAAU,eAAU,QAAW,MACzC,CAED5hC,YAAYgB,GAAK,EAGRvB,uBAAuB,CAACqP,EAAgB48B,EAAqB,KACtE,IAAI2wB,EAAe,IAAKvtD,KAAU48B,GADLmxB,sGCCjC,MAAMC,EAiDF98D,YAAYgB,GAhDZV,eAAoB,EACpBA,eAAoB,EACpBA,kBAA4B,OAC5BA,uBAAiD,OAEjDA,WAA0C,CACtCqsD,KAAM,CACFoQ,OAAQ,aAyCC,CArCjBC,iBAAiBC,GACb38D,KAAK48D,SAAWD,CACnB,CAEDE,UAAUF,GACN38D,KAAK88D,SAAWH,CACnB,CACDI,mBAAmBngD,GACf5c,KAAKg9D,kBAAoBpgD,CAC5B,CACDqgD,UAAY,CACZC,sBACI,UAAWv4C,KAAO3kB,KAAKm9D,MACnB,GAAIn9D,KAAKm9D,MAAMx4C,GAAK83C,OAGhB,OAFAz8D,KAAKm9D,MAAMx4C,GAAK83C,OAAS,cACzBz8D,KAAKm9D,MAAQ,IAAKn9D,KAAKm9D,OAIlC,CACDC,eACI,UAAWz4C,KAAO3kB,KAAKm9D,MACnB,GAAIn9D,KAAKm9D,MAAMx4C,GAAK83C,OAGhB,OAFAz8D,KAAKm9D,MAAMx4C,GAAK83C,OAAS,YACzBz8D,KAAKm9D,MAAQ,IAAKn9D,KAAKm9D,OAIlC,CACDE,cAAcC,GACVt9D,KAAKu9D,aAAeD,CACvB,CACDE,WAAWC,GAAiB,CAC5BC,MAAMC,GACF,OAAO,IAAIp8D,QAAe8C,GAAM+6B,WAAW,IAAM/6B,IAAK,KACzD,EAKQlF,8BAA8B,CACvCqP,EAAiB,GACjB48B,EAAqB,KACpB,IAAIoxB,EAAsB,IAAKhuD,KAAU48B,GAHNwyB,yFCvFxC,iBAGAtgE,WACAC,WACAC,WACAC,WACAC,WACAC,WACAC,WACAC,UACAC,WACAC,WACAoG,WAEAhF,0BAA6BqP,IACzB,oBAAeA,EAAMlF,GAAI,CACrBu0D,OAAQ,EAAC,wBAAmBrvD,IAC5B2iD,SAAU,EAAC,0BAAqB3iD,IAChCsvD,eAAgB,EAAC,gCAA2BtvD,IAC5CuvD,eAAgB,EAAC,gCAA2BvvD,IAC5CwvD,iBAAkB,CAAC,IAAIC,8BACvBC,OAAQ,IAAIz8C,MAAM,IAAI03B,KAAK,GAAGpqC,IAAKrO,IAAM,wBAAmB8N,IAC5D2vD,QAAS,IAAI18C,MAAM,IAAI03B,KAAK,GAAGpqC,IAAKrO,IAAM,yBAAoB8N,IAC9D4vD,WAAY,IAAI38C,MAAM,IACjB03B,KAAK,GACLpqC,IAAKrO,IAAM,4BAAuB8N,IACvC6vD,QAAS,EAAC,yBAAoB7vD,IAC9B8vD,YAAa,EAAC,gCACdC,QAAS,EAAC,oCACVC,QAAS,EAAC,0BAAqBhwD,MAGnC,MAAMsH,GAAS,gBAAWtH,EAAMlF,IAEhCwM,EAAOq7C,SAAS,GAAGC,iBACnB3yB,YAAY,IAAM3oB,EAAOq7C,SAAS,GAAGC,iBAAkB,KAEvDt7C,EAAOioD,eAAe,GAAGjF,UACzBr6B,YAAY,IAAM3oB,EAAOioD,eAAe,GAAGjF,UAAW,IACzD,CAzBD35D,mECdA,iBAEA7B,WACAC,WACAC,WACAC,WACAC,WACAC,WACAC,WAEAuB,UAAe,CACXs/D,wBACAC,wBACAC,4BACAC,0BACAC,gCACAC,8BACAC,4BAGJ,SAAI,QAAS,mCAAb,mFCrBA1jD,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,+GCJA,iBA0DAlc,iBAAa6/D,EA6DTt/D,YAAYu/D,EAAsC,IAC9Cj/D,KAAKsJ,GAAK21D,EAAS31D,IAAM,GACzBtJ,KAAK8J,UAAYm1D,EAASn1D,WAAa,GACvC9J,KAAKwJ,KAAOy1D,EAASz1D,MAAQ,GAC7B,MAAMpH,EAAW68D,EAAS78D,UAAY,GACtCpC,KAAKqY,aAAe4mD,EAAS5mD,aAC7BrY,KAAKub,OAASvb,KAAKub,QAAU,GAC7B,MAAM2jD,EAAY98D,EAAS+8D,gBAAkB/8D,EAC7CpC,KAAK6hB,QAAUo9C,EAASp9C,SAAWo9C,EAASp1D,KAC5C7J,KAAKo/D,QAAUH,EAASG,QAAUF,EAAUE,QAAU,IAAIrwD,IAAKrR,IAAO,CAClE4L,GAAI5L,EAAE2hE,UAAY3hE,EAAE4L,GACpBE,KAAM9L,EAAE4hE,YAAc5hE,EAAE8L,QAE5BxJ,KAAKu/D,YACDN,EAASM,YACTL,EAAUK,YACV,IACFxwD,IAAKrR,IAAO,CACV4L,GAAI5L,EAAE2hE,UAAY3hE,EAAE4L,GACpBE,KAAM9L,EAAE4hE,YAAc5hE,EAAE8L,QAE5BxJ,KAAKysB,QAAUwyC,EAASxyC,QAAUyyC,EAAUzyC,QAAU,IAAI1d,IACrDrR,GAAM,IAAI+/C,gBAAc,IAAK//C,EAAG8hE,YAAax/D,KAAKsJ,MAEvDtJ,KAAKy/D,OAASR,EAASS,OAASR,EAAUQ,OAAS,GACnD1/D,KAAK2/D,SACDV,EAASW,SACTX,EAASY,kBACTX,EAAUW,kBACV,GACJ7/D,KAAK8/D,SAAWb,EAAS1O,SAAW2O,EAAU3O,SAAW,GACzDvwD,KAAK+/D,eACDd,EAASe,eAAiBd,EAAUc,eAAiB,GACzDhgE,KAAKwC,SAAWy8D,EAASz8D,UAAY08D,EAAU18D,UAAY,MAC3DxC,KAAKigE,oBACDhB,EAASgB,qBAAuBf,EAAUe,qBAAuB,GACrEjgE,KAAKkgE,WAAajB,EAASiB,YAAchB,EAAUgB,YAAc,GACjE,MAAMC,EAAc,GACpB,GAAIlB,EAASmB,eACT,UAAWlxC,KAAO+vC,EAASmB,eACvB,GAAIlxC,KAAO+vC,EAASmB,eAAgB,CAChC,MAAMC,EAAepB,EAASmB,eAAelxC,IAAQ,GACrD,UAAWvhB,KAAW0yD,EACd1yD,KAAW0yD,GACXF,EAAYtjD,KAAK,CACbvT,GAAI+2D,EAAa1yD,GACjBnE,KAAMmE,EACN2yD,SAAUpxC,GAIzB,CAGTlvB,KAAK0yD,SAAWuM,EAASvM,UAAY,GACrC1yD,KAAKmgE,YAAcA,EACnBngE,KAAK0lB,SACDu5C,EAASv5C,UAAYw5C,EAAUx5C,UAAYtjB,EAASsjB,UAAY,GACpE1lB,KAAKugE,eAAiBtB,EAASsB,gBAC3BrB,EAAUqB,gBACVn+D,EAASm+D,gBAAkB,CAAEpgD,MAAO,EAAGC,IAAK,IAChDpgB,KAAKwgE,cACDvB,EAASuB,eACTtB,EAAUsB,eACVp+D,EAASo+D,eACT,GACJxgE,KAAKygE,YACDxB,EAASwB,aACTvB,EAAUuB,aACVr+D,EAASq+D,aACT,GACJzgE,KAAK22B,KAAOsoC,EAAStoC,MAAQuoC,EAAUvoC,MAAQv0B,EAASu0B,MAAQ,GAChE32B,KAAKoY,QACD6mD,EAAS7mD,SAAW8mD,EAAU9mD,SAAWhW,EAASgW,SAAW,GACjEpY,KAAK0gE,aACDzB,EAASyB,cACTxB,EAAUwB,cACVt+D,EAASs+D,cACT,GACJ1gE,KAAK2gE,gBACD1B,EAAS0B,iBACTzB,EAAUyB,iBACVv+D,EAASu+D,iBACT,KACJ3gE,KAAK4gE,cACD3B,EAAS2B,eACT1B,EAAU0B,eACVx+D,EAASw+D,eACT,GACJ5gE,KAAK6gE,yBACD5B,EAAS4B,0BACT3B,EAAU2B,0BACVz+D,EAASy+D,2BACT,KACJ7gE,KAAK21B,SACDspC,EAAStpC,UACTupC,EAAUvpC,UACVvzB,EAASuzB,UACT,KACP,CAMMmrC,KAAKt3D,GACR,MAAO,IAAKxJ,KAAKy/D,OAAOj2D,IAAS,GACpC,CAIUu3D,iBACP,OAAOtrD,OAAOC,KAAK1V,KAAKy/D,QAAQzxD,OAAQtQ,GAAMA,KAAKsC,KAAKy/D,OAC3D,CAEUG,cACP,MAAO,IAAM5/D,KAAK2/D,UAAY,GACjC,CAEUpP,cACP,MAAO,IAAMvwD,KAAK8/D,UAAY,GACjC,CAEUE,oBACP,MAAO,IAAMhgE,KAAK+/D,gBAAkB,GACvC,CAMMiB,iBAAiBV,GACpB,OAAQtgE,KAAKmgE,aAAe,IAAInyD,OAAQtQ,GAAMA,EAAE4iE,WAAaA,EAChE,EAlMLnhE,mHC3DA,IAAI8hE,EAAY,EACZC,EAAY,EA+EhB,WAAkC53D,EAAa0b,GAC3C,OAAK1b,IACDA,EAAK,YAAY43D,KAEd,CACHZ,SAAUh3D,EACV63D,WAAY,SAASD,IACrBl8C,UAEP,CAjFD7lB,kCAAqCmK,GAC5BA,IACDA,EAAK,YAAY23D,KAErB,MAAMx0C,EAAShL,MAAM,IAChB03B,KAAK,GACLpqC,IAAKrR,GAAM0jE,KACV1zD,EAAgB,GACtB,UAAWwhB,KAAOzC,EAAQ,CACtB,MAAMlQ,EAAQgE,KAAKC,MAAsB,EAAhBD,KAAKmR,SAAe,GAC7ChkB,EAASwhB,EAAIoxC,UAAY,GACzB,QAAS5iE,EAAI,EAAGA,EAAI6e,EAAO7e,IACvBgQ,EAASwhB,EAAIoxC,UAAU,aAAa5iE,EAAI,KAAO,WAAWA,EAAI,GAErE,CACD,MAAO,CACH4L,KACAuY,QAASvY,EACT81D,OAAQ39C,MAAM,IACT03B,KAAK,GACLpqC,IAAI,CAACrO,EAAG6jB,KACL,MAAM/a,EAAO,YAAY+a,EAAM,IAC/B,MAAO,CACH86C,SAAU71D,EAAKzG,MAAM,KAAKuH,KAAK,KAAKqP,cACpC2lD,WAAY91D,EAFT,GAKf+1D,WAAY99C,MAAM,IACb03B,KAAK,GACLpqC,IAAI,CAACrO,EAAG6jB,KACL,MAAM/a,EAAO,YAAY+a,EAAM,IAC/B,MAAO,CACH86C,SAAU71D,EAAKzG,MAAM,KAAKuH,KAAK,KAAKqP,cACpC2lD,WAAY91D,EAFT,GAKfijB,SACAizC,MAAO,CACH,eAAgBj+C,MAAM,IACjB03B,KAAK,GACLpqC,IAAKrR,IAAO,CAAE8L,KAAM,WAE7B42D,eAAgB1yD,EAChBtL,SAAU,CACNiqD,KAAM,CACFgV,OAAQ,CACJC,QAAQ,EACRzwC,KAAK,KAIjBovC,oBAAqB,CACjB,CACI32D,GAAI,YACJE,KAAM,YACNE,YAAa,uBAEjB,CACIJ,GAAI,WACJE,KAAM,WACNE,YAAa,uBAI5B,EAQDvK,sGCjFA,iBAEAA,aAAaoiE,EAoBT7hE,YAAYa,EAAsB,IAuBlBP,YAAS,IAAMA,KAAKwlD,SAtBhCxlD,KAAKsJ,GAAK/I,EAAK+I,IAAM,GACrBtJ,KAAKyJ,OAASlJ,EAAKkJ,QAAUlJ,EAAK+I,IAAM,GACxCtJ,KAAKwJ,KAAOjJ,EAAKiJ,MAAQ,GACzBxJ,KAAK8hB,SAAWvhB,EAAKuhB,WAAY,EACjC9hB,KAAK6J,KAAOtJ,EAAKsJ,MAAQ,IAAI2e,YAC7BxoB,KAAKkiB,OAAS3hB,EAAK2hB,QAAU,GAC7BliB,KAAKwhE,QAAUjhE,EAAKihE,SAAW,GAC/BxhE,KAAK0N,SAAWnN,EAAKmN,UAAY,GACjC1N,KAAKub,OAAShb,EAAKgb,QAAU,EAChC,CAEMiqC,SACH,MAAQl8C,KAAIE,OAAMsY,WAAUI,SAAQxU,YAAa1N,KACjD,MAAO,CACHsJ,KACAE,OACAsY,WACAI,SACAxU,WAEP,EAzCLvO,wFCAAA,sBAAasiE,EAwBT/hE,YAAYoe,EAAgC,IAN5B9d,cAAgC,GAO5CA,KAAKsJ,GAAKwU,EAAMxU,IAAM,GACtBtJ,KAAK8J,UAAYgU,EAAMhU,WAAa,GACpC9J,KAAKwJ,KAAOsU,EAAMtU,MAAQ,GAC1BxJ,KAAKqY,aAAeyF,EAAMzF,cAAgB,GAC1CrY,KAAKyJ,OAASqU,EAAMrU,QAAU,GAC9BzJ,KAAKoqB,SAAWtM,EAAMsM,UAAY,EAClCpqB,KAAKye,UAAYX,EAAMW,WAAa,GACpCze,KAAKuyB,KAAOzU,EAAMyU,MAAQ,GAC1BvyB,KAAKub,OAASuC,EAAMvC,QAAU,GAC9B,MAAM2gC,EAAQl8C,KAAKqY,aAAatV,MAAM,KACtC/C,KAAK06D,QACAxe,EAAMjzC,QAAU,EACXizC,EAAMA,EAAMjzC,OAAS,GACrBjJ,KAAKqY,aAAa,KACrB2oB,eAAiB,EAC3B,EAxCL7hC,yFCFA,iBAMAA,qBAAauiE,EAkBThiE,YAAYu/D,EAA0C,IAClDj/D,KAAKsJ,GAAK21D,EAAS31D,IAAM,GACzBtJ,KAAKwJ,KAAOy1D,EAASz1D,MAAQ,GAC7BxJ,KAAK0J,YAAcu1D,EAASv1D,aAAe,GAC3C1J,KAAKuyB,KAAO0sC,EAAS1sC,MAAQ,GAC7BvyB,KAAKuc,MAAQ0iD,EAAS1iD,OAAS,EAC/Bvc,KAAKoqB,SAAW60C,EAAS70C,UAAY,EACrCpqB,KAAK0yD,SAAWuM,EAASvM,UAAY,GACrC1yD,KAAKL,UAAYs/D,EAAS78D,UAAY,EACzC,CAMMu/D,QAAQh9C,GACX,MAAMjP,EAAOiP,EAAI5hB,MAAM,KAEvB,OADc,qBAAgB2S,EAAM1V,KAAKL,UAE5C,EArCLR,uHCLAI,eACAhC,WAOAC,WACAC,WAEAC,WAIAE,GAHA2B,SAGAA,UACA1B,WACAC,WAEAC,4CAEA,MAGa6jE,EAmJTliE,YAAoBuI,EAAmCC,GAAnClI,gBAAmCA,eAjJpCA,kBAAe,IAAIkN,mBAAyB,GAE/ClN,iBAAcA,KAAK2+B,aAAavxB,eAC/BpN,cAAW,IAAIkN,kBAA0B,IACzClN,oBAAiB,IAAIkN,kBAAwB,MAC7ClN,gBAAa,IAAIkN,kBAA4B,IAC7ClN,sBAAmB,IAAIkN,kBAA0B,MACjDlN,aAAU,IAAIkN,kBAAiC,IAGhDlN,iBAAcA,KAAK6hE,SAASz0D,eAE5BpN,mBAAgBA,KAAK8hE,WAAW10D,eAEhCpN,gBAAaA,KAAK+hE,QAAQ30D,eAE1BpN,mBAAgBA,KAAKgiE,eAAe50D,eAEpCpN,qBAAkBA,KAAKiiE,iBAAiB70D,eAExCpN,uBAAmB,mBAAc,CAC7CA,KAAK8hE,WACL9hE,KAAKgiE,iBACNphE,MACC,SAAI,EAAEF,EAAGwhE,KACLA,EAASliE,KAAKmiE,mBAAmBD,GAAUliE,KAAKkS,YAIxClS,oBAAgB,mBAAc,CAC1CA,KAAK+hE,QACL/hE,KAAKiiE,mBACNrhE,MAAK,SAAI,EAAEF,EAAG8P,KAAUA,EAAMxQ,KAAKyQ,kBAAkBD,GAAO,KAIvDxQ,eAAmC,GAEnCA,sBAAwD,GAExDA,wBAA0D,IA0G9D,mBACKY,MAAK,WAAOF,GAAMA,IAClBqI,UAAU,IAAMq2B,WAAW,IAAMp/B,KAAKmrC,OAAQ,MACnDnrC,KAAKyP,gBAAgB1G,UAAWyH,IACxBA,IACAxQ,KAAKiI,SAASmjC,UAAY,IACnBprC,KAAKL,UACRK,KAAKoiE,iBAAiB5xD,EAAIlH,KAFJ,EAMrC,CAlHUlH,eACP,OAAOpC,KAAKL,SACf,CAGU0iE,sBACP,OAAOriE,KAAKsiE,gBACf,CAGUC,wBACP,OAAOviE,KAAKwiE,kBACf,CAGMC,eAAen5D,EAAa,IAC/B,MAAM44D,EAASliE,KAAKgiE,eAAev0D,WACnC,OAAKnE,GAAM44D,IAAQ54D,EAAK44D,GAAQ54D,IACzBtJ,KAAKsiE,kBAAmBtiE,KAAKsiE,iBAAiBh5D,IAAY,EACpE,CAGM84D,iBAAiBM,EAAiB,IACrC,OAAKA,GAAU1iE,KAAK0P,WAChBgzD,EAAS1iE,KAAK0P,UAAUpG,IAErBtJ,KAAKwiE,oBACNxiE,KAAKwiE,mBAAmBE,IACxB,EACT,CAGUn0C,mBACP,OAAOvuB,KAAK2iE,aACf,CAGUC,cACP,OAAO5iE,KAAK6hE,SAASp0D,UACxB,CAGUy0D,aACP,OAAOliE,KAAKgiE,eAAev0D,UAC9B,CACUy0D,WAAOj0D,IACTA,IACLjO,KAAKgiE,eAAe10D,KAAKW,GACzBjO,KACS0P,UAAU5F,YAAcmE,EAAK3E,IAClCtJ,KAAKmiE,mBAAmBl0D,GAAMhF,OAE9BjJ,KAAK0P,SAAW1P,KAAKmiE,mBAAmBl0D,GAAM,GAC3CjO,KAAK6iE,0BACf,CAGU3wD,gBACP,OAAOlS,KAAK8hE,WAAWr0D,UAC1B,CAGUiC,eACP,OAAO1P,KAAKiiE,iBAAiBx0D,UAChC,CACUiC,aAASc,GAChBxQ,KAAKiiE,iBAAiB30D,KAAKkD,GAC3BxQ,KAAK6iE,0BACD7iE,KAAK4iE,QAAQ35D,QAAUjJ,KAAKkiE,QAAQ54D,KAAOkH,EAAI1G,YAC/C9J,KAAKkiE,OAASliE,KAAK4iE,QAAQzqD,KACtBzX,GAAMA,EAAE4I,KAAOtJ,KAAK0P,SAAS5F,WAGzC,CAEU4b,eACP,OAAOC,KAAKC,iBAAiBC,kBAAkBC,QAClD,CAEU8Q,oBACP,OACI52B,KAAKiI,SAAS9F,IAAI,iBAAmBnC,KAAK0P,SAASimB,UAAY,KAEtE,CAGM1c,QAAQzP,GACX,OACIxJ,KAAK0P,UAAUgjD,SAASlpD,IAASxJ,KAAK2iE,eAAejQ,SAASlpD,EAErE,CAGM2O,KAAK7O,GACR,OAAOtJ,KAAKkS,UAAUiG,KAAMza,GAAMA,EAAE4L,KAAOA,EAC9C,CAGUmjB,aACP,OAAOzsB,KAAK+hE,QAAQt0D,UACvB,CAoBMyK,YAAY1C,GACf,OAAOxV,KAAKysB,OAAOtU,KAAM+W,GAAQ1Z,GAAS9S,SAASwsB,EAAI5lB,IAC1D,CAMMmH,kBAAkBD,EAAgBxQ,KAAK0P,UAC1C,OAAO1P,KAAKysB,OAAOze,OAAQkhB,GAAQA,EAAIplB,YAAc0G,GAAKlH,GAC7D,CAMM64D,mBAAmBD,EAAiBliE,KAAKkiE,QAC5C,OAAOliE,KAAKkS,UAAUlE,OAAQwC,GAAQA,EAAI1G,YAAco4D,GAAQ54D,GACnE,CAEa6hC,KAAK23B,EAAgB,GAAC,gCAChC58D,EAAKy4B,aAAarxB,MAAK,SACjBpH,EAAK2/B,OAAOljC,MAAOqT,IACrB,uBAAY,gDACZopB,WAAW,IAAMl5B,EAAKilC,KAAK23B,GAAQviD,KAAKsM,IAAI,IAAQ,MAAQi2C,IACtD9sD,IAEV9P,EAAKy4B,aAAarxB,MAAK,GACnBlN,OAAOshC,QACFthC,OAAOwrC,cAAaxrC,OAAOwrC,YAAc,IAC9CxrC,OAAOwrC,YAAYm3B,KAAO78D,EAVE,IAYnC,CAKa2/B,OAAI,sCACRrhC,EAAKw+D,yBACLx+D,EAAKy+D,cACXz+D,EAASq9D,SAASp0D,WAAWxE,OACzBzE,EAAKs9D,WAAWx0D,MACZ,mBACU/L,QAAQoU,IACVnR,EAAKq9D,SACAp0D,WACAsB,IAAKrO,GAAM8D,EAAK0+D,cAAcxiE,EAAE4I,QAKjD9E,EAAKs9D,WAAWx0D,WAAW9I,EAAK0+D,iBAE/B1+D,EAAKs9D,WAAWr0D,YAAYxE,YAC7BlL,OAAI,MAAO,qCACXyG,EAAK0D,QAAQK,SAAS,CAAC,0BAErB/D,EAAK2+D,mBACL3+D,EAAK4+D,cArBG,IAsBjB,CAKYJ,mBAAgB,gCACzB,MAAMK,QAAiB,gBAAW,CAAE9wC,KAAM,QACrC3xB,MAAK,SAAKlD,GAAMA,EAAE6C,OAClBM,YACL,GAAIwiE,EAASp6D,OAAQ,CACjB,MAAM5H,GAAO,iBACPwvB,EACFwyC,EAASlrD,KACJnP,IAAS,eAAYA,EAAKM,KAAOjI,GAAMiwB,QAAQgyC,WAC/CD,EAAS,GACZ3Q,SACI,kBAAa7hC,EAAIvnB,GAAI,YAAYzI,cACxCsiB,QACH3e,EAAKm+D,cAAgB,IAAIY,eAAa,IAAK1yC,EAAK6hC,YACnD,MACG,SAAI,MAAO,+BACXluD,EAAK0D,QAAQK,SAAS,CAAC,kBAhBF,IAkB5B,CAKY06D,cAAW,gCACpB,MAAMj6D,QAAa,gBAAW,CAC1BupB,KAAM,SACNzoB,UAAWtF,EAAKm+D,eAAer5D,IAAM,GACrCk6D,MAAO,MAEN5iE,MACG,SAAKlD,GAAMA,EAAE6C,OACb,gBAAW,KAAM,QAAG,MAEvBM,YACC+hE,EAAU,GAChB,UAAW30D,KAAQjF,EAAM,CACrB,MAAM0pD,SACI,kBAAazkD,EAAK3E,GAAI,YAAYzI,cACzCsiB,QACHy/C,EAAQ/lD,KAAK,IAAI6gC,WAAS,IAAKzvC,EAAMykD,aACxC,CACDluD,EAAKq9D,SAASv0D,KAAKs1D,EAlBC,IAmBvB,CAKYM,cACTp5D,EAAoB9J,KAAK2iE,eAAer5D,IAAE,qBAE1C,MAAMkG,QAAsB,gBAAW,CACnC+iB,KAAM,WACNzoB,YACA05D,MAAO,MAEN5iE,MAAK,SAAKlD,GAAMA,EAAE6C,OAClBM,YACCqR,EAAY,GAClB,UAAW1B,KAAOhB,EAAe,CAC7B,MAAMkjD,SACI,kBAAaliD,EAAIlH,GAAI,YAAYzI,cACxCsiB,QACHjR,EAAU2K,KAAK,IAAI6gC,WAAS,IAAKltC,EAAKkiD,aACzC,CACD,OAAOxgD,CAhBmC,IAiB7C,CAKYixD,aAAU,gCACnB,MAAMl0C,QAAmB,gBAAW,CAChCsD,KAAM,QACNixC,MAAO,OAEN5iE,MAAK,SAAKlD,GAAMA,EAAE6C,OAClBM,YAEAouB,GAAYhmB,QACbzE,EAAK0D,QAAQK,SAAS,CAAC,mBAE3B,MAAMkkB,EAASwC,EACVjhB,OACIkhB,KACK1qB,EAAK0N,UAAUiG,KAAM3H,GAAQA,EAAIlH,KAAO4lB,EAAIplB,YAErDiF,IAAKmgB,GAAQ,IAAIuuB,gBAAcvuB,IACpCzC,EAAO5d,KAAK,CAACtR,EAAGgJ,KAAOhJ,EAAEiM,MAAQ,IAAIgU,cAAcjX,EAAEiD,MAAQ,KAC7DhF,EAAKu9D,QAAQz0D,KAAKmf,EAlBC,IAmBtB,CAEUg3C,6BACP,OAAOzjE,KAAKkS,UACPnD,IAAKoqB,GAAM,IAAIA,EAAE8mC,sBACjBzjD,OAAO,CAACknD,EAAMC,IAASD,EAAKvtC,OAAOwtC,GAAO,IAC1C90D,KAAK,CAACtR,EAAGgJ,IAAMhJ,EAAEiM,KAAKgU,cAAcjX,EAAEiD,MAC9C,CAEY45D,eAAY,gCACrB,IAAK5+D,EAAKm+D,cAAe,OACzB,MAAMnhC,EAAW,IACbh9B,EAAKyD,SAASu5B,UAAY,aAC5B7nB,oBACIiqD,SACI,kBAAap/D,EAAKm+D,eAAer5D,GAAIk4B,GAAU3gC,cACtDsiB,QACG0gD,SACI,kBAAar/D,EAAKm+D,eAAer5D,GAAI,YAAYzI,cACxDsiB,QACH3e,EAAK7E,UAAY,CAACkkE,EAAiBD,GACnC,MAAMhB,EAAUp+D,EAAKo+D,QACrB,UAAW30D,KAAQ20D,EACfp+D,EAAK89D,iBAAiBr0D,EAAK3E,WACjB,kBAAa2E,EAAK3E,GAAIk4B,GAAU3gC,cACvCsiB,QAEP,MAAMjR,EAAY1N,EAAK0N,UACvB,UAAW1B,KAAO0B,EACd1N,EAAKg+D,mBAAmBhyD,EAAIlH,WAClB,kBAAakH,EAAIlH,GAAIk4B,GAAU3gC,cACtCsiB,QAEP3e,EAAKyD,SAASmjC,UAAY,IAAI5mC,EAAK7E,iBAC7B6E,EAAKs/D,4BACXt/D,EAAKq+D,yBA1BgB,IA2BxB,CAGMkB,aAAaz6D,GAChBm/B,aAAa9mC,QAAQ,mBAAoB2H,EAC5C,CAEOw6D,4BACJ,OAAO,IAAIviE,QAAeC,IACtB,MAAM8H,EAAKm/B,aAAa5kC,QAAQ,oBAChC,GAAIyF,GAAMtJ,KAAKkS,UAAUiG,KAAM3H,GAAQA,EAAIlH,KAAOA,GAC9C,YAAK24D,iBAAiB30D,KAClBtN,KAAKkS,UAAUiG,KAAM3H,GAAQA,EAAIlH,KAAOA,IAErC9H,IAEYxB,KAAKiI,SAAS9F,IAAI,wBACrB,gBAAiBuiC,UACjCA,UAAUs/B,YAAYC,mBACjB/8C,IACG,MAAQg9C,WAAUC,aAAcj9C,EAASk9C,OACzC,IAAIC,EAAc,KAClB,UAAW7zD,KAAOxQ,KAAKkS,UACnB,GAAK1B,EAAIhO,UAA6B,QAAjBgO,EAAIhO,SAEzB,GAAK6hE,EACA,CACD,MAAOC,EAAOC,IACVF,EAAY7hE,UAAY,OAC1BO,MAAM,MACDyhE,EAAOC,IACVj0D,EAAIhO,UAAY,OAClBO,MAAM,KACOwd,KAAKoH,KAChBpH,KAAKmkD,IAAIR,GAAYM,EAAO,GACxBjkD,KAAKmkD,IAAIP,GAAaM,EAAQ,IAEvBlkD,KAAKoH,KAChBpH,KAAKmkD,IAAIR,GAAYI,EAAO,GACxB/jD,KAAKmkD,IAAIP,GAAaI,EAAQ,MAEjBF,EAAc7zD,EACtC,MAjBiB6zD,EAAc7zD,EAmBhC6zD,IAAarkE,KAAK0P,SAAW20D,GAC5BrkE,KAAK0P,UAAUpG,IAAItJ,KAAK2kE,sBAC7BnjE,GAAO,EAEX,KACSxB,KAAK0P,UAAUpG,IAAItJ,KAAK2kE,sBAC7BnjE,GAAO,GAGPxB,KAAK0P,UAAUpG,KACvBtJ,KAAK2kE,sBACLnjE,IAAO,EAGlB,CAEOmjE,sBACJ,IAAK3kE,KAAKkS,UAAUjJ,OAAQ,OAC5B,MAAMy5D,EAAS1iE,KAAKiI,SAAS9F,IAAI,wBACjC,GAAIugE,EACA1iE,KAAK0P,SAAW1P,KAAKkS,UAAUiG,KAAK,EAAG7O,QAASA,IAAOo5D,OACpD,CACH,MAAMh9C,EAAW1lB,KAAK0lB,SACtB,UAAWlV,KAAOxQ,KAAKkS,UACnB,GAAI1B,EAAIkV,WAAaA,EAAU,CAC3B1lB,KAAK0P,SAAWc,EAChB,KACH,CAEL,GAAIxQ,KAAK0P,SAAU,OACnB,MAAMk1D,EAAWl/C,EAAS3iB,MAAM,KAAK,GACrC,UAAWyN,KAAOxQ,KAAKkS,UACnB,GAAI1B,EAAIkV,SAAS2kB,WAAWu6B,GAAW,CACnC5kE,KAAK0P,SAAWc,EAChB,KACH,CAER,CACIxQ,KAAK0P,WAAU1P,KAAK0P,SAAW1P,KAAKkS,UAAU,GACtD,CAEO2wD,0BACJ7iE,KAAKiI,SAASmjC,UAAY,IACnBprC,KAAKL,UACRK,KAAKyiE,eAAeziE,KAAKkiE,QAAQ54D,IACjCtJ,KAAKoiE,iBAAiBpiE,KAAK0P,UAAUpG,IAE5C,EAhcLnK,8DAGayiE,GAAmB39D,4HAAnB29D,EAAmBxyD,QAAnBwyD,EAAmB,qBAFhB,6GCtBhB,iBAEA,IAAIiD,EAAY,EAEhB1lE,wCACI,MAAO,CACHmK,GAAI,YAAYu7D,IAChBr7D,KAAM,gBAAgBq7D,IACtB3yD,UAAWuP,MAAM,GAAG03B,KAAK,GAAGpqC,IAAIrR,IAAK,6BACrC0E,SAAU,CACNiqD,KAAM,CACFgV,OAAQ,CACJxwC,KAAK,KAKxB,CAbD1xB,mFCLAkc,2BACAA,0BACAA,8HCFA,iBACA/d,WACAC,WAOAC,WACAC,0HAiCoBwG,2EAEIA,qHAyBIA,8CAIIA,sBACJA,qDAHIA,qCAEAA,2GAaJA,8CAGKA,sBAAUA,qDADXA,kCACCA,2DAtEjC,MAAM6gE,EAAa,CAAEC,YAAa,mBAAoBC,WAAY,GAAIC,IAAK,IACrEC,EAAY,IAAIzlE,WAAS,QAAS,IAExC,MAwGa0lE,UACDC,YAzGZ1lE,kCA4GWM,aAAU,IAAIoF,YAAU,CAC3B2/D,YAAa,IAAI3/D,cAAYqc,MAAM,IAAI03B,KAAK,KAAK7uC,QACjD06D,WAAY,IAAI5/D,cAAY,IAC5BigE,UAAW,IAAIjgE,cAAY,IAC3BkgE,SAAU,IAAIlgE,cAAY,IAC1B6/D,IAAK,IAAI7/D,cAAY,GAAI,CACrBA,aAAWmgE,UAAU,GACrBngE,aAAWogE,UAAU,OAGtBxlE,eAAW,EAEFA,YAASyhB,MAAM,IAC1B03B,KAAK,GACLpqC,IAAI,CAACrO,EAAG6jB,IAAQ,CACb2gD,EAAUtvD,WAAU,cAASnJ,KAAKiM,MAAO6L,GAAM,MAC/C2gD,EAAUtvD,WAAU,cAASnJ,KAAKiM,MAAO6L,GAAM,SAEvCvkB,WAAQyhB,MAAM,IACzB03B,KAAK,GACLpqC,IAAI,CAACrO,EAAG6jB,IACL2gD,EAAUtvD,WAAU,cAASnJ,KAAKiM,MAAO6L,GAAM,SAEvCvkB,YAASyhB,MAAM,IAAI03B,KAAK,GAChCn5C,YAAS,EA6GDA,sBAAoB6pB,GAC/B7pB,KAAK8pB,UAAYD,EACN7pB,uBAAqB6pB,GAChC7pB,KAAK+pB,SAAWF,EACL7pB,sBAAoBnC,GAAgBmC,KAAKgqB,SAAWnsB,CACvE,CA1Gc4nE,cAEP,OADWzlE,KAAKmjB,QAAQ7f,OAAOyhE,aAAe,IACpC16B,WAAW,IACxB,CAEUq7B,gBACP,MAAMzM,EAAKj5D,KAAKmjB,QAAQ7f,OAAOyhE,aAAe,GAC9C,OAAI9L,EAAG5uB,WAAW,KAAa,OAC3B4uB,EAAG5uB,WAAW,KAAa,OAC3B4uB,EAAG5uB,WAAW,KAAa,aACxB,EACV,CAEUs7B,mBACP,IAAI1M,EAAKj5D,KAAKmjB,QAAQ7f,OAAOyhE,aAAe,GAC5C,OAAI/kE,KAAK4lE,eACL3M,EACIA,EAAG/zB,UAAU,EAAGllC,KAAK6lE,QACrB,SACA5M,EAAG/zB,UAAUllC,KAAK6lE,OAAS,IAC5B7lE,KAAKylE,QACN,GAAGxM,EAAG/zB,UAAU,EAAG,MAAM+zB,EAAG/zB,UAAU,EAAG,OAAO+zB,EAAG/zB,UAAU,MAC7D,GAAG+zB,EAAG/zB,UAAU,EAAG,MAAM+zB,EAAG/zB,UAAU,EAAG,MAAM+zB,EAAG/zB,UAC9C,EACA,OACC+zB,EAAG/zB,UAAU,KAC3B,CAEU0gC,mBACP,OACI9qD,SAASgrD,gBAAkB9lE,KAAKuuD,UAAUtd,eAC1Cn2B,SAASgrD,gBACL9lE,KAAKuuD,UAAUtd,cAActE,aAExC,CAEM1sC,WACHD,KAAK6I,aACD,UACA7I,KAAKmjB,QAAQra,aAAaC,UAAWvE,GACjCxE,KAAKkB,QAAQ,SAAU,IAAMlB,KAAKsqB,SAAStqB,KAAKmjB,QAAQvB,iBAGnE,CAEMy6B,aACHr8C,KAAKuuD,UAAUtd,cAAcn9B,QAC7B9T,KAAK6lE,OAAS7lE,KAAKuuD,UAAUtd,cAAc2L,gBAAkB,CAChE,CAEMmpB,QAAQ/tD,GACX,IAAKA,IAAUhY,KAAK4lE,aAAc,OAClC,MAAMrhD,EAAMvkB,KAAK6lE,OACjB,GAAIthD,EAAM,GAAKA,EAAM,GAAI,OACzB,IAAIwgD,EAAc/kE,KAAKmjB,QAAQ7f,MAAMyhE,YACrC,IACK/sD,EAAM2e,KAAK0T,WAAW,UACnBryB,EAAM2e,KAAK0T,WAAW,YAC1B9lB,GAAOvkB,KAAKylE,QAAU,GAAK,IAE3BV,EACIA,EAAY7/B,UAAU,EAAG3gB,GACzBvM,EAAM2M,IACNogD,EAAY7/B,UAAU3gB,EAAM,GAChCvkB,KAAKmjB,QAAQ/Z,WAAW,CAAE27D,gBAC1B/kE,KAAKgmE,aAAazhD,EAAK,QAAvB,GACsB,cAAfvM,EAAM2e,MAAwBpS,EAAM,EAAG,CAC9C,IAAIwgD,EAAc/kE,KAAKmjB,QAAQ7f,MAAMyhE,YACrCA,EACIA,EAAY7/B,UAAU,EAAG3gB,GACzB,IACAwgD,EAAY7/B,UAAU3gB,EAAM,GAChCvkB,KAAKmjB,QAAQ/Z,WAAW,CAAE27D,gBAC1B/kE,KAAKgmE,aAAazhD,GAAK,EAC1B,KAAyB,cAAfvM,EAAM2e,KACb32B,KAAKgmE,aAAazhD,GAAK,GACD,eAAfvM,EAAM2e,MAA8C,MAArBouC,EAAYxgD,IAClDvkB,KAAKgmE,aAAazhD,EAAK,EAE9B,CAEOyhD,aAAazhD,EAAa0vC,GAC9Bj0D,KAAK6lE,OAAStlD,KAAKsM,IAAI,GAAItM,KAAKqM,IAAI,EAAGrI,EAAM0vC,GAChD,CAMM3pC,SAASE,GACRxqB,KAAK8pB,WAAW9pB,KAAK8pB,UAAUU,EACtC,CAMMC,WAAWnnB,GACdtD,KAAKmjB,QAAQ/Z,WAAW9F,GAASwhE,EACpC,EA/OL3lE,2HAwGagmE,KAAuB1nE,GAAvB0nE,EAAuB,qDAAvBA,EAAuBjhE,mOATrB,CACP,CACIwmB,QAAStlB,oBAETulB,aAAa,gBAAW,IAAMw6C,GAC9Bv6C,OAAO,KAEd3mB,qGAjGyCqU,wFAuBDA,yFAQTA,uGAKaA,yFAaTA,qGAgBAA,oGAYAA,yiCA/EhCrU,uCAA4BA,kDAAgBuE,YAAe,kCACvDvE,sCAA2B,aACvBA,wBAAyCA,2BACzCA,sCAGIA,iDAASuE,cAAY,GAErBvE,sCAAoBA,sBAAkBA,2BACtCA,0CAKIA,mDAAY,CAAK,GALrBA,2BAQAA,wCAKJA,6BAEJA,uCAAkC,eAC9BA,0BAAyCA,2BACzCA,mDACIA,qCAMAA,qEAA2CA,+BAGnDA,wCAAyC,YAAzCA,CAAyC,eAEjCA,0BAAyCA,2BACzCA,mDAAqC,oBAK7BA,iDAMJA,2BACAA,qEAAwCA,+BAGhDA,wCAAwC,eACZA,qCAAWA,2BACnCA,mDAAqC,oBAK7BA,iDAKJA,2BACAA,qEAAuCA,+BAG/CA,uCAA2B,eACNA,6BAAGA,2BACpBA,mDACIA,qCAMAA,qEAAqCA,0CA/E/CA,8CAQ0BA,uEAKhBA,mIAKCA,oEA2BwBA,qEAiBAA,wjBCxFjD,iBACA1G,cACAgC,qFAkCwB0E,qbAVZA,uCACIA,uCAEC,UACGA,wBAAqDA,2BACrDA,iCACAA,+FAIIA,kDAOJA,mDACAA,+DAA8CA,2BAC9CA,sCAA2C,aAC/BA,yDAA0CA,6BAEtDA,qDAEIA,wKACHA,6BAELA,2CAAoB,gBAIZA,mHAASA,2CAAgB,GAH7BA,0BAOAA,6BAEJA,2CAIC,WACsCA,+BAAKA,6BAEhDA,iFAlC2BA,2EAOnBA,sCAAIgiE,wBAAJhiE,CAAIA,0DAAJA,2BAGYA,kHAIRA,oGA5BhBA,sCAIIA,mDA6CJA,kGA7CmBA,mEAAgB,wCA+C/BA,uCAGIA,0CACAA,kCAAGA,oDAAqBA,uEAArBA,yHAIPA,wCAEC,UACGA,yBAAwDA,2BACxDA,sCAAqCA,sBAAyBA,2BAC9DA,4FAAwDA,2BACxDA,2DAA2CA,2BAC3CA,mCAAGA,qDAAuCA,2BAC1CA,yHAMAA,6BAEJA,mCACAA,2CAA6C,gBACzCA,0BAEAA,uEAhBqCA,qFACmBA,oIACbA,mGACxCA,kHAOHA,0GAAIA,qFAAJA,6BA5EhB,MAwFaiiE,EAYTxmE,YAA6Coe,EAA4Ble,GAA5BI,aAA4BA,YAX/CA,WAAQ,IAAIqF,eACtBrF,aAAUA,KAAK8d,MACf9d,aAAUA,KAAK8d,MAAMpN,QAE9B1Q,cAAU,EACVA,oBAAiB,UAM8E,CAJ3F22B,WACP,OAAO32B,KAAKJ,KAAKg3B,aACpB,CAIYuvC,iBAAc,iCAClB9hE,EAAK+hE,eAAiB/hE,EAAKgiE,sBAChChiE,EAAK2T,MAAMhI,KAAK3L,EAAK+hE,oBACf/hE,EAAKyZ,MAAM+F,YAAYxf,EAAK+hE,cAClC/hE,EAAK0f,SAAU,EAJQ,IAK1B,CAEOsiD,oBACJ,OACKrmE,KAAKomE,cAAcpB,WAAW/7D,QAAU,GAAK,IAC7CjJ,KAAKomE,cAAcnB,IAAIh8D,QAAU,IAAM,CAE/C,EAlHL9J,gEAwFa+mE,GAAqBjiE,8BAYV6C,mBAAe7C,uGAZ1BiiE,EAAqBhiE,sHA7EwBoU,4FAcdA,mGAevBA,2FA3BwCA,iGAChB,6CACrB,wCACA,oCACA,sEACY,0CACR,sCAIJ,iEA0C8BA,+FAE9BA,oHACAA,sHAEAA,2EACJ,sCACA,sCAQoDA,ylCA7EhErU,sEAkDAA,wFAQAA,mIAxDKA,uEAA0B,4GCvBvC,iBACA3G,WACAC,SACAC,WACAC,WACAC,WACAC,WAEAC,SACAC,WACAC,6EAOA,MAeai+D,GAfb58D,yDAea48D,EAAc,iDAAdA,uDAZLt8D,eACAsH,qBACAE,iBACAH,kBACA1B,cACAA,sBACAwB,kBACAS,kBACAH,8DAfJo/D,wBAAqB,sFACrBC,2BAAuB,4KCd3BhnE,eACAhC,WAEAE,GADA8B,QACAA,UACA7B,WACAC,WAEAC,oDAmBauB,kBAAkB,qBAC/B,MAAMqnE,EAAgB,UAEtB,MAGaC,EAoBT/mE,YACYE,EACAD,EACAoL,GAFA/K,YACAA,iBACAA,eAtBJA,cAAW,IAAIkN,kBAAgB,IAC/BlN,kBAAe,IAAIkN,kBAAgB,IAE3BlN,aAAUA,KAAK6Y,SAASzL,eAExBpN,sBAAkB,QAAG,GAAGY,MACpC,eAAU,KACN,MAAM0pC,GAAM,eAAUtqC,KAAK2jB,eAAgB6iD,GAC3C,OAAKl8B,EACEA,EAAIV,QAAQ,uBAAwB,CAAC,UAD3B,QAAG,GAAH,IAGrB,SAAKlpC,GAAOA,EAAE,GAAKV,KAAK0mE,aAAap5D,KAAK5M,EAAE,GAAG4I,IAAM,KACrD,iBAAY,GAWZ,CAROqa,qBACP,OAAO3jB,KAAKJ,KAAKqZ,QAAQ,WAC5B,CAQY4K,YACTV,GAAuB,gCAEvB,IAAK3e,EAAKmf,eAAgB,KAAM,uBAChC,MAAOgjD,EAAMzmD,SAAgB1b,EAAKoiE,kBAC9BzjD,GAASva,MACXjG,MAAOjC,GAAM,CAAC,EAAG,KAEnB,GADAR,QAAQuZ,IAAI,QAASktD,EAAMzmD,GACvBymD,GAAQ,EAAG,OACf,IAAIE,EAAcriE,EAAK7E,UAAUwC,IAAI,sBAChC0kE,IAAaA,QAAoBriE,EAAKsiE,kBAC3CtiE,EAAK7E,UAAUqd,gBAAgB,qBAAsB6pD,GACrD,MAAMpqD,EAASkqD,GAAQxjD,EAAQzX,SAAWwU,GAC1C,IAAI9c,EACJ,MAAMygB,EAAW,mBAAG,UAAOvmB,GACvB8F,QAAeoB,EAAKuiE,gBAAgBtqD,EAAQoqD,EAAavpE,GAAGqF,MACvDpD,IACG,QAAKsZ,SAASvL,KAAK,IACb/N,GAGjB,GAPgB,sDAQXgB,EAAO,IACN4iB,EACH6jD,KAAM,KAAKL,EAAO,KAAKvwB,QAAQ,cAC/B35B,SACAoH,cACAnT,QAASlM,EAAKkM,SAGlB,aAAM/E,EADWZ,QAAQP,KAAK87D,wBAAuB,CAAE/lE,SAC7CuL,cAAcjL,YACjBuC,CA9BgB,IA+B1B,CAEa6jE,kBAAkBC,GAAwB,gCACpD,MAAM58B,GAAM,eAAU9lC,EAAKmf,eAAgB6iD,GAC3C,IAAKl8B,EAAK,KAAM,wBAChB,MAAM68B,QAAuB78B,EAAIV,QAAQ,qBAAsB,CAC3D,OACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACAs9B,IAEJ,OAAOC,EAAe79D,IAAM69D,CAlBwB,IAmBvD,CAEaP,kBAAkBh+D,GAAY,gCACxC,IAAIw+D,EAA0B,CAAC,EAAG,IAClC,MAAM98B,GAAM,eAAU9lC,EAAKmf,eAAgB6iD,GAC3C,IAAKl8B,EAAK,OAAO88B,EACjB,MAAMC,QAAqB/8B,EAAIV,QAAQ,qBAAsB,CACzD,KACA,KACAhhC,IAEJ,OAAKy+D,EAAap+D,OACXo+D,EAD0BD,CATO,IAW3C,CAEaL,gBACVtqD,EACAoqD,EACAT,GAAiC,gCAEjCjgE,EAAK0S,SAASvL,KAAK,8BACnBpN,QAAQuZ,IAAI,6BACZ,MAAMs8C,EAASqQ,QACHjgE,EAAK8gE,kBAAkBb,GAC7BjgE,EAAKugE,aAAaj5D,WACxB,IAAKsoD,EAAQ,KAAM,6BACnB5vD,EAAK0S,SAASvL,KAAK,yBACnBpN,QAAQuZ,IAAI,yBACZ,MAAM6wB,GAAM,eAAUnkC,EAAKwd,eAAgB6iD,GAC3C,IAAKl8B,EAAK,KAAM,wBAChB,MAAMhhC,QAAWghC,EAAIV,QAAgB,wBAAyB,CAC1DntB,EACAtW,EAAKvG,KAAK8P,SAASimB,UAAY,MAC/B,KACA,KACAkxC,EACA,KACA,KACA,MACA,oBAAe/jE,QAEnB,IAAKwG,EAAI,KAAM,2BACfpJ,eAAQuZ,IAAI,+BACN6wB,EAAIV,QAAQ,yBAA0B,CAACtgC,EAAIysD,IACjD5vD,EAAK0S,SAASvL,KAAK,IACZ,CACHyW,SAAS,EACTnH,MAAO,WACPqH,WAAY3a,EACZmT,OAAQA,EACRwvC,WAAYx/C,KAAKiM,MACjB05C,WAAY3lD,KAAKiM,MAjCY,IAmCpC,CAEaouD,iBAAc,gCACxB,MAAMx8B,GAAM,eAAU/lC,EAAKof,eAAgB6iD,GAC3C,IAAKl8B,EAAK,KAAM,wBAChB,MAAM5wB,GAAO,mBASb,aARiB4wB,EAAIV,QAAgB,kBAAmB,CACpD,EACA,KACA,KACA,KACA,GAAGlwB,EAAKpQ,MAAMoQ,EAAKlQ,mBACnBkQ,EAAK5W,OAVe,IAa3B,EAtJL3D,0DAGasnE,GAAexiE,2KAAfwiE,EAAer3D,QAAfq3D,EAAe,qBAFZ,4FC/BhBprD,2BACAA,6HCDA,oBACA9b,6EAgBY0E,sCAA6D,cAC/CA,uCAAcA,2BACxBA,oCAAKA,sBAAoBA,wEAApBA,yIAETA,yCAGIA,mHAASA,wCAAa,GAEtBA,yCAAUA,sBAERA,0EAFQA,qHApBlBA,sCAIC,UAJDA,CAIC,WAEuCA,sBAAgBA,2BAChDA,sCACIA,sBACJA,6BAEJA,wCAIAA,2CASJA,kGAlBwCA,qEAE5BA,sKAGwBA,8EAM3BA,mEAAgB,wCASrBA,0CACIA,sBACJA,qEAFgCA,sDAC5BA,sGA9BhB,MAoCaqjE,EApCb5nE,cA4CqBM,YAAS,IAAIqF,cACjC,EA7CDlG,mEAoCamoE,EAAwB,kDAAxBA,EAAwBpjE,4mBAjC7BD,wCAyBAA,8FAtBKA,iMCTb,iBACA3G,WACAC,WACAC,WACAC,WAEAC,WAUAE,GAFA2B,QAEAA,UACA1B,+KAqCoBoG,8CACIA,sBACJA,qDAF0CA,kCACtCA,wJAXZA,kDAGC,mBAIOA,2HAAiBA,2CAAqB,GAGtCA,gDAGJA,yEAPIA,iFAI4BA,iGAc5BA,8CAIIA,sBACJA,qDAHIA,qCAEAA,wIAbZA,kDAGC,mBAGOA,+JAGAA,gDAMJA,yEATIA,kEAIqBA,yIAkBbA,uDAKIA,2JAASA,2CAAoB,GAChCA,gHAJGA,kCAAe,iDALvBA,uCAGIA,yDAOJA,6FANSA,qGAVbA,uCAMIA,gFAWJA,+EAV0BA,oIAR9BA,uCACIA,+EAkBJA,kHAjBSA,+HAGb,uCAuBYA,0GAEIA,kCAAe,iDALvBA,uCAGIA,yDAMJA,+EAL0BA,8FAT9BA,uCAKIA,iDAUJA,mGAZIA,gDAGKA,kFAA+B,8EAW5CA,uCAAyB,eACFA,kHAASA,iCAAM,GAC9BA,sBACJA,yEADIA,mIAIJA,uCAA6D,gBAC9BA,8BAAKA,2BAChCA,kCAAGA,kCAASA,oDAIhBA,uCACIA,0CACAA,kCAAGA,oDAA2BA,8BAjGlD,MAuHasjE,UAAkC9nE,YAyD3CC,YACYE,EACAD,EACyBme,GAEjC/d,QAJQC,YACAA,iBACyBA,aA1DpBA,WAAQ,IAAIqF,eAEtBrF,YAAkB,IAAKA,KAAK8d,MAAMvP,QAAU,IAE5CvO,cAAW,IAAIkN,kBAA0B,MAIzClN,iBAA0B,GAMjBA,uBAAmB,mBAAc,CAACA,KAAK0P,WAAW9O,MAC9D,eAAU,EAAE4P,MACRxQ,KAAK0Q,SAAU,GACR,4BAAuB,CAC1Bke,SAAUpe,GAAKlH,GACfwQ,cAAc,iBAAY9Z,KAAK8d,MAAMrS,MACrCsO,YAAY,kBACR,gBAAW/Z,KAAK8d,MAAMrS,KAAMzL,KAAK8d,MAAMpS,gBAInD,iBAAY,IAGA1L,qBAAkBA,KAAKiN,iBAAiBrM,MACpD,SAAKoI,IACD,2BACIA,EACA,IAAKhJ,KAAK8d,MAAO1T,MAAM,oBACvBpK,KAAKJ,KAAK8P,SAASkxD,iBAG3B,SAAI,IAAO5gE,KAAK0Q,SAAU,GAyB7B,CAtBUwB,gBACP,OAAOlS,KAAKJ,KAAKsS,SACpB,CAGUsgB,eACP,QAASxyB,KAAKL,UAAUwC,IAAI,6BAC/B,CAGUqlE,gBACP,MAAMj5D,EAAS,GACf,YAAKA,OAAOyG,QAASxG,GAAWD,EAAOC,EAAMlF,KAAM,GAC5CiF,CACV,CAUMtO,WACHD,KAAK0P,SAASpC,KAAKtN,KAAKJ,KAAK8P,UAAY1P,KAAKkS,UAAU,IACxDlS,KAAK6I,aACD,SACA7I,KAAKo+C,gBAAgBr1C,UAAWrI,GAAMA,GAE7C,CAEM+mE,cAAcj5D,GACbxO,KAAKwyB,SACAxyB,KAAKwnE,UAAUh5D,EAAMlF,KACtBtJ,KAAKuO,OAAOsO,KAAKrO,IAGrBxO,KAAKuO,OAAS,CAACC,GACfxO,KAAKsvD,OAEZ,CAEMA,OACHtvD,KAAKgY,MAAMhI,KAAK,CAAEqT,OAAQ,OAAQ0B,SAAU/kB,KAAKuO,QACpD,EA7MLpP,oEAuHaooE,GAAyBtjE,oIA4DtB6C,mBAAe,kDA5DlBygE,EAAyBrjE,klCApH9BD,uCAAQ,gBACuBA,8BAAKA,2BAChCA,sCACIA,sBACJA,2BACAA,yCAAyC,gBACVA,8BAAKA,+BAGxCA,qCACIA,mDAeAA,oDAiBAA,uCACIA,kDAoBAA,yCAgBJA,2BACAA,4CAKAA,yFAMAA,yFAMJA,qEA9FQA,+FASCA,0FAeAA,8FAgBcA,mEAAgB,cAsB1BA,mEAeAA,woBCjHrB,oBACA1E,SACAA,mHAmDoB0E,8CAKIA,uHAAaA,6CAAuB,EAApCA,CAAqC,wIAGxCA,uEANGA,uEAAwB,0BAAxBA,CAAwB,yFAuBhCA,0CAKIA,sJAAqB,KAAI,GAL7BA,yBASAA,2FA+CJA,6CAIIA,+JAEJA,uEAJIA,kDAAyB,+BAhIzC,MAyIayjE,EAaThoE,YACYutB,EACAttB,EACAiY,EAERkG,GAJQ9d,mBACAA,iBACAA,mBAdLA,cAAoB,GACpBA,UAAO,OAiBVA,KAAKiQ,SAAW,IAAK6N,EAAMvP,QAAU,IACrCvO,KAAK4X,YAAYjP,WAAWmV,EAAMvN,QACrC,CAjBU+L,mBACP,OAAOtc,KAAKiQ,SAASlB,IAAKrO,GAAMA,EAAE4I,IAAIgB,KAAK,IAC9C,CAEUyR,gBACP,OAAO/b,KAAKL,UAAUwC,IAAc,qBAAuB,EAC9D,CAaMua,WAAWpT,GACd,OAAOA,GAAMtJ,KAAKsc,aAAa5Z,SAAS4G,EAC3C,CAEMqT,YAAY1O,EAAa2O,GAC5B,MAAM5T,EAAOhJ,KAAKiQ,SAASjC,OAAQtN,GAAMA,EAAE4I,KAAO2E,EAAK3E,IACnDsT,GAAO5T,EAAK6T,KAAK5O,GACrBjO,KAAKiQ,SAAWjH,GACXhJ,KAAKL,UAAUwC,IAAI,qCAAuCya,GAC3D5c,KAAKitB,YAAYtpB,MAAM,CAACsK,GAE/B,CAEM6O,gBAAgB7O,GACnB,MAAM8O,EAAW/c,KAAK+b,UACHgB,EAASra,SAASuL,EAAK3E,IAOtCtJ,KAAKL,UAAUqd,gBACX,mBACAD,EAAS/O,OAAQtN,GAAMA,IAAMuN,EAAK3E,KAPtCtJ,KAAKL,UAAUqd,gBAAgB,mBAAoB,IAC5CD,EACH9O,EAAK3E,IAQhB,EA5LLnK,uEAyIauoE,GAA4BzjE,+KAiBzB6C,mBAAe,kDAjBlB4gE,EAA4BxjE,mGA/HhBoU,uFA6ERA,wFAcwCA,wFAGNA,4EAC/B,kDAaQA;uIAzCXA,ypEA1ETrU,sCAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,8BAAKA,6BAEnBA,2DAAmBA,2BACnBA,sCAA4D,cAMpDA,wDAAgB,KAAK,GAErBA,8BACJA,2BACAA,0CAKIA,wDAAgB,MAAM,GAEtBA,gCACJA,+BAGRA,wCAGIA,4CAGAA,uCAEC,+BAGOA,kEACHA,2BACDA,iDASJA,2BACAA,kDAMIA,yDAAgBuE,4BAA8B,EAA9CvE,CAA+C,8BAElCuE,8BAA0B,EAFvCvE,CAA+C,sCAG1B,IAAI,GAC5BA,6BAELA,2CAGIA,6CAUAA,qEASAA,6BAEJA,2CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAOqCA,oCAAUA,2BACpCA,kEAA6CA,+BAGrDA,gEAEAA,2BACAA,2CAIIA,iDAASuE,2BAAwBA,oDAA0B,GAE3DvE,wCAA+B,kBACDA,uBAExBA,2BACFA,wCACIA,qDAEJA,8DAKhBA,oIA7GgBA,2EASAA,4EAkBAA,+DAGCA,wEAAuB,cAY5BA,wEAA2B,uBAF3BA,4CAAmB,wEAAnBA,CAAmB,gFAkBlBA,oEAUDA,qEADAA,sDAaAA,+EAUJA,8FAIIA,gHADAA,gDAK8BA,gWC3HlD,iBAOA3G,cACAiC,QAEAA,2GAegB0E,uFACIA,0EA0DAA,uCAAgF,OAE5EA,yBAAqBA,8JAJ7BA,2CAAqE,WACjEA,yBAAoDA,2BACpDA,yCAIJA,sEAJiEA,uMArEzEA,uCACIA,0CASIA,mDAKAA,yCAGIA,kHAASA,uCAAY,GAGrBA,yCAAUA,mCAAUA,6BAExBA,yCAKIA,kHAASA,2CAAgB,GAGzBA,yCAAUA,sBAERA,+BAGVA,sCAAsD,eAAtDA,CAAsD,WAG1CA,uBACJA,6BAEJA,+BACAA,2CAAmC,YAC/BA,0BAA4CA,2BAC5CA,wCAAyC,eAC3BA,gCAAMA,2BAChBA,6DAAmCA,6BAEvCA,wCAAyC,eAC3BA,sCAAYA,2BACtBA,mCACIA,uBACJA,6BAEJA,wCAAyC,eAC3BA,+BAAKA,2BACfA,mCACIA,uBAKJA,+BAGRA,+BACAA,8CAOAA,4CAIIA,+CAMJA,6BAEJA,wCAA2D,gBAKnDA,qIAA2BA,sDAAyB,GAEpDA,wCAA8C,kBACfA,uBAEzBA,2BACFA,mCACIA,uBACJA,iCAIhBA,gFAnGQA,4GAAsC,uDAAtCA,CAAsC,wDAAtCA,CAAsC,sDAAtCA,CAAsC,kEAQjCA,wGAcDA,sEAAyB,uBAKfA,2FAQNA,oGAQmCA,6FAK/BA,8IAMAA,sMAS2BA,4GAa/BA,iEAAe,sBAAfA,CAAe,6CASnBA,qEAK+BA,gFAIvBA,oIAOhBA,uCAGC,UACGA,yBAEAA,8BAlHhB,MAoIa0jE,EAsBTjoE,YAAoBE,eApBJI,UAAe,EACfA,aAAkB,EAEjBA,kBAAe,IAAIqF,eACnBrF,WAAQ,IAAIqF,eACZrF,eAAY,IAAIqF,eAE1BrF,aAAU,GACVA,cAA4B,EAYc,CAVtCsT,YACP,OAAOtT,KAAKJ,KAAKsY,YAAYlY,KAAKwO,OAAO5E,QAAU5J,KAAKwO,OAAO8E,KAClE,CAEU5D,eACP,OAAO1P,KAAKJ,KAAKsS,UAAUiG,KAAMzX,GAC7BV,KAAKwO,OAAO5E,MAAMlH,SAAShC,EAAE4I,IAEpC,CAIM+hB,YAAYC,GACXA,EAAQ9c,OAASxO,KAAKwO,OACtBxO,KAAKyuB,gBAEZ,CAEOA,iBACJzuB,KAAKglB,QAAUhlB,KAAKsT,OAAO7J,OAC3BzJ,KAAK0N,SAAW,CACZ,CACIlL,SAAUxC,KAAKwO,OAAO/E,OACtBsK,QAAS5V,mBAGpB,EA1KLgB,gEAoIawoE,GAAqB1jE,uGAArB0jE,EAAqBzjE,6PArFuBoU,oFAGzBA,qHAqByBA,4FAGzBA,8GAsCuBA,+yCA7G/CrU,mDAwGAA,iIAxGeA,uCAAa,sdCfpC,iBAEAzG,GADA+B,SACAA,UAGA5B,GAFA4B,SACAA,QACAA,UACA3B,gHAuCYqG,uCAMIA,sBACJA,qEADIA,4IAYJA,uCAAkE,OAC3DA,sBAAUA,2BACbA,0CAGIA,8HAASA,2CAAmB,GAE5BA,yCAAUA,8BAAKA,2DANhBA,2DAxDnB,MA2Fa2jE,UAAqCnoE,YAkB9CC,YACYgsB,EACA9T,EACAhY,GAERG,QAJQC,eACAA,mBACAA,YApBIA,UAAuB,OACtBA,gBAAa,IAAIqF,eAClBrF,aAAUA,KAAK4X,YAAYrH,QACpCvQ,cAAmB,GAWVA,iBAAc,IAC1BA,KAAK0rB,QAAQlhB,KAAKq9D,wBAQrB,CAlBU1nD,YACP,OAAOngB,KAAK4X,YAAYxP,KAAK9E,MAAMmI,IACtC,CAEU2U,UACP,MAAQ3U,OAAMC,YAAa1L,KAAK4X,YAAYxP,KAAK9E,MACjD,OAAOmI,EAAkB,GAAXC,EAAgB,GACjC,CAaMzL,WACHD,KAAK6I,aACD,OACA7I,KAAKuQ,QAAQxH,UAAU,EAAG6lB,cACtB5uB,KAAK6uB,gBAAgBD,IAGhC,CAEYE,cAAcC,GAAY,gCACnC,MAAMzrB,QAAc5C,EAAKkX,YAAYrH,QAAQ3P,MAAK,UAAK,IAAIC,YAC3DH,EAAKkX,YAAYjP,WAAW,IACrBrF,EACHoK,UAAWpK,EAAMoK,UAAY,IAAIM,OAAQtN,GAAMA,IAAMquB,IAJtB,IAMtC,CAEOF,gBAAgBD,EAAqB,IAEzC,MAAM3gB,EAAOqF,KADM1T,KAAKsY,YAAY0W,IACd5uB,KAAKJ,KAAK8P,SAChC1P,KAAKwC,SAAWyL,GAAMoK,cAAgBpK,GAAMzE,MAAQ,EACvD,EA1ILrK,uEA2FayoE,GAA4B3jE,yMAA5B2jE,EAA4B1jE,uMAjF5BoU,sFAWIA,kFAUAA,mFAqBuDA,iFACnD,61BAlDbrU,0CAAmE,cAK3DA,iDAASuE,eAAa,GAJ1BvE,wBAQAA,2BACAA,sCAA+B,cAMvBA,wDAAgB,MAAOuE,yBAAqB,GALhDvE,wBASAA,2BACAA,yCAKIA,wDAAgB,OAAQuE,yBAAqB,GALjDvE,wBASAA,+BAGRA,0CACIA,wCAQAA,wCACIA,qDACJA,2BACAA,wCACIA,mFAEJA,2BACAA,iGAEAA,2BACAA,yEAUJA,yCA/CYA,2EAUAA,4EAaHA,mEAKDA,qHAGAA,gLAKJA,oJACkCA,4xBC9D9C1E,eACAhC,WAGAG,GAFA6B,SACAA,QACAA,UACA5B,cACA4B,+PAOgB0E,0CAIIA,kHAASA,kCAAO,GAEhBA,yCAAUA,4CAAmBA,uDAsBrBA,8CAIIA,sBACJA,qDAHIA,kCAEAA,kMAZZA,kDAA4F,mBAIpFA,2HAAiBA,yCAAmB,6FAIpCA,8EAMJA,+EAXIA,mGAA4B,mDAA5BA,CAA4B,wJAMRA,+HAiBpBA,8CAIIA,sBACJA,qDAHIA,qCAEAA,wJAsDhBA,uCAGC,YACwCA,sBAAUA,2BAC/CA,gDAGIA,wIAAiBA,6CAA2B,iCAE/CA,8FANoCA,0DAGjCA,0JAAuD,6EAbnEA,2CAIC,UACGA,yBAA+CA,2BAC/CA,uEAYJA,qEAVyBA,mKAY7BA,uCAGC,eAC2CA,kHAASA,kCAAO,GAAxDA,yBAEAA,8BAjIZ,MA+Ia6jE,EA+BTpoE,YAEYmsB,EACAlsB,EACAiY,EACAhY,EACAwQ,GAJApQ,mBACAA,iBACAA,mBACAA,YACAA,eApCLA,gBAAY,EACHA,aAAUA,KAAK4X,YAAYrH,QAE3BvQ,cAAWA,KAAKJ,KAAK6P,gBACrBzP,eAAYA,KAAKJ,KAAKksB,iBACtB9rB,YAASA,KAAKJ,KAAKmsB,cACnB/rB,eAAW,mBAAc,CACrCA,KAAKoQ,QAAQ1C,SACb1N,KAAK4X,YAAY3K,mBAClBrM,MACC,SAAI,EAAE8M,EAAUa,MACZ,YAAOb,EAASyoB,QAAO,aAAQ5nB,EAAOQ,IAAKrO,GAAMA,EAAEgN,eAI3C1N,WAAQ,IAAMA,KAAK6rB,YAAYjc,UAC/B5P,gBAAcrC,GAAMqC,KAAK4X,YAAYjP,WAAWhL,GAsB5DqC,KAAKisB,YAAcjsB,KAAK6rB,WAC3B,CArBUrb,UACP,OAAOxQ,KAAKJ,KAAK8P,QACpB,CAEUtH,WACP,OAAOpI,KAAK4X,YAAYxP,IAC3B,CAEU+C,mBACP,OAAOnL,KAAKL,UAAUwC,IAAI,4BAA8B,GAC3D,CAaM2O,YAAYN,GACfxQ,KAAKJ,KAAK8P,SAAWc,CACxB,CAEY2e,cAAcJ,EAAcnS,GAAc,gCACnD,MAAQlP,kBAAmBmpB,EAAKtmB,QAAQ3P,MAAK,UAAK,IAAIC,YAChDwuB,GAAY3hB,GAAY,IAAIM,OAAQtN,GAAMquB,IAASruB,GACrDkc,GAAOyS,EAASxS,KAAKkS,GACzB8H,EAAKluB,WAAW,CAAE+E,SAAU2hB,GAJuB,IAKtD,EAlMLlwB,gEA+Ia2oE,GAAqB7jE,8SAArB6jE,EAAqB5jE,sGAjI0BoU,0FAQPA,oFAENA,oFAuBNA,sFAcEA,+EAAI,qCAAO,uCACoBA,iHAMrBA,qFAAU,qCAAO,uCASnBA,mFAAQ,qCAAO,uCAYbA,uFAEQA,wGAiBRA,uFAmBsBA,8vDA5HnErU,sCAAuE,WAE/DA,2CAQJA,2BACAA,6DAA6DA,2BAC7DA,iCACJA,2BACAA,uCAGC,cAHDA,CAGC,UAEOA,wBAA4CA,2BAC5CA,wCAAgD,eAC5CA,0BAAmCA,2BACnCA,qFAgBAA,mDAAoD,oBAI5CA,0DAAiBuE,0BAAgC,kCAMjDvE,gFAMJA,+BAGRA,wCAAkC,eAC9BA,+BAA2BA,iCAAcA,mDACzCA,2EAEAA,6BAEJA,wCAAyC,YAAzCA,CAAyC,eAEjCA,+BAAuCA,iCAAcA,mDACrDA,iDAGIA,0DAAiBuE,2BAAiC,GAErDvE,6BAELA,wCAA0B,eACtBA,+BAAmCA,iCAAcA,mDACjDA,gDAOJA,+BAGRA,4CAAqC,WACjCA,0BAA+CA,2BAC/CA,wCAA+B,aAC3BA,0BAEAA,2BACAA,iDAGIA,0DAAiBuE,0BAAgC,kCAGrDvE,+BAGRA,6EAmBJA,2BACAA,4DAnHaA,oEAWTA,oEAM6DA,+HAmB7CA,8HAAuC,mDAAvCA,CAAuC,eAQnBA,mGAmBpBA,8EAA2B,oDAU3BA,gHAA0B,sBAe9BA,8HAAuC,oDAU9CA,0HAmBJA,8nBCtIb,oBACA1E,SACAA,yGA+B4B0E,uCAGC,cACaA,6BAAIA,sDAElBA,qFAMIA,0FAGAA,iGA9BhBA,qCAKC,eAKOA,+HAASA,yCAAkB,GAE3BA,uCAGIA,yCAMAA,yCAQAA,yFAMJA,2BACAA,uCAAuB,YAEfA,sBAKJA,2BACAA,wCAAiD,kBACbA,+BAAKA,2BACrCA,mCACIA,uBAKJA,6BAEJA,wCAAiD,kBAExCA,gCAAMA,2BAEXA,6DAKAA,iCAIZA,2CAKIA,+HAASA,4CAAqB,GAE9BA,0CAAUA,uBAIRA,6HA3ENA,4DAcaA,kFAKAA,4FAGnB,cAakBA,yGASIA,wKAgBJA,sGAQRA,sFAGUA,mIA9EtBA,qCAIIA,uEAiFJA,sEA/E0BA,qIAP9BA,uCACIA,qEAsFJA,iHApFSA,gIAA0C,qCAsF/CA,uCAGC,UACGA,yBAEAA,oDAIJA,uCAIIA,0CACAA,8DAAsDA,oCADzCA,gEA9G7B,MA8Ha8jE,EAUTroE,YAAoBkY,EAAuChY,GAAvCI,mBAAuCA,YAT3CA,YAAiB,GACjBA,cAAmB,GACnBA,eAAsB,GACrBA,cAAW,IAAIqF,eACfrF,eAAY,IAAIqF,eACjBrF,aAAUA,KAAK4X,YAAYlH,QAE3B1Q,sBAAmBA,KAAK4X,YAAY3K,gBAEoC,CAEjFqG,MAAM1J,GACT,OAAO5J,KAAKJ,KAAKsY,YAAYtO,EAChC,CAEM3J,WACHD,KAAK4X,YAAY/M,QAAQ,OAC5B,CAEMiR,YAAYyT,GACf,OAAOvvB,KAAK+b,UAAUrZ,SAAS6sB,EAClC,CAEMC,YAAYhhB,GACfxO,KAAKkc,SAASlM,KAAKxB,EACtB,EAxJLrP,6DA8Ha4oE,GAAkB9jE,yJAAlB8jE,EAAkB7jE,yMA1HuBoU,4EAC1C,oDAiE4BA,4EACJ,2CA6BmBA,mIAWZA,mwDA5GnCrU,qCAAsBA,gCAAOA,2BAC7BA,0FAEAA,2BACAA,+EAwFAA,wFAUAA,wIAnGAA,wJACeA,gGAA0B,+WCZjD,uEAiEgBA,wDAIAA,4CACIA,+BACJA,4BArEhB,MA2Ea+jE,EAITtoE,YAA8Coe,eAAc,CAHjD7N,eACP,OAA+B,IAAxBjQ,KAAK8d,MAAM7N,QACrB,EA9EL9Q,oEA2Ea6oE,GAAyB/jE,8BAId9F,oBAAgB,kDAJ3B6pE,EAAyB9jE,2mEAxE9BD,sCACIA,mEAMC,SAEOA,kCAMJA,2BACAA,qCAAM,cAUEA,qCAGE,oBAHFA,CAGE,eAHFA,CAGE,qBAHFA,CAGE,mBAHFA,CAGE,sBAHFA,CAGE,gBAHFA,CAGE,iBAyBNA,+BAGRA,sEAGIA,0CAIAA,+CAGJA,oCALSA,qEAEgDA,gOCtErE,iBACA3G,WAGAG,GAFA8B,SACAA,QACAA,UAEA7B,gMAKQuG,yCAKIA,4JAAe,qMAElBA,uEALGA,wCAAe,mDAAfA,CAAe,iDAAfA,CAAe,cAAfA,CAAe,6CAePA,8CAIIA,sBACJA,qDAHIA,kCAEAA,yFAxBxB,MAgEagkE,UAAgCxoE,YAiDzCC,YACYkY,EACAhY,GAERG,QAHQC,mBACAA,YAlDIA,cAAqB,GACrBA,mBAAwB,EACvBA,cAAW,IAAIqF,eAEzBrF,UAAO,EACPA,YAAS,CAAEqG,EAAG,GAAK9B,EAAG,IAErBvE,mBAAiBnC,GAAM,IAAMmC,KAAKkc,SAASlM,KAAKnS,GACjDmC,WAAuB,KAMdA,YAASA,KAAK4X,YAAY3K,iBAAiBrM,MACvD,SAAKF,IACD,YACIA,EAAEqO,IAAI,EAAGnF,WAAY5J,KAAKJ,KAAKsY,YAAYtO,IAC3C,QAGR,SAAKlJ,GAAOV,KAAKsT,MAAQtT,KAAKsT,MAAQtT,KAAKsT,MAAQ5S,EAAE,KAGzCV,cAAWA,KAAK4X,YAAY3K,iBAAiBrM,MACzD,kBAAa,MACb,SAAKorB,GACDA,EAAEjd,IAAKP,IAAW,CACdhM,SAAUgM,EAAM/E,OAChBsK,QAASm0D,4BACT3nE,KAAM,IACCiO,EACHyB,SAAUjQ,KAAKiQ,SAASvN,SAAS8L,EAAMlF,UAMvCtJ,aAAUA,KAAK4X,YAAY3K,iBAAiBrM,MACxD,SAAKorB,GACDA,EAAEjd,IAAKP,IAAW,CACdlF,GAAIkF,EAAM/E,OACV+J,OAAQ,CAAC,WAAY,WACrBC,SAAUzT,KAAK4vB,cAAcphB,OAUxC,CA3CUwW,cACP,OAAOhlB,KAAKsT,OAAO7J,QAAU,EAChC,CA2CMxJ,WACHD,KAAK6I,aACD,gBACA7I,KAAKysB,OAAO1jB,UAAW0jB,IACdA,EAAOtU,KAAMzX,GAAMA,EAAE4I,KAAOtJ,KAAKsT,OAAOhK,MACzCtJ,KAAKsT,MAAQmZ,EAAO,MAInC,CAEMC,QAAQC,GACX3sB,KAAKiU,KAAOsM,KAAKqM,IAAI,GAAKrM,KAAKsM,IAAI,GAAIF,GAC1C,CAEMG,WACH9sB,KAAKiU,KAAO,EACZjU,KAAK+sB,OAAS,CAAE1mB,EAAG,GAAK9B,EAAG,GAC9B,EA1ILpF,kEAgEa8oE,GAAuBhkE,yJAAvBgkE,EAAuB/jE,y4BA7D5BD,0CAQAA,sCAEC,qBAFDA,CAEC,kBAMmBA,sEACRA,6EAMJA,+BAGRA,sCAGC,cACmCA,iDAASuE,UAAe,IAAfA,OAAmB,GACxDvE,yCAAUA,gCAAOA,6BAErBA,kCACAA,0CAGIA,iDAASuE,kBAAgB,EAAI,KAAK,GAElCvE,0CAAUA,kCAAQA,6BAEtBA,kCACAA,0CAA8BA,iDAASuE,YAAU,GAC7CvE,0CAAUA,iCAAOA,sCA1CpBA,+CAeeA,mEAEYA,0iBC5BxC,gBAUA9E,cAAagpE,EAkCTzoE,YAAYa,EAAuB,IAC/BP,KAAKsJ,GAAK/I,EAAK+I,IAAM,GACrBtJ,KAAKwJ,KAAOjJ,EAAKiJ,MAAQ,GACzBxJ,KAAKqY,aAAe9X,EAAK8X,cAAgB,GACzCrY,KAAK8C,OAASvC,EAAKuC,OAAS,IAAI6W,cAChC3Z,KAAKoqB,SAAW7pB,EAAK6pB,WAAY,EACjCpqB,KAAK0O,aAAenO,EAAKmO,cAAiBnO,EAAKmN,UAAoB,GACnE1N,KAAK8hB,WAAavhB,EAAKuhB,SACvB9hB,KAAK4J,MAAQrJ,EAAKqJ,OAAS,GAC3B5J,KAAKooE,YAAc7nE,EAAK6nE,aAAe,GACvCpoE,KAAKyJ,OAASlJ,EAAKkJ,QAAU,GAC7BzJ,KAAKub,OAAShb,EAAKgb,QAAU,GAC7Bvb,KAAKqoE,eAAiB9nE,EAAK8nE,gBAAkB,GAC7CroE,KAAK0N,SAAWnN,EAAKmN,UAAY,GACjC1N,KAAK29C,gBAAkBp9C,EAAKo9C,gBAC5B39C,KAAKsT,MAAQ/S,EAAK+S,OAAS,IAAIg1D,gBAC/BtoE,KAAKswB,aAAe/vB,EAAK+vB,cAAgB,EAC5C,EAnDLnxB,+HCVA,iBAGA3B,GADA+B,SACAA,gCAEMgpE,EAAsB,GAEtBC,EAAc,IAAIn4C,QAExB,WAAgCpb,GAC5B,UAAWzG,KAASyG,EACXszD,EAAWpwD,KAAK,EAAG7O,QAASA,IAAOkF,EAAMlF,KAC1Ci/D,EAAW1rD,KAAKrO,EAG3B,CANDrP,oBAQA,MAGaspE,EACT/oE,YAAoBE,cAA6B,CAKpCgW,UAAU2Z,GAAgB,gCACnC,MAAMm5C,EAAWn5C,GAAU7sB,SAAS,KACpC,IAAK6sB,EAAU,OAAOi5C,EACtB,IAAIh6D,EAAQ+5D,EAAWpwD,KACnB,EAAG7O,KAAIxG,WAAYwG,IAAOimB,GAAYzsB,IAAUysB,GAEpD,GAAI/gB,EAAO,OAAOA,EAClB,IAAKk6D,EAAU,CACX,MAAM5yD,QAAe,gBAAWyZ,GAC3B1uB,YACA8B,MAAOjC,GAAM,MAClB,GAAIoV,EACAtH,SAAQ,IAAI6hB,QAAM,IACVva,EACJxC,MAAOlP,EAAKxE,KAAKsY,YAAY,IAAIpC,EAAOlM,UAE5C2+D,EAAW1rD,KAAKrO,GACTA,CAEd,CACD,MAAM+hD,SAAiB,kBAAa,CAAExxC,EAAGwQ,IAAY1uB,aAAaN,KAClE,OAAuB,IAAnBgwD,EAAQtnD,QACRuF,EAAQ,IAAI6hB,QAAM,IACVkgC,EAAQ,GACZj9C,MAAOlP,EAAKxE,KAAKsY,YAAY,IAAIq4C,EAAQ,GAAG3mD,UAEhD2+D,EAAW1rD,KAAKrO,GACTA,GAEJg6D,CA7B4B,IA8BtC,CAEMG,gBAAgB1zD,GACnB0zD,EAAgB1zD,EACnB,EA3CL9V,oDAGaspE,GAASxkE,mHAATwkE,EAASxyB,8HCrBtB,iBACA34C,WAEAC,WACAC,WACAC,WACAC,WAEMkrE,EAA2D,GAEjEzpE,kCAAqCmK,GACjC,OAAIs/D,EAAoBt/D,KACxBs/D,EAAoBt/D,IAAM,kBAAa,CAAEuY,QAASvY,EAAIk6D,MAAO,MAAO5iE,MAChE,SAAKF,IAAOA,EAAEH,MAAQ,IAAIwO,IAAKrO,GAAM,IAAI2vB,QAAM3vB,MAC/C,SAAKA,IAAM,qBAAgBA,KAC3B,iBAAY,KAETkoE,EAAoBt/D,EAC9B,EAED,IAAIu/D,EAAsB,EAE1B1pE,+BAAkCisC,EAAqB,IACnD,MAAM9hC,EAAK,SAASu/D,IACdr/D,EAAO,cAAcq/D,IACrBC,GAAS,0BAAqB,OAAS,GAAM,GAAKD,EAAc,EAChEr6D,EAAQ,CACVlF,KACAE,OACAu/D,UAAW,GAAGv/D,sBACdC,OAAQ,GAAGo/D,IACXz+C,SAAwC,GAA9B,0BAAqB,GAAI,GACnCtnB,MAAO,GAAG0G,EAAKmQ,cAAc5W,MAAM,KAAKuH,KAAK,QAAQojD,gBACrD9kD,KAAM,GACNogE,YAAY,0BAAqB,OAAS,GAAM,EAChDC,aAAa,0BAAqB,OAAS,GAAM,EACjDnnD,UAAU,0BAAqB,OAAS,GAAM,EAC9ConD,UAAuC,KAA5B,0BAAqB,KAChCjY,MAAiC,GAA1B,0BAAqB,GAC5BnjB,UAAqC,GAA1B,0BAAqB,GAChClkC,MAAO,CAAC,cACRw+D,YAAa,oBAAoB9+D,IACjCiR,SAAU,GACV4uD,aAAcL,EACR,CAAC,UAAS,0BAAqBD,EAAc,MAC7C,GACNO,MAAO,MACJh+B,GAEP,OAAI58B,EAAM65D,gBAAqB75D,EAAM65D,eAAkBp/D,OAAS,IAC5DuF,EAAM65D,eAAkBrzD,QACnBsc,GACIA,EAAOlH,UAAW,0BAAqB5b,EAAM4b,UAAY,GAElE5b,EAAM65D,eAAkB,GAAGj+C,SAAW5b,EAAM4b,UAEzC5b,CACV,CAnCDrP,+FCtBA,iBAEA5B,GADAgC,SACAA,UACA/B,WACAC,WACAC,WAEAC,UACAC,WACAC,WAIAsG,GAFA5E,QACAA,SACAA,UACA6E,WACAC,WACAC,WACAC,cAEAhF,SACAA,+DAiBA,MAea8pE,GAfblqE,6DAeakqE,EAAkB,iDAAlBA,uDAZL5pE,eACAqH,kBACAsiB,mBACAD,mBACA/c,uBACA3E,oBACArC,cACAA,yDAtBJ2lD,+BAA4B,qDAE5Bue,wBACAC,qBACA1B,wBACA2B,+BACAC,2BAAuB,oHC9B3B,iBACAlsE,WACAC,WAIAE,GAFA6B,QAEAA,UACA5B,WACAC,2CAEA,IAAI8rE,EAEJ,MAGaC,EAoBTjqE,YAAoBE,EAAmCD,GAAnCK,YAAmCA,iBAlB/CA,WAAQ,IAAIkN,kBAAyB,IAE1BlN,kBAAe,IAAIkN,mBAAyB,GAE/ClN,iBAAcA,KAAK2+B,aAAavxB,eAEhCpN,UAAOA,KAAK4pE,MAAMx8D,eAElBpN,cAAWA,KAAKgJ,KAAKpI,MAAK,SAAIF,IAAK,aAAO,aAAQA,EAAEqO,IAAIrR,GAAKA,EAAEgQ,cAErE1N,cAAYwO,GAClBA,EAAM5E,MAAMlH,SAAS1C,KAAKJ,KAAK8P,SAASpG,IAQxCogE,EAAa,IAAI9kE,YAAUhF,GAC3BI,KAAK6pE,OACR,CAPU50D,iBACP,OAAOjV,KAAK4pE,MAAMn8D,UACrB,CAOao8D,QAAK,sCACTvlE,EAAK1E,KAAKe,YAAYC,MAAK,WAAOF,GAAMA,IAAIG,YAClDyD,EAAU3E,UAAUwC,IAAI,0BACnBmC,EAAKq6B,aAAarxB,MAAK,GADuBhJ,EAAKwlE,YAFzC,IAIlB,CAMM97D,OAAO+7D,EAAmC/pE,KAAKgqE,UAClD,OAAOhqE,KAAK4pE,MAAMn8D,WAAWO,OAAQtN,GAAMqpE,EAAUrpE,GACxD,CAEYupE,UAAU16C,GAAgB,gCACnC,MAAMzZ,QAAe,gBAAWyZ,GAAU1uB,YACpC2N,EAAQ,IAAI6hB,QAAM,IACjBva,EACHxC,MAAO/O,EAAK3E,KAAKsY,YAAY,IAAIpC,EAAOlM,UAE5C8/D,EAAWf,gBAAgB,CAACn6D,GANO,IAOtC,CAMM2J,KAAKoX,GACR,OAAOvvB,KAAK4pE,MAAMn8D,WAAW0K,KAAK,EAAG7O,QAASimB,IAAajmB,EAC9D,CAEawgE,aAAU,gCAepB,MAAMI,SAdgB,kBAAa,CAC/BroD,QAASvd,EAAK1E,KAAK2uB,aAAajlB,GAChCk6D,MAAO,MAEN5iE,MAAK,SAAKlD,GAAMA,EAAE6C,OAClBM,aACsBkO,IACtB8hC,GACG,IAAIxgB,QAAM,IACFwgB,EACJv9B,MAAOhP,EAAK1E,KAAKsY,YAAY,IAAI24B,EAAIjnC,WAIjBoE,OAAQQ,GAAUA,EAAM/E,QACxDnF,EAAKslE,MAAMt8D,KAAK48D,GAChBR,EAAWf,gBAAgBuB,GAC3B5lE,EAAKq6B,aAAarxB,MAAK,EAlBH,IAmBvB,EA9ELnO,wDAGawqE,GAAa1lE,yIAAb0lE,EAAav6D,QAAbu6D,EAAa,qBAFV,2FCdhBtuD,0BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,8GCNAA,0BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,2BACAA,0BACAA,2BACAA,oICTA9b,eAOAjC,WACAC,WACAC,0EAwEoByG,uCAKIA,4CAIAA,uCAGIA,sBACJA,2BACAA,0CAAwD,cAC1CA,8BAAKA,6BAEnBA,qDAOJA,mFAjBQA,+DAKAA,sFAOAA,0DAAa,cAAbA,CAAa,kBAAbA,CAAa,2CAOzBA,uCAKC,YAEOA,sBACJA,iFAPAA,kCAAe,sCAMXA,6HA0BJA,uCAIIA,mDACJA,qEADIA,kHA7HxB,MA6JakmE,UAAuC1qE,YAgChDC,YACqCoe,EACzB6yB,EACA1jB,GAERltB,QAJiCC,aACzBA,iBACAA,mBAlCLA,YAAS,GACTA,UAAOA,KAAK8d,MAAMrS,MAAQgB,KAAKiM,MAC/B1Y,cAAWA,KAAK8d,MAAMpS,UAAY,GAClC1L,WAAQ,IAAIA,KAAK8d,MAAMjS,OAEvB7L,YAAS,EACTA,WAAQ,EAECA,UAAOA,KAAK8d,MAAM1T,KAClBpK,WAAQ,IAAIyhB,MAAM,IAAI03B,KAAK,GAgFpCn5C,gBAAY,EACXA,iBAAc,EACdA,gBAAa,EACbA,gBAAa,CAvDpB,CAvBUoqE,YACP,OAAO,eAAUpqE,KAAKyL,KAAMgB,KAAKiM,MACpC,CAEU2xD,mBACP,OAAO,IAAI59D,MAAOw5C,UACrB,CAEUqkB,qBACP,MAAM7+D,EAAO,IAAIgB,KAAKzM,KAAKyL,MAC3B,OAAoD,GAA5CA,EAAKw6C,WAAax6C,EAAKy6C,aAAe,IAAU,CAC3D,CAEUqkB,sBACP,OAAQvqE,KAAK0L,SAAW,GAAM,CACjC,CAUMqhD,QAAQrzC,GACX1Z,KAAK6L,MAAQ,IAAI7L,KAAK6L,MAAMmC,OAAOlQ,GAAKA,EAAEgF,QAAU4W,EAAK5W,OAAQ4W,GACjE1Z,KAAK0Z,KAAO,IACf,CAEM8wD,iBACHxqE,KAAKitB,YAAYtpB,OAAM,EAC1B,CAEMqvC,kBACH,MAAMvnC,EAAO,IAAIgB,KAAKzM,KAAKyL,MAC3BzL,KAAKkB,QACD,OACA,KACI,MAAM2gC,EAAK7hC,KAAKqqD,cAAcpZ,cAAczM,cACxC,UAAU/4B,EAAKw6C,gBAEnB,GAAIpkB,EAAI,CACJ,MAAMiW,EACF93C,KAAKqqD,cAAcpZ,cAAcoD,wBAC/Bo2B,EAAU5oC,EAAGwS,wBACnBr0C,KAAKqqD,cAAcpZ,cAAcy5B,SAC7BD,EAAQE,KAAO,IAAM7yB,EAAK6yB,KAC1B,EAEP,CACD3qE,KAAK4qE,cACL5qE,KAAK6qE,cAAL,EAEJ,IAEP,CAEMD,cACH,MAAME,EACF9qE,KAAKqqD,cAAcpZ,cAAcoD,wBAAwBlxC,MACvD4nE,EAAiB/qE,KAAKqqD,cAAcpZ,cACrCzM,cAAc,WACd6P,wBAAwBlxC,MAC7BnD,KAAKmD,MAAQod,KAAKC,MAAMsqD,EAAiBC,GACzC/qE,KAAKgrE,WAGoC,GAFrChrE,KAAKqqD,cAAcpZ,cACdzM,cAAc,UACd6P,wBAAwBlxC,KACpC,CAEM0nE,eACH7qE,KAAKirE,OAASjrE,KAAKqqD,cAAcpZ,cAAci6B,UAClD,CAOMC,gBAAgBnzD,GACnBA,EAAMmvB,iBACNnvB,EAAMozD,kBACNprE,KAAK4qE,cACL5qE,KAAKqrE,WACDrzD,aAAiBszD,WACXtzD,EAAMuzD,QACNvzD,EAAMwzD,QAAQ,GAAGD,QAC3BvrE,KAAKyrE,WAAY,EACjBzrE,KAAK0rE,YAAc1rE,KAAKyL,KACxBuM,aAAiBszD,WACXtrE,KAAK6I,aACD,UACA7I,KAAK2wC,UAAUx3B,OAAO,SAAU,YAAc5Z,GAC1CS,KAAK2rE,cAAcpsE,KAG3BS,KAAK6I,aACD,UACA7I,KAAK2wC,UAAUx3B,OAAO,SAAU,YAAc5Z,GAC1CS,KAAK2rE,cAAcpsE,KAGjCyY,aAAiBszD,WACXtrE,KAAK6I,aACD,cACA7I,KAAK2wC,UAAUx3B,OAAO,SAAU,UAAW,IACvCnZ,KAAK4rE,eAGb5rE,KAAK6I,aACD,cACA7I,KAAK2wC,UAAUx3B,OAAO,SAAU,WAAY,IACxCnZ,KAAK4rE,cAGtB,CAEMC,kBAAkB7zD,GACrBA,EAAMmvB,iBACNnvB,EAAMozD,kBACNprE,KAAK4qE,cACL5qE,KAAKqrE,WACDrzD,aAAiBszD,WACXtzD,EAAMuzD,QACNvzD,EAAMwzD,QAAQ,GAAGD,QAC3BvrE,KAAK0rE,YAAc1rE,KAAK0L,SACxBsM,aAAiBszD,WACXtrE,KAAK6I,aACD,UACA7I,KAAK2wC,UAAUx3B,OAAO,SAAU,YAAc5Z,GAC1CS,KAAK8rE,gBAAgBvsE,KAG7BS,KAAK6I,aACD,UACA7I,KAAK2wC,UAAUx3B,OAAO,SAAU,YAAc5Z,GAC1CS,KAAK8rE,gBAAgBvsE,KAGnCyY,aAAiBszD,WACXtrE,KAAK6I,aACD,cACA7I,KAAK2wC,UAAUx3B,OAAO,SAAU,UAAW,IACvCnZ,KAAK4rE,eAGb5rE,KAAK6I,aACD,cACA7I,KAAK2wC,UAAUx3B,OAAO,SAAU,WAAY,IACxCnZ,KAAK4rE,cAGtB,CAEOD,cAAc3zD,GAClB,MAAM+zD,EACF/rE,KAAKqrE,YACJrzD,aAAiBszD,WACZtzD,EAAMuzD,QACNvzD,EAAMwzD,QAAQ,GAAGD,SAErBS,GADMD,EAAY,GAAI,EAAK,GAG7BxrD,KAAKC,MAAMD,KAAKkF,IAAKsmD,EAAY/rE,KAAKgrE,WAAc,GAAK,IAAM,GAC/D,EACJ,GAAIgB,EAAY,CACZ,MAAMjmB,EAAW/lD,KAAKyL,KACtBzL,KAAKyL,MAAO,gBAAWzL,KAAK0rE,YAAaM,GAAYtoD,UACjD1jB,KAAKyL,KAAOgB,KAAKiM,QAAO1Y,KAAKyL,KAAOs6C,EAC3C,CACJ,CAEO+lB,gBAAgB9zD,GACpB,MAAM+zD,EACF/rE,KAAKqrE,YACJrzD,aAAiBszD,WACZtzD,EAAMuzD,QACNvzD,EAAMwzD,QAAQ,GAAGD,SAErBS,GADMD,EAAY,GAAI,EAAK,GAG7BxrD,KAAKC,MAAMD,KAAKkF,IAAKsmD,EAAY/rE,KAAKgrE,WAAc,GAAK,IAAM,GAC/D,EACAgB,IACAhsE,KAAK0L,SAAW6U,KAAKqM,IAAI,GAAI5sB,KAAK0rE,YAAcM,GAEvD,CAEOJ,aACJ5rE,KAAKi/B,MAAM,WACXj/B,KAAKi/B,MAAM,eACXj/B,KAAKqrE,WAAa,EAClBrrE,KAAKyrE,WAAY,CACpB,EA9WLtsE,yEA6JagrE,GAA8BlmE,8BAiC3B6C,mBAAe7C,2IAjClBkmE,EAA8BjmE,m+GA1JnCD,yCAA8D,UAClCA,0CAAiBA,2BACzCA,yCAIC,cACaA,8BAAKA,+BAGvBA,uCAEIA,kDAAiBuE,eAAa,kCAE9BvE,sCAAsF,oBAE9EA,qEAEHA,2BACDA,sDACIA,qEAAkB,mCACDuE,YAAe,GAEnCvE,6BAELA,yCAGIA,kDAAUuE,gBAAc,GAExBvE,uCAIIA,kCAIAA,wCAIIA,6CAIAA,wCAGIA,uBACJA,2BACAA,sDAOJA,2BACAA,0CAyBJA,2BACAA,0CAUAA,wCAKIA,sDAAauE,oBAAuB,EAApCvE,CAAqC,gCACvBuE,oBAAuB,GAErCvE,mCAIAA,wCAGIA,sDAAauE,sBAAyB,EAAtCvE,CAAuC,gCACzBuE,sBAAyB,GAC1CvE,2BACDA,wCAGIA,yDACJA,2BACAA,0CAMJA,+BAGRA,2CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAOqCA,oCAAUA,2BACpCA,wCAA4BA,sCAAYA,wCAzHxCA,kEAIAA,kEAwBQA,+DAKAA,2FAIAA,+DAAa,cAAbA,CAAa,kBAAbA,CAAa,iBASAA,mEA2BPA,mEASdA,gFAAqC,iCAkBjCA,2GAGCA,oEAaTA,0bC1JhB1E,eACAjC,WACAC,WACAC,WAGAE,GADA6B,SACAA,yDAOY0E,sCAMC,SACQA,oCAAWA,2BAChBA,oCACIA,gFAEJA,uDAPAA,4CAAgC,oBAK5BA,0LAdpB,MAsBagoE,EAtBbvsE,cAwBoBM,UAAeyM,KAAKiM,MACpB1Y,YAAS,EACTA,WAAQ,EAEhBA,YAAS,IAAIkN,kBAAgB,MAErBlN,kBAAeA,KAAKksE,OAAOtrE,MACvC,YAAQF,GAAMA,IACd,eAAWgZ,IACP,iBAAY,CACRyyD,UAAWzyD,EAAK5W,MAChBgX,cAAc,gBAAW9Z,KAAKyL,MAAMiY,UACpC3J,YAAY,cAAS/Z,KAAKyL,MAAMiY,cAGxC,SAAKhjB,GACDA,EAAEqO,IAAKrR,IAAO,CACV+N,KAAM/N,EAAE+N,KACRC,SAAUhO,EAAEgO,SACZyU,OACK,IAAI1T,KAAK/O,EAAE+N,MAAMw6C,WACd,IAAIx5C,KAAK/O,EAAE+N,MAAMy6C,aAAe,IACpC,GACJjoC,KAAMvgB,EAAEgO,SAAW,GAAK,QAGhC,iBAAY,GAQnB,CALU2f,YAAYC,GACXA,EAAQ5R,MAAQ1Z,KAAK0Z,MACrB1Z,KAAKksE,OAAO5+D,KAAKtN,KAAK0Z,KAE7B,EAzDLva,oEAsBa8sE,EAAyB,kDAAzBA,EAAyB/nE,mhBAnB9BD,sCACIA,iCACAA,uEAaJA,kCAfkHA,8CAIxFA,6TCflC,iBACA3G,WAEAC,WACAC,WACAC,WAGM2uE,EAAiB,uBAiBvBjtE,0BAA6B4f,GACzB,MAAMlF,GAAQ,mBAAc,CAAEkF,MAC9B,OAAO,SAAI,GAAGqtD,IAAiBrtD,EAAI,IAAMlF,EAAQ,MAAMjZ,MACnD,SAAKoI,GAASA,EAAK+F,IAAKd,GAAS,IAAI4a,YAAU5a,KAEtD,EAMD9O,yBAA4B4f,GACxB,MAAMlF,GAAQ,mBAAc,IAAKkF,IACjC,OAAO,SAAI,GAAGqtD,IAAiBvyD,EAAQ,IAAMA,EAAQ,MAAMjZ,MACvD,SAAKoI,GAASA,EAAK+F,IAAKd,GAAS,IAAI4a,YAAU5a,KAEtD,EAMD9O,uBAA0BmK,GACtB,OAAO,SAAI,GAAG8iE,KAAkB3jD,mBAAmBnf,MAAO1I,MACtD,SAAKqN,GAAS,IAAI4a,YAAU5a,IAEnC,EAOD9O,yBAA4BmK,EAAY/I,GACpC,OAAO,WAAM,GAAG6rE,KAAkB3jD,mBAAmBnf,KAAO/I,GAAMK,MAC9D,SAAKqN,GAAS,IAAI4a,YAAU5a,IAEnC,EAMD9O,yBAA4BmK,GACxB,OAAO,SAAI,GAAG8iE,KAAkB3jD,mBAAmBnf,KAAO,CACtDsf,cAAe,QAEtB,EAMDzpB,+BAAkCmK,GAC9B,OAAO,SAAI,GAAG8iE,KAAkB3jD,mBAAmBnf,eAAgB1I,MAC/D,SAAKoI,GAASA,EAAK+F,IAAKd,GAAS,IAAIktB,gBAAcltB,KAE1D,CAJD9O,wFC7EA,iBAEAA,oBAAaktE,EAsBT3sE,YAAYoe,EAAiB,IACzB9d,KAAK4I,KAAOkV,EAAMlV,MAAQkV,EAAMtb,UAAY,QAC5CxC,KAAKknB,SAAWpJ,EAAMoJ,UAClBpJ,EAAMrU,QAAUqU,EAAMzU,UAAY,CAC9BhD,EAAGyX,EAAMzX,EAAIyX,EAAM+7C,WAAa,EAChCt1D,EAAGuZ,EAAMvZ,EAAIuZ,EAAMg8C,YAAc,GAEzC95D,KAAK45D,SAAW97C,EAAM87C,UAAY,EAClC55D,KAAKu6C,UAAYz8B,EAAMy8B,YAAa,iBAAY,IAAI9tC,MACpDzM,KAAKsT,MAAQwK,EAAMxK,MACnBtT,KAAK0P,SAAWoO,EAAMpO,SACtB1P,KAAKs5D,cAAgBx7C,EAAMw7C,YAC3Bt5D,KAAK05D,iBAAmB57C,EAAM47C,kBAAoB,UACrD,EAnCLv6D,kGCHA,iBAEA7B,WACAC,WAEAC,WACAC,iHAcQwG,uCAIIA,uCACJA,qEADeA,+HAEfA,yCAGC,cACuDA,+BAAMA,2BAC1DA,0CAAmBA,kHAASA,wCAAa,GAAEA,6BAAIA,oDAG/CA,wCACIA,0CACAA,kCAAGA,2CAAkBA,8BA5BrC,MA6CaqoE,UAA8B7sE,YAUvCC,YAA6Coe,GACzC/d,QADyCC,aAR5BA,WAAQ,IAAIqF,eAEtBrF,WAAO,sBAAiBA,KAAK0Z,MAAQ,IAAImP,QAIzC7oB,cAAU,EAIbA,KAAK0Z,KAAO1Z,KAAK8d,MAAMpE,MAAQ,GAC/B1Z,KAAKoI,MAAO,sBAAiBpI,KAAK0Z,KACrC,CAEMzZ,WACN,CAEM4xB,cACH,GAAK7xB,KAAKoI,OACVpI,KAAKoI,KAAKsM,mBACN1U,KAAKoI,KAAKiC,OAAO,CACjB,MAAMkiE,EAAW,IAAI1jD,OAAK,IACnB7oB,KAAKoI,KAAK9E,MACb29C,aAAa,IAEjBjhD,KAAKgY,MAAMhI,KAAK,CAAEqT,OAAQ,OAAQ0B,SAAUwnD,GAC/C,CACJ,EA1ELptE,gEA6CamtE,GAAqBroE,8BAUV6C,mBAAe,kDAV1BwlE,EAAqBpoE,gwBA1C1BD,uCAAQ,WAEAA,sBACJA,2BACAA,iCACAA,yCAAyC,cAC3BA,8BAAKA,+BAGvBA,yCAMAA,2CAOAA,kIApBQA,wHASHA,mEAAgB,cAMhBA,ghBC3Bb,iBACA3G,WAEAC,WACAC,WAEMgvE,EAAiB,uBAMvBrtE,yBAA4B4f,GACxB,MAAMlF,GAAQ,mBAAc,CAAEkF,MAC9B,OAAO,SAAI,GAAGytD,IAAiBztD,EAAI,IAAMlF,EAAQ,MAAMjZ,MACnD,SAAKoI,GAASA,EAAK+F,IAAKd,GAAkB,IAAI4a,YAAU5a,KAE/D,EAMD9O,uBAA0BmK,GACtB,OAAO,SAAI,GAAGkjE,KAAkB/jD,mBAAmBnf,MAAO1I,MACtD,SAAKqN,GAAS,IAAI4a,YAAU5a,IAEnC,EAMD9O,yBAA4B2D,GACxB,OAAO,SAAI,GAAG0pE,KAAkB1pE,KAASlC,MACrC,SAAKqN,GAAS,IAAI4a,YAAU5a,IAEnC,CAJD9O,8FCjCAI,wGAMY0E,sCAA8C,aAEtCA,8BAAIA,qCAAMA,0BAACA,2BAAOA,2BACtBA,2BACAA,iDACIA,mCAMAA,0CAAWA,yCAAgBA,0EAVbA,uGAatBA,sCAA+C,aAEvCA,+BAAKA,qCAAMA,0BAACA,2BAAOA,2BACvBA,2BACAA,iDACIA,mCAMAA,0CAAWA,kDAAyBA,0EAVrBA,wGAavBA,sCAAsD,aAE9CA,sCAAYA,qCAAMA,0BAACA,2BAAOA,2BAC9BA,2BACAA,iDACIA,oCAMAA,0CAAWA,iDAAwBA,0EAVtBA,+GAarBA,sCAA+C,cAEvCA,iCACJA,2BACAA,iDACIA,oCAOAA,0CAAWA,gDAAuBA,0EAXnBA,qGAcvBA,sCAA6D,qBAMrDA,8CACJA,oDAEJA,sCAAwD,qBAMhDA,yCACJA,uDA1ERA,uCACIA,yCAcAA,yCAcAA,yCAcAA,wCAeAA,wCASAA,wCASJA,qEA5E6BA,2CACLA,6EAcAA,8EAcAA,qFAcAA,8EAeAA,4FASAA,wFAtEhC,MA8FawoE,EAIFC,SAASljE,GACZ,MAAQs7B,UAAS6nC,WAAY3sE,KAAKoI,MAAMmK,SAAS/I,IAAS,GAC1D,OAAOs7B,GAAW6nC,CACrB,EArGLxtE,4DA8FastE,EAAiB,kDAAjBA,EAAiBvoE,yyBA3FtBD,8CAAiBA,+gBCLzB,iBAwBA,MAAa2oE,EA0CTltE,YAAYa,EAA8B,IACtCP,KAAKsJ,GAAK/I,EAAK+I,IAAM,GACrBtJ,KAAKwJ,KAAOjJ,EAAKiJ,MAAQ,GACzBxJ,KAAK8C,MAAQvC,EAAKuC,OAAS,GAC3B9C,KAAKwtD,WAAajtD,EAAKitD,YAAcjtD,EAAKiJ,MAAQ,GAClDxJ,KAAKytD,UAAYltD,EAAKktD,WAAa,GACnCztD,KAAK6tD,MAAQttD,EAAKstD,OAAS,GAC3B7tD,KAAKuuB,aAAehuB,EAAKguB,cAAgB,GACzCvuB,KAAKu6B,MAAQh6B,EAAKg6B,OAAS,GAC3Bv6B,KAAK6sE,MAAQtsE,EAAKssE,OAAS,GAC3B7sE,KAAKy4C,SAAWl4C,EAAKk4C,UAAY,GACjCz4C,KAAKwkD,YAAcjkD,EAAKikD,UACxBxkD,KAAKkhB,aAAe3gB,EAAK2gB,WACzBlhB,KAAK2e,SAAWpe,EAAKoe,WAAY,EACjC3e,KAAKqZ,SAAW9Y,EAAK8Y,WAAY,EACjCrZ,KAAK29C,gBAAkBp9C,EAAKo9C,iBAAmB,GAC/C,MAAMz7B,EAAS3hB,EAAK2hB,QAAU,GAC1B3hB,EAAKusE,WAAW5qD,EAAOrF,KAAK,iBAC5Btc,EAAKwsE,SAAS7qD,EAAOrF,KAAK,mBAC1Btc,EAAKysE,YAAY9qD,EAAOrF,KAAKtc,EAAKysE,YACtChtE,KAAKkiB,OAASA,EACdliB,KAAK6iB,eAAiBtiB,EAAKsiB,gBAAkB,GAC7C7iB,KAAK6iB,eAAeoqD,oBAChB1sE,EAAK0sE,qBAAuBjtE,KAAK6iB,eAAeoqD,oBACpDjtE,KAAKihD,aAAejhD,KAAK8C,OAAO8qD,SAAS,GAAGF,iBAC5C1tD,KAAKktD,eAAiB3sD,EAAK2sD,iBAAkB,EAC7CltD,KAAKitE,sBAAwBjtE,KAAK6iB,gBAAgBoqD,oBAClD,UAAWtoD,KAAOpkB,EACRokB,KAAO3kB,OAAOA,KAAK6iB,eAAe8B,GAAOpkB,EAAKokB,GAE3D,EAxELxlB,SA2EAA,kBAAa+tE,UAAkBN,EAU3BltE,YAAYa,EAA2B,IACnCR,MAAMQ,GACNP,KAAKmtE,mBAAqB5sE,EAAK4sE,oBAAsB,GACrDntE,KAAKotE,0BACD7sE,EAAK6sE,4BAA6B,EACtCptE,KAAKghD,YACDzgD,EAAKsiB,gBAAgBm+B,aAAezgD,EAAKygD,aAAe,GAC5DhhD,KAAKiiB,OAAS1hB,EAAKsiB,gBAAgBZ,QAAU1hB,EAAK0hB,QAAU,SAC/D,GAGL9iB,kBAAakuE,UAAkBT,EAU3BltE,YAAYa,EAA2B,IACnCR,MAAMQ,GACNP,KAAK+kE,YAAcxkE,EAAKwkE,aAAe,GACvC/kE,KAAKutD,SAAWhtD,EAAKgtD,UAAY,GACjCvtD,KAAKwC,SAAWjC,EAAKiC,UAAY,GACjCxC,KAAK+D,eAAiBxD,EAAKwD,YAC9B,EAhBL5E,4GCxHA,iBACA5B,UACAC,sBAEM8vE,EAAoB,GAEpB/9B,EAAa,IAAI1mB,OAEvB,MAGa0kD,EAKI33D,UAAUmQ,GAAe,qBAClC,IAAKA,EAAS,OAAOwpB,EACrB,IAAI71B,EAAO4zD,EAAUn1D,KAAK,EAAG7O,KAAIxG,WAAYwG,IAAOyc,GAAWjjB,IAAUijB,GACzE,OAAIrM,IACJA,QAAa,eAAUqM,GAASllB,YAC5B6Y,IAIJA,QAAa,eAAUqM,GAASllB,YAC5B6Y,IACA4zD,EAAUzwD,KAAKnD,GACRA,GAEJ61B,EAd2B,IAerC,EAvBLpwC,mDAGaouE,EAAQ,0DAARA,EAAQt3B,mLCZrB,iBACA34C,WAEAC,WAEA,IAAIiwE,EAAa,EAINruE,cAAc,cAEzBA,mCAAsCkpC,GAClClpC,cAAckpC,CACjB,EAED,MAAMolC,EAAwB,GAQ9BtuE,8BACImK,EACAE,EACAkkE,GAEKpkE,IACDA,EAAK,QAAQkkE,KAEZhkE,IACDA,EAAO,QAAQgkE,UAEF1uD,IAAb4uD,IACAA,OAAapwE,wBAAqB,OAAS,IAE/C,MAAMixB,EAAem/C,EAAW,WAAavuE,cAAY4D,MAAM,KAAK,GACpE,IAAI4qE,EAAsB,GAC1B,MAAMC,EAAiBrtD,KAAKsM,KACxB,0BAAqB,GAAK,EAC1B4gD,EAAYxkE,QAEhB,QAASvL,EAAI,EAAGA,EAAIkwE,EAAgBlwE,IAChCiwE,EAAU9wD,KAAK4wD,GAAY,0BAAqBA,EAAYxkE,UAEhE0kE,GAAY,YAAOA,GACnB,MAAM7qE,EAAQ,GAAG0G,EAAKzG,MAAM,KAAKuH,KAAK,KAAKqP,iBACvC+zD,EAAW,OAAS,KACrBvuE,gBACHsuE,SAAY5wD,KAAK/Z,GACV,CACHwG,KACAE,OACAgkD,WAAYhkD,EAAKzG,MAAM,KAAK,GAC5B0qD,UAAWjkD,EAAKzG,MAAM,KAAK,GAC3BD,QACA+qD,MAAO,iBACPggB,QAASH,EACTn/C,aAAc,CACVjlB,GAAIilB,EAAaxrB,MAAM,KAAKuH,KAAK,KAAKqP,cACtCnQ,KAAM+kB,GAEVy+C,WAAY,eAAc,0BAAqB,MAC/Cc,YAAY,0BAAqB,QACjCH,YACAvE,MAAO,GAAG9/D,QAEjB,EAMDnK,8BAAiCua,GAC7B,IAAKA,EACD,MAAMylB,MAAM,kBAGhB,MAAM4uC,EAAS,CACXvkE,KAAM,IAAIpE,cAAYsU,EAAKlQ,MAAQ,IACnC1G,MAAO,IAAIsC,cAAYsU,EAAK5W,OAAS,GAAI,CACrCsC,aAAWtC,MACXsC,aAAWuZ,WAEf4P,aAAc,IAAInpB,cACdsU,EAAK6U,cAAgB,GACrBnpB,aAAWuZ,UAEfkvC,MAAO,IAAIzoD,cACPsU,EAAKm0C,OAAS,GACdzoD,aAAW07B,QAAQ,sBAEvBmsC,oBAAqB,IAAI7nE,cAAYsU,EAAKuzD,sBAAuB,GACjE/f,eAAgB,IAAI9nD,cAAYsU,EAAKwzC,iBAAkB,IAK3D,OADa,IAAI9nD,YAAU2oE,EAE9B,EAED5uE,+BACIua,EAAkB,IAAImP,YACtBze,EAAe,IAEf,MAAM2jE,EAAS,CACXvkE,KAAM,IAAIpE,cAAYsU,EAAKlQ,MAAQ,IACnC1G,MAAO,IAAIsC,cAAYsU,EAAK5W,OAAS,GAAI,CACrCsC,aAAWtC,MACXsC,aAAWuZ,WAEf4P,aAAc,IAAInpB,cACdsU,EAAK6U,cAAgB,GACrBnpB,aAAWuZ,UAEfkvC,MAAO,IAAIzoD,cAAYsU,EAAKm0C,OAAS,IACrCzjD,KAAM,IAAIhF,cAAYgF,GAAQ,GAAI,CAAChF,aAAWuZ,YAIlD,OADa,IAAIvZ,YAAU2oE,EAE9B,CApBD5uE,6FCtGA,iBAEA7B,WAEAC,WACAC,WACAC,WACAC,WAEAC,UACAC,WAKAuG,GAHA5E,SACAA,SACAA,SACAA,UACA6E,WACAC,0JAWA,MAea2pE,GAfb7uE,4DAea6uE,EAAiB,iDAAjBA,uDAZLvuE,eACA2F,cACAA,sBACA0B,kBACAqiB,mBACAC,mBACA3hB,oBACAP,2BACAM,mDAjBJymE,4BAAyB,4OAEzBC,iCAA8B,iKAC9BC,6BAAyB,yJCxB7B5uE,eACAhC,WACAC,WACAC,WACAC,2GAqDoBuG,uCAGC,YAEOA,mDACJA,2BACAA,uCAEC,qBAEOA,qMAA6C,uIAClB,EAAI,GAClCA,oGARDA,sGAMIA,+JAzDxBA,sCAGC,WAIOA,2CACAA,oCAAKA,sBAAeA,2BACpBA,sCAAgCA,sBAAgBA,2BAChDA,sCAAgCA,sBAAgBA,6BAEpDA,sCAAgE,WAExDA,oDACJA,2BACAA,2CAKC,YALDA,CAKC,aAE8BA,uBAAYA,2BACnCA,6CAA2BA,yCAAeA,+BAGlDA,wCAA8C,YAA9CA,CAA8C,eAI5BA,8BAAIA,6BAElBA,wCACIA,4FAEJA,+BAGRA,wCAAsC,WAE9BA,+CACJA,2BACAA,wCAGIA,0CAgBJA,6BAEJA,wCAAqD,gBAK7CA,kHAASA,wCAAa,GAEtBA,kCACJA,6BAEJA,2CAIC,eACaA,+BAAKA,wGAxEAA,+DACVA,oEAC2BA,qEACAA,qEAU5BA,uEAG2BA,iEAyBPA,uEAoBpBA,uIAeRA,0CAIIA,+KAAqC,EAAI,GAEzCA,sBACJA,uDAJIA,mCAGAA,+FAIJA,uCAIIA,0CACAA,kCAAGA,oEAA2CA,oCADjCA,gEAtG7B,MAAMmqE,EAAkB,WAExB,MA2GaC,EAkBT3uE,YACYC,EACAstB,GADAjtB,iBACAA,mBAnBIA,aAAU,CACtB,CAAEsJ,GAAI,MAAOE,KAAM,0BACnB,CAAEF,GAAI,MAAOE,KAAM,wBACnB,CAAEF,GAAI,MAAOE,KAAM,wBAEhBxJ,YAASA,KAAKuQ,QAAQ,GAAGjH,GACzBtJ,cAAW,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAChDA,cAAW,GACXA,cAAU,EACVA,cAAU,EACDA,wBAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,GAE1CA,cAAoB,IAAIshB,UAAQ,CACpC1Y,KAAM,eACNS,SAAUrJ,KAAKuQ,QAAQ,GAAGjH,IAM1B,CAEGrJ,WACHD,KAAKoC,SAAWpC,KAAKL,UAAUwC,IAAIisE,IAAoB,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5FpuE,KAAKsuE,gBACLtuE,KAAKuuE,qBACR,CAEU70D,WACP,OAAO,kBACV,CAEYmY,cAAW,gCACpBrtB,EAAKkM,SAAU,EACflM,EAAKyoB,YAAY4lB,cAAe,EAC5BruC,EAAK2wB,SAAW3wB,EAAK+L,QAAQ,GAAGjH,IAAM9E,EAAK2wB,SAAW3wB,EAAKsc,SAASzX,iBAC9D,iBACF,IAAIiY,UAAQ,IAAK9c,EAAKsc,SAAUzX,SAAU7E,EAAK2wB,UAE9Ct0B,YACA8B,MAAOpD,IACJ,QAAK0tB,YAAY4lB,cAAe,EAChCruC,EAAKkM,SAAU,EACTnR,KAGlBiF,EAAK7E,UAAUqd,gBAAgBoxD,EAAiB5pE,EAAKpC,UACrDoC,EAAKkM,SAAU,EACflM,EAAKyoB,YAAYtpB,OAhBG,IAiBvB,CAEO2qE,gBACJ,IAAItuD,EAAM,IAAIvT,KACdzM,KAAKwuE,SAAWxuE,KAAKyuE,mBAAmB1/D,IAAKrO,IACzC,YAAOsf,EAAKtf,GAAGgjB,UAEtB,CAEa6qD,sBAAmB,gCAC7B,MAAMvlE,QAAa,mBAAc,CAC7BJ,KAAM,cACNkR,cAAc,kBAAY,gBAAWrN,KAAKiM,QAC1CqB,YAAY,kBAAY,cAAStN,KAAKiM,UACvC7X,YACCmI,EAAKC,SACLzE,EAAK2wB,OAASnsB,EAAK,GAAGK,SACtB7E,EAAKsc,SAAW9X,EAAK,GARI,IAUhC,EAhLL7J,oEA2GakvE,GAAyBpqE,iJAAzBoqE,EAAyBnqE,ymDAxG9BD,yCAkFAA,gDACIA,2CAQJA,2BACAA,iIA1FKA,0CAAgB,cAmFIA","names":["c","a","n","t","i","o","M","s","u","d","routes","path","component","components_1","not_found_component_1","canActivate","canLoad","children","room_booking_component_1","booking_confirmed_component_1","meeting_booking_component_1","meeting_success_component_1","desk_booking_component_1","desk_success_component_1","find_space_component_1","upcoming_bookings_component_1","pathMatch","redirectTo","AppRoutingModule","exports","router_1","forRoot","useHash","e","AppComponent","common_1","constructor","_settings","_org","_cache","_snackbar","super","this","ngOnInit","console","info","window","history","replaceState","data","unused","MOCKS","_","initialised","pipe","toPromise","Office","onReady","_initialiseAuth","_finishInitialise","timeout","tkn","get_token","auth","getAccessToken","Promise","resolve","clearTimeout","sessionStorage","setItem","JSON","stringify","context","ui","_authenticateWithOffice","local","p","get","settings","local_login","storage","mock","location","origin","includes","catch","error","onInitError","email","split","pathname","displayDialogAsync","height","width","result","dialog","value","addEventHandler","EventType","DialogMessageReceived","token","close","href","getItem","messageParent","is_logged_in","reload","i0","selectors","I","C","r","E","y","v","AppModule","bootstrap","app_component_1","space_pipe_1","imports","platform_browser_1","animations_1","app_routing_module_1","book_module_1","shared_module_1","http_1","forms_1","core_1","snack_bar_1","payments_1","assets_1","form_fields_1","catering_1","service_worker_1","register","enabled","environment_1","production","NotFoundComponent","router","g","h","f","x","T","b","F","SharedComponentModule","bookings_1","events_1","button_1","datepicker_1","dialog_1","form_field_1","icon_1","input_1","progress_spinner_1","progress_bar_1","autocomplete_1","select_1","chips_1","core_2","menu_1","checkbox_1","expansion_1","tabs_1","badge_1","tooltip_1","radio_1","slider_1","DeskBookingComponent","_service","_router","clearForm","form","makeBooking","confirmPost","navigate","ctx","DeskBookingFormComponent","allow_assets","setOptions","type","subscription","valueChanges","subscribe","list","length","setBookingAsset","desk","patchValue","asset_id","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingSuccessComponent","last_success","MeetingBookingComponent","_bottom_sheet","host","valid","join","sheet_ref","open","meeting_flow_confirm_component_1","instance","show_close","afterDismissed","setView","MeetingBookingFormComponent","_dialog","has_catering","hide_notes","hide_attendees","max_duration","can_book_for_others","allow_all_day","findAvailableTime","attendees","organiser","date","duration","ref","users_1","users","afterClosed","componentInstance","MeetingBookingSuccessComponent","ROUTES","BookModule","forChild","bottom_sheet_1","button_toggle_1","BookingConfirmedComponent","_state","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","FeaturesFilterService","available_spaces","rxjs_1","_selected_features","asObservable","_features","next","room_features","selected_features","getValue","features","feature","getSelectedFeatures","selected_features$","features$","arr","filter","item","applyFilter","requested_features","sortSelectedFeatures","updated_spaces$","spaces$","spaces","space","_sort_and_join","feature_list","updated_spaces_emitter","array","sort","features_array","map","clearFilter","OnDestroy","features_sub","unsubscribe","factory","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","building_list","active_building","building","applyFilters","dismiss","closeModal","FindSpaceItemComponent","selectedChange","emit","selected","FindSpaceComponent","_bottomSheet","_spaces","_mapService","_roomConfirmService","options","bld","levelsForBuilding","loading","H","space_view","setTimeChips","setBuilding","book_space","locateSpaces","locatable_spaces$","maps_list$","maps","selected_level","features_loaded$","applyMapDecorations","_map_features","map_features","map_features$","map_actions$","handleBookEvent","book","show_room_details$","updateSelectedSpace","openFilter","bottomSheetRef","filter_space_component_1","buildings","openRoomDetails","openRoomDetail","selected_space","resetSpace","controls","duration_minutes","updateSelectedLevel","processFeature","processStyles","map_styles$","style_map","MapService","_map_loaded","_features_loaded","selected_space$","_locatable_spaces","_maps_list","locatable_spaces","maps_list","level","loadMap","action","callback","openRoomTile","mapsList","Map","values","focus","content","z_index","zoom","styles","display","room_tile_component_1","panelClass","RoomBookingComponent","_document","newForm","findSpace","markAllAsTouched","storeForm","downloadTemplate","RoomConfirmService","_space_pipe","_selected_space","forEach","space_list","room_details_ref","room_details_component_1","selectedSpace","openRoomConfirm","room_confirm_component_1","bookRoom","id_list","Object","keys","all","transform","resources","system","postForm","err","RoomConfirmComponent","_bottomSheetRef","unix_time","start_time","durationMinutes","end_time","title","confirmBooking","show_submit_button","RoomDetailsComponent","selectRoom","room_added","back","RoomTileComponent","cancel","UpcomingBookingsComponent","_schedule","filtered_bookings","toggleType","startPolling","isEvent","trackByFn","__NgCli_bootstrap_1","bootstrapModule","app_module_1","ctx_r2","MeetingFlowConfirmComponent","_event_form","_sheet_ref","k","cancelPostForm","event","_space","levelWithID","find","address","display_name","$localize","i18n_3","ScheduleStateService","shown_types","now","_date","_poll","_loading","unsubWith","s1","s2","binding","obs","listen","event_list","resource","hasSubscription","bind","_space_bookings","log","user","toLowerCase","_update","query","period_start","period_end","_poll_type","api_events","ws_events","events","visitors","desks","parking","bookings","_filters","bkns","filters","triggerPoll","delay","interval","document","visibilityState","stopPolling","clearInterval","setDate","removeItem","clear","tslib_1","AssetDetailsComponent","images","url","AssetFiltersDisplayComponent","AssetFiltersComponent","AssetListComponent","_asset_state","filtered_assets","isFavourite","favorites","selectAsset","asset","onSelect","EMPTY_FAVS","AssetSelectModalComponent","_items","selected_ids","count","reduce","amount","isSelected","setSelected","state","push","toggleFavourite","fav_list","saveUserSetting","AssetStateService","_search","replace","_options","asset_list","asset_bookings","category","localeCompare","available_assets","search","assets","setSearch","Asset","_data","barcode","brand","size","specifications","purchase_date","purchase_price","purchase_details","consumables","general_details","invoices","locations","asset_class_1","required","expiry_date","ASSET_ENDPOINT","undefined","q","updateAsset","createAsset","AssetsModule","asset_select_modal_component_1","asset_details_component_1","asset_filters_component_1","asset_filters_display_component_1","asset_list_component_1","BookingCardComponent","base_class_1","_route","queryParamMap","params","has","booking","viewDetails","day","is_today","period","start","end","dur","hours","Math","floor","minutes","booking_details_modal_component_1","edit","remove","BookingDetailsModalComponent","_booking","toggleCheckedIn","A","checking_in","checked_in","BOOKING_URLS","BookingFormService","_payments","booking_class_1","parse","loadAssets","Array","_form","_1","getRawValue","zone_id","bookable","every","bkn","status","groups","members","group","pop","view","_view","setFeature","enable","splice","findIndex","resetForm","extension_data","loadForm","openBookingLinkModal","force","booking_link_modal_component_1","checkQuestions","details","icon","reason","postFormForGroup","ignore_check","checkResourceAvailable","all_day","valueOf","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","approved","extra_members","active_asset","_getNearbyResources","group_members","idx","user_email","desk_questions_modal_component_1","race","key","allowed_bookings","D","current","metadata","map_url","nearby_assets","BookingLinkModalComponent","_event","IGNORE_EXT_KEYS","Booking","booking_start","nearestTo","booking_end","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","user_id","user_name","rejected","deleted","booked_by_id","booked_by_name","booked_by_email","approver_id","approver_email","approver_name","access","event_id","toJSON","is_done","centered_at","desk_ids","element","createElement","style","position","top","body","appendChild","viewer","point","mappings","dist","closest","sqrt","removeChild","validators_1","company","booked_by","secondary_resource","other_asset_type","booker","emitEvent","disable","findNearbyFeature","BOOKINGS_ENDPOINT","method","ts_client_1","encodeURIComponent","updateBooking","createBooking","response_type","user_class_1","asset_id_list","ignore","queryBookings","P","SharedBookingsModule","form_fields_module_1","components_module_1","ctx_r1","DeskConfirmModalComponent","can_set_date","desk_list","hide_reason","can_set_host","confirm","DeskListFieldComponent","fn","_onChange","_onTouch","disabled","desk_select_modal_component_1","changeResources","items","capacity","room_size","setValue","removeResource","new_value","writeValue","provide","useExisting","multi","decls","DeskQuestionsModalComponent","travelled","unwell","contact","submit","failure","DeskDetailsComponent","ngOnChanges","changes","updateFeature","map_pin_component_1","DeskFiltersDisplayComponent","_bsheet","desk_filters_component_1","DeskFiltersComponent","_bsheet_ref","active_buildings","active_levels","l","can_close","allow_time_changes","book_until","DeskListComponent","show_fav","desk_id","selectDesk","DeskMapComponent","levels","setZoom","new_zoom","max","min","resetMap","center","DeskSelectModalComponent","_dialog_ref","i18n_9","DesksService","bookDesk","error_on_host","desk_confirm_modal_component_1","makeDeskBooking","for_user","booking_data","InviteVisitorFormComponent","O","sent","initFormZone","setValidators","filterVisitors","setVisitor","filtered_visitors","onDone","done","sendInvite","visitor_details","old_visitors","organisation","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceFiltersDisplayComponent","parking_filters_component_1","zone_ids","_updateLocation","removeFeature","feat","ParkingSpaceFiltersComponent","level_list","lvl","toggleFeature","L","new_list","ParkingSpaceListComponent","space_id","selectSpace","ParkingSpaceLocationPinComponent","ParkingSpaceSelectMapComponent","parking_location_pin_component_1","_seletedSpace","ParkingSpaceSelectModalComponent","space_r1","ParkingSpaceListFieldComponent","parking_select_modal_component_1","Calendar","primary","summary","can_edit","space_class_1","availability","starts_at","ends_at","hidden","CALENDAR_ENDPOINT","calendar_class_1","calendarsToSpaces","org","cal","queryCalendarAvailability","$event","set_r2","CateringConfigModalComponent","require_notes","catering_interfaces_1","rulesets","config","set","rules","new_id","random","saveNotesSetting","saveNotes","saveChanges","CateringImportMenuModalComponent","handleFileEvent","target","files","file","fileReader","FileReader","addEventListener","catering_item_class_1","tags","multiple","unit_price","readAsText","ctx_r20","ctx_r22","ctx_r23","ctx_r24","ctx_r25","CateringItemModalComponent","accept_points","discount_cap","keycodes_1","categories","tag_list","renderPercent","hasTag","tag","addTag","markAsDirty","input","trim","removeTag","existing_tag","index","indexOf","CateringItem","quantity","option_list","active","hide_for_zones","unit_price_with_options","total_cost","options_string","custom_id","CateringListFieldComponent","updated_list","addItems","new_catering_order_modal_component_1","optionList","cateringitem","CateringMenuItemComponent","_catering","addOption","option","deleteOption","addItem","deleteItem","is_editable","is_enabled","updateItem","symbol","currency","CateringMenuComponent","menu","menu_map","CateringItemOptionModalComponent","types","new_option","parent","concat","CateringOrderItemComponent","CateringOrderListComponent","_orders","filtered","ngOnDestroy","order","CateringOrderModalComponent","code","currency_code","R","catering_order_class_1","getCateringConfig","cat","menu_items","updateMenuQuantities","choose_options","old_item","itm","opt","selectOptions","then","new_item","w","updateItemQuantity","optionsFor","saveOrder","confirmOrder","show_order_details","CateringItemDetailsComponent","updateGroupOption","group_state","updateCheckedState","option_state","group_list","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","setFilters","toggleCategory","toggleTag","CateringItemListItemComponent","CateringItemListComponent","filtered_menu","available_menu","m","selected_items","item_id","selectItem","clear_state","CateringOrderStateService","post","charge_codes","disabled_rooms","opts","NewCateringOrderModalComponent","_order","displayed","CateringOrderOptionsModalComponent","saveOptions","CateringOrder","system_id","item_count","charge_code","invoice_number","notes","deliver_at","getTime","CateringOrderComponent","catering_vars_1","updateStatus","statuses","CateringOrdersService","ext","orders","checkOrder","updated_order","event_class_1","catering","CateringRoomsStateModalComponent","toggleRoom","rooms","enableSelected","saveSettings","disableSelected","disabled_list","CateringStateService","_menu","_currency","getCateringForZone","manageCateringOrder","S","catering_order_modal_component_1","catering_item_modal_component_1","updateMenu","catering_option_modal_component_1","catering_order_options_modal_component_1","class","editConfig","catering_config_modal_component_1","updateConfig","importMenu","catering_import_menu_modal_component_1","updated_menu","old_settings","addItemToOrder","match","SharedCateringModule","colour","ChargeCodeListModalComponent","newCode","removeCode","addCodesFromFile","reader","evt","srcElement","saveChargeCodes","cleaned_codes","RULE_REQUESTS","fresh","is_available","rule","matches","condition","opacity","str","_timer","cache","isEnabled","checkForUpdate","activateUpdate","setInterval","BaseClass","_initialised","is_initialised","destroy","_timers","_intervals","_subscriptions","unsub","Function","Error","setTimeout","contains","subs","utc_date","chunks","formatCalFileText","meeting_url","toISOString","fmt","formatAllDay","formatUTC","text","trp","dates","emails","add","rru","startdt","enddt","subject","allday","to","PLACEOS_APP_ACCESS","FeatureAvailableGuard","checkFeature","can_activate","pattern","charAt","toUpperCase","slice","_app_name","ceil","confirm_modal_component_1","msg","args","stream","app_name","jest","debug","colors","getItemWithKeys","el","pos","chars","randomInt","openConfirmModal","csv","delimiter","objPattern","RegExp","arrMatches","arrData","exec","headers","row","reject","json","valid_keys","filename","contents","setAttribute","click","base64","base64Url","jsonPayload","decodeURIComponent","atob","charCodeAt","toString","an_array","stack","res","isArray","reverse","start1","end1","start2","end2","rand","sfc32","imul","xmur3","seed","localeString","querySelector","getAttribute","navigator","language","is24HourTime","prefix","invalid","getInvalidFields","obj","word","substring","GoogleAnalyticsService","ga","GoogleAnalyticsObject","arguments","getElementsByTagName","async","src","parentNode","insertBefore","service","load","tracking_id","setUser","label","app_prefix","screen","appName","screenName","page","route","last_route","timing","variable","timers","INVALID_STANDALONE_KEYS","HotkeysService","mapKey","last_down","keydown_states","keydown_observers","counter","combo_end","preventDefault","combo","combination","validCombination","registered_combos","last_key","updateCombinationEndList","presses","total","non_meta","message","on_action","warn","snackbar_ref","onAction","snackbar","notify","protocol","domain","hostname","port","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setupPlace","rootObject","functionToHook","hookingFunction","previousFunction","call","RemoteLoggingService","_events","_system_id","_bindTo","_event_history","execute","_patchConsoleMethods","_logging_bindings","setSystem","hookMethod","_handleEvent","event_type","subtype","timestamp","startsWith","mod","module","buildingConfigs","roomConfigs","output","roomConfigBuilder","SettingsService","_title","time","version_1","built","semver","hash","init","overrides","_overrides","_applyCssVariables","_observables","_subjects","getTitle","setTitle","_setDarkMode","application","_user_settings","_applyUserSettings","__1","_setFontSize","_pending_settings","settings_1","override_settings","override","_savePendingChanges","variable_map","css_string","getElementById","head","innerText","parentElement","fontSize","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","columns","multiple_spaces","desk_start","breakdown","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","spectator","detectChanges","fixture","whenStable","whenChangesStable","tz","offset_diff","EMPTY_USER","_current_user","dirty","raw","distance","suffix","semverString","version","VorlonService","injectVorlonScript","removeVorlonScript","_script","ActionIconComponent","AuthorisedAdminGuard","checkUser","segments","AuthorisedUserGuard","_access","BindingDirective","_element","_renderer","bindVariable","sys","model","previousValue","on_event","nativeElement","_binding","modelChange","ChangelogModalComponent","changelog","N","Q","J","MAT_MODULES","clipboard_1","paginator_1","table_1","portal_1","sort_1","scrolling_1","ComponentsModule","interactive_map_component_1","useValue","map_locate_modal_component_1","icon_component_1","debug_console_component_1","custom_tooltip_component_1","sanitise_pipe_1","maxHeight","maxWidth","ConfirmModalComponent","confirm_text","cancel_text","disableClose","onConfirm","CustomTableComponent","ngAfterViewInit","data_source","_sort","paginator","pagination","_paginator","filterPredicate","dataSource","display_column","column_size","CustomTooltipData","CustomTooltipComponent","_overlay","_injector","hover","_updateInjector","_overlay_ref","x_pos","y_pos","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","backdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","injector","providers","COLOR_MAP","network","dom","URL_STARTS","DebugConsoleComponent","_logs","_hotkey","json_display_component_1","logs","show","DurationPipe","shorten","pure","FixedPipe","places","toFixed","GlobalBannerComponent","has_viewed","GlobalLoadingComponent","online","IconComponent","ImageCarouselComponent","InteractiveMapComponent","ratio$","_on_changes","ratio","svg_ratio$","svg_ratio","zoom$","onResize","updateDisplay","createView","updateInjectors","focusOn","labels","actions","updateView","updateFeatureList","desired_zoom","desired_center","_outlet_el","rect","track_id","_feature_list","toArray","old_injectors","injectors","_extra_data","JsonDisplayComponent","_updateFormatting","formatted_json","LoginComponent","username","password","logo","toPassword","pwd_field","login","setErrors","MapLocateModalComponent","MapPinComponent","_details","fill","stroke","show_message","MapPolygonComponent","_cdr","scale","zoom_value","data$","processPoints","points","diff","x_min","x_max","y_min","y_max","range","point_list","MapRadiusComponent","_el","radius","last_seen","last_seen_at","updateRadius","box","MisconfiguredComponent","ctx_r3","PopoutMenuComponent","RedirectComponent","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","SecurityContext","SanitizePipe","sanitize","RESOURCE_URL","URL","SCRIPT","STYLE","HTML","StatusOverlayComponent","UnauthorisedComponent","UserAvatarComponent","initials","parts","DEFAULT_KEYS","VirtualKeyboardComponent","focusInput","blur","global","bottom","centerHorizontally","handleKeyPress","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","keyset","AttendeeListComponent","i18n_1","EventCardComponent","zone_list","event_details_modal_component_1","EventDetailsModalComponent","level_class_1","building_class_1","response_status","_load","allow_edit","checkin","EventFormService","limit_map","limited_zones","zone_limit","favorite_spaces","filtered_spaces","has_calendar","system_ids","current_available_spaces","future_available_spaces","some","catering_notes","clearValidators","updateValueAndValidity","listenForStatusChanges","reset","openEventLinkModal","event_link_modal_component_1","creator","checkSelectedSpacesAreAvailable","is_owner","calendar","catering_charge_code","_makeBooking","B","exclude","space_ids","exclude_range","EventLinkModalComponent","has_actioned","_default_user","CalendarEvent","event_start","event_end","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","recurring","recurring_master_id","from_bookings","master","recurrence","range_start","range_end","days_of_week","old_system","attachments","is_external","guests","can_check_in","EVENTS_ENDPOINT","updateEvent","createEvent","guest_id","SharedEventsModule","attendee_list_component_1","event_card_component_1","min_size","slots","bkn_start","bkn_end","blocks","getFreeTimeSlots","blk","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","stringToMinutes","rulemap","ruleset","checkRulesMatch","conditions","is_before","addToDate","is_after","min_length","max_length","rulesForSpace","BOOKING_DATE","validateCateringField","catering_control","control","catering_field","visitor_type","needs_space","needs_parking","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","new_bookings","filter_options","from","filtered_list","organizer","from_booking","is_future","ActionFieldComponent","performAction","show_tooltip","AssetListFieldComponent","removeAsset","addAssets","CounterComponent","ctrl_key","step","shift_key","registerOnChange","registerOnTouched","FieldDateAdapter","format","displayFormat","DateFieldComponent","_from","until","_to","date_string","old_date","new_date","getHours","getMinutes","setDisabledState","useClass","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DurationFieldComponent","duration_options","generateDurationOptions","_updateOption","dayjs","custom_options","FormFieldsModule","user_search_field_component_1","HostSelectFieldComponent","observer","arrayBuffer","upload_details","progress","formatted_size","upload","blob","blobUtil","arrayBufferToBlob","upload_list","file_name","access_url","complete","readAsArrayBuffer","ImageListFieldComponent","_clipboard","_upload_list","upload_ids","ids","_list_el","view_space","addImageUrl","copyLink","copy","viewImage","removeImage","addImage","chipInput","inputElement","uploadImages","uploadFile","resolved","update_fn","_updateUploadHistory","done_list","item_list","ItemListFieldComponent","addChipItem","removeChipItem","RichTextInputComponent","_editor","root","innerHTML","_initialiseEditor","delta","clipboard","convert","setContents","Quill","_editor_el","bounds","_container_el","placeholder","readOnly","readonly","theme","on","_updateFn","off","SpaceListFieldComponent","changeSpaces","new_space_select_modal_component_1","removeSpace","i18n_11","TimeFieldComponent","show_select","_time_options","generateAvailableTimes","no_past_times","time_options","showSelect","select_field","openedChange","datestamp","show_past","UploadFileFieldComponent","onFileEvent","_uploadFile","on_change","created_at","UploadListFieldComponent","removeFile","re","test","UserListFieldComponent","search$","staff","visitors_list","validateEmail","openNewUserModal","search_valid_email","updateSearch","addUserFromEmail","addUser","_search_el","active_list","visit_expected","removeUser","a_user","addUsersFromFile","processCsvData","staff_id","first_name","last_name","user_utilities_1","internal_emails","endsWith","phone","downloadCSVTemplate","custom_template","displayFn","new_user_modal_component_1","ctx_r7","ctx_r11","UserSearchFieldComponent","query_fn","search_str","_input_el","search_results$","user_list","resetSearchString","active_user","assets_data_1","route_params","request","new_event","req","registerMocks","EVENT_TIME","seconds","milliseconds","nextEventTime","save","TYPES","TRACKING","users_data_1","zone_data_1","lvls","lvl_spaces","spaces_data_1","approver","asset_count","plate_number","tracking","bookings_data_1","query_params","user2","user3","handleSpaceAvailability","systems","events_data_1","mx","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","setup","event_spaces","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","PREDEF_USERS","common_mock_1","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","updated_at","triggers","num","mockLevel","MOCK_METADATA","contacts","bindings","area_management","location_services","contact_tracing","payments","catering_data_1","generateMockDeskMetadata","assignee","assigned_to","assigned_name","generateParkingSpaces","map_regions","areas","properties","label_location","geometry","coordinates","DESK_FEATURES","CameraTilt","CameraPan","CameraModule","presets","$pan","dir","$tilt","tilt","$recall","$save_preset","createCameraModule","CaptureModule","remaining","$start","$pause","$resume","$stop","createCaptureModule","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","$close_contacts","beginning","ending","mac_address","createContactTracingModule","RoomModule","inputs","connected","input_list","output_list","env_sources","outputs","available_outputs","source","$power","$share","$route","$updateState","following","$unroute","$connect","$disconnect","$link","$merge","$split","$notify","$preset","$volume","volume","$mute","mute","$unmute","$environment","$lock","locked","$unlock","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display3","Display4","Display5","states","createSystemModule","MockAreaManagementModule","$locate_user","$update","updateLocations","MAC_LOOKUP","no","len","area","fixed","usr","at_location","mac","ts_md5_1","hashStr","coordinates_from","s2_cell_id","variance","map_width","map_height","MockLocationServicesModule","$check_ownership_of","priority","overview","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","area_id","DisplayModule","createDisplayModule","MockBookingModule","$start_meeting","last_booking_started","$end_meeting","$book_now","current_booking","next_booking","pending","pending_before","pending_period","updateBookings","MeetingPushModule","$econtrol","createMeetingPushModule","MicrophoneModule","createMicrophoneModule","PaymentsModule","$list_payment_methods","$add_payment_method","$get_product_prices","$create_payment_intent","$confirm_payment_intent","$cancel_payment_intent","$create_customer","createPaymentsModule","VideoConferenceModule","Status","$show_camera_pip","visible","selfview","$mic_mute","mic_mute","$presentation_mode","presentation_mode","$hangup","$call_place_on_hold","calls","$call_resume","$video_layout","layout","video_layout","$dtmf_send","digit","$dial","dial_number","createVideoConferenceModule","System","ContactTracing","AreaManagement","LocationServices","desks_1","Camera","Display","Microphone","Capture","MeetingPush","VidConf","Payment","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","Building","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","_lockers","lockers","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","level_id","catering_hours","visitor_space","holding_bay","orientations","booking_details","booking_rules","catering_restricted_from","role","role_names","featuresForLevel","BLD_COUNT","LVL_COUNT","level_name","generateMockLevel","nested","level2","Desk","qr_code","BuildingLevel","Organisation","setting","OrganisationService","_regions","_buildings","_levels","_active_region","_active_building","region","buildingsForRegion","buildingSettings","region_settings","_region_settings","building_settings","_building_settings","regionSettings","bld_id","_organisation","regions","_updateSettingOverrides","tries","orgs","loadOrganisation","loadRegions","loadBuildings","loadLevels","loadSettings","org_list","org_zone","organisation_class_1","limit","available_room_configs","prev","curr","app_settings","global_settings","_initialiseActiveBuilding","saveBuilding","geolocation","getCurrentPosition","latitude","longitude","coords","closest_bld","c_lat","c_long","b_lat","b_long","pow","_setDefaultBuilding","tz_start","ORG_COUNT","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","common_2","exp_month","exp_year","minLength","maxLength","is_amex","card_type","card_display","card_focused","_index","activeElement","onInput","_focusChange","ctx_r5","PaymentModalComponent","processPayment","card_details","_validCardDetails","payment_modal_component_1","card_input_field_component_1","STRIPE_MODULE","PaymentsService","_active_card","cost","_getCostOfProduct","customer_id","_newCustomerID","_processPayment","rate","_addPaymentMethod","card","payment_method","price","product_list","SpaceSelectItemComponent","SpaceSelectModalComponent","space_map","spaceSelected","NewSpaceSelectModalComponent","SpaceDetailsComponent","SpaceFiltersDisplayComponent","space_filters_component_1","SpaceFiltersComponent","SpaceListComponent","SpaceLocationPinComponent","SpaceSelectMapComponent","space_location_pin_component_1","Space","support_url","configurations","organisation_1","SPACE_LIST","EMPTY_SPACE","SpacePipe","is_email","updateSpaceList","SPACE_LIST_REQUESTS","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","SharedSpacesModule","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SPACE_PIPE","SpacesService","_list","_init","loadSpaces","predicate","_compare","loadSpace","valid_spaces","FindAvailabilityModalComponent","today","current_hour","selection_left","selection_width","closeAndUpdate","el_rect","scrollTo","left","updateWidth","updateScroll","container_size","user_list_size","_move_size","offset","scrollLeft","startMovePeriod","stopPropagation","_move_last","MouseEvent","clientX","touches","move_time","_start_time","_onMovePeriod","_onMoveEnd","startMoveDuration","_onMoveDuration","change_px","change_min","UserAvailabilityComponent","_user$","calendars","GUEST_ENDPOINT","MapLocation","NewUserModalComponent","new_user","STAFF_ENDPOINT","UserFormComponent","hasError","touched","User","photo","sys_admin","support","department","assistance_required","GuestUser","preferred_beverage","accepted_terms_conditions","StaffUser","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","external","delegates","delegate_count","visitor","staff_code","fields","SharedUsersModule","wfh_settings_modal_component_1","find_availability_modal_component_1","user_availability_component_1","WFH_SETTING_KEY","WFHSettingsModalComponent","_initWeekdays","_loadOptionForToday","weekdays","available_weekdays"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/base.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/asset-list-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    BaseClass,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends BaseClass implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth()\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout('error', () => {throw 'Unable to get office token...'}, 2000);\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\">\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\">\n                    <button mat-button class=\"w-full\" [disabled]=\"!form.value.asset_id\" (click)=\"makeBooking()\">\n                        Book Desk\n                    </button>\n                    <button mat-button class=\"w-full inverse\" (click)=\"clearForm()\">\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(private _service: BookingFormService, private _router: Router) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success'])\n\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { BaseClass, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field formControlName=\"assets\"></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends BaseClass {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\">\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a button mat-button [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [`\n        :host {\n            height: 100%;\n            width: 100%;\n        }\n    `],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\">\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\">\n                    <button mat-button class=\"w-full\" (click)=\"makeBooking()\">\n                        Book Meeting\n                    </button>\n                    <button mat-button class=\"w-full inverse\" (click)=\"clearForm()\">\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(private _service: EventFormService, private _router: Router, private _bottom_sheet: MatBottomSheet) {}\n\n    public makeBooking() {\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    };\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, BaseClass, currentUser, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        mat-icon-button\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                        <div class=\"flex-1 min-w-[256px]\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 min-w-[256px]\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute top-0 right-0\"\n                            >\n                                All Day\n                            </mat-checkbox>\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        mat-icon-button\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        mat-icon-button\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        mat-icon-button\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{ \n                            date: form.value.date, \n                            duration: form.value.duration, \n                            zone_id: form.value.resources[0]?.level?.parent_id \n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        mat-icon-button\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class MeetingBookingFormComponent extends BaseClass {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {}\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration\n            }\n        });\n        ref.afterClosed().subscribe(d => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users,\n                duration: ref.componentInstance.duration\n            });\n        })\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\">\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{ last_success?.location || last_success?.system?.display_name }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a button mat-button [routerLink]=\"['/book', 'meeting']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [`\n        :host {\n            height: 100%;\n            width: 100%;\n        }\n    `],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    mat-button\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button (click)=\"closeModal()\">\n                        <mat-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</mat-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                mat-button\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { BaseClass } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends BaseClass implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => this._org.building = b;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription('features', this.selected_features$?.subscribe((v) => this.setOptions({ features: v || [] })));\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        mat-flat-button\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list>\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    mat-button\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { BaseClass } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MapService extends BaseClass {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\"\n                        >Add Title*</label\n                    >\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\"\n                        >Date*</label\n                    >\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 items-center justify-center\"\n        >\n            <button\n                mat-button\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                mat-button\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button (click)=\"closeModal()\">\n                <mat-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</mat-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            mat-button\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            [src]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                mat-button\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                mat-button\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            mat-button\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            mat-button\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    *ngIf=\"space?.images?.length > 0\"\n                    src=\" space.images \"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        mat-button\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BaseClass, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends BaseClass implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { BaseClass, notifyError } from '@placeos/common';\nimport { CalendarEvent, EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button mat-icon-button *ngIf=\"show_close\" (click)=\"dismiss()\">\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || '~Untitled~' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>calendar_today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: 'shortTime') +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: 'h:mm a (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <app-icon class=\"mr-2\">business</app-icon>\n                            {{ user.name || user.email }}\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                mat-button\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <button\n                mat-button\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe]\n})\nexport class MeetingFlowConfirmComponent extends BaseClass {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        await this._event_form.postForm().catch(_ => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e)\n\n    private _space = this.event.resources[0];\n\n    public async ngOnInit() {\n        this._space = await this._space_pipe.transform(this.event.resources[0].email) || this._space;\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find(\n            (_) => this.space.zones.includes(_.id)\n        );\n        return (\n            building?.address ||\n            building?.display_name ||\n            building?.name\n        );\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        @Optional() private _sheet_ref: MatBottomSheetRef\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Booking, queryBookings } from '@placeos/bookings';\nimport {\n    BaseClass,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends BaseClass {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            )\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = this._space_bookings.pipe(\n        tap((_) =>\n            console.log(\n                'Events:',\n                _.map(\n                    (_) =>\n                        `${_.host} | [${_.attendees\n                            .map((a) => a.email)\n                            .join(',')}]`\n                )\n            )\n        ),\n        map((_) => {\n            const user = currentUser();\n            console.log('User:', user);\n            return _.filter(\n                (_) =>\n                    _.host.toLowerCase() === user.email.toLowerCase() ||\n                    _.attendees.find(\n                        (a) =>\n                            a.email.toLowerCase() === user.email.toLowerCase()\n                    )\n            );\n        }),\n        tap((_) => console.log('Your events:', _))\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => [])\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => []));\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = this._poll_type.pipe(\n        switchMap((t) => (t === 'api' ? this.api_events : this.ws_events))\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return [];\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'desk',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return [];\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => []))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n    ]).pipe(\n        map(([e, v, d, p]) =>\n            [...e, ...v, ...d, ...p].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (_ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval(\n            'poll',\n            () => {\n                document.visibilityState === 'visible'\n                    ? this._poll.next(Date.now())\n                    : '';\n            },\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this._poll.next(Date.now());\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Asset } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    mat-icon-button\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.count }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        [min]=\"1\"\n                        [max]=\"item.count || 2\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    mat-button\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: Asset;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public get images() {\n        return this.item?.images.map((_) => _.url) || [];\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { Asset } from '../asset.class';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            matRipple\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                   <span class=\"text-xs\">{{asset.amount || 1}}</span>\n                                </div>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div class=\"font-medium flex items-center justify-between\">\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">{{ asset.category }}</div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.count < 1 ? 2 : asset.count }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            mat-icon-button\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n        }\n    `],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<Asset>();\n    @Output() public onSelect = new EventEmitter<Asset>();\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = this._asset_state.filtered_assets;\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: Asset) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"absolute inset-0 sm:relative sm:inset-none flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button mat-icon-button mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    mat-button\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    mat-button\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} assets(s) added</p>\n                <button\n                    mat-button\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: Asset | null = null;\n    public selected: Asset[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: Asset[]\n    ) {}\n\n    public setSelected(asset: Asset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== asset.id);\n        if (state) list.push(asset);\n        this.selected = list;\n    }\n\n    public toggleFavourite(asset: Asset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { debounceTime, map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { queryAssets } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_assets = combineLatest([\n        this.asset_list,\n        this.asset_bookings,\n    ]).pipe(\n        map(([list, bookings]) =>\n            list\n                .filter((_) => !bookings.find((b) => b.asset_id === _.id))\n                .sort(\n                    (a, b) =>\n                        a.category.localeCompare(b.category) ||\n                        a.name.localeCompare(b.name)\n                )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_assets,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.name.toLowerCase().includes(s) ||\n                    _.description.toLowerCase().includes(s)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export interface AssetResource {\n    id?: string;\n    name: string;\n    url: string;\n    price?: number;\n}\n\nexport interface AssetDetail {\n    id: string;\n    name: string;\n}\n\nexport interface AssetPurchase {\n    id?: string;\n    name: string;\n    value: string;\n}\n\nexport class Asset {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly category: string;\n    public readonly images: AssetResource[];\n    public readonly barcode: string;\n    public readonly brand: string;\n    public readonly size: 'Small' | 'Medium' | 'Large';\n    public readonly description: string;\n    public readonly specifications: Record<string, string>;\n    public readonly purchase_date: number;\n    public readonly purchase_price: number;\n    public readonly purchase_details: AssetPurchase[];\n    public readonly consumables: AssetDetail[];\n    public readonly general_details: AssetDetail[];\n    public readonly invoices: AssetResource[];\n    public readonly count: number;\n    public readonly locations: [string, string][];\n    public amount = 1;\n\n    constructor(_data: Partial<Asset> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.category = _data.category || '';\n        this.images = _data.images || [];\n        this.barcode = _data.barcode || '';\n        this.brand = _data.brand || '';\n        this.size = _data.size || 'Small';\n        this.description = _data.description || '';\n        this.specifications = _data.specifications || {};\n        this.purchase_date = _data.purchase_date * 1000 || Date.now();\n        this.purchase_price = _data.purchase_price || 0;\n        this.purchase_details = _data.purchase_details || [];\n        this.consumables = _data.consumables || [];\n        this.general_details = _data.general_details || [];\n        this.invoices = _data.invoices || [];\n        this.count = _data.count ?? 0;\n        this.locations = _data.locations || [];\n        this.amount = _data.amount ?? 1;\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Asset } from './asset.class';\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        name: new FormControl(asset.name, [Validators.required]),\n        category: new FormControl(asset.category, [Validators.required]),\n        count: new FormControl(asset.count),\n        size: new FormControl(asset.size),\n        description: new FormControl(asset.description),\n        barcode: new FormControl(asset.barcode, [Validators.required]),\n        brand: new FormControl(asset.brand, [Validators.required]),\n        specifications: new FormControl(asset.specifications),\n        purchase_date: new FormControl(Date.now(), [Validators.required]),\n        purchase_price: new FormControl(asset.purchase_price || 0, [\n            Validators.required,\n        ]),\n        expiry_date: new FormControl(0),\n        invoices: new FormControl(asset.invoices),\n        purchase_details: new FormControl(asset.purchase_details),\n        consumables: new FormControl(asset.consumables),\n        general_details: new FormControl(asset.general_details),\n        images: new FormControl(asset.images),\n    });\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport { Asset } from './asset.class';\nimport { Observable, of } from 'rxjs';\nimport { getUnixTime } from 'date-fns';\n\nconst ASSET_ENDPOINT = '/api/engine/v2/assets';\n\n/**\n * Query the list of available assets\n * @param q Filter the list based of the give string\n */\nexport function queryAssets(q?: string): Observable<Asset[]> {\n    const query = toQueryString({ q });\n    return get(`${ASSET_ENDPOINT}${query ? query : ''}`).pipe(\n        map((_: any) => _.map((d: any) => new Asset(d))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Delete asset with the given ID\n * @param id ID of asset to delete\n */\nexport function deleteAsset(id: string) {\n    return del(`${ASSET_ENDPOINT}/${id}`);\n}\n\n/**\n * Add asset to database with given details\n * @param asset Asset details\n */\nexport function createAsset(asset: Asset): Observable<Asset> {\n    const data = cleanObject(asset, [undefined, null, '']);\n    data.purchase_date = getUnixTime(data.purchase_date);\n    return post(`${ASSET_ENDPOINT}`, data).pipe(map((_) => new Asset(_)));\n}\n\n/**\n * Update asset in database to the new details\n * @param id ID of the asset to update\n * @param asset New details for asset\n */\nexport function updateAsset(id: string, asset: Asset) {\n    return put(`${ASSET_ENDPOINT}/${id}`, asset).pipe(map((_) => new Asset(_)));\n}\n\n/**\n * Save the details for the given asset in the database\n * @param asset Asset details\n */\nexport function saveAsset(asset: Asset) {\n    return asset.id ? updateAsset(asset.id, asset) : createAsset(asset);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule } from '@angular/forms';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule, \n        FormFieldsModule, \n        FormsModule, \n        ComponentsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { BaseClass } from 'libs/common/src/lib/base.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            matRippleColor\n            details\n            class=\"w-full\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends BaseClass {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () =>{\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            })\n            this.subscription('edit', ref.componentInstance.edit.subscribe(() => this.edit.emit()));\n            this.subscription('remove', ref.componentInstance.remove.subscribe(() => this.remove.emit()));\n       } );\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifySuccess } from '@placeos/common';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addMinutes, format, formatDuration } from 'date-fns';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"absolute inset-0 sm:relative sm:inset-auto sm:w-[51rem] sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3 title class=\"px-3 mt-2 text-xl font-medium w-full\" [class.pt-4]=\"!booking?.extension_data?.images\">\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            mat-button\n                            class=\"flex-1 h-10\"\n                            [class.inverse]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Not checked in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            mat-icon-button\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>Details</h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{ building?.address ? ', ' + building.address : '' }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 p-2 sm:w-[16rem]\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </div>\n            </div>\n            <button\n                mat-icon-button\n                mat-dialog-close\n                class=\"absolute top-2 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <!-- <button mat-menu-item mat-dialog-close class=\"flex items-center space-x-2 text-base\" (click)=\"edit.emit()\">\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button> -->\n            <button\n                mat-menu-item\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public readonly booking = this._booking;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _org: OrganisationService\n    ) {}\n\n    public get period() {\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in).toPromise();\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'checked out'\n            }`\n        );\n        this.checking_in = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    BaseClass,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { listChildMetadata, PlaceZone } from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = [\n    'book/desks',\n    'book/parking',\n    'book/newdesk',\n    'book/new-parking',\n];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends BaseClass {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _form = new BehaviorSubject(generateBookingForm());\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n\n    public readonly assets: Observable<BookingAsset[]> = this.options.pipe(\n        debounceTime(300),\n        distinctUntilKeyChanged('type'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadAssets('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadAssets('parking_spaces' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.assets.pipe(\n        map((assets) => {\n            const list: string[] = [];\n            for (const { features } of assets) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_assets = combineLatest([\n        this.options,\n        this.assets,\n        this._form,\n    ]).pipe(\n        filter(\n            ([_, _1, form]) =>\n                form.getRawValue().date > 0 && form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, assets, form]) =>\n            queryBookings({\n                period_start: getUnixTime(form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        form.getRawValue().date,\n                        form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) =>\n                    assets.filter(\n                        (asset) =>\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    )\n                )\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_assets,\n    ]).pipe(\n        map(([options, assets]) => {\n            const groups = [];\n            const asset_list = [...assets].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get form() {\n        return this._form.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this._form.next(generateBookingForm(booking));\n        this.subscription(\n            'form_change',\n            this._form.getValue().valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!this._form.getValue()) this.newForm();\n        const booking = this._booking.getValue();\n        this._form.getValue().patchValue({\n            ...(booking || {}),\n            ...(booking?.extension_data || {}),\n        });\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this._form.getValue()?.getRawValue() || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!this._form.getValue()) this.newForm();\n        this._form.getValue().patchValue({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n            ),\n        });\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        const form = this._form.getValue();\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new Booking({ ...this.booking, ...form.getRawValue() });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const form = this._form.getValue();\n        const value = form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(_);\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(_);\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        const form = this._form.getValue();\n        if (!form) throw 'No form for booking';\n        if (!form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(form).join(\n                ', '\n            )}]`;\n        form.patchValue({\n            booking_type:\n                form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        const value = form.getRawValue();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                value,\n                this._options.getValue().type\n            );\n        }\n        if (value.duration >= 12 * 60 || value.all_day) {\n            form.patchValue({\n                date: set(value.date, { hours: 11, minutes: 59 }).valueOf(),\n                duration: 12 * 60,\n            });\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                approved: !!this._settings.get('app.bookings.no_approval'),\n            })\n        ).toPromise();\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this._form.getValue().value;\n        const asset_list = await this.available_assets\n            .pipe(take(1))\n            .toPromise();\n        const active_asset = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_asset.zone?.id]);\n        const assets = [\n            active_asset,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = [currentUser(), ...extra_members];\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: assets[idx].map_id || assets[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = assets[i];\n            this._form.getValue().patchValue({\n                ...form,\n                user: user as any,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                description: asset.name,\n                zones: asset.zone\n                    ? [asset.zone?.parent_id, asset.zone?.id]\n                    : [],\n            });\n            this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: BookingType\n    ) {\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadAssets(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) => ({ ...d, zone: _.zone }))\n                    )\n                )\n            )\n        )\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        assets: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_assets = [];\n        let asset_list = assets.filter((_) => _.id !== id && _.map_id !== id);\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_assets.push(\n                    assets.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_assets;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">\n            Add event to your calendar\n        </div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize:'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize:'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe:'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button mat-icon-button mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType = 'desk' | 'parking' | 'locker' | 'room' | 'visitor' | 'asset-request' | 'staff' | 'wfh-setting' | '';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets']; \n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n\n    constructor(data: Partial<Booking> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name = data.asset_name || data.extension_data?.asset_name || data.extension_data?.name || data.description || '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            data.date / 1000 ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            data.date / 1000 + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || '';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000;\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            );\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title = data.title || this.booking_type ? `${capitalizeFirstLetter(this.booking_type)} Booking` : '';\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || [];\n        this.all_day = data.all_day ?? this.duration > 12 * 60;\n        this.status = this.rejected\n            ? 'declined'\n            : this.approved\n            ? 'approved'\n            : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        return isAfter(start, end);\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport { createViewer, getViewer, Point, removeViewer } from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(booking.extension_data.name || booking.asset_name || ''),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(booking.extension_data?.other_asset_type || booking.extension_data?.secondary_resource),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(map_url: string, centered_at: Point | string, desk_ids: string[] = []): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string' ? viewer.mappings[centered_at] : centered_at) || { x: .5, y: .5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt((x - point.x) * (x - point.x) + (y - point.y) * (y - point.y));\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event\n        }\n    });\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>) {\n    return post(`${BOOKINGS_ENDPOINT}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(id: string, email: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    asset_id_list: string[],\n    query: BookingsQueryParams,\n    ignore?: string\n): Observable<string[]> {\n    return queryBookings(query).pipe(\n        map((_) =>\n            asset_id_list.filter((id) => !_.find((b) => b.asset_id === id && (!ignore || ignore !== b.id)))\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\nimport { BuildingLevel, Desk } from '@placeos/organisation';\nimport { User } from '@placeos/users';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button mat-button (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [src]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} People\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            mat-button\n                            edit-desk\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            mat-button\n                            remove-desk\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    mat-icon-button\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            mat-button\n            add-desk\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button mat-button (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close mat-icon-button mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close mat-icon-button mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"desk.images?.length\"\n                [class.h-64]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    mat-icon-button\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\">\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b dark:border-neutral-500\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\">\n                <button\n                    mat-button\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active);\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BaseClass } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                mat-button\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    mat-button\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    mat-button\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    mat-icon-button\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    mat-icon-button\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends BaseClass {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._state.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    mat-icon-button\n                    close\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [disabled]=\"form.value.all_day\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite desks\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button mat-button close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get book_until() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                >\n                    <button\n                        select\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-icon-button\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_assets,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BaseClass, unique } from '@placeos/common';\nimport { distinctUntilChanged, map, tap } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in mat-icon-button (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                zoom-out\n                mat-icon-button\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset mat-icon-button (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends BaseClass implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_assets;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_assets.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_assets.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.available_assets.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                location: desk.map_id || desk.id,\n                content: `<span class=\"flex h-4 w-4 rounded-full absolute top-1/4 left-1/4 transform -translate-x-1/2 -translate-y-1/2 border-[3px] shadow\" >\n                            <span class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-green-800 opacity-75\"></span>\n                            <span class=\"relative inline-flex rounded-full h-full w-full bg-green-800\"></span>\n                        </span>`,\n            }))\n        )\n    );\n\n    constructor(private _state: BookingFormService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"absolute inset-0 sm:relative sm:inset-none flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button mat-icon-button mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        mat-button\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        mat-button\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [attr.active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    mat-button\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    mat-button\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {isSelected(displayed?.id), select, true { Remove\n                            from Booking } false { Add to booking }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { StaffUser, User } from '@placeos/users';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { BaseClass, SettingsService } from '@placeos/common';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async); else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n\n                            >Building<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                formControlName=\"date\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"visitor-name\" i18n\n                            >Visitor Name<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"visitor-name\"\n                                formControlName=\"asset_name\"\n                                placeholder=\"Name of the visitor\"\n                                (focus)=\"filterVisitors(form.value.asset_name)\"\n                                [matAutocomplete]=\"name_auto\"\n                            />\n                        </mat-form-field>\n                        <mat-autocomplete #name_auto=\"matAutocomplete\">\n                            <mat-option\n                                *ngFor=\"let item of filtered_visitors\"\n                                [value]=\"item.name\"\n                                (click)=\"setVisitor(item)\"\n                            >\n                                <div class=\"flex flex-col leading-tight\">\n                                    <div>{{ item.name }}</div>\n                                    <div class=\"text-xs opacity-60\">\n                                        {{ item.email }}\n                                        {{\n                                            item.company\n                                                ? '| ' + item.company\n                                                : ''\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-autocomplete>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"visitor-email\" i18n>\n                            Visitor Email<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"visitor-email\"\n                                type=\"email\"\n                                formControlName=\"asset_id\"\n                                placeholder=\"Email of the visitor\"\n                                (focus)=\"filterVisitors(form.value.asset_id)\"\n                                [matAutocomplete]=\"email_auto\"\n                            />\n                            <mat-error i18n\n                                >A valid email is required</mat-error\n                            >\n                        </mat-form-field>\n                        <mat-autocomplete #email_auto=\"matAutocomplete\">\n                            <mat-option\n                                *ngFor=\"let item of filtered_visitors\"\n                                [value]=\"item.email\"\n                                (click)=\"setVisitor(item)\"\n                            >\n                                <div class=\"flex flex-col leading-tight\">\n                                    <div>{{ item.name }}</div>\n                                    <div class=\"text-xs opacity-60\">\n                                        {{ item.email }}\n                                        {{\n                                            item.company\n                                                ? '| ' + item.company\n                                                : ''\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-autocomplete>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"visitor-name\" i18n>Company</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"company\"\n                                formControlName=\"company\"\n                                placeholder=\"Company of the visitor\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        mat-button\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        {{ last_success?.asset_name || last_success?.asset_id }}\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>{{\n                            last_success?.asset_name || last_success?.asset_id\n                        }}</i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            mat-button\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            mat-button\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends BaseClass {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public readonly buildings = this._org.active_buildings;\n    public readonly last_success = this._service.last_success;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = filter.toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        const { asset_id, asset_name, company } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        this.booking = await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({ zones: [this._org.building?.id] });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    mat-icon-button\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    mat-button\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BaseClass } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                mat-button\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    mat-button\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    mat-button\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    mat-icon-button\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends BaseClass {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    mat-icon-button\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button mat-button close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.level_list.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l;\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter(_ => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-icon-button\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_assets,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BaseClass, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field levels appearance=\"outline\" class=\"w-full h-[3.25rem]\">\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in mat-icon-button (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                zoom-out\n                mat-icon-button\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset mat-icon-button (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends BaseClass {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset, BookingFlowOptions, BookingFormService } from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"absolute inset-0 sm:relative sm:inset-none flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button mat-icon-button mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    mat-button\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    mat-button\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { spaces: BookingAsset[]; options: Partial<BookingFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport { FAV_PARKING_KEY, ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\">\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [src]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} { space.capacity, plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            mat-button\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            mat-button\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    mat-icon-button\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            mat-button\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\">\n                \n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: { spaces: this.spaces, options: { capacity: this.room_size } },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseClass } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                mat-button\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            mat-icon-button\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button mat-button (click)=\"saveChanges()\">Save Changes</button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n\n            main {\n                width: 32em;\n                padding: 0.5em 1em 1em;\n            }\n\n            main button.mat-button {\n                margin: 0 auto 0.5em;\n                min-width: 12em;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends BaseClass {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    mat-button\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"field\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-list #chipList aria-label=\"Item Tags\">\n                        <mat-chip\n                            *ngFor=\"let tag of tag_list\"\n                            [selectable]=\"true\"\n                            [removable]=\"true\"\n                            (removed)=\"removeTag(tag)\"\n                        >\n                            {{ tag }}\n                            <app-icon\n                                matChipRemove\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'close'\n                                }\"\n                            ></app-icon>\n                        </mat-chip>\n                        <input\n                            name=\"tags\"\n                            placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                            i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separators\"\n                            [matChipInputAddOnBlur]=\"true\"\n                            (matChipInputTokenEnd)=\"addTag($event)\"\n                        />\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegetarian' }) : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        this.option_list = this.options.filter((_) => _.active === true);\n        console.log(\n            'Options:',\n            this.name,\n            this.options,\n            this.option_list,\n            this.options.filter((_) => _.active === true)\n        );\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list.length }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            mat-button\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            mat-button\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    mat-icon-button\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            mat-button\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    mat-icon-button\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        mat-icon-button\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        mat-icon-button\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab *ngFor=\"let group of categories\" [label]=\"group\">\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>\n                {{ option.id ? 'Edit' : 'Add' }} Item Option\n            </h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    mat-icon-button\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"active = !active\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4\"\n            >\n                <div class=\"flex-1\">{{ item?.name }}</div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { BaseClass, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                mat-icon-button\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            mat-icon-button\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button mat-button class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    mat-button\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    mat-button\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save mat-button (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent extends BaseClass implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    mat-icon-button\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    mat-button\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                select\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        *ngIf=\"item.images?.length\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p class=\"flex-1 w-px\" *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                mat-icon-button\n                fav\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringStateService } from '../catering-state.service';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(custom_items | async)?.length\">\n                <h3 class=\"font-bold px-2\">Custom Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (custom_items | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of custom_items | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n    public readonly custom_items = combineLatest([\n        this.list,\n        this._state.available_menu,\n    ]).pipe(map(([l, m]) => l.filter((_) => _.option_list?.length)));\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            console.log('Selected:', this.selected_items);\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"absolute inset-0 sm:relative sm:inset-none flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    mat-icon-button\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    mat-button\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    mat-button\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        console.log('Select:', item, state);\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem(item);\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{ opt.unit_price / 100 | currency:code }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency:code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button mat-button class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            new Date().getTime();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: 'shortTime' }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button *ngIf=\"order.notes\" class=\"clear underline\" [matTooltip]=\"order.notes\">View</button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button mat-icon-button (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = (s) =>\n        this._orders.updateStatus(this.order, s);\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { BaseClass, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends BaseClass {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list.filter((order) => checkOrder(order, this._filters.getValue()))\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public updateStatus(order: CateringOrder, status: CateringOrderStatus) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const event = new CalendarEvent({\n            ...order.event,\n            catering: [\n                ...order.event.ext('catering').filter((o) => o.id !== order.id),\n                updated_order,\n            ].map((i) => new CateringOrder({ ...i })),\n        });\n        return saveEvent(event);\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button mat-icon-button mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button mat-button (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button mat-button (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends BaseClass {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button mat-icon-button (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button mat-button class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button mat-button class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map((_) => _.details as CateringRuleset[]),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${encodeURIComponent(map[key])}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && await cache.checkForUpdate()) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!await cache.activateUpdate()) return;\n        notifyInfo('Newer version of the application is available', 'Refresh', () =>\n            location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BaseClass implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return this._subscriptions[name] instanceof Subscription || !!this._subscriptions[name];\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push(['DTSTART', `${new Date(event.date).toISOString()}`]);\n    chunks.push([\n        'DTEND',\n        `${addMinutes(event.date, event.duration ?? 60).toISOString()}`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'outlook'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { BaseClass } from './base.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad, UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard implements CanActivate, CanLoad {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(\n                key\n                    ? arr.find((i) => i[key] === el[key])\n                    : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]);\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys.map((key) => JSON.stringify(item[key])).join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {\n        if (!window.ga) {\n            (function(i, s, o, g, r, a, m) {\n                i['GoogleAnalyticsObject'] = r;\n                (i[r] =\n                    i[r] ||\n                    function() { (i[r].q = i[r].q || []).push(arguments); }), (i[r].l = 1 * (new Date() as any));\n                (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);\n                a.async = 1;\n                a.src = g;\n                m.parentNode.insertBefore(a, m);\n            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n            console.log('Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.ga;\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) { throw new Error('Google Analytics needs to be enabled before being initialised') }\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        console.log('Service', `Setup with tracking ID: ${tracking_id}`);\n        this.service('create', tracking_id, 'auto');\n        this.service('send', 'pageview');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (this.enabled) {\n            this.timeout(`user|${id}`, () => {\n                console.log('Service', `Set user ID: ${id}`);\n                this.service('set', 'userId', id);\n                this.event('authentication', 'user-id available');\n            }, 100);\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(category: string, action: string, label?: string, value?: string) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (this.enabled) {\n            this.timeout(`event|${category}|${action}|${label}|${value}`, () => {\n                const l = label ? ', ' + label : '';\n                console.log('Service', `Event: ${category}, ${action}${l}${value ? ', ' + value : ''}`);\n                const prefix = this.app_prefix ? this.app_prefix + '_' : ''\n                this.service('send', 'event', `${prefix}${category}`, action, label, value);\n            }, 100);\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (name && this.enabled) {\n            this.timeout(`event|${name}|${app_name || this.app_name}`, () => {\n                console.log('Service', `Screen: ${name}${app_name ? ', ' + app_name : ''}`);\n                this.service('send', 'screenview', {\n                    appName: app_name || this.app_name,\n                    screenName: name\n                });\n            }, 100);\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(`page|${route}`, () => {\n                console.log('Service', `Page: ${route}`);\n                this.service('send', 'pageview', `${origin ? location.origin : ''}${route}`);\n            }, 100);\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(category: string, variable: string, value: string, label?: string) {\n        if (!this.service) { throw new Error('Google Analytics hasn\\'t been installed on this page'); }\n        if (this.enabled) {\n            this.timeout(`page|${category}|${variable}|${value}|${label}`, () => {\n                console.log('Service', `Timing: ${category}, ${variable}, ${value}${label ? ', ' + label : ''}`);\n                this.service('send', 'timing', category, variable, value, label);\n            }, 100);\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) { fn(); }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(snackbar: MatSnackBar) {\n    _service = snackbar;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return !window.jest && console.warn(\"Snackbar service hasn't been initialised\");\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !window.jest && console.debug(msg);\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !window.jest && console.error(msg);\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !window.jest && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !window.jest && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { BaseClass } from './base.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends BaseClass {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) =>\n                this._handleEvent(key, args)\n            );\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] = typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(_ => typeof _ !== 'string' || !_.startsWith('color:')),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { BaseClass } from './base.class';\n\nimport { VERSION } from './version';\nimport { currentUser } from './user-state';\nimport { current_user } from '..';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({ ...this._user_settings.getValue(), ...this._pending_settings });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        \n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (this.get('font_size')) {\n            document.body.parentElement.style.fontSize = `${this.get('font_size')}px`;\n            document.body.style.fontSize = `${this.get('font_size')}px`;\n        }\n    }\n\n    private _setDarkMode() {\n        const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        if (this.get('dark_mode') ?? os_dark) {\n            document.body.classList.add('dark');\n        } else {\n            document.body.classList.remove('dark');\n        }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    breakdown: 15,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"5a0af81\",\n    \"hash\": \"5a0af81\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"5a0af81\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1671686626275\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { BaseClass } from './base.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends BaseClass {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            mat-icon-button\n            class=\"relative flex items-center justify-center h-8 w-8\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            [center] {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    CanLoad,\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard implements CanActivate, CanLoad {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    CanActivate,\n    CanLoad,\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard implements CanActivate, CanLoad {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { BaseClass } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends BaseClass\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = [];\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            changes.model.previousValue !== this.model &&\n            this.model != null\n        ) {\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    this.model = value;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (authority() && this.exec && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            if (this.bind) this.params = this.params || [this.model];\n            module.execute(this.exec, this.params).then((result) => {\n                // Emit exec result if not bound to status variable\n                if (!this.bind) {\n                    this.model = result;\n                    this.modelChange.emit(this.model);\n                }\n            });\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T) {\n        this.model = value;\n        this.modelChange.emit(this.model);\n        this.execute();\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        ...MAT_MODULES,\n    ],\n    providers: [\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n    ],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button mat-button name=\"accept\" class=\"w-32\" (click)=\"onConfirm()\">\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { BaseClass } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table [dataSource]=\"data_source\" matSort>\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column] }}</ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10 border-b border-gray-300 dark:border-neutral-400\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 border-b border-gray-200 dark:border-neutral-500\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends BaseClass\n    implements AfterViewInit, OnChanges {\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) => (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends BaseClass\n    implements OnChanges, OnDestroy {\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout('open', () => {\n            this._updateType();\n            if (this._overlay_ref) this.close();\n            if (!this._portal) return;\n            const pos = this._element.nativeElement.getBoundingClientRect();\n            const default_x = 'end';\n            const default_y = 'top';\n            this._overlay_ref = this._overlay.create({\n                hasBackdrop: !!this.backdrop,\n                positionStrategy: this._overlay\n                    .position()\n                    .flexibleConnectedTo(this._element)\n                    .withPositions([\n                        {\n                            originX: this.x_pos || default_x,\n                            originY:\n                                (this.y_pos === 'top'\n                                    ? 'bottom'\n                                    : this.y_pos == 'bottom'\n                                    ? 'top'\n                                    : this.y_pos) || default_y,\n                            overlayX: this.x_pos || default_x,\n                            overlayY: this.y_pos || default_y,\n                        },\n                    ]),\n            });\n            this._overlay_ref.attach(this._portal);\n            if (this.backdrop) {\n                this.subscription(\n                    'backdrop',\n                    this._overlay_ref.backdropClick().subscribe(() => this.close())\n                );\n            }\n        }, 50);\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { BaseClass } from 'libs/common/src/lib/base.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends BaseClass {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button mat-icon-button (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { BaseClass, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends BaseClass implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval('has_token', () => {\n            if (token()) {\n                this.loading = false;\n                this.clearInterval('has_token');\n            }\n        }, 1000);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [src]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div #outlet tabindex=\"0\" role=\"map\" class=\"absolute inset-0\" [class.hidden]=\"!src\"></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends BaseClass\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView();\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (changes.zoom || changes.center) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView();\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () => this.createView());\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id || JSON.stringify({ ...feature });\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) => _.get(MAP_FEATURE_DATA)?.track_id && _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    ApplicationIcon,\n    SettingsService,\n} from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error>Invalid username or password</mat-error>\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center justify-center w-full\" *ngIf=\"!loading\">\n                    <button mat-button color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <header class=\"h-12 px-2\">\n            <app-icon>place</app-icon>\n            <h1 class=\"ml-2\">{{ item.name }}</h1>\n        </header>\n        <div\n            body\n            class=\"relative overflow-hidden pointer-events-none\"\n            *ngIf=\"level\"\n        >\n            <i-map\n                [src]=\"level.map_id\"\n                [styles]=\"style_map\"\n                [features]=\"features\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n            </i-map>\n            <div\n                class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow\"\n            >\n                {{ level?.name }}\n            </div>\n        </div>\n        <footer\n            class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n        >\n            <button mat-button class=\"inverse w-32\" mat-dialog-close>\n                Close\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n                width: 80vw;\n                height: 65vh;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('init', () => {\n            this.processFeature();\n            this.processStyles();\n        }, 1000);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { BaseClass } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends BaseClass implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, BaseClass } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            mat-icon-button\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            mat-icon-button\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends BaseClass {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        mat-button\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img class=\"h-full w-full\" [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { BaseClass } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent extends BaseClass implements OnDestroy {\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close mat-icon-button (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee } other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { BaseClass } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ event?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            matRippleColor\n            details\n            class=\"w-full\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class EventCardComponent extends BaseClass {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const zone_list: string[] =\n            this.event?.space?.zones ||\n            (this.event?.system?.zones as any) ||\n            [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            this.event.space?.display_name || this.event.space?.name\n        }`;\n    }\n\n    public get period() {\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"absolute inset-0 sm:relative sm:inset-auto sm:w-[51rem] sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"event.system?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            mat-button\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                event.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"room_status !== 'pending'\"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            mat-icon-button\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            mat-button\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div class=\"opacity-60\">{{ event.host }}</div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <div\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 sm:w-[16rem]\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        *ngIf=\"event.body\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"event.body | sanitize\"\n                    ></div>\n                </div>\n                <button\n                    mat-icon-button\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"edit.emit(space)\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit event</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"remove.emit()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div i18n>Delete event</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (c, i) => (c += i.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (c, i) => (c += i.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (c, i) =>\n            (c +=\n                i.response_status === 'tentative' ||\n                i.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, getUnixTime, isBefore, startOfDay } from 'date-fns';\nimport {\n    BaseClass,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { querySpaceAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { getFreeTimeSlots, periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\n\nconst BOOKING_URLS = [\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends BaseClass {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly spaces = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(zone_ids.map((id) => requestSpacesForZone(id)));\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n    ]).pipe(\n        map(([list, bookings]) => {\n            const { date, duration } = this._form.getRawValue();\n            return (list || [])\n                .filter((_, idx) =>\n                    periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    )\n                )\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                const { date, duration } = this._form.getRawValue();\n                const query = {\n                    period_start: getUnixTime(date),\n                    period_end: getUnixTime(date + duration * MINUTES),\n                };\n                return (\n                    !this.has_calendar\n                        ? queryResourceAvailability(\n                              spaces.map(({ id }) => id),\n                              { ...query, type: 'room' }\n                          ).pipe(\n                              map((_) =>\n                                  _.map((id) => spaces.find((s) => id === s.id))\n                              )\n                          )\n                        : querySpaceAvailability(\n                              {\n                                  ...query,\n                                  system_ids: spaces\n                                      .map(({ id }) => id)\n                                      .join(','),\n                              },\n                              this._org\n                          )\n                ).pipe(\n                    map((_) =>\n                        _.map(({ id }) => spaces.find((s) => id === s.id))\n                    ),\n                    catchError((_) => [])\n                );\n            }),\n            map((_) =>\n                _.filter(\n                    (space) =>\n                        !space.availability?.length ||\n                        space.availability?.find((_) => _.status !== 'busy')\n                )\n            ),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff < 14\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering }) => {\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._event.next(event);\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event = this._event.getValue() || ({} as Partial<CalendarEvent>);\n        this._form.patchValue({\n            ...event,\n            ...event.extension_data,\n            date:\n                !event.id && isBefore(event.date || 0, Date.now())\n                    ? Date.now()\n                    : event.date,\n            host: event?.host || currentUser().email,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!this._form) this.newForm();\n        this._form.patchValue({\n            ...JSON.parse(sessionStorage.getItem('PLACEOS.event_form') || '{}'),\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue() });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const { id, host, date, duration, creator, all_day } =\n                form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query = id\n                ? is_owner\n                    ? { calendar: host || creator }\n                    : { system_id: space_id }\n                : {};\n            const value = this._form.getRawValue();\n            console.log(\n                'Payments:',\n                this._payments.payment_module,\n                spaces.length\n            );\n            if (this._payments.payment_module && spaces.length) {\n                console.log('Make Payment...');\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n                console.log('Payment success.', receipt);\n            }\n            const d = value.all_day\n                ? startOfDay(value.date).valueOf()\n                : value.date;\n            if (catering.length && !('items' in catering[0])) {\n                catering = [\n                    new CateringOrder({\n                        items: catering as any,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    attendees,\n                    date: d,\n                    catering,\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        const space_ids = (\n            await Promise.all(\n                spaces.map((_) => this._space_pipe.transform(_.id || _.email))\n            )\n        ).map((_) => _.id);\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        const space_list: any[] = spaces.length\n            ? await (!this.has_calendar\n                  ? (queryResourceAvailability(space_ids, {\n                        ...query,\n                        type: 'room',\n                        ignore,\n                    }) as any)\n                  : querySpaceAvailability({\n                        ...query,\n                        system_ids: space_ids.join(','),\n                    })\n              ).toPromise()\n            : [];\n        if (space_list.length !== spaces.length)\n            throw `${\n                spaces.length - space_list.length\n            } space(s) are not available at the selected time`;\n        return true;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button\n                class=\"w-64\"\n                mat-button\n                (click)=\"close()\"\n                i18n\n            >\n                Close\n            </button>\n        </div>\n        <button\n            mat-icon-button\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError('You need to select a calendar option to finish creating this booking');\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title || 'Space Booking';\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone = data.timezone || '';\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week,\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location = data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: this })\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(this.recurrence.end),\n            };\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique([...attendees, ...this.resources.map(_ => ({ ..._, resource: true }))], 'email');\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError(_ => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id ? updateEvent(data.id, data, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes,\n    addSeconds,\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField = (catering_control: AbstractControl) => (control: AbstractControl) => {\n    if (catering_control.value?.length && !control.value) {\n        return { catering_field: 'Catering sub-fields are required' };\n    }\n    return null;\n}\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator, [Validators.required]),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title, [Validators.required]),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_master_id: new FormControl(event.recurring_master_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl((event.extension_data?.catering[0]?.items || []) as any),\n        catering_notes: new FormControl(event.extension_data?.catering[0]?.notes || ''),\n        catering_charge_code: new FormControl(event.extension_data?.catering[0]?.charge_code || ''),\n        assets: new FormControl(event.extension_data?.assets || []),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) =>\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null)\n    );\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    form.get('catering_charge_code').setValidators([validateCateringField(form.get('catering'))]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [{ id: booking.user_id, name: booking.user_name, email: booking.user_email, organizer: true }];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(new User({ name: booking.asset_name || booking.description, email: booking.asset_id }));\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_booking: true\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    if (\n        control.parent?.get('date') &&\n        isAfter(\n            new Date(),\n            addMinutes(control.parent.get('date').value, control.value)\n        )\n    ) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <div\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div class=\"w-16 h-16 rounded-xl bg-black/20 mr-4\"></div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{ asset.name || 'Asset' }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            mat-button\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssets(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            mat-button\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAsset(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    mat-icon-button\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            mat-button\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"addAssets()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    public items: Asset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Asset[]) => void;\n    private _onTouch: (_: Asset[]) => void;\n    public selected: Asset[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Asset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Asset[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: Asset[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: Asset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAsset(asset: Asset) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssets(asset?: Asset) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((assets?: Asset[]) => {\n            if (!assets) return;\n            this.setValue(assets);\n        });\n    }\n\n    public toggleFavourite(asset: Asset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                mat-icon-button\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">{{ (render_fn ? render_fn(value) : value) || '0' }}</div>\n            <button\n                mat-icon-button\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 * this.step : this.shift_key ? 10 * this.step : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 * this.step : this.shift_key ? 10 * this.step : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { BaseClass } from 'libs/common/src/lib/base.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends BaseClass\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import { Component, forwardRef, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { formatDuration } from 'date-fns';\n\nimport * as dayjs from 'dayjs';\n\n\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                        {{ option.name }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: { id: number, name: string }[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: { id: number, name: string }[] = [];\n        let time = min;\n        const date = this.time ? dayjs(this.time) : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(option / 60),\n                          minutes: option % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(option / 60), minutes: option % 60 })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(time / 60),\n                          minutes: time % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(time / 60), minutes: time % 60 })}`,\n            });\n            time += step;\n        }\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex((_) => _.id === this.duration);\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { AssetListFieldComponent } from './asset-list-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    AssetListFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                placeholder=\"Select host\"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User) {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) {\n            this.item = currentUser();\n        }\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    humanReadableByteCount,\n    Upload,\n    uploadFiles,\n} from '@placeos/cloud-uploads';\nimport { BaseClass, notifyInfo, randomInt, unique } from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(file: File): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload: null,\n            };\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            upload_details.upload = upload;\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe(\n                    (state) => {\n                        if (upload.access_url)\n                            upload_details.link = upload.access_url;\n                        upload_details.progress = state.progress;\n                        observer.next(upload_details);\n                        if (state.status === 'error')\n                            observer.error({\n                                ...upload_details,\n                                error: state.error,\n                            });\n                        if (state.status === 'complete') observer.complete();\n                    },\n                    (e) => (upload_details.error = e)\n                );\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [style.background-image]=\"'url(' + url + ')'\"\n            >\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button mat-icon-button (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button mat-icon-button (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button mat-icon-button (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                </div>\n            </div>\n            <button\n                mat-icon-button\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                mat-icon-button\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-list #chipList aria-label=\"Editor Groups\">\n                <input\n                    placeholder=\"Add image via URL\"\n                    i18n-placeholder\n                    [matChipInputFor]=\"chipList\"\n                    [matChipInputSeparatorKeyCodes]=\"separators\"\n                    [matChipInputAddOnBlur]=\"true\"\n                    (matChipInputTokenEnd)=\"addImage($event)\"\n                />\n            </mat-chip-list>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends BaseClass {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(private _clipboard: Clipboard) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file).subscribe(update_fn, update_fn, () => {\n                this._updateUploadHistory();\n            });\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-list #chipList aria-label=\"Zone Tags\">\n                <mat-chip\n                    *ngFor=\"let item of value\"\n                    [selectable]=\"true\"\n                    [removable]=\"true\"\n                    (removed)=\"remove(item)\"\n                >\n                    {{ item }}\n                    <app-icon matChipRemove>close</app-icon>\n                </mat-chip>\n                <input\n                    [placeholder]=\"placeholder || 'User groups...'\"\n                    i18n-placeholder=\"@@userGroupsPlaceholder\"\n                    [matChipInputFor]=\"chipList\"\n                    [matChipInputSeparatorKeyCodes]=\"separators\"\n                    [matChipInputAddOnBlur]=\"true\"\n                    (matChipInputTokenEnd)=\"add($event)\"\n                />\n            </mat-chip-list>\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, Input, OnChanges, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { BaseClass } from \"@placeos/common\";\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent extends BaseClass implements ControlValueAccessor, OnChanges, AfterViewInit {\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n\n    private _onChange: (_: string) => void; /** Form control on change handler */\n    private _onTouch: (_: string) => void; /** Form control on touched handler */\n    \n    public readonly registerOnChange = (fn: (_: string) => void) => this._onChange = fn;\n    public readonly registerOnTouched = (fn: (_: string) => void) => this._onTouch = fn;\n\n    public ngOnChanges(changes: SimpleChanges) {\n\n    }\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            readOnly: this.readonly,\n            theme: 'snow'\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () => this._editor.off('text-change', this._updateFn));\n    }\n    \n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\">\n                    <img *ngIf=\"space.images?.length; else placeholder\" [src]=\"space.images[0]\" class=\"min-h-full object-cover\" />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.display_name || space.name || 'Meeting Space' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location || level(space.zones)?.display_name || level(space.zones)?.name }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} { space.capacity, plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            mat-button\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            mat-button\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    mat-icon-button\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            mat-button\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces: Space[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        const ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: { spaces: this.spaces, options: { capacity: this.room_size } },\n        });\n        ref.afterClosed().subscribe((spaces?: Space[]) => {\n            if (!spaces) spaces = ref.componentInstance.selected;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Space[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { BaseClass, Identity, timeFormatString } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field\n            appearance=\"outline\"\n            [style.display]=\"show_select ? 'none' : ''\"\n            (keydown.enter)=\"showSelect()\"\n        >\n            <input\n                matInput\n                type=\"time\"\n                [disabled]=\"disabled\"\n                [ngModel]=\"time\"\n                (ngModelChange)=\"setValue($event)\"\n            />\n            <button mat-icon-button matSuffix class=\"relative top-1 -right-1\" (click)=\"showSelect()\">\n                <app-icon class=\"text-2xl text-opacity-50\">\n                    arrow_drop_down\n                </app-icon>\n            </button>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{ option.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends BaseClass\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                name: `${format(date, timeFormatString())}`,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                name: `${format(date, timeFormatString())}`,\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\">\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    mat-icon-button\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button mat-icon-button (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button mat-button class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            mat-icon-button\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button mat-icon-button (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map(_ => ({ id: `file-${randomInt(999_999_999)}` , ..._ }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter(_ => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    BaseClass,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip\n                            user\n                            *ngFor=\"let user of active_list\"\n                            (removed)=\"removeUser(user)\"\n                        >\n                            <app-icon class=\"mr-2\">business</app-icon>\n                            {{ user.name || user.email }}\n                            <button remove matChipRemove>\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip>\n                        <input\n                            #search_field\n                            placeholder=\"Type a name or email\"\n                            i18n-placeholder\n                            name=\"user_email\"\n                            [ngModel]=\"search$ | async\"\n                            (ngModelChange)=\"updateSearch($event)\"\n                            [matAutocomplete]=\"auto\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                            (matChipInputTokenEnd)=\"\n                                addUserFromEmail($event.value)\n                            \"\n                        />\n                        <mat-spinner\n                            *ngIf=\"loading\"\n                            diameter=\"24\"\n                            matSuffix\n                        ></mat-spinner>\n                    </mat-chip-list>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    mat-button\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    mat-button\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    mat-button\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends BaseClass\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([searchStaff(_), searchGuests(_)]).pipe(\n                              map(([staff, guests]) => {\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list.filter((_) => _.email !== user.email);\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter(\n            (a_user) => a_user.email !== user.email\n        );\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { BaseClass, flatten } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends BaseClass\n    implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","\nexport const MOCK_ASSETS = [\n    {\n        id: '1',\n        name: 'iPad',\n        category: 'Technology',\n        images: [\n            { name: 'chrome.svg', url: 'assets/support/chrome-logo.svg' },\n            { name: 'firefox.svg', url: 'assets/support/firefox-logo.svg' },\n            { name: 'safari.svg', url: 'assets/support/safari-logo.svg' },\n        ],\n    },\n    { id: '2', name: 'iPhone', category: 'Technology' },\n    { id: '3', name: 'iWatch', category: 'Technology' },\n    { id: '4', name: 'Chair', category: 'Furniture' },\n    { id: '5', name: 'Lounge', category: 'Furniture' },\n    { id: '6', name: 'Table', category: 'Furniture' },\n    { id: '7', name: 'Couch', category: 'Furniture' },\n    { id: '8', name: 'Something', category: 'Other' },\n];\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_ASSETS } from './assets.data';\n\nexport const ASSET_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateAsset = (id, data) => {\n        const index = MOCK_ASSETS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_ASSETS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateAsset(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v1/assets/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { padString, predictableRandomInt, randomString } from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = next;\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location']\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || {} as any;\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces = MOCK_SPACES.filter(_ => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id: type === 'parking' ? `park-${position}` : `desk-${lvl?.id}-${index}`,\n        asset_name: type === 'parking' ? position : `${lvl?.id}-${index}`,\n        description: type === 'parking' ? position : `Desk ${index}`,\n        title: `${type} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(8, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'),\n            assets: new Array(asset_count).fill(0).map(_ => ({ ...MOCK_ASSETS[predictableRandomInt(asset_count)], amount: predictableRandomInt(5, 1)})),\n            tracking: approved === 0 ? TRACKING[predictableRandomInt(TRACKING.length)] : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return { charge_codes: { details: new Array(30).fill(0).map((_, idx) => `C-${idx}`) } };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0,0.0],\n                                            [0.0,0.5],\n                                            [0.5,0.5],\n                                            [0.5,0.0]\n                                        ]\n                                    }\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    group: '',\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Display',\n            inputs: ['Display_1'],\n            help: 'laptop-help',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Display 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Display 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display3: {\n        name: 'Display 3',\n        type: 'Display',\n        source: 'PC2',\n        mod: 'Display_3',\n    },\n    Display4: {\n        name: 'Display 4',\n        type: 'Display',\n        mod: 'Display_4',\n    },\n    Display5: {\n        name: 'Display 5',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createAreaManagementModule, MockLocationServicesModule } from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)]\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone } from '@placeos/ts-client';\n\nexport class Desk {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n    }\n\n    public format() {\n        const { id, name, bookable, groups, features } = this;\n        return {\n            id,\n            name,\n            bookable,\n            groups,\n            features\n        };\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue();\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this._updateSettingOverrides();\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') || this.building.currency || 'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld?.id);\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (this._regions.getValue().length) {\n            this._buildings.next(\n                flatten(\n                    await Promise.all(\n                        this._regions\n                            .getValue()\n                            .map((_) => this.loadBuildings(_.id))\n                    )\n                )\n            );\n        } else {\n            this._buildings.next(await this.loadBuildings());\n        }\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        await this.loadSettings();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        const regions = [];\n        for (const item of list) {\n            const bindings: Record<string, any> = (\n                await showMetadata(item.id, 'bindings').toPromise()\n            )?.details;\n            regions.push(new Building({ ...item, bindings }));\n        }\n        this._regions.next(regions);\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const buildings = [];\n        for (const bld of building_list) {\n            const bindings: Record<string, any> = (\n                await showMetadata(bld.id, 'bindings').toPromise()\n            )?.details;\n            buildings.push(new Building({ ...bld, bindings }));\n        }\n        return buildings;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list\n            .filter(\n                (lvl) =>\n                    !!this.buildings.find((bld) => bld.id === lvl.parent_id)\n            )\n            .map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_name = `${(\n            this._service.app_name || 'workplace'\n        ).toLowerCase()}_app`;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, app_name).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        const regions = this.regions;\n        for (const item of regions) {\n            this._region_settings[item.id] = (\n                await showMetadata(item.id, app_name).toPromise()\n            )?.details;\n        }\n        const buildings = this.buildings;\n        for (const bld of buildings) {\n            this._building_settings[bld.id] = (\n                await showMetadata(bld.id, app_name).toPromise()\n            )?.details;\n        }\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = localStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        } else {\n            const timezone = this.timezone;\n            for (const bld of this.buildings) {\n                if (bld.timezone === timezone) {\n                    this.building = bld;\n                    break;\n                }\n            }\n            if (this.building) return;\n            const tz_start = timezone.split('/')[0];\n            for (const bld of this.buildings) {\n                if (bld.timezone.startsWith(tz_start)) {\n                    this.building = bld;\n                    break;\n                }\n            }\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            ...this._settings,\n            this.regionSettings(this.region?.id),\n            this.buildingSettings(this.building?.id),\n        ];\n    }\n}\n","\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3).fill(0).map(i => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true\n                }\n            }\n        }\n    };\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { BaseClass } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends BaseClass\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () => this.setValue(this.details.getRawValue()))\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{ details.amount / 100 | currency:code }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        mat-button\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    mat-icon-button\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main\n                class=\"px-8 pt-8 w-[24rem] flex flex-col relative\"\n            >\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">Ref #{{ transaction_id }}</h3>\n                <p i18n>{{ details.amount / 100 | currency:code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button mat-button mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PaymentData, private _org: OrganisationService) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [\n    PaymentModalComponent, \n    CardInputFieldComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period)\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                mat-icon-button\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button mat-button class=\"w-32\" [class.request]=\"space.by_request\">\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    BaseClass,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button mat-button (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends BaseClass {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"absolute inset-0 sm:relative sm:inset-none flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button mat-icon-button mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        mat-button\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        mat-button\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    mat-button\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    mat-button\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    mat-button\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" s>\n                            { isSelected(displayed?.id), select, true { Remove\n                            from Booking } false { Add to booking } }\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    mat-icon-button\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\" *ngIf=\"space.features?.length\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\" *ngFor=\"let feature of space.features\">\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    mat-button\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BaseClass } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                mat-button\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    mat-button\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    mat-button\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    mat-icon-button\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends BaseClass {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    mat-icon-button\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\" *ngIf=\"(buildings | async)?.length > 1\">\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"(building | async)?.display_name || (building | async)?.name\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite rooms\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button mat-button close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { differenceInDays } from 'date-fns';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-icon-button\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n    \n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(private _event_form: EventFormService, private _org: OrganisationService) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BaseClass, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { debounceTime, map, tap } from 'rxjs/operators';\nimport { Space } from '../space.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in mat-icon-button (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                zoom-out\n                mat-icon-button\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset mat-icon-button (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends BaseClass {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from '@placeos/organisation';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space();\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(private _org: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (await querySystems({ q: space_id }).toPromise()).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(map(_ => unique(flatten(_.map(i => i.features)))));\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(private _org: OrganisationService, private _settings: SettingsService) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...system as any,\n            level: this._org.levelWithID([...system.zones]),\n        })\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseClass } from '@placeos/common';\nimport { addMinutes, isSameDay } from 'date-fns';\nimport { User } from '../user.class';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                mat-icon-button\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh]\"\n            (window:resize)=\"updateWidth()\"\n        >\n            <div class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\">\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                #container\n                class=\"flex flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-auto divide-x divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n                (scroll)=\"updateScroll()\"\n            >\n                <div\n                    users\n                    class=\"sticky left-0 min-h-full bg-white dark:bg-neutral-700 border-r border-gray-300 dark:border-neutral-500 z-30\"\n                >\n                    <div\n                        header\n                        class=\"h-10 w-[6rem] border-b border-gray-300 dark:border-neutral-500\"\n                    ></div>\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        *ngFor=\"let user of users\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button mat-icon-button class=\"absolute -top-1 -left-1\">\n                            <app-icon>close</app-icon>\n                        </button>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                </div>\n                <div\n                    [attr.hour]=\"i\"\n                    class=\"min-w-[5rem] bg-gray-50 dark:bg-neutral-600 min-h-full pointer-events-none\"\n                    [attr.disabled]=\"today && i < current_hour\"\n                    *ngFor=\"let h of hours; let i = index\"\n                >\n                    <div header class=\"h-10 border-b border-gray-300 dark:border-neutral-500 p-2\">\n                        {{ i % 12 ? i % 12 : '12' }}{{ i >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div\n                    selection\n                    class=\"absolute top-10 bottom-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                    [style.left]=\"selection_left + 'rem'\"\n                    [style.width]=\"selection_width + 'rem'\"\n                    (mousedown)=\"startMovePeriod($event)\"\n                    (touchstart)=\"startMovePeriod($event)\"\n                >\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                    ></div>\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                        (mousedown)=\"startMoveDuration($event)\"\n                        (touchstart)=\"startMoveDuration($event)\"\n                    ></div>\n                    <div\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ duration | duration }}\n                    </div>\n                    <div\n                        *ngIf=\"move_time\"\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ date | date: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                mat-button\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [disabled='true'] {\n                background: rgba(0, 0, 0, 0.05) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends BaseClass {\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public users = [...this._data.users];\n    public user?: User;\n    public offset = 0;\n    public width = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5 + 6;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n    }\n\n    public addUser(user: User) {\n        this.users = [...this.users.filter(u => u.email !== user.email), user];\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.updateWidth();\n                this.updateScroll();\n            },\n            300\n        );\n    }\n\n    public updateWidth() {\n        const container_size =\n            this._container_el.nativeElement.getBoundingClientRect().width;\n        const user_list_size = this._container_el.nativeElement\n            .querySelector('[users]')\n            .getBoundingClientRect().width;\n        this.width = Math.floor(container_size - user_list_size);\n        this._move_size =\n            this._container_el.nativeElement\n                .querySelector('[hour]')\n                .getBoundingClientRect().width * 24;\n    }\n\n    public updateScroll() {\n        this.offset = this._container_el.nativeElement.scrollLeft;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 0;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { endOfDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { User } from '../user.class';\nimport { queryEvents } from 'libs/events/src/lib/events.fn';\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div class=\"overflow-hidden relative border-b border-gray-300 dark:border-neutral-500 h-full pointer-events-none\" [style.width]=\"width + 'px'\">\n            <div class=\"w-[120rem] h-px\"></div>\n            <div\n                event\n                *ngFor=\"let event of availability | async\"\n                class=\"absolute inset-y-0 bg-primary rounded-lg text-white\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div>Unavailable</div>\n                <div>\n                    {{ event.date | date:'shortTime' }} - \n                    {{ event.date + event.duration * 60 * 1000 | date:'shortTime' }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public date: number = Date.now();\n    @Input() public offset = 0;\n    @Input() public width = 0;\n\n    private _user$ = new BehaviorSubject(null);\n\n    public readonly availability = this._user$.pipe(\n        filter((_) => _),\n        switchMap((user) =>\n            queryEvents({\n                calendars: user.email,\n                period_start: startOfDay(this.date).valueOf(),\n                period_end: endOfDay(this.date).valueOf(),\n            })\n        ),\n        map((_) =>\n            _.map((i) => ({\n                date: i.date,\n                duration: i.duration,\n                start:\n                    (new Date(i.date).getHours() +\n                        new Date(i.date).getMinutes() / 60) /\n                    24,\n                size: i.duration / 60 / 24,\n            }))\n        ),\n        shareReplay(1)\n    );\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.user && this.user) {\n            this._user$.next(this.user);\n        }\n    }\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseClass, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends BaseClass implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {\n    }\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { HashMap } from '@placeos/common';\nimport { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item: HashMap) => new StaffUser(item)))\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.organisation\">\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    Organisation<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"Organisation\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>Organisation is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.assistance_required\">\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.visit_expected\">\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number; \n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n    department?: string;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Department that the user belongs to in the organisation */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.extension_data?.status || data.status || 'pending';\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { showGuest } from \"./guests.fn\";\nimport { showStaff } from \"./staff.fn\";\nimport { User } from \"./user.class\";\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user'\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(({ id, email }) => id === user_id || email === user_id);\n        if (user) return user;\n        user = await showStaff(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    mat-button\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between\">\n                        <div class=\"uppercase\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div\n                            class=\"h-8 w-8 flex items-center justify-center pr-2\"\n                        >\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    mat-button\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                mat-icon-button\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [true, true, true, true, true, true, true];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (this.option !== this.options[0].id && this.option !== this._booking.asset_id) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}