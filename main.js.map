{"version":3,"file":"main.js","mappings":"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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_AppRoutingModule","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","_AppComponent","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","HttpLoaderFactory","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","http","TranslateHttpLoader","_AppModule","AppModule","bootstrap","SpacePipe","provideHttpClient","withInterceptorsFromDi","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","_NotFoundComponent","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","_SharedComponentModule","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_DeskBookingComponent","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r3","ctx_r1","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ɵɵpureFunction0","_c0","date","duration","_r1","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","tmp_4_0","allow_all_day","can_book_lockers","allow_assets","_DeskBookingFormComponent","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","_DeskBookingSuccessComponent","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_MeetingBookingComponent","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r4","display_name","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","building","buildings","_r5","findAvailableTime","hide_block","attendees","_r6","catering","ɵɵpureFunction3","_c1","resources","level","has_catering","details","MeetingBookingFormComponent_div_0_div_12_Template","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","MeetingBookingFormComponent_div_0_section_60_Template","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","_MeetingBookingFormComponent","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","_MeetingBookingSuccessComponent","system","button_toggle_1","bottom_sheet_1","ROUTES","_BookModule","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_BookingConfirmedComponent","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","_FeaturesFilterService","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","ɵɵtwoWayListener","feature_r6","$implicit","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","applyFilters","tmp_2_0","tmp_3_0","minDate","_FilterSpaceComponent","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","_FindSpaceItemComponent","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r4","handleBookEvent","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","map_r6","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r7","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_5_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","empty_state_r8","_r9","openRoomDetails","_FindSpaceComponent","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","load_state_r10","room_tile_component_1","_MapService","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","_RoomBookingComponent","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_RoomConfirmService","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_RoomConfirmComponent","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","ctx_r0","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r2","RoomDetailsComponent_section_21_div_3_Template","back","_r4","_RoomDetailsComponent","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","_RoomTileComponent","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r1","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","ctx_r2","isEvent","booking_card_r2","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","empty_state_r4","_UpcomingBookingsComponent","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","load_state_r5","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","formattedTime","tz","user_r3","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","s_r4","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_MeetingFlowConfirmComponent","_common_2$AsyncHandle","_sheet_ref","_event_form","_date","DatePipe","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","date_end","all_day","tz_format","start_date","time_format","end_date","is_multiday","timezone","getTimezoneOffsetString","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_1","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_div_25_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","spaces_1","date_fns_1","_ScheduleStateService","_lockers","_parking","_poll","_poll_type","_loading","_filters","shown_types","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","_$linked_bookings","isSameDay","toLowerCase","a","linked_bookings","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","raw_events","_ref10","events","_$extension_data","extension_data","shared_event","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","include_deleted","group_events","_$extension_data2","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","lkr","locker_id","level_id","Booking","valueOf","locker_name","bookings","_ref23","_ref24","filtered_events","ev","_ev$linked_bookings$","bkn","meeting_id","_ref25","_ref26","filters","_$extension_data3","_filters$shown_types","_$extension_data4","_filters$shown_types2","_filters$shown_types3","_ignore_cancel","_checkCancel","interval","startWith","_ref27","_ref29","_ref30","_auto_release$resourc","is_home","auto_release","time_before","_iterator","_step","check_block","_iterator2","_step2","booking","diff","time","close_after","wording","time_after","Math","min","_createForOfIteratorHelper","n","done","startOfMinute","addMinutes","checked_in","rejected","closeAll","differenceInMinutes","differenceInMilliseconds","getTime","format","confirm_text","cancel_text","close_delay","push","checkinBooking","f","finish","t1","_x2","triggerPoll","parse","stopPolling","clearInterval","setAsDeleted","_toggleType","clear","_x3","LockersService","ParkingService","tslib_1","__exportStar","updateAssetGroupList","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","assetgroup_list","_loop","assetgroup","_AssetGroupPipe","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","request_r2","item_r5","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","rejected_ids","conflict","items","EMPTY_FAVS","_AssetListFieldComponent","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","request","changes","AssetRequest","new_value","state","order","order_list","requested","_step4","_iterator4","AssetSelectModalComponent","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","randomInt","_step3","new_order","_changed","_items$find","__","getHours","getMinutes","_iterator3","_ret","_loop2","reduce","t","c","_c$items$find","item_count","setValue","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","_data$asset_ids","_data$extension_data","_this$event","_data$extension_data2","_data$extension_data3","_data$extension_data4","event_id","asset_ids","amount","_status","status","request_id","_booking","notes","ref_id","blob","category_id","toggleFav","countChange","active","activeChange","fav","available","_AssetDetailsComponent","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","empty_state_r3","_AssetFiltersDisplayComponent","AssetFiltersDisplayComponent","day_r4","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r6","toggleCategory","category","_AssetFiltersComponent","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","getOptions","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r2","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","empty_state_r5","_AssetListComponent","AssetListComponent","_asset_state","selected_items","onSelect","_requested_items","counts","filtered_assets","_$assets","_this$selected_items","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","load_state_r6","displayed","_AssetSelectModalComponent","_data","_this$_data$exact_tim","selected_ids","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_AssetStateService","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","localeCompare","queryAssetCategories","zone_id","_ref9","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","addAssetCategory","updateAssetCategory","saveAssetCategory","showAssetCategory","BASE_ENDPOINT","deleteAssetCategory","del","queryAssetGroups","queryAssetGroupsExtended","addAssetGroup","updateAssetGroup","saveAssetGroup","product","deleteAssetGroup","addAsset","updateAsset","saveAsset","asset_type_id","showAsset","deleteAsset","addAssetsInBulk","updateAssetsInBulk","saveAssetsInBulk","every","deleteAssetsInBulk","body","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","queryAvailableAssets","_booking$asset_ids","removeAssetRequests","_removeAssetRequests","differenceBetweenAssetRequests","validateAssetRequestsForResource","_validateAssetRequestsForResource","api_1","booking_class_1","q","toQueryString","post","cleanObject","put","groups_cache","has","forkJoin","setTimeout","delete","products","_booking$asset_ids2","requests","_$asset_ids","removeBooking","new_assets","old_assets","changed","match","ical_uid","from_booking","location_name","location_id","reset_state","force_create","booking_list","has_state","unchanged","changed_requests","changed_assets","filtered","used_ids","_step3$value","processed_requests","booking_id","_ref11","approved","unique","_ref15","_ref17","req","_ref20","_available_groups$fin","idx","_assets$find","_request$items","asset_data","user_email","createBooking","r","_AssetsModule","booking_details_modal_component_1","async_handler_class_1","group_event_details_modal_component_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_17_Template","ɵɵpureFunction1","period","desk_icon_r3","raw_description","for_current_user","is_reserved_parking_space","_BookingCardComponent","BookingCardComponent","_async_handler_class_","_route","edit","remove","assigned_space","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","_this$booking7","removeHtmlTags","_this$booking8","_this$booking9","_this$booking10","is_today","_this$booking11","_this$booking12","_this$booking13","_this$booking14","is_all_day","dur","formatDuration","html","DOMParser","parseFromString","textContent","_ref$componentInstanc","_ref$componentInstanc2","_ref$componentInstanc3","GroupEventDetailsModalComponent","BookingDetailsModalComponent","concierge","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","desk_settings_modal_component_1","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","menu_r5","item_r8","request_r7","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_r10","setDeskHeight","_r11","_r12","_BookingDetailsModalComponent","hide_map","has_assets","_this$booking6","region","regions","ts","booking_start","booking_end","_this$booking15","_this$booking17","_this$booking18","_this$booking19","_toggleCheckedIn","promise","checkinBookingInstance","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","DeskSettingsModalComponent","_templateObject6","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","booking_status","can_edit","is_checked_in","desk_height_enabled","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_BookingFormService","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","booking_rules","building_rules","mapping","available_resources","merge","timer","_this$_org$region","_this$_org$building","restrictions","_this$form$getRawValu","bookedResourceList","organisation","booked_ids","_asset$zone","_asset$zone2","_asset$groups","_options$features","_asset$zone3","_asset$zone4","is_restricted","rulesForResource","hidden","groups","grp","bookable","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone5","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_resources$","_this3$_org$region","_resources$2","_resources$3","_this3$_org$region2","_value$user2","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","_value$user","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","update_master","saveBooking","user_name","toJSON","phone","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","unavailable","group_name","_this$_org$region2","_asset$zone6","_asset$zone7","_this$_org$region3","_unavailable$map","_getNearbyResources","t2","t3","call","user_id","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","active_bookings","allowed_bookings","current","_context5","use_region","map_metadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","listChildMetadata","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x4","_x5","_x6","PaymentsService","calendar_links_1","_BookingLinkModalComponent","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","RecurrenceDays","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","WeekOfMonth","First","Second","Third","Fourth","Fifth","Last","SecondLast","ThirdLast","FourthLast","FifthLast","_data$title","_valid_asset_cache","_valid_cache_expiry","roundToNearestMinutes","nearestTo","abs","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","permission","toUpperCase","guests","tags","induction","checked_in_at","process_state","recurrence_type","recurrence_days","recurrence_nth_of_month","recurrence_interval","recurrence_end","removeEmptyFields","_this$extension_data","addHours","add","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","_booking$extension_da5","validators_1","endInFuture","company","featured","other_asset_type","attendance_type","plate_number","self_registered","_form$get","_form$get2","disable","emitEvent","_resource$zone","_resource$zone2","roundingMethod","_findNearbyFeature","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","svg_viewer_1","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","BOOKINGS_ENDPOINT","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","encodeURIComponent","updateBooking","updateBookingInductionStatus","updateBookingInstance","removeBookingInstance","approveBooking","approveBookingInstance","rejectBooking","rejectBookingInstance","setBookingState","utm_source","queryBookingGuests","user_class_1","GuestUser","checkinBookingGuest","guest_id","bookingAddGuest","guest","bookingRemoveGuest","json","message","checkinBookingAttendee","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","_createBookingsForEvent","patch","response_type","_item$items","components_module_1","form_fields_module_1","events_module_1","spaces_module_1","users_module_1","_SharedBookingsModule","SharedSpacesModule","SharedUsersModule","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","_DeskConfirmModalComponent","DeskConfirmModalComponent","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r3","ctx_r3","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","placeholder_r6","_DeskListFieldComponent","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","_DeskQuestionsModalComponent","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","_DeskDetailsComponent","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","desk_filters_component_1","show_fav","_DeskFiltersDisplayComponent","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","bld_r6","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","feat_r11","DeskFiltersComponent_section_36_div_3_Template","_DeskFiltersComponent","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","lvl","setLevel","l","reg","allow_time_changes","hide_levels","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","tmp_16_0","tmp_18_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_DeskListComponent","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","_DeskMapComponent","DeskMapComponent","is_displayed","center","coordinates","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_bld$location$split$m","parseFloat","_bld$location$split$m2","latitude","longitude","new_zoom","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","_DeskSelectModalComponent","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","preset","setPreset","edit_presets","updatePreset","formatLabel","toFixed","_DeskSettingsModalComponent","sitting_height","standing_height","last_height","parseInt","localStorage","new_height","_setDeskHeight","sys_id","module","DeskSettingsModalComponent_div_0_Template","DeskSettingsModalComponent_ng_template_1_Template","desk_height_tooltip_r4","desk_confirm_modal_component_1","_DesksService","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_18_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","ɵɵelementContainer","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","_InviteVisitorFormComponent","InviteVisitorFormComponent","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","ɵɵstyleProp","size","_LockerGridComponent","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","_LockerListFieldComponent","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r2","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","_LockerBankListComponent","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","_LockerFiltersDisplayComponent","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_mat_form_field_13_mat_option_2_Template","LockerFiltersComponent_mat_form_field_15_mat_option_5_Template","LockerFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","LockerFiltersComponent_mat_form_field_17_mat_option_3_Template","LockerFiltersComponent_section_36_div_3_Template","_LockerFiltersComponent","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_mat_form_field_13_Template","LockerFiltersComponent_mat_form_field_15_Template","LockerFiltersComponent_mat_form_field_17_Template","LockerFiltersComponent_div_24_Template","LockerFiltersComponent_div_25_Template","LockerFiltersComponent_section_36_Template","LockerFiltersComponent_div_38_Template","tmp_13_0","tmp_15_0","explore_locker_bank_info_component_1","lvl_r1","_LockerMapComponent","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","_this2$level","LockerMapComponent_mat_option_7_Template","setZoom","resetMap","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","map_view_r4","_r8","_LockerSelectModalComponent","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","bank_view_r9","_LockersService","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_ParkingSpaceDetailsComponent","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","_ParkingSpaceFiltersDisplayComponent","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r6","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r14","_r13","toggleFeature","ParkingSpaceFiltersComponent_section_30_div_3_Template","_ParkingSpaceFiltersComponent","_form","active_levels","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_div_21_Template","ParkingSpaceFiltersComponent_section_30_Template","ParkingSpaceFiltersComponent_div_32_Template","tmp_8_0","tmp_10_0","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","_ParkingSpaceListComponent","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","_ParkingSpaceLocationPinComponent","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","_ParkingSpaceSelectMapComponent","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","setCustomZone","MapsPeopleService","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","_ParkingSpaceSelectModalComponent","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","_ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent","disable_date","ParkingSpaceListFieldComponent_div_1_Template","_ParkingService","level_list","blds","buildingsForRegion","bld_ids","_blds$find","_lvls$","_$assigned_to","_email","assigned_to","user_details","_$email","_email2","deny_parking_access","deny","booked_space","space_class_1","Calendar","primary","summary","Space","availability","starts_at","ends_at","queryCalendars","CALENDAR_ENDPOINT","calendar_class_1","queryCalendarAvailability","querySpaceCalendarAvailability","org","calendarsToSpaces","queryUserFreeBusy","querySpaceFreeBusy","cal","catering_item_class_1","handleFileEvent","_CateringImportMenuModalComponent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","load_state_r3","keycodes_1","invalid","touched","auto_r3","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","chipList_r7","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","tmp_9_0","hasTag","renderPercent","saveChanges","dirty","option_r9","_CateringItemModalComponent","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","order_r4","duplicateOrder","editOrder","removeOrder","optionList","removeOrderItem","CateringListFieldComponent_div_1_div_19_span_3_Template","CateringListFieldComponent_div_1_div_19_button_9_Template","currency_code","CateringListFieldComponent_div_1_div_8_Template","CateringListFieldComponent_div_1_button_12_Template","CateringListFieldComponent_div_1_button_13_Template","CateringListFieldComponent_div_1_button_14_Template","show_order","CateringListFieldComponent_div_1_div_19_Template","_CateringListFieldComponent","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","option","opt","cateringitem","CateringListFieldComponent_div_1_Template","row_r2","row","setEnabled","isEnabled","data_r4","symbol","row_r6","addOption","editItem","show_children","menu_r7","row_r10","editOption","removeOption","CateringMenuComponent_ng_template_7_div_0_button_7_Template","CateringMenuComponent_ng_template_7_div_0_button_8_Template","CateringMenuComponent_ng_template_7_div_0_Template","_CateringMenuComponent","CateringMenuComponent","_catering","_orders","menu","deleteOption","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringOrdersService","CateringMenuComponent_ng_template_1_Template","CateringMenuComponent_ng_template_3_Template","CateringMenuComponent_ng_template_5_Template","CateringMenuComponent_ng_template_7_Template","ɵɵpureFunction5","_c5","active_template_r12","_c2","_c3","price_template_r13","_c4","actions_template_r14","child_template_r15","auto_r2","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r4","_CateringItemOptionModalComponent","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","_CateringOrderItemComponent","CateringOrderItemComponent","_this$item","order_id","item_key","CateringOrderItemComponent_ng_container_0_Template","catering_vars_1","data_r1","CateringOrderListComponent_ng_template_8_span_2_Template","CateringOrderListComponent_ng_template_10_span_3_Template","data_r5","status_r7","row_r8","updateStatus","colour","CateringOrderListComponent_ng_template_12_button_8_Template","tmp_11_0","data_r9","menu_r10","statuses","row_r12","CateringOrderListComponent_ng_template_14_ng_template_4_Template","notes_template_r13","row_r15","item_r14","CateringOrderListComponent_ng_template_16_ul_0_li_1_Template","CateringOrderListComponent_ng_template_16_ul_0_Template","_CateringOrderListComponent","CateringOrderListComponent","CATERING_STATUSES","CateringOrderListComponent_ng_template_4_Template","CateringOrderListComponent_ng_template_6_Template","CateringOrderListComponent_ng_template_8_Template","CateringOrderListComponent_ng_template_10_Template","CateringOrderListComponent_ng_template_12_Template","CateringOrderListComponent_ng_template_14_Template","CateringOrderListComponent_ng_template_16_Template","ɵɵpureFunction8","_c8","state_template_r16","time_template_r17","location_template_r18","host_template_r19","_c6","status_template_r20","_c7","actions_template_r21","child_template_r22","utilities_1","item_r2","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r5","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","order_details_r6","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","order_actions_r9","optionsFor","item_r11","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","CateringOrderModalComponent_ng_template_4_div_4_Template","_CateringOrderModalComponent","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","load_state_r12","tag_r3","opt_r6","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r5","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r8","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","multi_options_r9","CateringItemDetailsComponent_ng_container_0_p_14_Template","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","_CateringItemDetailsComponent","CateringItemDetailsComponent","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","empty_state_r10","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","_CateringItemFiltersComponent","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","_CateringItemListItemComponent","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","placeholder_r3","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","empty_state_r6","_CateringItemListComponent","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","load_state_r7","_CateringOrderStateService","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_NewCateringOrderModalComponent","_order","NewCateringOrderModalComponent_button_14_Template","opt_r4","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r2","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","multi_options_r7","_CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","events_fn_1","_CateringOrdersService","_ref2$","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_CateringStateService","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","_new_item$options","_SharedCateringModule","i_r2","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","_ChargeCodeListModalComponent","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","str","IGNORE_VALUES","hasNewVersion","_new_version","cache","_timer","setInterval","activateUpdate","_activateUpdate","clearCacheCheck","checkForUpdate","notifyInfo","_AsyncHandler","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","addToDate","filterResourcesFromRules","ruleset_list","_rulesForResource","checkRulesMatch","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","_details$resource$zon","_details$resource$zon2","ruleset","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","locations","_event$duration","_event$organiser","_event$host","chunks","formatCalFileText","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","formatAllDay","formatUTC","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","timezone_helpers_1","utc_date","localToTimezone","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","mapspeople_service_1","PLACEOS_APP_ACCESS","_FeatureAvailableGuard","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","requestScreenWakeLock","_requestScreenWakeLock","_wake_lock","release","navigator","wakeLock","visibilityState","charAt","slice","_app_name","msg","args","stream","app_name","jest","debug","_console","_console2","colors","padLength","character","getItemWithKeys","el","exists","padString","chars","_openConfirmModal","csv","objPattern","RegExp","arrMatches","arrData","exec","_arrMatches$","headers","_row$i","loadTextFileFromInputEvent","reject","jsonToCsv","seperator","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","predictableRandomInt","ceil","rand","timeFormatString","is24HourTime","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","calculateDistance","lat1","lon1","lat2","lon2","dLat","degreesToRadians","dLon","sin","cos","atan2","hexToRgb","interpolateColors","rgbToHex","shiftColorTowards","hex1","hex2","fraction","resultRgb","extractTextFromHTML","html_string","temp_element","innerHTML","innerText","shuffleArray","j","random","shuffleArrayWithFirstItem","first_index","firstItem","unshift","confirm_modal_component_1","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","sfc32","xmur3","h","imul","seed","localeString","querySelector","getAttribute","language","degrees","PI","hex","rgb1","rgb2","round","componentToHex","_GoogleAnalyticsService","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","_HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_KeepAliveService","KeepAliveService","_system_id","_delay","_bindTo","GoogleMaps","Mapbox","_MapsPeopleService","_map_service","_map_token","_ready","_injected","_custom_zone","available$","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","snackbar","_disable_logging","notify","on_action","_msg","_msg2","warn","snackbar_ref","onAction","_setupPlace","protocol","port","domain","hostname","use_domain","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","generateQRCode","_qr$toImage","qr","vanillaqr_min_1","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","_RemoteLoggingService","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","mergeRoomConfig","settings_1","user_state_1","_SettingsService","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","queryShortURLs","ENDPOINT","showShortURL","getShortUrlQRCode","_getShortUrlQRCode","createShortURL","updateShortURL","saveShortURL","patchShortURL","deleteShortURL","QR_STORE","response","cookie","apiKey","fetch","URL","createObjectURL","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","offset_diff","date_fns_tz_1","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","TIMZONE_OFFSET_STRINGS","getTimezoneOffsetInMinutes","getTimezoneDifferenceInHours","src_tz","dest_tz","_Intl","tzOffsetPart","timeZoneName","formatToParts","part","offsetMatch","abbr","isdst","utc","TIMEZONES","uploads_1","upload_permissions_modal_component_1","_UploadsService","UploadsService","_upload_list","upload_list","in_progress_list","progress","UploadPermissionsModalComponent","uploadFile","is_public","permissions","pub","resolved","update_fn","_updateUploadHistory","done_list","upload","Observable","observer","blobUtil","arrayBufferToBlob","cloud_uploads_1","uploadFiles","file_name","public","upload_details","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","_UserIdleTimeService","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","reloadUserData","showUser","_current_user","StaffUser","EMPTY_USER","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","p","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","Image","toDataURL","distance","suffix","semverString","version","_VorlonService","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","_AccessibilityTooltipComponent","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","_ActionIconComponent","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r8","rule_r7","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r9","set_r4","rule_types","show_rules","i_r5","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","_AttachedResourceConfigModalComponent","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","_AuthenticatedImageDirective","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","authority","nativeElement","ok","ElementRef","_AuthorisedAdminGuard","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_AuthorisedUserGuard","_access","_this$_access","space_utilities_1","space_r5","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","_AvailableRoomsStateModalComponent","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","_BindingDirective","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r2","_BuildingSelectComponent","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","_BuildingPipe","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","_ChangelogModalComponent","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","empty_state_r2","hint","message_r5","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","ChatComponent_div_0_div_4_Template","show","_ChatComponent","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_ChatService","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","map_renderer_component_1","maps_indoors_component_1","desk_height_presets_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","_ComponentsModule","useValue","UserAvatarComponent","NgIf","InteractiveMapComponent","MatRipple","MatTooltip","IconComponent","MapRendererComponent","MapsIndoorsComponent","AsyncPipe","MatDialogClose","MatProgressSpinner","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","SanitizePipe","UserControlsComponent","DeskHeightPresetsComponent","TranslatePipe","onConfirm","_ConfirmModalComponent","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r3","display_column","column_r2","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r7","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","cell_outlet_r8","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","index_outlet_r9","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r11","row_clicked","empty","_CustomTableComponent","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","__ngFactoryType__","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_CustomTooltipData","_CustomTooltipComponent","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_superPropGet","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","_DateFromPipe","DateFromPipe","direction","json_display_component_1","obj_r3","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r4","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_DebugConsoleComponent","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","onClose","_DeskHeightPresetsComponent","not_set","desk_sitting_height","desk_standing_height","saveSetting","DeskHeightPresetsComponent_div_5_Template","DeskHeightPresetsComponent_button_23_Template","_DurationPipe","DurationPipe","shorten","_FixedPipe","FixedPipe","_GlobalBannerComponent","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","_GlobalLoadingComponent","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","_HelpTooltipComponent","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","_IconComponent","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r1","ImageCarouselComponent_div_1_img_1_Template","ImageCarouselComponent_div_5_button_1_Template","_ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","_ImageViewerComponent","ImageViewerComponent","geolocation_error_message","getRoute","search_result_items","properties","roomId","floorName","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","_IndoorMapsComponent","IndoorMapsComponent","_api_service","default_zoom","live_data_status","selected_destination","actions_hashmap","user_latitude","user_longitude","route_error_message","_setLocationToBuilding","floor_mapping","_get_location","custom_coordinates","get_location","_getUserLocation","_initMapView","_ngOnChanges","_mapsindoors","searchParams","renderSpaceStatus","mapActions","locate","searchElement","services","LocationsService","getLocations","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","lvl_map","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_mapsindoors2","_getUserLocation2","geolocation","watchPosition","_updateGeolocation","_handleGeolocationError","getCurrentPosition","_userWithinRadius","coords","setCenter","enableHighAccuracy","d_lat","d_long","radius","lat_str","long_str","_this$_org$building2","_this$_org$building3","_this$_org$building4","_this$_org$building5","_this$_org$building$l","_this$_org$building$l2","long","updated_location","_updated_location$coo","_getRoute","_this$maps_service6","_this$directions_rend","destination","routeParameters","highlight","anchor","setFloor","_e$message","TypeError","origin_error","setRoute","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this$actions","accumulator","currentValue","_this$maps_service7","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_div_1_Template","IndoorMapsComponent_div_2_Template","onSearch","IndoorMapsComponent_ng_container_11_Template","zoomChange","mapInfo","labels","onLevelChange","InjectionToken","_InteractiveMapComponent","_mapspeople","_explore","centerChange","use_mapsindoors$","InteractiveMapComponent_ng_container_0_Template","InteractiveMapComponent_ng_template_2_Template","InteractiveMapComponent_div_4_Template","mapsindoors_template_r5","_JsonDisplayComponent","_updateFormatting","formatted_json","lang_r2","setLocale","flag","_LanguageSelectComponent","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","_LevelPipe","LevelPipe","ALLOWED_NUMBERS","ALLOWED_DECIMALS","ALLOWED_LETTERS","ALLOWED_ALPHANUMERIC","_LimitInputDirective","LimitInputDirective","_el","restriction","custom_list","ctrlKey","metaKey","hostBindings","onKeyDown","logo","toPassword","login","username_r3","_LoginComponent","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","loading_state_r5","_MapCanvasComponent","MapCanvasComponent","ratio","svg_ratio","ratio$","zoom$","svg_ratio$","_handleMapChange","polygons$","_handleStateChange","_handleMapChange2","old_ratio","canvas_element","polygon_list","poly","_drawPolygon","polygon","points","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","draw_points","arc","draw_labels","acc","textAlign","textBaseline","font","fillText","_MapLocateModalComponent","_this$item$level","track_id","MapLocateModalComponent_div_6_Template","_MapPinComponent","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","_MapPolygonComponent","MapPolygonComponent","_cdr","padding","svg_scale","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","last_seen","updateRadius","ɵɵresolveWindow","MapRadiusComponent_ng_container_0_div_2_Template","_MapRadiusComponent","MapRadiusComponent","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MapRendererComponent_ng_container_2_mat_spinner_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r3","injectors","i_r4","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_4_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_Template","MapRendererComponent_div_3_ng_container_1_div_1_Template","MapRendererComponent_div_3_ng_container_1_Template","_MapRendererComponent","_on_changes","_extra_data","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$src","_this$_outlet_el","_this$_outlet_el3","simp_url","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","MapRendererComponent_ng_container_2_Template","MapRendererComponent_div_3_Template","MapRendererComponent_ng_template_4_Template","toggleDirections","MapsIndoorsComponent_button_2_mat_spinner_5_Template","viewing_directions","loading_directions","DEFAULT_ZOOM","RESOURCE_MAP","_MapsIndoorsComponent","zoneChange","show_directions","ignore_zoom","_floor_list","_added_floor_selector","hasOwnProperty","_initialiseServices","_this$_services","_this$_services2","is_initialised","_centerOnZone","_focusOnLocation","_updateMapStyling","_services","_addFloorSelector","_split","_split2","_container","maps_indoors","_handleBuildingChange","_handleLevelChange","_handleZoomChange","_handleUserClick","dispatchEvent","Event","_toggleDirections","_item$properties","d_lng","clearDirections","_last_position","setDirectionsFromLocation","_setDirectionsFromLocation","from","travelMode","externalId","floors","_setFloorFromZone","defaultFloor","_last_building","_handleLevelChange2","new_level","_event$properties","_event$properties2","_this$metadata","ignore_actions","_search2","_updateMapStyling2","_this$metadata2","id_simple","_$properties","_$properties2","_setResource","extrusionHeight","extrusionVisible","_focusOnLocation2","_item$properties2","_item$properties3","_this9","_$properties3","_this10","_bld$location$split","_bld$location$split2","MapsIndoorsComponent_button_2_Template","_MediaDurationPipe","MediaDurationPipe","period_length","show_ms","seconds","milliseconds","_MisconfiguredComponent","MisconfiguredComponent","_PopoutMenuComponent","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","_PrintableComponent","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","_RedirectComponent","RedirectComponent","_RegionSelectComponent","RegionSelectComponent","RegionSelectComponent_mat_radio_button_12_Template","_SafePipe","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","_SanitizePipe","sanitize","selectAll","checked","data_view$","column_r4","setSort","SimpleTableComponent_button_2_app_icon_3_Template","selectable","sortable","active_columns","i_r7","active_row","column_r9","SimpleTableComponent_ng_container_3_div_2_div_3_span_2_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_ng_container_1_Template","SimpleTableComponent_ng_container_3_div_2_div_3_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_Template","j_r12","columnType","SimpleTableComponent_ng_container_3_div_3_ng_container_1_Template","child_template","ɵɵpureFunction4","SimpleTableComponent_ng_container_3_div_1_Template","SimpleTableComponent_ng_container_3_div_2_Template","SimpleTableComponent_ng_container_3_div_3_Template","empty_message","setPage","total_pages","total_count","_SimpleTableComponent","SimpleTableComponent","rowClicked","_data$","_filter$","_sort$","_JSON$stringify","a_value","b_value","column","_selectAll","SimpleTableComponent_div_1_Template","SimpleTableComponent_button_2_Template","SimpleTableComponent_ng_container_3_Template","SimpleTableComponent_div_6_Template","SimpleTableComponent_div_8_Template","column_template","link_r1","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","error_msg_r3","links","_StatusOverlayComponent","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","load_state_r4","_StatusPillComponent","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","_ThumbnailPipe","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","_UnauthorisedComponent","_UploadPermissionsModalComponent","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","image_state_r2","_UserAvatarComponent","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","work_location_tooltip_component_1","region_select","building_select","help_tooltip","work_location_tooltip","desk_height_tooltip_r3","language_tooltip","newSupportTicket","reloadPage","_UserControlsComponent","accessibility_tooltip","WorkLocationTooltipComponent","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_ng_template_23_Template","UserControlsComponent_div_25_Template","UserControlsComponent_button_26_Template","UserControlsComponent_button_31_Template","disable_building_select","desk_height","has_new_version","focusInput","key_r3","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r4","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","_VirtualKeyboardComponent","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","loc_r3","ctx_r4","setLocation","WorkLocationTooltipComponent_div_10_div_1_button_12_Template","WorkLocationTooltipComponent_div_10_div_1_div_17_Template","timeFrom","block_r6","location_icon","WorkLocationTooltipComponent_div_10_div_1_Template","active_preference","blocks","_WorkLocationTooltipComponent","overrides","pref","day_of_week","getDay","work_preferences","work_overrides","location_name_time","_setLocation","new_overrides","key_date","_defineProperty","updateUser","editSettings","WorkLocationTooltipComponent_div_10_Template","WorkLocationTooltipComponent_ng_template_11_Template","ZONE_LIST","EMPTY_ZONE","PlaceZone","_ZonePipe","ZonePipe","showZone","AttendeeListComponent_ng_container_7_div_1_div_5_Template","AttendeeListComponent_ng_container_7_div_1_Template","show_host","_AttendeeListComponent","AttendeeListComponent","hide_close","custom_title","AttendeeListComponent_button_2_Template","AttendeeListComponent_div_5_Template","AttendeeListComponent_ng_container_7_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","period_tz","EventCardComponent_a_1_div_29_div_1_Template","EventCardComponent_a_1_div_29_div_3_Template","EventCardComponent_a_1_div_9_Template","EventCardComponent_a_1_div_21_Template","EventCardComponent_a_1_div_29_Template","_EventCardComponent","EventCardComponent","_local_tz","tz_offset","_this$event2","_this$event3","_this$event4","_this$event5","_this$event6","_this2$event","getLocationString","_this$event7","_getLocationString","_this$event8","_this$event9","_this$event10","zone_list","_this3$event$extensio","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","menu_r4","EventDetailsModalComponent_div_14_button_1_Template","EventDetailsModalComponent_div_14_button_2_Template","can_check_in","allow_edit","user_r5","EventDetailsModalComponent_ng_container_62_div_1_Template","EventDetailsModalComponent_ng_container_72_div_5_div_13_span_4_Template","order_r7","EventDetailsModalComponent_ng_container_72_div_5_div_13_Template","print","EventDetailsModalComponent_ng_container_72_div_5_Template","EventDetailsModalComponent_div_75_div_3_Template","raw_body","request_r10","EventDetailsModalComponent_ng_container_76_div_5_div_13_Template","EventDetailsModalComponent_ng_container_76_div_5_Template","show_attendees","no_edit_message","_r14","act_r16","EMPTY_ACTIONS","_EventDetailsModalComponent","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","doc","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_13_Template","EventDetailsModalComponent_div_14_Template","EventDetailsModalComponent_div_31_Template","EventDetailsModalComponent_ng_container_36_Template","EventDetailsModalComponent_div_38_Template","EventDetailsModalComponent_ng_container_62_Template","EventDetailsModalComponent_ng_container_72_Template","EventDetailsModalComponent_ng_container_74_Template","EventDetailsModalComponent_div_75_Template","EventDetailsModalComponent_ng_container_76_Template","EventDetailsModalComponent_div_80_Template","EventDetailsModalComponent_button_83_Template","printEvent","EventDetailsModalComponent_button_96_Template","EventDetailsModalComponent_button_97_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","_EventFormService","generateEventForm","_zone_ids","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","_this$last_success","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","previous","_this$_event$getValue","_newForm","_event$linked_booking","master","showEvent","_pattern","resetForm","_event$linked_booking2","_event$extension_data","catering_charge_code","_this$_event$getValue2","form_data","_event$linked_booking3","EventLinkModalComponent","ignore_space_check","ignore_owner","_this7$event","_form$get3","_spaces$","_this7$event2","_this7$event3","_this7$event4","_value$organiser","_value$organiser2","_event$extension_data2","_value","changed_times","changed_spaces","is_owner","breakdown","overflow","processed_assets","creating_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_this7$_org$region","_this7$_org$building","_spaces$5","recurring","checkSelectedSpacesAreAvailable","is_external","calendar","catering_notes","setup_time","breakdown_time","old_system","visit_expected","host_override","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","_EventLinkModalComponent","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","host_email","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","linked_assets","view_access","_this$recurrence","_this$system","parseRecurrence","all_day_date","_arr","queryAllEvents","EVENTS_ENDPOINT","createEvent","updateEvent","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","addEventGuest","removeEventGuest","isSpaceAvailable","system_ids","ignore_period","calendar_fn_1","short_list","_s$resource","method","attendee_list_component_1","event_card_component_1","setup_breakdown_modal_component_1","group_event_card_component_1","_SharedEventsModule","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","SetupBreakdownModalComponent","i13","NgControlStatusGroup","FormGroupDirective","FormControlName","i14","i15","DurationFieldComponent","i16","i17","GroupEventCardComponent","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_p_13_Template","GroupEventCardComponent_button_0_div_17_Template","GroupEventCardComponent_button_0_div_18_Template","GroupEventCardComponent_button_0_div_19_Template","is_onsite","has_space","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_p_27_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent_ng_template_1_div_32_Template","GroupEventCardComponent_ng_template_1_div_33_Template","_GroupEventCardComponent","space_pipe","group_event_calendar","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","featured_card_r4","is_interested","is_going","GroupEventDetailsModalComponent_div_99_interactive_map_3_Template","GroupEventDetailsModalComponent_div_99_div_5_Template","GroupEventDetailsModalComponent_div_99_div_6_Template","GroupEventDetailsModalComponent_div_99_span_8_Template","GroupEventDetailsModalComponent_div_99_span_9_Template","GroupEventDetailsModalComponent_div_99_a_10_Template","showing_map","is_online","_GroupEventDetailsModalComponent","remove_blocks","_remove_blocks","block","last","lastIndexOf","_i2","_remove_blocks2","_this$event$attendees","guest_details","_this$guest_details","_this$event$attendees2","_toggleInterest","_this$event$system","_this$event$system2","toggleInterest","_toggleAttendance","_this$event$system4","_this$event$system3","toggleAttendance","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_12_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_div_84_Template","GroupEventDetailsModalComponent_div_85_Template","GroupEventDetailsModalComponent_span_97_Template","GroupEventDetailsModalComponent_div_99_Template","GroupEventDetailsModalComponent_div_100_Template","concierge_menu_r5","menu_r6","attendance","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","getFreeTimeSlots","blk","getNextFreeTimeSlot","min_size","slots","addSeconds","bkn_start","bkn_end","isSameMinute","save","_SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","_this$_event4","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","_event$extension_data3","_event$extension_data4","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","_form$get4","clearValidators","updateValueAndValidity","validateCateringField","setMockBookingStartDatetime","BOOKING_DATE","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","_booking$resources","organizer","setMinutes","catering_control","control","_catering_control$val","catering_field","isFuture","is_future","_control$parent","qr_code_1","_ExploreBookQrComponent","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","_ExploreBookingModalComponent","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","_ExploreDeskInfoComponent","tries","_this$_element$native","parentElement","left","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","_ExploreDesksService","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","can_book","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_ExploreDeviceInfoComponent","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","device_tooltip_r4","_ExploreIconComponent","ExploreIconComponent","text_color","explore_locker_bank_modal_component_1","in_use_count","_ExploreLockerBankInfoComponent","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3","_ExploreLockerBankModalComponent","_ExploreLockersService","ExploreLockersService","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r5","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","_ExploreMapControlComponent","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r3","ExploreMapViewComponent_div_8_div_3_Template","_ExploreMapViewComponent","ExploreMapViewComponent","_s","_desks","_zones","_maps","map_styles","positions","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","_ExploreParkingInfoComponent","ExploreParkingInfoComponent","ExploreParkingInfoComponent_div_8_Template","is_concierge","explore_parking_info_component_1","_ExploreParkingService","on_book","user_events","active_spaces","_plate_numbers","assigned","_updateParkingSpaces","_updateParkingSpaces2","is_assigned","_space$groups","_space$zone","_space$zone2","active_level","option_r3","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","results","_ExploreSearchComponent","ExploreSearchComponent","search_str","right_size","search_results","setFilter","checkButtonPosition","_this$_input_el","_this$_input_el2","window_width","innerWidth","button_rect","_button_el","ExploreSearchService","closeSearch","showSearch","cancelClear","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","auto_r6","origin_r5","staff_fn_1","organisation_1","TYPES","typeIndex","is_role","_ExploreSearchService","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_maps_people_search","_$properties4","_$properties5","_$properties6","_$properties7","_poi_metadata","_poi_list","can_search","_points_of_interest","poi_list","roled_contacts","mapspeople_items","points_of_interest","roles","role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","_ExploreSensorInfoComponent","ExploreSensorInfoComponent","ExploreSensorInfoComponent_ng_template_3_Template","stats_r2","feature_r3","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","_ExploreSpaceInfoComponent","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","space_tooltip_r4","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","explore_icon_component_1","free","pending","reserved","busy","unknown","_ExploreSpacesService","_panning","handleBookingsChange","handleStatusChange","handlePresenceChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateIcons","_updateStatus2","_step5","_iterator5","_arr2","_ExploreStateService","_positions","_styles","_actions","_labels","_message","_options$disable_feat","_options$disable2","disable_features","_options$disable3","_options$disable_acti","disable_actions","_options$disable4","_options$disable_labe","disable_labels","_options$disable6","style_mappings","_options$disable5","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","exclude","styles_map","explore_sensor_info_component_1","map_canvas_component_1","getCenterPoint","_ExploreZonesService","_area_list","_count_key","_location","_label_location","_capacity","_draw","_points","_polygons$","bind_areas","bind_zone","parseData","zone_metadata","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","area_id","filled","temperature","people_count","people_count_sum","queue_size","setLabels","polygons","_ExploreZoomControlComponent","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","_SharedExploreModule","OverlayModule","MatFormField","MatError","MatInput","UserSearchFieldComponent","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","_SetDatetimeModalComponent","SetDatetimeModalComponent_main_6_Template","_ActionFieldComponent","ActionFieldComponent","show_tooltip","performAction","zone_r1","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r3","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r4","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r7","time_r8","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","_BookingRulesFormComponent","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","render_fn","_CounterComponent","CounterComponent","step","focused","ctrl_key","shift_key","CounterComponent_span_5_Template","day_r1","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","_DateCalendarComponent","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","date_format","start_of_day","end_of_day","DateFieldComponent_div_5_span_1_Template","DateFieldComponent_div_5_span_2_Template","DateFieldComponent_div_5_span_3_Template","week_start","TimezoneDiffRange","Both","Start","End","_DateFieldComponent","DateFieldComponent","from_date","short","_date_pipe","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_Conditional_3_Template","DateFieldComponent_Conditional_4_Template","DateFieldComponent_div_5_Template","DateFieldComponent_span_10_Template","DateFieldComponent_ng_template_11_Template","calendar_picker_r3","ɵɵconditional","has_error","weekday_r1","selectDate","setHoveredDate","DateRangeCalendarComponent_button_14_div_1_Template","DateRangeCalendarComponent_button_14_div_2_Template","DateRangeCalendarComponent_button_14_div_3_Template","DateRangeCalendarComponent_button_14_div_4_Template","DateRangeCalendarComponent_button_14_div_8_Template","is_start","is_end","is_selected","end_after_start","_DateRangeCalendarComponent","DateRangeCalendarComponent","startChange","endChange","hovered_date","weekdays","month_days","_setWeekdays","_setMonthDays","previousMonth","nextMonth","DateRangeCalendarComponent_div_13_Template","DateRangeCalendarComponent_button_14_Template","setStartDate","setEndDate","_DateRangeFieldComponent","DateRangeFieldComponent","contentQueries","dirIndex","DateRangeFieldComponent_ng_template_14_Template","DurationFieldComponent_button_10_ng_container_2_div_5_Template","DurationFieldComponent_button_10_ng_container_2_Template","DurationFieldComponent_button_10_app_icon_5_Template","_DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_div_5_Template","DurationFieldComponent_button_10_Template","date_field_component_1","duration_field_component_1","user_list_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","place_user_pipe_1","date_range_field_component_1","date_range_calendar_component_1","_FormFieldsModule","UserListFieldComponent","MatSuffix","MatOption","MatAutocomplete","MatAutocompleteTrigger","MatAutocompleteOrigin","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","PlaceUserPipe","MatPrefix","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","ɵNgNoValidate","MatSelect","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","MatCheckbox","ItemListFieldComponent","user_r1","_HostSelectFieldComponent","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","image_viewer_component_1","url_r3","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_div_10_mat_progress_spinner_1_Template","ImageListFieldComponent_div_10_app_icon_2_Template","ImageListFieldComponent_div_10_div_3_Template","view_space","_ImageListFieldComponent","_clipboard","_uploads","upload_ids","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","resume","_uploadImages","uploadFileWithPermissions","_file_input","uploadImages","_updateUploadHistory2","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_div_10_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_button_13_Template","ImageListFieldComponent_mat_chip_row_17_Template","addImage","chipList_r11","addChipItem","removeChipItem","item_r3","_ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","chipList_r5","USER_LIST","_PlaceUserPipe","formatted_value","_RecurrenceFieldComponent","RecurrenceFieldComponent","instance_of_month","old_value","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","_RecurrenceModalComponent","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","quill_1","_RichTextInputComponent","readonly","images_allowed","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_this$_editor_el","_this$_container_el","_editor_el","toolbarOptions","header","align","default","bounds","modules","toolbar","container","handlers","image","_embedImage","_embedAttachment","readOnly","on","off","getSelection","file_input","onchange","insertEmbed","insertText","setSelection","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","_SpaceListFieldComponent","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_5","SpaceListFieldComponent_div_15_Template","bld_r1","type_r2","SupportTicketModalComponent_main_6_div_26_mat_option_5_Template","support_request_types","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_div_26_Template","SupportTicketModalComponent_main_6_mat_error_32_Template","SupportTicketModalComponent_main_6_div_33_Template","desc_error","allow_images","_SupportTicketModalComponent","issue_type","_submit","_this$support_request","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","active_time","force_time","TimeFieldComponent_button_10_div_6_Template","TimeFieldComponent_button_10_app_icon_7_Template","TimeFieldComponent_button_11_div_6_Template","TimeFieldComponent_button_11_app_icon_7_Template","extra_info_fn","_TimeFieldComponent","TimeFieldComponent","no_past_times","_this$_time_options$f","show_select","_time_options","generateAvailableTimes","_this$_time_options$f2","_this$_time_options$f3","select_field","openedChange","datestamp","show_past","TimeFieldComponent_div_5_Template","TimeFieldComponent_button_10_Template","TimeFieldComponent_button_11_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","_UploadFileFieldComponent","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","_UploadListFieldComponent","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r7","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","ACCEPTED_FILE_TYPES","DENIED_FILE_TYPES","_UserListFieldComponent","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","auto_r10","chipList_r9","search_valid_email","blurInput","stopPropagation","empty_fn","_UserSearchFieldComponent","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_5_Template","UserSearchFieldComponent_mat_option_8_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","auto_r7","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","nextEventTime","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","MOCK_GUESTS","asset_count","tracking","bookings_data_1","MOCK_BOOKINGS","_$route_params","_$route_params2","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","catering_data_1","randomStatus","rnd","PEOPLE","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subMinutes","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","createAreaManagementModule","MockAreaManagementModule","overview","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","updateLocations","ts_md5_1","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","registerSystem","System","control_1","createSystemModule","createBookingsModule","ContactTracing","contact_tracing_1","createContactTracingModule","AreaManagement","desks_1","LocationServices","Camera","camera_1","createCameraModule","Display","display_1","createDisplayModule","Microphone","microphone_1","createMicrophoneModule","Capture","capture_1","createCaptureModule","MeetingPush","meeting_1","createMeetingPushModule","VidConf","video_conference_1","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","locker_locations_1","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","generateMockBuilding","BLD_COUNT","generateMockLevel","nested","level2","LVL_COUNT","level_name","IGNORE_KEYS","_data$bookable","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","yaml","_OrganisationService","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","_region_settings","_building_settings","_updateSettingOverrides","_this$building","_this$buildings$","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","bld_list","Region","orgs","_this$_buildings$getV","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","load_metadata","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","settings_request","bindings_request","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","querySettings","encryption_level","EncryptionLevel","None","settings_string","_loadLevels","_level_list","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_this5$region","_step6","_iterator6","_this6$building","_this6$region","buildingSettings","regionSettings","generateMockOrganisation","ORG_COUNT","building_utilities_1","default_module","card_type","item_r4","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","_CardInputFieldComponent","CardInputFieldComponent","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","success_state_r3","transaction_id","_PaymentModalComponent","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","_PaymentsModule","STRIPE_MODULE","_PaymentsService","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","_NewSpaceSelectModalComponent","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","_SpaceDetailsComponent","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r4","_SpaceFiltersDisplayComponent","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_2_Template","SpaceFiltersComponent_mat_form_field_15_mat_option_5_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_Template","SpaceFiltersComponent_div_28_div_6_Template","SpaceFiltersComponent_div_28_div_7_Template","feature_display","SpaceFiltersComponent_section_31_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_31_ng_container_3_Template","_SpaceFiltersComponent","using_mapspeople","viewing_map","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_form_field_15_Template","SpaceFiltersComponent_mat_form_field_17_Template","SpaceFiltersComponent_div_26_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_29_Template","SpaceFiltersComponent_section_31_Template","SpaceFiltersComponent_div_34_Template","tmp_17_0","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","space_placeholder_r4","tmp_12_0","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","_SpaceListComponent","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","_SpaceLocationPinComponent","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_div_2_Template","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_Template","_SpaceSelectMapComponent","SpaceSelectMapComponent","free_spaces","_split$map","_split$map2","SpaceSelectMapComponent_mat_form_field_1_Template","support_url","configurations","updateSpaceList","SPACE_LIST","ATTEMPT_COUNT","EMPTY_SPACE","_SpacePipe","_this$_org2","is_email","_this$_org","_this$_org3","showSystem","querySystemsWithEmails","in","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_LIST_REQUESTS","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","ctrl","isValidUrl","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","_SharedSpacesModule","SPACE_PIPE","_SpacesService","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","hour_r2","offset_y","_FindAvailabilityModalComponent","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","_UserAvailabilityComponent","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","_NewUserModalComponent","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","_UserFormComponent","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","location_time","datetime","_this$work_overrides$","date_string","_pref$blocks","_this$work_preference","work_preference","in_hours","in_hours_time","_UserPipe","UserPipe","generateMockUser","external","USER_COUNT","delegates","delegate_count","USER_EMAILS","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","_SharedUsersModule","day_r2","weekdays_enabled","initialiseDay","type_r7","block_r5","day_r6","setStartTime","setEndTime","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_div_6_mat_option_5_Template","i_r8","addBlock","removeBlock","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_div_6_Template","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_Template","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_Template","WFHSettingsModalComponent_main_4_mat_checkbox_4_Template","WFHSettingsModalComponent_main_4_ng_container_7_Template","WFHSettingsModalComponent_main_4_ng_template_8_Template","has_working_days","empty_state_r9","_WFHSettingsModalComponent","available_weekdays","_this$options$find","cleanupBlocks","fromTime","_saveChanges","new_settings","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_main_4_Template","WFHSettingsModalComponent_footer_5_Template","WFHSettingsModalComponent_ng_template_6_Template","load_state_r11"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/parking.service.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/fixed-device-helpers.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/shorten.fn.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/desk-height-presets.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/image-viewer.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/limit-input.directive.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-canvas.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/map-renderer.component.ts","./libs/components/src/lib/maps-indoors.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/simple-table.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/components/src/lib/work-location-tooltip.component.ts","./libs/components/src/lib/zone.pipe.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/group-event-card.component.ts","./libs/events/src/lib/group-event-details-modal.component.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-icon.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking-info.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/date-range-calendar.component.ts","./libs/form-fields/src/lib/date-range-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport { invalidateToken, isMock, setToken, token } from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({ declarations: [\n        AppComponent,\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    bootstrap: [AppComponent], imports: [BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        })], providers: [SpacePipe, provideHttpClient(withInterceptorsFromDi())] })\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id,\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <interactive-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </interactive-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <interactive-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </interactive-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { DatePipe } from '@angular/common';\nimport { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    getTimezoneOffsetString,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon class=\"text-2xl\">today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon class=\"text-2xl\">update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon class=\"text-2xl\">schedule</app-icon>\n                    <div class=\"flex flex-col leading-tight\">\n                        <div time>{{ formattedTime() }}</div>\n                        <div class=\"text-xs opacity-30\" *ngIf=\"timezone\">\n                            {{ formattedTime(tz) }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }}\n                    {event.attendees.length, plural,\n                        =1 {attendee }\n                        other {attendees }\n                    }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon class=\"text-2xl\">place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    private _date: DatePipe = new DatePipe('en');\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog,\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    public formattedTime(tz?: string) {\n        const date = this.event.date;\n        const date_end = this.event.date_end;\n        const all_day = this.event.all_day;\n        const tz_format = this._date.transform(date, 'z', tz);\n        const start_date = this._date.transform(date, 'MMM d', tz);\n        const start_time = this._date.transform(date, this.time_format, tz);\n        const end_date = this._date.transform(date_end, 'MMM d', tz);\n        const end_time = this._date.transform(date_end, this.time_format, tz);\n\n        if (this.is_multiday) {\n            return `${start_date}${all_day ? '' : ', ' + start_time} - ${end_date}${all_day ? '' : ', ' + end_time}`;\n        } else if (all_day) {\n            return 'All Day';\n        }\n        return `${start_time} - ${end_time} ${'(' + tz_format + ')'}`;\n    }\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        return getTimezoneOffsetString(tz);\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id),\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    ParkingService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMilliseconds,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: [\n            'event',\n            'desk',\n            'parking',\n            'visitor',\n            'locker',\n            'group-event',\n        ],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true)),\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings',\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource,\n                                            ),\n                                            system: space,\n                                        }),\n                                ),\n                            ),\n                            catchError((_) => of([])),\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind(),\n                            );\n                        }\n                        return obs;\n                    }),\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1),\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase(),\n                        )) &&\n                    !_.linked_bookings?.find(\n                        (b) => b.booking_type === 'group-event',\n                    ),\n            );\n        }),\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([])),\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly raw_events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = this.raw_events.pipe(\n        map((_) => _.filter((_) => !_.extension_data?.shared_event)),\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[]))),\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([]))),\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n                include_deleted: 'recurring',\n            }).pipe(catchError((_) => of([]))),\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly group_events = this.raw_events.pipe(\n        map((_) => _.filter((_) => _.extension_data?.shared_event)),\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (lkr) => lkr.id === i.locker_id,\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n        this.group_events,\n    ]).pipe(\n        map(\n            ([\n                events,\n                visitors,\n                desks,\n                parking,\n                lockers,\n                group_events,\n            ]: any) => {\n                const filtered_events = events.filter(\n                    (ev) =>\n                        !desks.find(\n                            (bkn) => `${ev.meeting_id}` === `${bkn.id}`,\n                        ) &&\n                        ev.linked_bookings[0]?.booking_type !== 'group-event',\n                );\n                return [\n                    ...filtered_events,\n                    ...visitors,\n                    ...desks,\n                    ...parking,\n                    ...lockers,\n                    ...group_events,\n                ].sort((a, b) => a.date - b.date);\n            },\n        ),\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter((_) => {\n                if (\n                    this._deleted.includes(\n                        _.instance ? `${_.id}|${_.instance}` : _.id,\n                    )\n                )\n                    return false;\n                if (\n                    _.extension_data?.shared_event &&\n                    !filters?.shown_types?.includes('group-event')\n                ) {\n                    return false;\n                }\n                if (\n                    _ instanceof CalendarEvent &&\n                    !_.extension_data?.shared_event &&\n                    !filters?.shown_types?.includes('event')\n                ) {\n                    return false;\n                } else if (_ instanceof CalendarEvent) return true;\n                return filters?.shown_types?.includes((_ as any).booking_type);\n            }),\n        ),\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                const time_before = Math.min(60, auto_release.time_before || 0);\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) + time_before,\n                            ),\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) + time_before;\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0,\n                            ),\n                            Date.now(),\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0,\n                        );\n                        const close_after = differenceInMilliseconds(\n                            time.getTime() + 60 * 1000,\n                            Date.now(),\n                        );\n                        const wording =\n                            type === 'parking' ? 'reservation' : 'booking';\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} ${wording}`,\n                                content: `You have indicated you are not in the office. \n                                Your  ${wording} for \"<i>${\n                                    booking.asset_name || booking.title\n                                }</i>\" at ${format(\n                                    booking.date,\n                                    this._settings.time_format,\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format,\n                                )}.<br/><br/>\n                                Do you wish to keep this ${wording}?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                                close_delay: close_after,\n                            },\n                            this._dialog,\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        }),\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog,\n        private _parking: ParkingService,\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api',\n                ),\n            ),\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll()),\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]',\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(\n            item.instance ? `${item.id}|${item.instance}` : item.id,\n        );\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted),\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip(request)\"\n                                *ngIf=\"\n                                    end_time <= request.deliver_at ||\n                                    rejected_ids.includes(request.id) ||\n                                    request.conflict\n                                \"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    @Input() public rejected_ids: string[] = [];\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip(request: AssetRequest) {\n        return this.rejected_ids.includes(request.id) || request.conflict\n            ? 'Some of the items are not available for the selected date and time.'\n            : 'Delivery time is outside of the event time.\\nThis order will be ignored.';\n    }\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService,\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any }),\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        this.asset_requests = (value || []).map(\n            (_) =>\n                new AssetRequest({\n                    ..._,\n                    event: this.options as any,\n                    state: _.state,\n                }),\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const order_list = this.asset_requests.filter((_) => _.id !== order.id);\n        const requested: Record<string, number> = {};\n        for (const order of order_list) {\n            for (const item of order.items) {\n                requested[item.id] =\n                    (requested[item.id] || 0) + item?.quantity || 0;\n            }\n        }\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n                requested,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    const list = [];\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_) => {\n                            let id = '';\n                            let count = 0;\n                            while (\n                                (!id || list.includes(id)) &&\n                                count < (item as any).assets.length\n                            ) {\n                                id = (item as any).assets[\n                                    randomInt((item as any).assets.length)\n                                ].id;\n                            }\n                            list.push(id);\n                            return id;\n                        });\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                conflict: false,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity,\n                    ),\n                items: items.map((_) => ({ ..._ })),\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            for (const item of new_order.items) {\n                const total = orders.reduce(\n                    (t, c) =>\n                        (t +=\n                            c.items.find((_) => _.id === item.id)?.quantity ||\n                            0),\n                    0,\n                );\n                if (total + item.quantity > (item as any).assets.length) {\n                    notifyError(\n                        `Not enough assets available to meet request [${item.name}].\n                        Another request for this asset has been made in this meeting.`,\n                        undefined,\n                        undefined,\n                        { duration: 5000 },\n                    );\n                    return;\n                }\n            }\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id,\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id,\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id),\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public readonly ref_id: string;\n    public readonly state: string;\n    public conflict = false;\n    public _changed = false;\n    public _booking: Booking | null;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        const booking = this.event?.linked_bookings?.find(\n            (_) => _.extension_data.request_id === this.id\n        );\n        this._booking = booking || data.booking || null;\n        this._changed = !!data._changed || !booking;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n        this.conflict = !!data.conflict;\n        this.ref_id = `${this.deliver_at_time}|${this.items\n            .map((_) => `${_.id}:${_.quantity}`)\n            .join('|')}`;\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>\n                            {{\n                                (item.available != null\n                                    ? item.available\n                                    : item.assets?.length) || 0\n                            }}\n                            Available\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"\n                            (item.available != null\n                                ? item.available\n                                : item.assets?.length) || 1\n                        \"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset - 1\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{\n                                            asset.available ||\n                                                asset.assets?.length ||\n                                                '0'\n                                        }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Input() public requested: Record<string, number> = {};\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    private _requested_items = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n        this._requested_items,\n    ]).pipe(\n        map(([counts, assets, requested]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n                if (requested[item.id] !== undefined) {\n                    (item as any).available = Math.max(\n                        (item.assets?.length || 0) - requested[item.id],\n                        0\n                    );\n                }\n            }\n            return assets.filter(\n                (_: any) =>\n                    (_.available != null && _.available > 0) ||\n                    (_.available == null && _.assets?.length > 0)\n            );\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n        if (changes.requested) {\n            this._requested_items.next(this.requested);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        [requested]=\"requested\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public requested = this._data.requested;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n            requested: Record<string, number>;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, unique } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[]),\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>,\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory),\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets }) as AssetGroup),\n                    ),\n                ),\n            ),\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        }),\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup),\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[]),\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, '']),\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, '']),\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, ''])),\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, ''])),\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`,\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>,\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder),\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products),\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id,\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id,\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id,\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id,\n                ),\n            );\n            return product;\n        }),\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[],\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id),\n                    ),\n            ),\n        ),\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[],\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            bookings = bookings.filter(\n                (_) => _.status !== 'declined' && _.status !== 'cancelled',\n            );\n            return products.map((product) => ({\n                ...product,\n                assets: product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                !ignore.includes(booking.id) &&\n                                (booking.asset_id === asset.id ||\n                                    booking.asset_ids?.includes(asset.id)),\n                        ),\n                ),\n            }));\n        }),\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise()),\n    );\n}\n\nexport function differenceBetweenAssetRequests(\n    new_assets: AssetRequest[],\n    old_assets: AssetRequest[],\n    reset_state: boolean = false,\n): string[] {\n    if ((!new_assets || new_assets?.length <= 0) && old_assets?.length)\n        return [];\n    if (!old_assets) return [];\n    const changed: string[] = [];\n    for (const request of new_assets) {\n        const match = old_assets.find((_) => _.id === request.id);\n        if (!match || match.ref_id !== request.ref_id) {\n            changed.push(request.id);\n        }\n    }\n    return changed;\n}\n\nexport async function validateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[] = [],\n    force_create = false,\n): Promise<() => Promise<void>> {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration),\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings =\n        id && ical_uid\n            ? await queryBookings({\n                  period_start: getUnixTime(startOfDay(date)),\n                  period_end: getUnixTime(endOfDay(date)),\n                  type: 'asset-request',\n                  email: host,\n                  event_id: from_booking ? '' : id,\n                  booking_id: from_booking ? id : '',\n                  ical_uid,\n              }).toPromise()\n            : [];\n    const booking_list: [string, AssetRequest][] = bookings.map((_) => [\n        _.id,\n        new AssetRequest(_.extension_data.request),\n    ]);\n    new_assets?.forEach((_) => (_.conflict = false));\n    let changed = force_create\n        ? new_assets.map((_) => _.id)\n        : differenceBetweenAssetRequests(\n              new_assets,\n              booking_list.map(([_, r]) => r),\n              reset_state,\n          );\n    if (reset_state) {\n        const has_state = bookings.filter((_) => _.approved || _.rejected);\n        changed = unique([\n            ...changed,\n            ...has_state.map((_) => _.extension_data.request_id),\n        ]);\n    }\n    const unchanged = booking_list.filter(\n        ([_, request]) => !changed.includes(request.id),\n    );\n    const changed_requests = booking_list.filter(([_, { id }]) =>\n        changed.includes(id),\n    );\n    const changed_assets = new_assets.filter(({ id }) => changed.includes(id));\n    const filtered = requests.filter(\n        (req) =>\n            !req.rejected &&\n            (!bookings.find((b) => b.id === req.id) ||\n                unchanged.find(([id]) => req.event_id === id)),\n    );\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    for (const [_, request] of unchanged) {\n        used_ids = [\n            ...used_ids,\n            ...flatten(request.items.map((_) => _.item_ids)),\n        ];\n    }\n    const available_groups = await queryGroupAvailability(\n        {\n            period_start: getUnixTime(all_day ? startOfDay(date) : date),\n            period_end: getUnixTime(\n                all_day\n                    ? endOfDay(addMinutes(date, duration))\n                    : addMinutes(date, duration),\n            ),\n            type: 'asset-request',\n        },\n        bookings.map((_) => _.id),\n    ).toPromise();\n    const processed_requests = changed_assets.map((request) => {\n        // Handle duplicate asset ids\n        let asset_ids = flatten(\n            (request.items as any).map(({ id, item_ids, quantity }) => {\n                const assets = available_groups.find(\n                    (_) => _.id === id,\n                )?.assets;\n                if (!assets) return item_ids;\n                const list = [];\n                return new Array(quantity).fill(0).map((_, idx) => {\n                    const item =\n                        used_ids.includes(item_ids[idx]) ||\n                        list.includes(item_ids[idx]) ||\n                        !item_ids[idx]\n                            ? assets?.find(({ id }) => {\n                                  return (\n                                      !used_ids.includes(id) &&\n                                      !list.includes(id)\n                                  );\n                              })?.id\n                            : item_ids[idx];\n                    if (!item) {\n                        request.conflict = true;\n                        throw 'Unable to find available asset for request';\n                    }\n                    list.push(item);\n                    return item;\n                });\n            }),\n        );\n        // Grab any existing bookings for the asset for the parent event/booking\n        const booking = bookings.find((_) =>\n            _.asset_ids.find((id) =>\n                request.items?.find((i) => i.item_ids.includes(id)),\n            ),\n        );\n        used_ids = [...used_ids, ...asset_ids];\n        const asset_data: Partial<Booking> = {\n            type: 'asset-request',\n            booking_type: 'asset-request',\n            date,\n            duration,\n            all_day,\n            description: location_name,\n            user_email: host,\n            asset_id: asset_ids[0],\n            asset_ids,\n            asset_name: request.items.map((_) => _.name).join(', '),\n            title: request.items.map((_) => _.name).join(', '),\n            approved: !reset_state && booking?.approved && !request._changed,\n            rejected: !reset_state && booking?.rejected && !request._changed,\n            extension_data: {\n                parent_id: id,\n                request_id: request.id,\n                location_id,\n                request: new AssetRequest({ ...request, event: null }),\n            },\n            zones: zones || [],\n        };\n        if (from_booking) (asset_data as any).parent_id = id;\n        return createBooking(new Booking(asset_data), {\n            ical_uid,\n            event_id: from_booking ? '' : id,\n        });\n    });\n    return async () => {\n        await Promise.all(\n            changed_requests.map(([id]) => removeBooking(id).toPromise()),\n        );\n        await Promise.all(processed_requests.map((r) => r.toPromise()));\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n\nexport * from './lib/parking.service';\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ParkingService } from './parking.service';\nimport { GroupEventDetailsModalComponent } from '../../../events/src/lib/group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{\n                                raw_description ||\n                                    booking?.asset_name ||\n                                    booking?.asset_id\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"is_reserved_parking_space | async\"\n                >\n                    {{\n                        booking.status !== 'declined' ? 'RESERVED' : 'RELEASED'\n                    }}\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public readonly is_reserved_parking_space =\n        this._parking.assigned_space.pipe(\n            map(\n                (space) =>\n                    this.booking.booking_type === 'parking' &&\n                    space &&\n                    this.booking.asset_id === space.id,\n            ),\n        );\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _parking: ParkingService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description,\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit(),\n                ),\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit()),\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking, checkinBookingInstance } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [class.text-success-content]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress') &&\n                                booking.status !== 'declined'\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 py-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public show_request = {};\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location:\n                this.booking?.extension_data?.map_id || this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.valid_assets.length;\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        const building = this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id),\n        );\n        if (this._settings.get('app.use_region')) {\n            const region = this._org.regions.find(\n                (region) =>\n                    (this.booking?.zones || []).includes(region.id) ||\n                    region.id === building?.parent_id,\n            );\n            if (region) return region;\n        }\n        return building;\n    }\n\n    public get can_edit() {\n        return (\n            this.booking.booking_type !== 'visitor' &&\n            this.booking.booking_type !== 'parking'\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`,\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {\n        console.log('Valid assets:', this.booking?.valid_assets);\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        const bkn = this.booking;\n        const promise = (\n            bkn.instance\n                ? checkinBookingInstance(\n                      bkn.id,\n                      bkn.instance,\n                      !this.booking.checked_in,\n                  )\n                : checkinBooking(this.booking.id, !this.booking.checked_in)\n        )\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        await promise;\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`,\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { bookedResourceList, queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n    /** Whether to group bookings */\n    disable_date?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}',\n        ),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1),\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1),\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0,\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`),\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return bookedResourceList({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    (this._settings.get('app.use_region')\n                        ? this._org.region?.id\n                        : this._org.building?.id) ||\n                    this._org.organisation.id,\n            }).pipe(\n                map(\n                    (booked_ids) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration,\n                        ).valueOf();\n                        this._resource_use = {};\n                        for (const id of booked_ids) {\n                            this._resource_use[id] = ' ';\n                        }\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    [],\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp),\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_),\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !booked_ids.includes(asset.id)\n                            );\n                        });\n                        console.log('Resources:', resources, available);\n                        return available;\n                    },\n                    catchError((_) => of([])),\n                ),\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id),\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        }),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        }),\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            }),\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService,\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1,\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            }),\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}',\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, ''],\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}',\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form,\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                {\n                    ...booking,\n                    ...value,\n                    user_email:\n                        value.user?.email ||\n                        value.user_email ||\n                        currentUser()?.email,\n                },\n                this._options.getValue().type,\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const resources = value.resources || [];\n        const zones = resources[0]?.zone\n            ? unique([\n                  this._org.organisation.id,\n                  this._org.region?.id,\n                  resources[0]?.zone?.parent_id,\n                  resources[0]?.zone?.id,\n              ])\n            : [this._org.organisation.id, this._org.region?.id];\n        const q: any = event_id\n            ? { ical_uid: value.ical_uid, event_id: event_id }\n            : parent_id\n              ? { booking_id: parent_id }\n              : {};\n        if (booking.instance && !value.update_master) {\n            q.instance = true;\n            q.start_time = booking.booking_start;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name || value.user_name,\n                user_email: value.user?.email || value.user_email,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    assets: value.assets.map((_) => _.toJSON()),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n                zones: unique([...zones, ...(value.zones || [])]).filter(\n                    (_) => _,\n                ),\n            }),\n            q,\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: unique([...zones, ...(value.zones || [])]).filter(\n                        (_) => _,\n                    ),\n                },\n                value.assets,\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time',\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result),\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email,\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id,\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length,\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email',\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type,\n                ),\n            ),\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd',\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: (asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          this._org.region?.id,\n                          asset?.zone?.parent_id,\n                          asset?.zone?.id,\n                      ])\n                    : [this._org.organisation.id, this._org.region?.id]\n                ).filter((_) => _),\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`,\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType,\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected,\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id,\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((locker) => ({\n                          ...locker,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || [],\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id,\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata))),\n                    ),\n                ),\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number,\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id,\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id),\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item),\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item,\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'group-event'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n    guests?: User[];\n}\n\nexport enum RecurrenceDays {\n    SUNDAY = 1 << 6,\n    MONDAY = 1 << 5,\n    TUESDAY = 1 << 4,\n    WEDNESDAY = 1 << 3,\n    THURSDAY = 1 << 2,\n    FRIDAY = 1 << 1,\n    SATURDAY = 1 << 0,\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\nexport enum WeekOfMonth {\n    First = 1,\n    Second = 2,\n    Third = 3,\n    Fourth = 4,\n    Fifth = 5,\n    Last = -1,\n    SecondLast = -2,\n    ThirdLast = -3,\n    FourthLast = -4,\n    FifthLast = -5,\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** List of URLs for associated booking images */\n    public readonly images: string[];\n    /** List of user defined tags associated with the booking */\n    public readonly tags: string[];\n\n    public readonly permission: 'PRIVATE' | 'OPEN' | 'PUBLIC';\n    /** Default type */\n    public readonly access: boolean;\n    /** Whether asset has been inducted */\n    public readonly induction?: 'tentative' | 'accepted' | 'declined';\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n    /** Time  */\n    public readonly checked_in_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly process_state: string;\n    /** Unix epoch for the start time of the reccurence instance in seconds */\n    public readonly instance?: number;\n    /** Type of recurrence instance */\n    public readonly recurrence_type: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Bit flags for the recurrence days of the week */\n    public readonly recurrence_days?: number;\n    /** Week of the month to recur on */\n    public readonly recurrence_nth_of_month?: WeekOfMonth;\n    /** How often to recur */\n    public readonly recurrence_interval?: number;\n    /** Unix epoch for the end time of the recurrence in seconds */\n    public readonly recurrence_end?: number;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    _valid_asset_cache = [];\n    _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.extension_data.assets || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id,\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                          ? 'rejected'\n                          : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                }),\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60),\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000,\n                ),\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.permission = (data.permission || 'PRIVATE').toUpperCase() as any;\n        this.attendees = data.attendees || data.guests || data.members || [];\n        this.tags = data.tags || data.extension_data?.tags || [];\n        this.images = data.images || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        this.induction = data.induction || undefined;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0),\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf(),\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.checked_in_at = data.checked_in_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.images = data.images || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected || this.deleted\n                  ? 'declined'\n                  : this.approved\n                    ? 'approved'\n                    : 'tentative';\n        this.process_state = data.process_state || 'pending';\n\n        this.recurrence_type = data.recurrence_type || 'none';\n        this.recurrence_days = data.recurrence_days;\n        this.recurrence_nth_of_month = data.recurrence_nth_of_month;\n        this.recurrence_interval = data.recurrence_interval;\n        this.recurrence_end = data.recurrence_end;\n        this.instance = data.instance;\n\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any),\n        );\n        this.extension_data.tags = data.tags || [];\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null }),\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        data.zones = data.zones.filter((_) => _);\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.extension_data?.location || this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { current_user, currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false },\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        event_id: new FormControl(booking.event_id || ''),\n        ical_uid: new FormControl(booking.extension_data.ical_uid || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        date_end: new FormControl(booking.date_end),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || '',\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        featured: new FormControl(booking.extension_data?.featured || false),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        user_name: new FormControl(booking.user_name),\n        timezone: new FormControl(booking.timezone || ''),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource,\n        ),\n        location: new FormControl(booking.extension_data.location || ''),\n        attendance_type: new FormControl(\n            booking.extension_data.attendance_type || 'ANY',\n        ),\n        phone: new FormControl(booking.extension_data.phone || ''),\n        permission: new FormControl(booking.permission || 'PRIVATE'),\n        images: new FormControl(booking.images || []),\n        tags: new FormControl(booking.tags || []),\n        plate_number: new FormControl(\n            booking.extension_data.plate_number || '',\n        ),\n        recurrence_type: new FormControl(booking.recurrence_type || 'none'),\n        recurrence_days: new FormControl(booking.recurrence_days),\n        recurrence_nth_of_month: new FormControl(\n            booking.recurrence_nth_of_month,\n        ),\n        recurrence_interval: new FormControl(booking.recurrence_interval),\n        recurrence_end: new FormControl(booking.recurrence_end),\n        notes: new FormControl(booking.extension_data.notes || ''),\n        update_master: new FormControl(false),\n        self_registered: new FormControl(false),\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.user.valueChanges.subscribe((user) => {\n        if (!user) return;\n        form.patchValue(\n            {\n                user: user,\n                user_id: user?.id,\n                user_email: user?.email,\n                user_name: user?.name,\n            },\n            { emitEvent: false },\n        );\n    });\n    current_user.subscribe((user) => {\n        if (!user) return;\n        form.patchValue(\n            {\n                booked_by: user,\n                booked_by_id: user?.id,\n                booked_by_email: user?.email,\n                name: user?.name,\n            },\n            { emitEvent: false },\n        );\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0]),\n    );\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' },\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false },\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date,\n                    ),\n                },\n                { emitEvent: false },\n            );\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false },\n            );\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = [],\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y),\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response (can be set to apply to only recurring bookings) */\n    include_deleted?: 'all' | 'recurring';\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n    /** Whether to also query rejected bookings */\n    rejected?: boolean;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * List resources that are booked within the given parameters\n * @param q Parameters to pass to the API request\n */\nexport function bookedResourceList(\n    q: BookingsQueryParams,\n): Observable<string[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}/booked${query ? '?' + query : ''}`).pipe(\n        map((list) => list as string[]),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams,\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item)),\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string },\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item)),\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch',\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data,\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Update the induction status of an existing booking\n * @param id ID of the booking to update\n * @param status New induction status of the booking\n */\nexport function updateBookingInductionStatus(\n    id: string,\n    status: 'tentative' | 'accepted' | 'declined',\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_induction?induction=${encodeURIComponent(status)}`,\n        {},\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Update instance of an existing booking series\n * @param id ID of the booking to update\n * @param start_time Unix seconds of the start time of the booking\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBookingInstance(\n    id: string,\n    start_time: number,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch',\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/instance/${start_time}`,\n        data,\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: {\n        booking_id?: string;\n        event_id?: string;\n        ical_uid?: string;\n        instance?: number;\n    },\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    const instance = q?.instance;\n    if (q) delete (q as any).instance;\n    return id\n        ? instance\n            ? updateBookingInstance(id, data.instance, data)\n            : updateBooking(id, data)\n        : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n */\nexport function removeBooking(id: string, q: any = {}) {\n    if (q.instance) {\n        return removeBookingInstance(id, q.start_time);\n    }\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Remove instance of an existing booking series\n * @param id ID of the booking to update\n * @param start_time Unix seconds of the start time of the booking\n */\nexport function removeBookingInstance(id: string, start_time: number) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/instance/${start_time}`,\n        {\n            response_type: 'void',\n        },\n    );\n}\n\n/**\n * Set the approval state of the booking to `approved`\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking instance to `approved`\n * @param id ID of the booking to reject\n * @param start_time Start time of the booking instance\n */\nexport function approveBookingInstance(id: string, start_time: number) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to `rejected`\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking instance to `rejected`\n * @param id ID of the booking to reject\n * @param start_time Start time of the booking instance\n */\nexport function rejectBookingInstance(id: string, start_time: number) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\nexport function setBookingState(\n    id: string,\n    state: string,\n    utm_source?: string,\n) {\n    const query = toQueryString({ state, utm_source });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_state${\n            query ? '?' + query : ''\n        }`,\n        {},\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * List the guests in a booking\n * @param id ID of the booking to reject\n */\nexport function queryBookingGuests(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/guests`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a guest in a booking\n * @param id ID of the booking to reject\n * @param guest_id ID of the guest to check in\n */\nexport function checkinBookingGuest(\n    id: string,\n    guest_id: string,\n    state: boolean = true,\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${encodeURIComponent(guest_id)}/check_in?state=${state}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function bookingAddGuest(id: string, guest: GuestUser) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/attendee`,\n        guest,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function bookingRemoveGuest(id: string, guest: GuestUser) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/attendee/${encodeURIComponent(guest.email)}`,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        '',\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        }),\n    );\n}\n\n/**\n * Set the checkin state of a booking instance\n * @param id ID of the booking to grab\n * @param start_time Start time of the booking instance\n * @param state New checkin state of the booking instance\n */\nexport function checkinBookingInstance(\n    id: string,\n    start_time: number,\n    state: boolean,\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in/${start_time}?${query}`,\n        '',\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        }),\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean,\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0],\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) =>\n                            b.asset_id === id && (!ignore || ignore !== b.id),\n                    ),\n            ),\n        ),\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0,\n        ),\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource,\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise()),\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id)),\n                ),\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id },\n            ).toPromise();\n        }),\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [to]=\"end_date\"\n                        [timezone]=\"timezone\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public readonly setRegion = (r) => (this._org.region = r);\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90,\n            ),\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        },\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) {\n            this.displayed = null;\n            setTimeout(() => this._dialog_ref.close([item]), 50);\n        }\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id),\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div\n            class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\"\n            *ngIf=\"!edit_presets; else desk_height_tooltip\"\n        >\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <div class=\"flex items-center space-x-2 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript flex-1 w-1/2\"\n                    >\n                        <mat-select\n                            placeholder=\"No selected preset\"\n                            [(ngModel)]=\"preset\"\n                            (ngModelChange)=\"setPreset($event)\"\n                        >\n                            <mat-option value=\"\">None</mat-option>\n                            <mat-option value=\"standing\">Standing</mat-option>\n                            <mat-option value=\"sitting\">Seated</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"edit_presets = true\"\n                        class=\"rounded h-12 w-12 bg-secondary text-secondary-content\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                </div>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"height\"\n                            (ngModelChange)=\"updatePreset(height)\"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <ng-template #desk_height_tooltip>\n            <desk-height-presets\n                [show_close]=\"true\"\n                (close)=\"edit_presets = false\"\n            ></desk-height-presets>\n        </ng-template>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public edit_presets = false;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>,\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        if (!sitting_height && !standing_height) {\n            this.edit_presets = true;\n        }\n        const last_height = parseInt(\n            localStorage.getItem('PLACEOS.last_desk_height'),\n            10,\n        );\n        this.height = last_height || sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public updatePreset(new_height: number) {\n        const sitting_height = this._settings.get('desk_sitting_height') || 71;\n        const standing_height =\n            this._settings.get('desk_standing_height') || 102;\n        if (new_height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (new_height === standing_height) {\n            this.preset = 'standing';\n        } else {\n            this.preset = null;\n        }\n    }\n\n    public setPreset(value: string) {\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        localStorage.setItem('PLACEOS.last_desk_height', `${this.height}`);\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <div\n                        *ngIf=\"can_book_for_others\"\n                        class=\"w-full flex flex-col\"\n                    >\n                        <label for=\"host\">\n                            {{ 'FORM.HOST' | translate }}<span>*</span>\n                        </label>\n                        <a-user-search-field\n                            name=\"host\"\n                            class=\"mb-4\"\n                            formControlName=\"user\"\n                        ></a-user-search-field>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.bookings.can_book_for_others');\n    }\n\n    public get building() {\n        return this._settings.get('app.use_region')\n            ? this._org.region\n            : this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_)),\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_)),\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s),\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`,\n            );\n        }\n        if (!this.form.value.user_email || !this.can_book_for_others) {\n            this.form.patchValue({ user: currentUser() });\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.width]=\"columns * 2.5 + 'rem'\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id),\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id,\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        }),\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService,\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90,\n            ),\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <interactive-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></interactive-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"max-w-full overflow-auto flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        },\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id),\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div filter-item zone *ngIf=\"location\">\n                {{ location }}\n            </div>\n            <div filter-item date>\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id]),\n            ),\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\nimport { addDays, endOfDay } from 'date-fns';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [to]=\"end_date\"\n                    >\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"false\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id,\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        }),\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id,\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking'),\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        }),\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n    public readonly setRegion = (r) => (this._org.region = r);\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.parking.available_period') || 7,\n            ),\n        );\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    space.level?.display_name ||\n                                    space.level?.name ||\n                                    space.zone?.display_name ||\n                                    space.zone?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity || 1 }} {\n                            (space.capacity < 1 ? 2 : space.capacity || 1),\n                            plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div>Change</div>\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">close</app-icon>\n                                <div>Remove</div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon class=\"text-2xl\">search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    @Input() public disable_date = false;\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: {\n                    capacity: this.room_size,\n                    disable_date: this.disable_date,\n                },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    flatten,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryBookings } from './bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    name: string;\n    email: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n    deny: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingService extends AsyncHandler {\n    private _loading = new BehaviorSubject<string[]>([]);\n\n    public readonly loading =\n        this._loading.asObservable(); /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter(\n                    (lvl) =>\n                        bld_ids.includes(lvl.parent_id) &&\n                        lvl.tags.includes('parking'),\n                );\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter(\n                (lvl) =>\n                    lvl.parent_id === this._org.building.id &&\n                    lvl.tags.includes('parking'),\n            );\n        }),\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([this.levels]).pipe(\n        filter(([lvls]) => !!lvls[0]?.id),\n        switchMap(([levels]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return forkJoin(\n                levels.map((lvl) =>\n                    showMetadata(lvl.id, 'parking-spaces').pipe(\n                        map(\n                            (d) =>\n                                (d.details instanceof Array\n                                    ? d.details\n                                    : []\n                                ).map((s) => ({\n                                    ...s,\n                                    zone_id: lvl.id,\n                                })) as ParkingSpace[],\n                        ),\n                    ),\n                ),\n            );\n        }),\n        map((list) => flatten<ParkingSpace>(list)),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces'),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([this._org.active_building]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[],\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users'),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    public readonly assigned_space = this.spaces.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.assigned_to?.toLowerCase() ===\n                    currentUser().email?.toLowerCase(),\n            ),\n        ),\n    );\n\n    public readonly user_details = this.users.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.email?.toLowerCase() ===\n                    currentUser().email?.toLowerCase(),\n            ),\n        ),\n    );\n\n    public readonly deny_parking_access = this.user_details.pipe(\n        map((details) => !!details?.deny),\n    );\n\n    public readonly booked_space = combineLatest([\n        this._org.active_building,\n        this.spaces,\n    ]).pipe(\n        map(([_, spaces]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'parking',\n            }).pipe(\n                catchError(() => of([])),\n                map((booking_list) =>\n                    booking_list\n                        .map((booking) =>\n                            spaces.find(\n                                (space) => space.id === booking.asset_id,\n                            ),\n                        )\n                        .filter((space) => !!space),\n                ),\n            ),\n        ),\n        map((_) => _[0]),\n        shareReplay(1),\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.subscription('spaces', this.assigned_space.subscribe());\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            *ngIf=\"!disabled\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            for (const item of items) {\n                (item as any).options = [\n                    ...item.options.map((_) => ({ ..._ })),\n                ];\n                for (const option of item.options) {\n                    const opt = item.option_list.find(\n                        (_) => _.id === option.id\n                    );\n                    option.active = !!opt;\n                }\n            }\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\nimport { CateringItem } from './catering-item.class';\nimport { unique } from '@placeos/common';\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <simple-table\n            class=\"w-full min-w-[32rem] block text-sm\"\n            [data]=\"menu\"\n            [columns]=\"[\n                {\n                    key: 'active',\n                    name: ' ',\n                    content: active_template,\n                    size: '3.5rem',\n                    sortable: false\n                },\n                { key: 'name', name: 'Name' },\n                { key: 'category', name: 'Category' },\n                {\n                    key: 'unit_price',\n                    name: 'Price',\n                    content: price_template,\n                    size: '6rem'\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: actions_template,\n                    size: '6.5rem',\n                    sortable: false\n                }\n            ]\"\n            [filter]=\"filters?.search\"\n            [show_children]=\"show_children\"\n            [child_template]=\"child_template\"\n            [sortable]=\"true\"\n            empty_message=\"No Items in Menu\"\n        ></simple-table>\n        <ng-template #active_template let-row=\"row\">\n            <mat-checkbox\n                class=\"mx-auto\"\n                matTooltip=\"Allow Ordering Item for this zone\"\n                matTooltipPosition=\"right\"\n                [ngModel]=\"isEnabled(row)\"\n                (ngModelChange)=\"setEnabled(row, $event)\"\n            ></mat-checkbox>\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <div\n                class=\"px-2 py-1 font-mono text-xs flex items-center mx-auto bg-secondary text-secondary-content rounded\"\n            >\n                {{ data / 100 | currency: (symbol | async) }}\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <div class=\"p-2 flex items-center mx-auto space-x-2\">\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!can_edit\"\n                    [class.opacity-0]=\"!can_edit\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"addOption(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>add</app-icon>\n                            <div>Add Option</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"editItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>edit</app-icon>\n                            <div>Edit Item</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"removeItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <div>Remove Item</div>\n                        </div>\n                    </button>\n                </mat-menu>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!row.options?.length\"\n                    [matTooltip]=\"\n                        row.options?.length\n                            ? (show_children[row.id] ? 'Hide' : 'Show') +\n                              ' Menu Item Options'\n                            : ''\n                    \"\n                    (click)=\"show_children[row.id] = !show_children[row.id]\"\n                >\n                    <app-icon>\n                        {{\n                            show_children[row.id]\n                                ? 'keyboard_arrow_down'\n                                : 'chevron_right'\n                        }}\n                    </app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #child_template let-row=\"row\">\n            <div\n                class=\"flex p-2 items-center border-b border-solid border-base-200 relative space-x-2\"\n                *ngFor=\"let option of row.options\"\n            >\n                <div\n                    class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                ></div>\n                <div class=\"flex-1 pl-4 pr-2\">\n                    <div class=\"text\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.group }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Menu Item Option\"\n                    (click)=\"editOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"!mr-1\"\n                    matTooltip=\"Remove Menu Item Option\"\n                    (click)=\"removeOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon class=\"text-error\">delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    public show_children: Record<string, boolean> = {};\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n\n    public readonly addOption = (item) => this._catering.addOption(item);\n\n    public readonly editOption = (item, option) =>\n        this._catering.addOption(item, option);\n\n    public readonly removeOption = (item, option) =>\n        this._catering.deleteOption(item, option);\n\n    public readonly editItem = (item) => this._catering.addItem(item);\n\n    public readonly removeItem = (item) => this._catering.deleteItem(item);\n\n    public get filters() {\n        return this._orders.filters;\n    }\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(\n        private _catering: CateringStateService,\n        private _orders: CateringOrdersService\n    ) {}\n\n    public isEnabled(item: CateringItem) {\n        return !item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public setEnabled(item: CateringItem, state: boolean) {\n        let list = item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...item, hide_for_zones: list })\n        );\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-16 text-right h-14 relative\">\n                <div\n                    arm\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full -translate-x-px\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border-2 border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 items-center border-b border-base-200 border-solid py-4 space-x-4\"\n            >\n                <div class=\"\">\n                    <div\n                        class=\"p-1 rounded-full bg-base-300 w-10 h-10 flex items-center justify-center font-mono text-sm\"\n                    >\n                        {{ item?.amount || item?.quantity || 1 }}×\n                    </div>\n                </div>\n                <div class=\"flex-1\">{{ item?.name }}</div>\n                <div class=\"flex space-x-2 mr-2 px-4\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-warning-content rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div class=\"flex flex-col h-full w-full overflow-auto\">\n            <mat-progress-bar\n                [class.opacity-0]=\"!(loading | async)\"\n                class=\"sticky top-0 left-0 w-full\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n            <simple-table\n                class=\"min-w-[72rem] w-full block text-sm\"\n                [data]=\"order_list\"\n                [columns]=\"[\n                    {\n                        key: 'state',\n                        name: ' ',\n                        size: '4rem',\n                        sortable: false,\n                        content: state_template,\n                    },\n                    {\n                        key: 'deliver_at',\n                        name: 'Time',\n                        content: time_template,\n                    },\n                    {\n                        key: 'event',\n                        name: 'Location',\n                        content: location_template,\n                        sortable: false,\n                    },\n                    {\n                        key: 'event',\n                        name: 'Host',\n                        content: host_template,\n                        sortable: false,\n                    },\n                    { key: 'charge_code', name: 'Charge Code' },\n                    {\n                        key: 'invoice_number',\n                        name: 'Invoice No.',\n                        empty: 'No Invoice',\n                    },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '11rem',\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        size: '6.5rem',\n                        content: actions_template,\n                        sortable: false,\n                    },\n                ]\"\n                [sortable]=\"true\"\n                [show_children]=\"show_children\"\n                [child_template]=\"child_template\"\n                empty_message=\"No Catering Orders\"\n            >\n            </simple-table>\n            <ng-template #state_template let-data=\"data\">\n                <div class=\"p-2\">\n                    <div\n                        class=\"rounded-full bg-base-200 p-2 text-2xl flex items-center justify-center\"\n                    >\n                        <app-icon>room_service</app-icon>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #time_template let-data=\"data\" let-row=\"row\">\n                <div class=\"p-4\">\n                    <div>Deliver at {{ data | date: time_format }}</div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ row?.event?.date | date: 'MMM d' }},\n                        {{ row?.event?.date | date: time_format }}\n                        -\n                        {{ row?.event?.date_end | date: 'MMM d' }},\n                        {{ row?.event?.date_end | date: time_format }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #location_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    {{ data?.space?.display_name || data?.space?.name || '' }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"\n                            !(data?.space?.display_name || data?.space?.name)\n                        \"\n                    >\n                        No Location\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #host_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <div>\n                        {{ data?.organiser?.name || data?.host || '' }}\n                        <span\n                            class=\"opacity-30\"\n                            *ngIf=\"!(data?.organiser?.name || data?.host)\"\n                        >\n                            Unknown Host\n                        </span>\n                    </div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ data?.organiser?.email || data?.host }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\" let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <button\n                        status\n                        matRipple\n                        class=\"rounded-3xl text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                        [style.background]=\"status(data)?.colour\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <div class=\"flex text-center capitalize mx-2\">\n                            {{ status(data)?.name }}\n                        </div>\n                        <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        *ngFor=\"let status of statuses\"\n                        class=\"flex items-center\"\n                        (click)=\"updateStatus(row, status.id)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"rounded-full h-4 w-4 mr-2\"\n                                [style.background-color]=\"status.colour\"\n                            ></div>\n                            <span class=\"mr-2 w-20\">{{ status.name }}</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #actions_template let-row=\"row\">\n                <div class=\"flex items-center space-x-2 p-2 mx-auto\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [hover]=\"true\"\n                        xPosition=\"end\"\n                        yPosition=\"top\"\n                        [content]=\"notes_template\"\n                        [disabled]=\"!row.notes\"\n                    >\n                        <app-icon>description</app-icon>\n                    </button>\n                    <ng-template #notes_template>\n                        <div\n                            class=\"p-2 rounded-lg bg-base-100 text-base-content max-w-[32rem] min-w-[8rem] shadow border border-base-200\"\n                        >\n                            <div class=\"mb-2\">Notes</div>\n                            <p class=\"text-sm px-4 py-2 bg-base-200 rounded\">\n                                {{ row.notes }}\n                            </p>\n                        </div>\n                    </ng-template>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"show_children[row.id] = !show_children[row.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_children[row.id]\n                                    ? 'keyboard_arrow_down'\n                                    : 'chevron_right'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template #child_template let-row=\"row\">\n                <ul\n                    *ngIf=\"row?.items.length\"\n                    class=\"list-none p-0 m-0 w-full relative z-0\"\n                >\n                    <li\n                        catering-order-item\n                        class=\"flex items-center\"\n                        *ngFor=\"let item of row.items; let i = index\"\n                        [order_id]=\"row?.id\"\n                        [item]=\"item\"\n                    ></li>\n                </ul>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent extends AsyncHandler {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    public readonly statuses = CATERING_STATUSES;\n    public readonly show_children: Record<string, boolean> = {};\n\n    public readonly updateStatus = async (order, s) => {\n        await this._orders.updateStatus(order, s);\n        this.timeout('status-change', () => ((order as any).status = s));\n    };\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public status(value: string) {\n        return CATERING_STATUSES.find((i) => i.id === value);\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) =>\n                    (d.details instanceof Array ? d.details : []).map(\n                        (_) => new CateringItem(_)\n                    )\n                ),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\nexport * from './lib/uploads.service';\nexport * from './lib/shorten.fn';\nexport * from './lib/fixed-device-helpers';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    if (!(ruleset_list instanceof Array)) return DEFAULT_RULES;\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { MapsPeopleService } from './mapspeople.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","let _wake_lock: WakeLockSentinel | null = null;\n\nexport async function requestScreenWakeLock() {\n    if (_wake_lock) {\n        await _wake_lock.release();\n    }\n    // create an async function to request a wake lock\n    try {\n        _wake_lock = await navigator.wakeLock.request('screen');\n    } catch (err) {\n        throw err;\n    }\n}\n\ndocument.addEventListener('visibilitychange', async () => {\n    if (_wake_lock !== null && document.visibilityState === 'visible') {\n        _wake_lock = await navigator.wakeLock.request('screen');\n    }\n});\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name,\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args,\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Pad the start of a string or number with given character\n * @param value String or number to pad\n * @param length Length of the final string\n * @param character Character to pad output string with. Defaults to `0`.\n */\nexport function padLength(\n    value: number | string,\n    length: number = 2,\n    character = '0',\n): string {\n    let str = `${value}`;\n    while (str.length < length) str = `${character}${str}`;\n    return str;\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog,\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        },\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi',\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3],\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|'),\n                    )\n                    .join(seperator),\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents),\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(''),\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number,\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language,\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, ''],\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n\n// Calculate the distance between geographical cooridinates\nexport function calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number,\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n//////////////////////////////////////////\n//////   Colour Conversion Utils   ///////\n//////////////////////////////////////////\n\nexport function hexToRgb(hex: string): RGB {\n    let r = parseInt(hex.slice(1, 3), 16);\n    let g = parseInt(hex.slice(3, 5), 16);\n    let b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n}\n\nexport type RGB = [number, number, number];\n\nexport function interpolateColors(rgb1: RGB, rgb2: RGB, fraction: number): RGB {\n    let r = rgb1[0] + (rgb2[0] - rgb1[0]) * fraction;\n    let g = rgb1[1] + (rgb2[1] - rgb1[1]) * fraction;\n    let b = rgb1[2] + (rgb2[2] - rgb1[2]) * fraction;\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n    function componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function shiftColorTowards(\n    hex1: string,\n    hex2: string,\n    fraction: number,\n) {\n    const rgb1 = hexToRgb(hex1);\n    const rgb2 = hexToRgb(hex2);\n    const resultRgb = interpolateColors(rgb1, rgb2, fraction);\n    return rgbToHex(resultRgb[0], resultRgb[1], resultRgb[2]);\n}\n\nexport function extractTextFromHTML(html_string: string) {\n    // Create a temporary DOM element\n    const temp_element = document.createElement('div');\n\n    // Set the innerHTML to our HTML string\n    temp_element.innerHTML = html_string;\n\n    // Extract and return the text content\n    return temp_element.textContent || temp_element.innerText || '';\n}\n\n/**\n * Shuffle the items in array into random order\n * @param array List of items to shuffle\n */\nexport function shuffleArray(array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n/**\n * Shuffle the items in array into random order with a specific item as the first\n * @param array List of items to shuffle\n * @param first_index Index of the item in the list to set as first\n */\nexport function shuffleArrayWithFirstItem(array: any[], first_index: number) {\n    // Move the specified item to the beginning\n    const firstItem = array.splice(first_index, 1)[0];\n    array.unshift(firstItem);\n\n    // Shuffle the rest of the array (starting from index 1)\n    for (let i = array.length - 1; i > 1; i--) {\n        const j = Math.floor(Math.random() * (i - 1)) + 1;\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.35.0/mapsindoors-4.35.0.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import {\n    apiKey,\n    del,\n    get,\n    patch,\n    post,\n    put,\n    query,\n    token,\n} from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst ENDPOINT = '/api/engine/v2/short_url';\n\nexport interface ShortURL {\n    id: string;\n    name: string;\n    description: string;\n    uri: string;\n\n    user_id: string;\n    user_name: string;\n    user_email: string;\n\n    redirect_count: number;\n\n    enabled: boolean;\n    valid_from: number;\n    valid_to: number;\n\n    created_at: number;\n    updated_at: number;\n}\n\nexport function queryShortURLs(q: Record<string, any> = {}) {\n    return query<ShortURL>({\n        query_params: q,\n        fn: (item) => item as ShortURL,\n        endpoint: ENDPOINT,\n        path: '',\n    }).pipe(map((_) => _.data));\n}\n\nexport function showShortURL(id: string): Observable<ShortURL> {\n    return get(`${ENDPOINT}/${id}`).pipe(map((_) => _ as ShortURL));\n}\n\nconst QR_STORE = new Map<string, string>();\n\nexport async function getShortUrlQRCode(\n    id: string,\n    format: 'svg' | 'png' = 'svg',\n): Promise<string> {\n    const key = `${id}.${format}`;\n    if (QR_STORE.has(key)) return QR_STORE.get(key);\n    const tkn = token();\n    document.cookie = `${\n        tkn === 'x-api-key'\n            ? 'api-key=' + encodeURIComponent(apiKey())\n            : 'bearer_token=' + encodeURIComponent(tkn)\n    };max-age=30;path=/api/engine/v2/short_url/;samesite=strict;${\n        location.protocol === 'https:' ? 'secure;' : ''\n    }`;\n    const response = await fetch(`${ENDPOINT}/${id}/qr_code.${format}`);\n    const blob = await response.blob();\n    const url = URL.createObjectURL(blob);\n    QR_STORE.set(key, url);\n    return url;\n}\n\nexport function createShortURL(data: ShortURL): Observable<ShortURL> {\n    return post(ENDPOINT, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function updateShortURL(\n    id: string,\n    data: ShortURL,\n): Observable<ShortURL> {\n    return put(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function saveShortURL(data: ShortURL): Observable<ShortURL> {\n    return data.id ? updateShortURL(data.id, data) : createShortURL(data);\n}\n\nexport function patchShortURL(\n    id: string,\n    data: Partial<ShortURL>,\n): Observable<ShortURL> {\n    return patch(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function deleteShortURL(id: string): Observable<void> {\n    return del(`${ENDPOINT}/${id}`).pipe(map((_) => null));\n}\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\nimport { padLength } from './general';\n\nexport const LOCAL_TIMEZONE =\n    Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(\n    date: Date | number,\n    tz: string = LOCAL_TIMEZONE,\n) {\n    const offset_diff =\n        getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(\n    date: Date | number,\n    tz: string = LOCAL_TIMEZONE,\n) {\n    const offset_diff =\n        getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nconst TIMZONE_OFFSET_STRINGS = {};\n\nexport function getTimezoneOffsetString(tz: string) {\n    if (TIMZONE_OFFSET_STRINGS[tz]) return TIMZONE_OFFSET_STRINGS[tz];\n    const offset = getTimezoneOffsetInMinutes(tz);\n    const hours = Math.floor(Math.abs(offset) / 60);\n    const minutes = Math.abs(offset) % 60;\n    const output = `${offset > 0 ? '+' : '-'}${padLength(hours, 2)}${padLength(\n        minutes,\n        2,\n    )}`;\n    TIMZONE_OFFSET_STRINGS[tz] = output;\n    return output;\n}\n\nexport function getTimezoneOffsetInMinutes(timeZone, date = new Date()) {\n    const options: Intl.DateTimeFormatOptions = {\n        timeZone,\n        hour12: false,\n        timeZoneName: 'short',\n    };\n    const formatter = new Intl.DateTimeFormat([], options);\n    const parts = formatter.formatToParts(date);\n\n    // Find the timeZoneName part which contains the GMT offset\n    const tzOffsetPart = parts.find((part) => part.type === 'timeZoneName');\n    const tzOffsetString = tzOffsetPart ? tzOffsetPart.value : 'GMT';\n\n    // Match the offset from the string (e.g., \"GMT+0530\")\n    const offsetMatch = tzOffsetString.match(/GMT([+-])(\\d{1,2})(\\d{2})?/);\n    if (!offsetMatch) {\n        return 0; // If no match, assume UTC (offset 0)\n    }\n\n    const sign = offsetMatch[1] === '+' ? 1 : -1;\n    const hours = parseInt(offsetMatch[2], 10);\n    const minutes = offsetMatch[3] ? parseInt(offsetMatch[3], 10) : 0;\n\n    return sign * (hours * 60 + minutes);\n}\n\nexport function getTimezoneDifferenceInHours(\n    src_tz: string,\n    dest_tz: string = LOCAL_TIMEZONE,\n    date: Date = new Date(),\n) {\n    const offset1 = getTimezoneOffsetInMinutes(src_tz, date);\n    const offset2 = getTimezoneOffsetInMinutes(dest_tz, date);\n\n    // Calculate the difference in hours\n    return (offset1 - offset2) / 60;\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\nconst _change = new BehaviorSubject(0);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    combineLatest([showUser('current'), _change])\n        .pipe(\n            delay(1000),\n            retry(10),\n            map(([i]) => new StaffUser(i as any)),\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\nexport function reloadUserData() {\n    setTimeout(async () => {\n        const user = await showUser('current').toPromise();\n        _current_user.next(new StaffUser(user as any));\n    }, 300);\n}\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"cf46d46\",\n    \"hash\": \"cf46d46\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"cf46d46\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1728895774858\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-renderer.component';\nexport * from './lib/maps-indoors.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth], video [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        let response = null;\n        try {\n            response = await fetch(this.source).catch((_) => null);\n        } catch {}\n        if (!response || !response.ok) {\n            console.info('Failed to load image:', this.source);\n            return;\n        }\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '', { async: false }) as any;\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _binding = new BehaviorSubject('');\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = combineLatest([\n        this._org.active_building,\n        this._binding,\n    ]).pipe(\n        filter(([b]) => !!b),\n        map(([_, biniding]) => biniding || this._org.binding('chat_room')),\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1),\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                '',\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => {\n                        log('CHAT', 'Connection error:', [e], 'error');\n                        this._cleanup();\n                    },\n                    () => this._cleanup(),\n                ),\n            );\n            return this._socket;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public setBinding(system_id: string) {\n        this._binding.next(system_id);\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay,\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message, { async: false }) as any,\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message, { async: false }) as any,\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport {\n    provideHttpClient,\n    withInterceptorsFromDi,\n} from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\nimport { MapRendererComponent } from './map-renderer.component';\nimport { MapsIndoorsComponent } from './maps-indoors.component';\nimport { MapCanvasComponent } from './map-canvas.component';\nimport { ImageViewerComponent } from './image-viewer.component';\nimport { SimpleTableComponent } from './simple-table.component';\nimport { LimitInputDirective } from './limit-input.directive';\nimport { DeskHeightPresetsComponent } from './desk-height-presets.component';\nimport { WorkLocationTooltipComponent } from './work-location-tooltip.component';\nimport { ZonePipe } from './zone.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapRendererComponent,\n    MapsIndoorsComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    MapCanvasComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n    ImageViewerComponent,\n    SimpleTableComponent,\n    WorkLocationTooltipComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n    ZonePipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n    DeskHeightPresetsComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    BindingDirective,\n    AuthenticatedImageDirective,\n    LimitInputDirective,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n        provideHttpClient(withInterceptorsFromDi()),\n    ],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n    /** Delay before closing the modal */\n    close_delay?: number;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '28em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header class=\"px-4 py-3\">\n            <h3 class=\"font-medium text-xl\">{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-4 p-4 max-w-[80vw]\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p content class=\"text-center\" [innerHTML]=\"content\"></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-4 space-x-4\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse flex-1\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"flex-1\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-4\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent extends AsyncHandler {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        if (this._data.close_delay) {\n            this.timeout(\n                'close',\n                () => this._dialog_ref.close(),\n                this._data.close_delay,\n            );\n        }\n    }\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop && !this.hover,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase()),\n            ),\n        ),\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            }),\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            }),\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show),\n            ),\n        );\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-height-presets',\n    template: `\n        <div class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\">\n            <div class=\"text-lg mb-2\" i18n>Desk Height Presets</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Desk height presets allow you to store and recall your preferred\n                desk height when checking into a booked desk that supports\n                height adjustment.\n            </div>\n            <div\n                class=\"text-xs mb-4 -mx-2 p-2 rounded bg-warning text-warning-content\"\n                *ngIf=\"not_set && show_close\"\n            >\n                Before you can set a desk height, presets must be set\n            </div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience.\n            </div>\n            <div class=\"flex flex-col mt-2\">\n                <label>Sitting Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"80\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"desk_sitting_height\"\n                            (ngModelChange)=\"\n                                saveSetting('desk_sitting_height', $event)\n                            \"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ desk_sitting_height.toFixed(1) }}cm\n                    </div>\n                </div>\n                <label>Standing Height</label>\n                <div class=\"flex items-center space-x-2  mr-2\">\n                    <mat-slider\n                        min=\"90\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"desk_standing_height\"\n                            (ngModelChange)=\"\n                                saveSetting('desk_standing_height', $event)\n                            \"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right mr-2\">\n                        {{ desk_standing_height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button\n                btn\n                matRipple\n                (click)=\"onClose()\"\n                class=\"w-full mt-2\"\n                *ngIf=\"show_close\"\n            >\n                Save Presets\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskHeightPresetsComponent {\n    @Input() public show_close = false;\n    @Output() public close = new EventEmitter<void>();\n    public not_set = false;\n    public desk_sitting_height = 71;\n    public desk_standing_height = 101;\n\n    constructor(private _settings: SettingsService) {}\n\n    public ngOnInit() {\n        this.not_set =\n            !this._settings.get('desk_sitting_height') &&\n            !this._settings.get('desk_standing_height');\n        this.desk_sitting_height =\n            this._settings.get('desk_sitting_height') || 71;\n        this.desk_standing_height =\n            this._settings.get('desk_standing_height') || 101;\n    }\n\n    public onClose() {\n        this.saveSetting('desk_sitting_height', this.desk_sitting_height);\n        this.saveSetting('desk_standing_height', this.desk_standing_height);\n        this.close.emit();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n\n    public saveSetting(name: string, value: any) {\n        this._settings.saveUserSetting(name, value);\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-viewer',\n    template: `\n        <div class=\"h-screen w-screen bg-base-200\">\n            <img\n                class=\"object-contain object-center w-full h-full\"\n                [src]=\"url\"\n            />\n            <button\n                class=\"absolute top-1 right-1 bg-base-100\"\n                icon\n                matRipple\n                mat-dialog-close\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ImageViewerComponent {\n    constructor(@Inject(MAT_DIALOG_DATA) public url: string) {}\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\nfunction calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number,\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        ></div>\n        <div\n            class=\"absolute inset-0 flex items-center justify-center\"\n            *ngIf=\"loading\"\n        >\n            <mat-spinner [diameter]=\"48\"></mat-spinner>\n        </div>\n        <div\n            class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center\"\n            *ngIf=\"geolocation_error_message\"\n        >\n            <img\n                src=\"assets/icons/not-found.svg\"\n                alt=\"graphic of magnifying glass\"\n                width=\"200px\"\n                class=\"items-center\"\n            />\n            <p class=\"opacity-60 text-sm text-center mt-10\">\n                {{ geolocation_error_message | translate }}\n            </p>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"w-full even:bg-base-200 hover:bg-base-300 rounded border border-base-200\"\n                        *ngFor=\"let item of search_result_items | slice: 0 : 10\"\n                    >\n                        <button\n                            class=\"flex items-center w-full p-2 space-x-2 text-left\"\n                            (click)=\"getRoute(item); search_result_items = []\"\n                        >\n                            <div class=\"flex flex-col flex-1\">\n                                <div>{{ item.properties.name }}</div>\n                                <div class=\"opacity-30 text-xs\">\n                                    {{ item.properties.roomId }}, Level\n                                    {{ item.properties.floorName }}\n                                </div>\n                            </div>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n    /** Mark location of a specific item */\n    @Input() public locate: string;\n    /** Default zoom level for the map */\n    @Input() public default_zoom: number = 19;\n\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[] = [];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction } = {};\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._setLocationToBuilding();\n    };\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ]),\n    );\n    public floor_mapping: { [id: string]: string } = {};\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: MapsPeopleService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        if (this.custom_coordinates) this.coordinates = this.custom_coordinates;\n        const get_location = () => {\n            this._getUserLocation();\n            document.removeEventListener('click', get_location);\n        };\n        document.addEventListener('click', get_location);\n        await this._initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        if (change.locate && this.locate && mapsindoors) {\n            const searchParams = { q: this.searchElement.nativeElement.value };\n            const locations =\n                await mapsindoors?.services.LocationsService.getLocations(\n                    searchParams,\n                );\n            if (locations.length) this.getRoute(locations[0]);\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    public ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) found_action.callback(e);\n        });\n    }\n\n    private _initMapView() {\n        if (!this._api_service.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: this.default_zoom || 19,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            log('MapsIndoors', 'Using Google Maps API');\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options,\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            log('MapsIndoors', 'Using Mapbox API');\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options,\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn',\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n        this.mapFloorsToIndex();\n        this._setLocationToBuilding();\n    }\n\n    public initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._api_service.map_token,\n                  );\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider,\n        );\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions,\n            );\n    }\n\n    public async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        this.floor_mapping =\n            pairs?.reduce((lvl_map, [key, value]) => {\n                lvl_map[key] = value;\n                return lvl_map;\n            }, {}) || {};\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this._org.buildings.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (!e || !this.floor_mapping) return;\n            const level_id: string = this.floor_mapping[e];\n            this._state.setLevel(level_id);\n        });\n    }\n\n    public onSearch() {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        mapsindoors?.services.LocationsService.getLocations(searchParams).then(\n            (locations: any[]) => {\n                this.search_result_items = locations;\n            },\n        );\n    }\n\n    private async _getUserLocation(): Promise<void> {\n        if (!('geolocation' in navigator)) {\n            log(\n                'MapsIndoors',\n                \"User's geolocation not available.\",\n                undefined,\n                'warn',\n            );\n            return this._setLocationToBuilding();\n        }\n        if (this.coordinates) {\n            this.user_latitude = this.coordinates.latitude;\n            this.user_longitude = this.coordinates.longitude;\n            return;\n        } else {\n            navigator.geolocation.watchPosition(\n                (_) => this._updateGeolocation(_),\n                (_) => this._handleGeolocationError(_),\n            );\n            const options = { timeout: 10000, enableHighAccuracy: true };\n            navigator.geolocation.getCurrentPosition(\n                (position: GeolocationPosition) => {\n                    if (\n                        !this._userWithinRadius([\n                            position.coords.latitude,\n                            position.coords.longitude,\n                        ])\n                    ) {\n                        // Only use geolocation if user is within 1km of building\n                        return this._setLocationToBuilding();\n                    }\n                    this._updateGeolocation(position);\n                    this.map_instance.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    });\n                },\n                () => this._setLocationToBuilding(),\n                options,\n            );\n        }\n    }\n\n    private _userWithinRadius(\n        [d_lat, d_long]: [number, number],\n        radius: number = 1,\n    ) {\n        const [lat_str, long_str] =\n            this._org.building?.location.split(',') || [];\n        if (lat_str && long_str) {\n            const lat = parseFloat(lat_str);\n            const long = parseFloat(long_str);\n            const distance = calculateDistance(lat, long, d_lat, d_long);\n            if (distance >= radius) return false;\n        }\n        return true;\n    }\n\n    private _setLocationToBuilding() {\n        log('MapsIndoors', 'Settings location to building:', [\n            this._org.building?.display_name || this._org.building?.name,\n            this._org.building?.location,\n        ]);\n        const [lat, long] = this._org.building?.location.split(',');\n        if (!this.map_instance) return;\n        this.map_instance.setCenter({\n            lat: parseFloat(lat),\n            lng: parseFloat(long),\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (!updated_location?.coords) return;\n        log(\n            'MapsIndoors',\n            'Settings location to user:',\n            updated_location.coords,\n            'warn',\n        );\n        const { latitude, longitude } = updated_location.coords;\n        if (\n            latitude !== this.user_latitude ||\n            longitude !== this.user_longitude\n        ) {\n            this.user_latitude = latitude;\n            this.user_longitude = longitude;\n            this.getRoute(this.selected_destination);\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError(`Error retrieving your geolocation. [${error.message}]`);\n    }\n\n    public async getRoute(location: any) {\n        this.maps_service?.highlight([]);\n        if (!this.directions_service || !location) return;\n        log('MapsIndoors', 'Getting route to location:', [\n            location,\n            this.user_latitude,\n            this.user_longitude,\n        ]);\n        this.selected_destination = location;\n        const destination = {\n            lat: location.properties.anchor.coordinates[1],\n            lng: location.properties.anchor.coordinates[0],\n            floor: location.properties.floor,\n        };\n        const level_id: string = (this.floor_mapping || {})[\n            location.properties.floor\n        ];\n        if (level_id) this._state.setLevel(level_id);\n\n        if (\n            !this._userWithinRadius(\n                [this.user_latitude, this.user_longitude],\n                1000,\n            )\n        ) {\n            this.map_instance.setZoom(19);\n            this.map_instance.setCenter(destination);\n            this.maps_service.setFloor(destination.floor);\n            this.maps_service.highlight([location.id]);\n            return;\n        }\n\n        if (!this.user_latitude || !this.user_longitude) {\n            return notifyError('Unable to find a route.');\n        }\n\n        const origin: any = {\n            lat: this.user_latitude,\n            lng: this.user_longitude,\n        };\n\n        const routeParameters = {\n            origin: origin,\n            destination: destination,\n        };\n\n        const result = await this.directions_service\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn',\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        this.directions_renderer?.setRoute(result);\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (!this.styles) return;\n        const promises: Promise<void>[] = [];\n        for (const key in this.styles) {\n            const colour = this.styles[key]['fill'] as string;\n            if (key) {\n                const updated_key = key.substring(1);\n                promises.push(this._setPolygonFill(updated_key, colour));\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    public async mapActions() {\n        return this.actions?.reduce((accumulator, currentValue) => {\n            accumulator[currentValue.id] = currentValue;\n            return accumulator;\n        }, {});\n    }\n\n    private _setPolygonFill(location_id: string, colour: string) {\n        return this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    InjectionToken,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, log } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { ExploreStateService } from 'libs/explore/src/lib/explore-state.service';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nexport interface MapOptions {\n    disable_zoom?: boolean;\n    disable_pan?: boolean;\n    controls?: boolean;\n}\n\nexport interface MapMetadata {\n    styles?: ViewerStyles;\n    features?: ViewerFeature[];\n    labels?: ViewerLabel[];\n    actions?: ViewAction[];\n}\n\n@Component({\n    selector: 'interactive-map',\n    template: `\n        <ng-container\n            *ngIf=\"!(use_mapsindoors$ | async); else mapsindoors_template\"\n        >\n            <map-renderer\n                [src]=\"src\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [reset]=\"reset\"\n                [styles]=\"styles || metadata?.styles\"\n                [features]=\"features || metadata?.features\"\n                [actions]=\"actions || metadata?.actions\"\n                [labels]=\"labels || metadata?.labels\"\n                (mapInfo)=\"mapInfo.next($event)\"\n            >\n                <ng-content></ng-content>\n            </map-renderer>\n        </ng-container>\n        <ng-template #mapsindoors_template>\n            <maps-indoors\n                [zone]=\"location\"\n                (zoneChange)=\"onLevelChange($event)\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [options]=\"options\"\n                [reset]=\"reset\"\n                [focus]=\"focus\"\n                [metadata]=\"metadata\"\n            >\n                <ng-content></ng-content>\n            </maps-indoors>\n        </ng-template>\n        <div\n            zoom\n            *ngIf=\"options?.controls\"\n            class=\"absolute bottom-16 right-1 border border-base-200 divide-y divide-base-200 shadow flex flex-col bg-base-100 text-base-content rounded overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom In\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * 1.1\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom Out\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * (10 / 11)\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Reset Zoom and Position\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"reset = reset + 1\"\n            >\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class InteractiveMapComponent extends AsyncHandler {\n    @Input() public src: string;\n    @Input() public zoom = 1;\n    @Input() public center: any = { x: 0.5, y: 0.5 };\n    @Input() public reset = 0;\n    @Input() public metadata: MapMetadata = {};\n    @Input() public styles: any;\n    @Input() public features: any[];\n    @Input() public labels: any[];\n    @Input() public actions: any[];\n    @Input() public options: MapOptions = {};\n    @Input() public focus: string;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public centerChange = new EventEmitter<any>();\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public readonly use_mapsindoors$ = this._mapspeople.available$;\n\n    public get location() {\n        return this._org.levels.find((_) => _.map_id === this.src);\n    }\n\n    constructor(\n        private _mapspeople: MapsPeopleService,\n        private _org: OrganisationService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes.actions ||\n            changes.labels ||\n            changes.styles ||\n            changes.features\n        ) {\n            this.metadata = {\n                actions: this.actions || [],\n                labels: this.labels || [],\n                styles: this.styles || {},\n                features: this.features || [],\n            };\n        }\n    }\n\n    public onLevelChange(zone: any) {\n        log(\n            'Map',\n            'Level changed to:',\n            zone?.display_name || zone?.name || zone\n        );\n        this._explore.setLevel(zone.id);\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\nconst ALLOWED_NUMBERS = '0123456789'.split('');\nconst ALLOWED_DECIMALS = '0123456789.'.split('');\nconst ALLOWED_LETTERS = 'abcdefghijklmnopqrstuvwxyz'.split('');\nconst ALLOWED_ALPHANUMERIC = 'abcdefghijklmnopqrstuvwxyz0123456789'.split('');\n\n@Directive({\n    selector: '[limitInput]',\n})\nexport class LimitInputDirective {\n    @Input() restriction:\n        | 'number'\n        | 'decimals'\n        | 'letters'\n        | 'alphanumeric'\n        | 'custom' = 'decimals';\n    @Input() custom_list: string[] = [];\n\n    constructor(private _el: ElementRef) {}\n\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\n        const e: KeyboardEvent = event;\n        const key = e.key;\n        if (\n            ['ArrowLeft', 'ArrowRight', 'Tab', 'Backspace', 'Home'].indexOf(\n                key\n            ) !== -1 ||\n            // Allow: Ctrl+A\n            (e.key === 'a' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+C\n            (e.key === 'c' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+V\n            (e.key === 'v' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+X\n            (e.key === 'x' && (e.ctrlKey || e.metaKey))\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        switch (this.restriction) {\n            case 'letters':\n                if (ALLOWED_LETTERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'alphanumeric':\n                if (ALLOWED_ALPHANUMERIC.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'custom':\n                if (this.custom_list.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'decimals':\n                if (ALLOWED_DECIMALS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'number':\n            default:\n                if (ALLOWED_NUMBERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler, shiftColorTowards } from '@placeos/common';\n\nexport interface Polygon {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** List of x, y coordinates from 0 to 1 */\n    points: [number, number][];\n}\n\nexport interface MapPolygonData {\n    draw_labels?: boolean;\n    draw_points?: boolean;\n    polygons$: Observable<Polygon[]>;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-canvas]',\n    template: `\n        <canvas\n            #canvas\n            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n            [style.width]=\"width * svg_ratio * zoom + '%'\"\n            [style.height]=\"width * svg_ratio * ratio * zoom + '%'\"\n        ></canvas>\n    `,\n    styles: [],\n})\nexport class MapCanvasComponent extends AsyncHandler implements OnInit {\n    public zoom = 1;\n    public ratio = 1;\n    public svg_ratio = 1;\n    public width = 10000;\n\n    @ViewChild('canvas', { static: true })\n    private canvas_element: ElementRef<HTMLCanvasElement>;\n\n    public get ratioed_height(): number {\n        return +(this.width * this.ratio).toFixed(2);\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: MapPolygonData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'state',\n            combineLatest([\n                this._data.ratio$,\n                this._data.zoom$,\n                this._data.svg_ratio$,\n            ]).subscribe(([ratio, zoom, sr]) =>\n                this._handleMapChange(ratio, zoom, sr)\n            )\n        );\n        this.subscription(\n            'polygons',\n            this._data.polygons$.subscribe((list) =>\n                this._handleStateChange(list)\n            )\n        );\n    }\n\n    private async _handleMapChange(\n        ratio: number,\n        zoom: number,\n        svg_ratio: number\n    ) {\n        const old_ratio = this.ratio;\n        this.zoom = zoom;\n        this.ratio = ratio;\n        this.svg_ratio = svg_ratio;\n        const width = this.width / 10;\n        const height = (this.width * this.ratio) / 10;\n\n        if (old_ratio === ratio) return;\n\n        const canvas = this.canvas_element.nativeElement;\n        canvas.width = width;\n        canvas.height = height;\n\n        const polygons = await this._data.polygons$.pipe(take(1)).toPromise();\n        this._handleStateChange(polygons);\n    }\n\n    private _handleStateChange(polygon_list: Polygon[]): void {\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        polygon_list.forEach((poly) => this._drawPolygon(poly));\n    }\n\n    private _drawPolygon(polygon: Polygon) {\n        const points = polygon.points;\n        if (!points?.length) return;\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        const width = canvas.width;\n        const height = canvas.height;\n        // Draw polygon\n        ctx.fillStyle = polygon.color + '80';\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.fill();\n        // Draw Outline\n        ctx.strokeStyle = shiftColorTowards(polygon.color, '#888888', 0.5);\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.stroke();\n        // Draw Points\n        if (this._data.draw_points !== false) {\n            ctx.fillStyle = '#fff';\n            ctx.strokeStyle = polygon.color;\n            ctx.lineWidth = 4;\n            points.forEach(([x, y]) => {\n                ctx.beginPath();\n                ctx.arc(x * width, y * height, 8, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n        }\n        // Draw Text\n        if (this._data.draw_labels !== false) {\n            const center = points.reduce(\n                (acc, [x, y]) => [acc[0] + x, acc[1] + y],\n                [0, 0]\n            );\n            center[0] /= points.length;\n            center[1] /= points.length;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#FFF';\n            ctx.font = '32px sans-serif';\n            ctx.fillText(\n                polygon.name,\n                center[0] * width + 1,\n                center[1] * height + 2\n            );\n            ctx.fillStyle = '#000';\n            ctx.fillText(polygon.name, center[0] * width, center[1] * height);\n        }\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [focus]=\"item?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { get } from 'http';\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `map-renderer`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class MapRendererComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n    /** Number of times to reset the map */\n    @Input() public reset = 0;\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>,\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n              ? 'template'\n              : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue,\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n        if (\n            changes.reset &&\n            changes.reset.currentValue !== changes.reset.previousValue\n        ) {\n            this.zoom = 1;\n            this.center = { x: 0.5, y: 0.5 };\n            this.updateDisplay();\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout(\n                'create_view',\n                () => this.createView().catch((e) => console.warn(e)),\n                300,\n            );\n        }\n        const simp_url = this.src?.toLowerCase() || '';\n        if (!simp_url.includes('svg') && !simp_url.includes('upload')) return;\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                try {\n                    updateViewer(this.viewer, {\n                        styles: this.styles,\n                        features: [],\n                        labels: this.labels,\n                        actions: this.actions,\n                        options: this.options,\n                    });\n                    removeViewer(this.viewer);\n                } catch (e) {\n                    console.warn(e);\n                    return;\n                }\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            }).catch((e) => {\n                console.warn(e);\n                return '';\n            });\n            this.loading = false;\n            if (!this.viewer) return;\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                }),\n            );\n            const viewer = getViewer(this.viewer);\n            this.mapInfo.emit(viewer.mappings);\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e)),\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id,\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                }),\n        );\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapMetadata } from './interactive-map.component';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    calculateDistance,\n    log,\n    notifyError,\n    notifyWarn,\n    randomString,\n} from '@placeos/common';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\nimport { take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\nconst DEFAULT_ZOOM = 18.5;\n\ninterface MapsIndoorServices {\n    mapsindoors: any;\n    view: any;\n    map: any;\n    directions: any;\n    directions_renderer: any;\n}\n\nconst RESOURCE_MAP: Record<string, any> = {};\n\n@Component({\n    selector: 'maps-indoors',\n    template: `\n        <div #map_container class=\"absolute inset-0 z-0\"></div>\n        <button\n            *ngIf=\"focus && !show_directions && options?.controls\"\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-base-100 text-base-content shadow z-10 border-base-200 space-x-2\"\n            (click)=\"toggleDirections()\"\n        >\n            <app-icon>place</app-icon>\n            <div class=\"pr-2\">\n                {{ viewing_directions ? 'Hide' : 'Show' }} Directions\n            </div>\n            <mat-spinner diameter=\"24\" *ngIf=\"loading_directions\"></mat-spinner>\n        </button>\n    `,\n    styles: [``],\n})\nexport class MapsIndoorsComponent extends AsyncHandler implements OnInit {\n    @Input() public zone: BuildingLevel;\n    @Input() public metadata: MapMetadata;\n    @Input() public options: any;\n    @Input() public focus: string;\n    @Input() public zoom = DEFAULT_ZOOM;\n    @Input() public reset: number;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public zoneChange = new EventEmitter<BuildingLevel>();\n\n    public id: string;\n    public show_directions = false;\n    public viewing_directions = false;\n    public loading_directions = false;\n    public ignore_zoom = false;\n\n    private _services: MapsIndoorServices;\n    private _floor_list: any[] = [];\n    private _last_building: string;\n\n    @ViewChild('map_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _maps_people: MapsPeopleService,\n        private _org: OrganisationService,\n    ) {\n        super();\n        const data =\n            sessionStorage.getItem('PLACEOS.mapsindoors.resources') || '{}';\n        const value = JSON.parse(data);\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                RESOURCE_MAP[key] = value[key];\n            }\n        }\n    }\n\n    public ngOnInit() {\n        this.id = randomString(8);\n        this._initialised.next(false);\n        this._initialiseServices();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (!this.is_initialised) {\n            return this.timeout('on_changes', () => this.ngOnChanges(changes));\n        }\n        if (changes.zone && this.zone) {\n            this._centerOnZone();\n        }\n        if (changes.focus && this.focus) {\n            this._focusOnLocation();\n        }\n        if (changes.metadata) {\n            this._updateMapStyling();\n        }\n        if (changes.zoom && this.zoom && !this.ignore_zoom) {\n            this._services?.map?.setZoom(this.zoom);\n        }\n        if (changes.reset) {\n            this._services?.map?.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        if (changes.options) {\n            this._addFloorSelector();\n        }\n    }\n\n    private _setResource(id: string, resource: any) {\n        RESOURCE_MAP[id] = resource;\n        this.timeout('set_resource', () => {\n            sessionStorage.setItem(\n                'PLACEOS.mapsindoors.resources',\n                JSON.stringify(RESOURCE_MAP),\n            );\n        });\n    }\n\n    private _initialiseServices() {\n        if (!this._maps_people.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initialiseServices(), 1000);\n            return;\n        }\n        const [lat, long] = (\n            this._org.building?.location || `-33.8567844,151.2152967`\n        ).split(',');\n        const view_options: Record<string, any> = {\n            element: this._container.nativeElement,\n            center: { lat: parseFloat(lat), lng: parseFloat(long) },\n            zoom: DEFAULT_ZOOM,\n            maxZoom: 24,\n        };\n        let view_instance = null;\n        switch (this._maps_people.map_service) {\n            case MapService.GoogleMaps:\n                log('MapsIndoors', 'Using Google Maps API');\n                view_instance = new mapsindoors.mapView.GoogleMapsView(\n                    view_options,\n                );\n                break;\n            case MapService.Mapbox:\n                view_options.accessToken = this._maps_people.map_token;\n                log('MapsIndoors', 'Using Mapbox API');\n                view_instance = new mapsindoors.mapView.MapboxView(\n                    view_options,\n                );\n                break;\n        }\n        if (!view_instance) {\n            notifyWarn('Failed to initialise map view.');\n            return;\n        }\n        const provider =\n            this._maps_people.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._maps_people.map_token,\n                  );\n        const maps_indoors = new mapsindoors.MapsIndoors({\n            mapView: view_instance,\n        });\n        this._services = {\n            mapsindoors: maps_indoors,\n            view: view_instance,\n            map: view_instance.getMap(),\n            directions: new mapsindoors.services.DirectionsService(provider),\n            directions_renderer: new mapsindoors.directions.DirectionsRenderer({\n                mapsIndoors: maps_indoors,\n            }),\n        };\n        this._initialised.next(true);\n        if (this.zone) {\n            this._services.map.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        this._addFloorSelector();\n        // Add Events listenders\n        this._services.mapsindoors.addListener('building_changed', (e) =>\n            this._handleBuildingChange(e),\n        );\n        this._services.mapsindoors.addListener('floor_changed', (e) =>\n            this._handleLevelChange(e),\n        );\n        this._services.mapsindoors.addListener('zoom_changed', (e) =>\n            this._handleZoomChange(e),\n        );\n        this._services.mapsindoors.addListener('click', (e) =>\n            this._handleUserClick(e),\n        );\n        this.timeout(\n            'resize',\n            () => window.dispatchEvent(new Event('resize')),\n            100,\n        );\n        (window as any).maps_indoors = this._services;\n        this.timeout('focus', () => this._focusOnLocation());\n        this.timeout('init_zoom', () => this._handleZoomChange(DEFAULT_ZOOM));\n    }\n\n    public clearDirections() {\n        this._services.directions_renderer.setRoute(null);\n        this.viewing_directions = false;\n    }\n\n    private _last_position: GeolocationPosition;\n\n    public async toggleDirections() {\n        if (this.viewing_directions) {\n            this.clearDirections();\n            this._focusOnLocation();\n            return;\n        }\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError(`Unable to find location \"${this.focus}\".`);\n            return;\n        }\n        this.loading_directions = true;\n        const item = items[0];\n        const bld = this._org.buildings.find(\n            (bld) => bld.id === this.zone.parent_id,\n        );\n        const [d_lng, d_lat] = item.properties?.anchor?.coordinates ||\n            bld?.location.split(',') || [37.8136, 144.9631];\n        const options = { timeout: 10000, enableHighAccuracy: true };\n        navigator.geolocation.getCurrentPosition(\n            async (position: GeolocationPosition) => {\n                this._last_position = position;\n                this.setDirectionsFromLocation(\n                    {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    { lat: d_lat, lng: d_lng },\n                );\n            },\n            () => {\n                if (this._last_position) {\n                    this.setDirectionsFromLocation(\n                        {\n                            lat: this._last_position.coords.latitude,\n                            lng: this._last_position.coords.longitude,\n                        },\n                        { lat: d_lat, lng: d_lng },\n                    );\n                } else notifyError('Failed to get your current location.');\n            },\n            options,\n        );\n    }\n\n    public async setDirectionsFromLocation(\n        from: { lat: number; lng: number },\n        to: { lat: number; lng: number },\n    ) {\n        const distance = calculateDistance(to.lat, to.lng, from.lat, from.lng);\n        const routeParameters = {\n            origin: {\n                lat: from.lat,\n                lng: from.lng,\n            },\n            destination: { lat: to.lat, lng: to.lng },\n            travelMode: distance < 2 ? 'WALKING' : 'DRIVING',\n        };\n        const result = await this._services.directions\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn',\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                this.loading_directions = false;\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        this._services.directions_renderer.setRoute(result);\n        this.viewing_directions = true;\n        this.loading_directions = false;\n    }\n\n    private _handleZoomChange(level: number) {\n        this.timeout(\n            'zoom_change',\n            () => {\n                this.ignore_zoom = true;\n                this.zoom = level;\n                this.zoomChange.emit(level);\n                this.timeout(\n                    'reset_ignore_zoom',\n                    () => (this.ignore_zoom = false),\n                    50,\n                );\n            },\n            100,\n        );\n    }\n\n    private _handleBuildingChange(building: any) {\n        const id = building.externalId || building.id;\n        log('MapsIndoors', `Building switched to \"${id}\"`);\n        const floors = building.floors || {};\n        this._floor_list = Object.keys(floors).map((key) => ({\n            index: key,\n            ...floors[key],\n        }));\n        log('MapsIndoors', 'Floor List:', this._floor_list);\n        if (!this._services) return;\n        const bld = this._org.buildings.find(\n            (_) => _.id === id || _.map_id === id,\n        );\n        this.timeout('set_floor', () => {\n            const has_set_floor = this._setFloorFromZone();\n            if (!has_set_floor && building.defaultFloor) {\n                this._handleLevelChange(building.defaultFloor);\n            }\n        });\n        if (!bld) return;\n        this._org.building = bld;\n        this._last_building = bld.id;\n    }\n\n    private async _handleLevelChange(index: any) {\n        log('MapsIndoors', `Level switched to \"${index}\"`);\n        const floor = this._floor_list.find((_) => _.index === index);\n        const id = floor?.externalId || floor?.id;\n        if (!this._services) return;\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        if (!levels) return;\n        const new_level = levels.find((_) => _.map_id === id || _.id === id);\n        if (!new_level) return;\n        this.zone = new_level;\n        this.zoneChange.emit(new_level);\n    }\n\n    private _handleUserClick(event: any) {\n        log('MapsIndoors', `Click occurred`, event);\n        const id =\n            event.properties?.externalId ||\n            event.properties?.roomId ||\n            event.id;\n        const actions = this.metadata?.actions || [];\n        log('MapsIndoors', `Registered Actions`, actions);\n        const ignore_actions = ['mousedown', 'touchstart', 'enter', 'leave'];\n        for (const action of actions) {\n            if (\n                (action.id === id || action.id === '*') &&\n                !ignore_actions.includes(action.action as any)\n            ) {\n                action.callback(event);\n                break;\n            }\n        }\n    }\n\n    private async _search(query: string): Promise<any[]> {\n        if (!this._services) return;\n        return mapsindoors?.services.LocationsService.getLocations({\n            q: query,\n        });\n    }\n\n    private async _updateMapStyling() {\n        if (!this._services) return;\n        const styles = this.metadata?.styles || {};\n        for (const id in styles) {\n            if (!styles[id].fill) continue;\n            let resource = RESOURCE_MAP[id];\n            if (!resource) {\n                const id_simple = id.replace(/#/, '');\n                const list = await this._search(id_simple);\n                if (!list.length) continue;\n                resource = list.find(\n                    (_) =>\n                        _.properties?.externalId === id_simple ||\n                        _.properties?.roomId === id_simple ||\n                        _.id === id_simple,\n                );\n                if (resource) this._setResource(id, resource);\n            }\n            if (!resource) continue;\n            const value = {\n                extrusionHeight: 0,\n                extrusionVisible: false,\n                polygonVisible: true,\n                polygonFillColor: styles[id].fill,\n            };\n            this._services.mapsindoors.setDisplayRule(resource.id, value);\n        }\n    }\n\n    private async _focusOnLocation() {\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        this.clearDirections();\n        if (!items?.length) {\n            notifyError(`Unable to find location ${this.focus}.`);\n            return;\n        }\n        const item =\n            items.find((_) => _.properties?.externalId === this.focus) ||\n            items[0];\n        const bld = this._org.buildings.find(\n            (bld) => bld.id === this.zone.parent_id,\n        );\n        const [lng, lat] = item.properties?.anchor?.coordinates ||\n            bld?.location.split(',') || [37.8136, 144.9631];\n        this._services.map.setZoom(DEFAULT_ZOOM);\n        this._services.map.setCenter({ lat, lng });\n        this._services.mapsindoors.setFloor(item.properties?.floor);\n        this._services.mapsindoors.highlight([item.id]);\n    }\n\n    private _centerOnZone() {\n        if (\n            !this._services ||\n            !this.zone ||\n            this.zone.parent_id === this._last_building ||\n            this.zone.id === this._last_building\n        )\n            return;\n        this.timeout('set_center', () => {\n            const bld = this._org.buildings.find(\n                (bld) => bld.id === this.zone.parent_id,\n            );\n            if (!bld) return;\n            const [lat, long] = bld?.location.split(',');\n            if (!this.focus) {\n                this._services.map.setCenter({\n                    lat: parseFloat(lat),\n                    lng: parseFloat(long),\n                });\n            }\n            this._setFloorFromZone();\n            this._last_building = this.zone.id;\n        });\n    }\n\n    private _setFloorFromZone() {\n        if (!this.zone.map_id || !this._services) return false;\n        const map_id = this.zone.map_id;\n        const floor = this._floor_list.find(\n            (_) =>\n                _.index === map_id ||\n                _.externalId === map_id ||\n                _.id === map_id,\n        );\n        if (!floor) return false;\n        this._services.mapsindoors.setFloor(floor.index);\n        return true;\n    }\n\n    private _added_floor_selector = false;\n\n    private _addFloorSelector() {\n        if (!this.options?.controls || this._added_floor_selector) return;\n        const element = document.createElement('div');\n        new mapsindoors.FloorSelector(element, this._services.mapsindoors);\n        if (this._maps_people.map_service === MapService.GoogleMaps) {\n            this._services.map.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(element);\n        } else {\n            this._services.map.addControl({\n                onAdd: () => element,\n                onRemove: () => {},\n            });\n        }\n        this._added_floor_selector = true;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { padLength } from '@placeos/common';\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(period_length: number, show_ms: boolean = false): string {\n        const hours = Math.floor(period_length / 60 / 60);\n        const minutes = Math.floor((period_length / 60) % 60);\n        const seconds = Math.floor(period_length % 60);\n        const milliseconds = Math.floor((period_length * 1000) % 1000);\n        let str = `${padLength(minutes)}:${padLength(seconds)}`;\n        if (show_ms) {\n            str += `.${padLength(milliseconds, 3)}`;\n        }\n        if (hours > 0) str = `${padLength(hours)}:${str}`;\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, take } from 'rxjs/operators';\n\nexport interface TableColumn {\n    key: string;\n    name: string;\n    sortable?: boolean;\n    filterable?: boolean;\n    content?: string | TemplateRef<any> | Component;\n    size?: string;\n    show?: boolean;\n    empty?: string;\n}\n\n@Component({\n    selector: 'simple-table',\n    template: `\n        <div\n            role=\"table\"\n            class=\"grid border border-base-300\"\n            [style.gridTemplateColumns]=\"column_template\"\n            (click)=\"active_row >= 0 ? rowClicked.emit(active_row) : null\"\n            (touchend)=\"active_row = -1\"\n            (mouseleave)=\"active_row = -1\"\n        >\n            <div\n                *ngIf=\"selectable\"\n                id=\"column-selector\"\n                class=\"sticky top-0 flex items-center justify-between px-2 border-r border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"'1 / 2'\"\n            >\n                <mat-checkbox\n                    [checked]=\"selected.length === (data_view$ | async)?.length\"\n                    [indeterminate]=\"\n                        selected.length > 0 &&\n                        selected.length < (data_view$ | async)?.length\n                    \"\n                    (change)=\"selectAll($event.checked)\"\n                ></mat-checkbox>\n            </div>\n            <button\n                header\n                matRipple\n                *ngFor=\"let column of active_columns; let i = index\"\n                [id]=\"'column-' + column.key\"\n                class=\"sticky top-0 flex items-center justify-between p-4 border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"\n                    1 +\n                    i +\n                    (selectable ? 1 : 0) +\n                    ' / ' +\n                    (2 + i + (selectable ? 1 : 0))\n                \"\n                [class.pointer-events-none]=\"\n                    !sortable || column.sortable === false\n                \"\n                (click)=\"setSort(column.key)\"\n                [class.active]=\"sort?.key === column.key\"\n                [class.border-r]=\"i !== active_columns.length - 1\"\n                [class.width]=\"column.size\"\n            >\n                <div class=\"font-medium\">{{ column.name || column.key }}</div>\n                <app-icon\n                    class=\"text-[1.25em]\"\n                    *ngIf=\"sortable && column.sortable !== false\"\n                >\n                    {{\n                        sort?.key === column.key && sort?.reverse\n                            ? 'arrow_upward'\n                            : 'arrow_downward'\n                    }}\n                </app-icon>\n            </button>\n            <ng-container\n                *ngFor=\"\n                    let row of data_view$\n                        | async\n                        | slice\n                            : page * (page_size || 9999)\n                            : (page + 1) * (page_size || 9999);\n                    let i = index\n                \"\n            >\n                <div\n                    *ngIf=\"selectable\"\n                    id=\"column-selector\"\n                    class=\"flex items-center justify-between px-2 border-r border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"'1 / 2'\"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <mat-checkbox\n                        [checked]=\"selected.includes(i)\"\n                        (change)=\"select(i, $event.checked)\"\n                    ></mat-checkbox>\n                </div>\n                <div\n                    *ngFor=\"let column of active_columns; let j = index\"\n                    class=\"flex items-center justify-between border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"\n                        1 +\n                        j +\n                        (selectable ? 1 : 0) +\n                        ' / ' +\n                        (2 + j + (selectable ? 1 : 0))\n                    \"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    [class.border-r]=\"j !== active_columns.length - 1\"\n                    [class.width]=\"column.size\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <ng-container [ngSwitch]=\"columnType(column)\">\n                        <div class=\"p-4\" *ngSwitchDefault>\n                            {{\n                                row[column.key] ??\n                                    (column.key === '_index'\n                                        ? i + 1\n                                        : row[column.key])\n                            }}\n                            <span\n                                *ngIf=\"\n                                    (row[column.key] == null ||\n                                        row[column.key] === '') &&\n                                    column.key !== '_index'\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                {{ column.empty || 'N/A' }}\n                            </span>\n                        </div>\n                        <ng-container *ngSwitchCase=\"'template'\">\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    column.content;\n                                    context: {\n                                        first: i === 0,\n                                        last:\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1 ||\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1,\n                                        index: i,\n                                        data: row[column.key],\n                                        row: row,\n                                        key: column.key,\n                                        name: column.name || column.key,\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </ng-container>\n                </div>\n                <div\n                    child-node\n                    *ngIf=\"show_children[row.id] && child_template\"\n                    [style.gridColumn]=\"'span ' + active_columns.length\"\n                    class=\"border-b last:border-t last:border-b-0 border-base-200\"\n                >\n                    <ng-container\n                        *ngTemplateOutlet=\"\n                            child_template;\n                            context: {\n                                first: i === 0,\n                                last:\n                                    i === (data_view$ | async)?.length - 1 ||\n                                    i === (data_view$ | async)?.length - 1,\n                                index: i,\n                                row: row,\n                            }\n                        \"\n                    ></ng-container>\n                </div>\n            </ng-container>\n            <div\n                *ngIf=\"!(data_view$ | async)?.length\"\n                [style.gridColumnStart]=\"'span ' + active_columns.length\"\n                class=\"flex items-center justify-center p-8 opacity-30\"\n            >\n                {{ empty_message }}\n            </div>\n            <!-- TODO: Add pagination -->\n        </div>\n        <div\n            *ngIf=\"page_size\"\n            class=\"sticky bottom-0 w-full flex items-center justify-end space-x-2 p-2 bg-base-200\"\n        >\n            <div class=\"px-4 py-2\">\n                {{ page * (page_size || 9999) + 1 }} &ndash;\n                {{\n                    (page + 1) * (page_size || 9999) > total_count\n                        ? total_count\n                        : (page + 1) * (page_size || 9999)\n                }}\n                of {{ total_count }}\n            </div>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === 0\"\n                (click)=\"setPage(page - 1)\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(page + 1)\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n            <button icon matRipple [disabled]=\"page === 0\" (click)=\"setPage(0)\">\n                <app-icon>first_page</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(total_pages - 1)\"\n            >\n                <app-icon>last_page</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            :host > button {\n                min-width: 100%;\n            }\n\n            [header] app-icon {\n                opacity: 0;\n            }\n            [header]:hover app-icon {\n                opacity: 0.3;\n            }\n            [header]:hover.pointer-events-none app-icon {\n                opacity: 0;\n            }\n            [header].active app-icon {\n                opacity: 1;\n            }\n        `,\n    ],\n})\nexport class SimpleTableComponent<T extends {} = any> extends AsyncHandler {\n    @Input() public data: T[] | Observable<T[]>;\n    @Input() public columns: TableColumn[] = [];\n    @Input() public selectable = false;\n    @Input() public filter: string = '';\n    @Input() public sortable = false;\n    @Input() public selected: number[] = [];\n    @Input() public page_size = 0;\n    @Input() public empty_message = 'No data to list';\n    @Input() public child_template: TemplateRef<any> = null;\n    @Input() public show_children: Record<string, boolean> = {};\n    @Output() public selectedChange = new EventEmitter<number[]>();\n    @Output() public rowClicked = new EventEmitter<number>();\n\n    public page = 0;\n    public total_count = 0;\n    public total_pages = 0;\n    public active_row = -1;\n    public active_columns = [];\n\n    private _data$ = new BehaviorSubject<T[]>([]);\n    private _filter$ = new BehaviorSubject<string>('');\n    private _sort$ = new BehaviorSubject<{ key: string; reverse: boolean }>(\n        null,\n    );\n\n    public data_view$?: Observable<T[]> = null;\n\n    public get sort() {\n        return this._sort$.getValue();\n    }\n\n    public get data$(): Observable<T[]> {\n        return this.data instanceof Array ? this._data$ : this.data;\n    }\n\n    public get column_count() {\n        return this.active_columns.length + (this.selectable ? 1 : 0);\n    }\n\n    public get column_template() {\n        const template = this.active_columns\n            .map((_) => _.size || 'auto')\n            .join(' ');\n        return this.selectable ? `3.5rem ${template}` : template;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.filter) {\n            this._filter$.next(this.filter);\n        }\n        if (changes.columns) {\n            this.active_columns = this.columns.filter((_) => _.show !== false);\n        }\n        if (changes.data) {\n            this.data_view$ = combineLatest([\n                this.data$,\n                this._filter$,\n                this._sort$,\n            ]).pipe(\n                debounceTime(300),\n                map(([data, filter, sort]) => {\n                    data = [...data];\n                    if (filter) {\n                        data = data.filter((_) =>\n                            Object.values(_).some((i) =>\n                                JSON.stringify(i)\n                                    ?.toLowerCase()\n                                    .includes((filter || '').toLowerCase()),\n                            ),\n                        );\n                    }\n                    if (sort && data.length) {\n                        const type = typeof data[0][sort.key];\n                        if (type === 'number') {\n                            data = data.sort((a, b) => {\n                                const result = a[sort.key] - b[sort.key];\n                                return sort.reverse ? -result : result;\n                            });\n                        } else {\n                            data = data.sort((a, b) => {\n                                const a_value = JSON.stringify(\n                                    a[sort.key] || '',\n                                );\n                                const b_value = JSON.stringify(\n                                    b[sort.key] || '',\n                                );\n                                const result = a_value.localeCompare(b_value);\n                                return sort.reverse ? -result : result;\n                            });\n                        }\n                    }\n                    this.selected = [];\n                    this.page = 0;\n                    if (this.page_size) {\n                        this.total_count = data.length;\n                        this.total_pages = Math.ceil(\n                            this.total_count / this.page_size,\n                        );\n                    }\n                    return data;\n                }),\n                shareReplay(1),\n            );\n        }\n    }\n\n    public columnType(column: TableColumn) {\n        return column.content instanceof TemplateRef ? 'template' : 'raw';\n    }\n\n    public gridSquare(row: number, column: number) {\n        return `${row} / ${column} / ${row + 1} / ${column + 1}`;\n    }\n\n    public select(index: number, state: boolean) {\n        if (state) this.selected.push(index);\n        else this.selected = this.selected.filter((i) => i !== index);\n    }\n\n    public async selectAll(state: boolean) {\n        const list = await this.data_view$.pipe(take(1)).toPromise();\n        if (state) this.selected = list.map((_, i) => i);\n        else this.selected = [];\n    }\n\n    public setSort(key: string) {\n        const sort = this._sort$.getValue();\n        if (!sort || sort.key !== key) {\n            this._sort$.next({ key, reverse: false });\n        } else if (!sort.reverse) {\n            this._sort$.next({ key, reverse: true });\n        } else {\n            this._sort$.next(null);\n        }\n    }\n\n    public setPage(page: number) {\n        this.timeout('set_page', () => (this.page = page), 100);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-full px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img auth class=\"h-full w-full\" [source]=\"user.photo\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\nimport { first } from 'rxjs/operators';\nimport { WorkLocationTooltipComponent } from './work-location-tooltip.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select && !use_region\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                *ngIf=\"features.includes('wfh')\"\n                customTooltip\n                [content]=\"work_location_tooltip\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length || !desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"desk_height_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n                *ngIf=\"desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>desk</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Desk Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <ng-template #desk_height_tooltip>\n                <desk-height-presets></desk-height-presets>\n            </ng-template>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n    public readonly work_location_tooltip = WorkLocationTooltipComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get desk_height() {\n        return this._settings.get('app.desks.height_enabled');\n    }\n\n    public get use_region(): boolean {\n        return this._settings.get('app.use_region');\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank',\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md',\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n\n    public saveSetting(name: string, value: any) {\n        this._settings.saveUserSetting(name, value);\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.keyset) {\n            if (!this.keyset) this.keyset = DEFAULT_KEYS;\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, reloadUserData } from '@placeos/common';\nimport { updateUser } from '@placeos/ts-client';\nimport { WorktimePreference } from '@placeos/users';\nimport {\n    format,\n    parse,\n    set,\n    startOfMinute,\n    isBefore,\n    addDays,\n    startOfDay,\n} from 'date-fns';\n\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\n\n@Component({\n    selector: 'work-location-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center justify-between px-2\">\n                <h3 class=\"px-2 py-4 font-medium\">Work Location</h3>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Work Location Preferences\"\n                    matTooltipPosition=\"left\"\n                    class=\"hover:bg-base-200\"\n                    (click)=\"editSettings()\"\n                >\n                    <app-icon>edit_note</app-icon>\n                </button>\n            </div>\n\n            <h3 class=\"px-4 font-medium text-sm\">\n                {{ now | date: 'fullDate' }}\n            </h3>\n            <div\n                class=\"pb-2\"\n                *ngIf=\"active_preference?.blocks?.length; else empty_state\"\n            >\n                <div\n                    class=\"relative flex items-center px-4 py-2\"\n                    *ngFor=\"\n                        let block of active_preference?.blocks;\n                        let i = index\n                    \"\n                    [class.opacity-30]=\"now > timeFrom(block.end_time)\"\n                >\n                    <div\n                        class=\"rounded-full h-10 w-10 flex items-center justify-center bg-base-200 z-20\"\n                        [class.bg-base-200]=\"\n                            now < timeFrom(block.start_time) ||\n                            now > timeFrom(block.end_time)\n                        \"\n                        [class.bg-info]=\"\n                            now >= timeFrom(block.start_time) &&\n                            now <= timeFrom(block.end_time)\n                        \"\n                        [class.text-info-content]=\"\n                            now >= timeFrom(block.start_time) &&\n                            now <= timeFrom(block.end_time)\n                        \"\n                    >\n                        <app-icon class=\"text-2xl\">{{\n                            location_icon(timeFrom(block.start_time))\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 ml-2\">\n                        <button\n                            matRipple\n                            class=\"font-medium flex items-center space-x-2 rounded hover:bg-base-200 px-2 py-1\"\n                            [matMenuTriggerFor]=\"menu\"\n                        >\n                            <div>\n                                {{ location(timeFrom(block.start_time)) }}\n                            </div>\n                            <app-icon>expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <button\n                                mat-menu-item\n                                *ngFor=\"let loc of locations\"\n                                (click)=\"setLocation(i, loc.id)\"\n                            >\n                                <div class=\"flex items-center space-x-2\">\n                                    <app-icon class=\"text-2xl\">{{\n                                        loc.icon\n                                    }}</app-icon>\n                                    <div class=\"pr-8\">{{ loc.name }}</div>\n                                </div>\n                            </button>\n                        </mat-menu>\n                        <div class=\"text-xs opacity-60 px-2\">\n                            {{ timeFrom(block.start_time) | date: 'shortTime' }}\n                            &ndash;\n                            {{ timeFrom(block.end_time) | date: 'shortTime' }}\n                        </div>\n                    </div>\n                    <div\n                        *ngIf=\"i > 0\"\n                        class=\"absolute -top-2 left-7 h-4 w-0 border-l-2 border-dashed border-base-200 -translate-x-px\"\n                    ></div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-2 w-full opacity-30\"\n            >\n                <app-icon class=\"text-6xl\">event_busy</app-icon>\n                <p class=\"text-center text-sm\">No work location for today.</p>\n                <p class=\"text-center text-sm\">\n                    Click the edit button on the top right to edit your work\n                    location preferences.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WorkLocationTooltipComponent {\n    public readonly locations = [\n        { id: 'wfo', name: 'Office', icon: 'business' },\n        { id: 'wfh', name: 'Home', icon: 'home' },\n        { id: 'aol', name: 'Leave', icon: 'event_busy' },\n    ];\n    public settings: WorktimePreference[];\n    public overrides: Record<string, WorktimePreference>;\n\n    public get active_preference() {\n        const date = format(new Date(), 'yyyy-MM-dd');\n        if (this.overrides[date]) return this.overrides[date];\n        return this.settings.find(\n            (pref) => pref.day_of_week === new Date().getDay(),\n        );\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).getTime();\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.overrides = user.work_overrides;\n    }\n\n    public location_icon(time: number) {\n        const user = currentUser();\n        return user.location_icon(time + 1 * 60 * 1000);\n    }\n\n    public location(time: number) {\n        const user = currentUser();\n        return user.location_name_time(time + 1 * 60 * 1000);\n    }\n\n    public timeFrom(hours: number) {\n        return startOfMinute(\n            set(new Date(), {\n                hours: Math.floor(hours),\n                minutes: (hours * 60) % 60,\n                seconds: 0,\n                milliseconds: 0,\n            }),\n        ).getTime();\n    }\n\n    public editSettings() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async setLocation(index: number, location: string) {\n        const user = currentUser();\n        const active_preference = this.active_preference;\n        const date = format(Date.now(), 'yyyy-MM-dd');\n        const new_overrides = {\n            ...user.work_overrides,\n            [date]: {\n                ...active_preference,\n                blocks: [\n                    ...active_preference.blocks.slice(0, index),\n                    {\n                        ...active_preference.blocks[index],\n                        location,\n                    },\n                    ...active_preference.blocks.slice(index + 1),\n                ],\n            },\n        };\n        for (const key in new_overrides) {\n            const key_date = parse(key, 'yyyy-MM-dd', new Date());\n            if (\n                !new_overrides[key].blocks.length ||\n                isBefore(key_date, addDays(startOfDay(Date.now()), -1))\n            ) {\n                delete new_overrides[key];\n            }\n        }\n        this.overrides = new_overrides;\n        await updateUser(user.id, {\n            ...user,\n            work_overrides: new_overrides,\n        } as any).toPromise();\n        reloadUserData();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PlaceZone, showZone } from '@placeos/ts-client';\n\nconst ZONE_LIST: Record<string, PlaceZone> = {};\nconst EMPTY_ZONE = new PlaceZone();\n\n@Pipe({\n    name: 'zone',\n})\nexport class ZonePipe implements PipeTransform {\n    public async transform(id: string): Promise<PlaceZone> {\n        if (ZONE_LIST[id]) return ZONE_LIST[id];\n        const zone = await showZone(id)\n            .toPromise()\n            .catch((_) => null);\n        if (!zone) return EMPTY_ZONE;\n        ZONE_LIST[id] = zone;\n        return zone;\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\nexport * from './lib/group-event-details-modal.component';\nexport * from './lib/group-event-card.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div\n                class=\"flex items-center border-b border-base-200 p-2 min-h-12\"\n            >\n                <button\n                    close\n                    icon\n                    matRipple\n                    *ngIf=\"!hide_close\"\n                    (click)=\"close.emit()\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center font-medium\" i18n>\n                    {{ list.length }}\n                    {{\n                        custom_title\n                            ? custom_title\n                            : list.length === 1\n                              ? 'Attendee'\n                              : 'Attendees'\n                    }}\n                </div>\n                <div class=\"w-12\" *ngIf=\"!hide_close\"></div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <ng-container *ngFor=\"let user of list\">\n                    <div\n                        attendee\n                        class=\"flex items-center p-2 space-x-2 hover:bg-base-200\"\n                        *ngIf=\"\n                            !user.resource && (host !== user.email || show_host)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div class=\"flex-1 w-1/2\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div\n                                class=\"opacity-60 text-sm\"\n                                *ngIf=\"host === user.email\"\n                            >\n                                Host\n                            </div>\n                        </div>\n                        <div class=\"p-2\">\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [class.bg-success]=\"user.checked_in\"\n                                [class.bg-pending]=\"!user.checked_in\"\n                                [matTooltip]=\"\n                                    user.checked_in\n                                        ? 'Checked in'\n                                        : 'Not checked in'\n                                \"\n                            ></div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public show_host = true;\n    @Input() public list: User[] = [];\n    @Input() public hide_close = false;\n    @Input() public custom_title = '';\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { format, isSameDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    getTimezoneOffsetString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">\n                        <div\n                            class=\"flex flex-col leading-tight\"\n                            [class.pr-4]=\"timezone && tz\"\n                        >\n                            <div>{{ period }}</div>\n                            <div\n                                class=\"opacity-30 text-xs\"\n                                *ngIf=\"timezone && tz\"\n                            >\n                                {{ period_tz }}\n                            </div>\n                        </div>\n                    </status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    private _local_tz = getTimezoneOffsetString(\n        Intl.DateTimeFormat().resolvedOptions().timeZone,\n    );\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        const tz_offset = getTimezoneOffsetString(tz);\n        return tz_offset === this._local_tz ? '' : tz_offset;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        return this.formattedTime();\n    }\n\n    public get period_tz() {\n        return this.formattedTime(this.tz);\n    }\n\n    private _date: DatePipe = new DatePipe('en');\n\n    public formattedTime(tz?: string) {\n        const date = this.event.date;\n        const date_end = this.event.date_end;\n        const all_day = this.event.all_day;\n        const tz_format = this._date.transform(date, 'z', tz);\n        const start_date = this._date.transform(date, 'MMM d', tz);\n        const start_time = this._date.transform(date, this.time_format, tz);\n        const end_date = this._date.transform(date_end, 'MMM d', tz);\n        const end_time = this._date.transform(date_end, this.time_format, tz);\n        const is_multiday = this.event?.duration > 24 * 60;\n\n        if (is_multiday) {\n            return `${start_date}${all_day ? '' : ', ' + start_time} - ${end_date}${all_day ? '' : ', ' + end_time}`;\n        } else if (all_day) {\n            return 'All Day';\n        }\n        return `${start_time} - ${end_time} ${'(' + tz_format + ')'}`;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email,\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            if (this.event.extension_data?.shared_event) {\n                this._dialog.open(GroupEventDetailsModalComponent, {\n                    data: { event: this.event, concierge: false },\n                });\n                return;\n            }\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_),\n                ),\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    getTimezoneOffsetString,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\nimport { DatePipe } from '@angular/common';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-screen h-screen print:min-h-screen print:w-screen sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:rounded overflow-auto space-y-2 pb-2 print:overflow-visible\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200 print:border-none\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden print:hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            <div\n                                class=\"flex flex-col leading-tight\"\n                                [class.pr-4]=\"timezone && tz\"\n                            >\n                                <div>{{ period }}</div>\n                                <div\n                                    class=\"opacity-30 text-xs\"\n                                    *ngIf=\"timezone && tz\"\n                                >\n                                    {{ period_tz }}\n                                </div>\n                            </div>\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2 print:hidden\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon class=\"text-2xl\">{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"pr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>\n                            {{ event.date | date: 'EEEE, dd LLLL y' }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div class=\"flex flex-col leading-tight\">\n                            <div>{{ period }}</div>\n                            <div\n                                class=\"opacity-30 text-xs\"\n                                *ngIf=\"timezone && tz\"\n                            >\n                                {{ period_tz }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline print:hidden\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <div class=\"hidden print:block\">\n                        <ng-container *ngFor=\"let user of event.attendees\">\n                            <div\n                                class=\"px-2 flex items-center space-x-2\"\n                                attendee\n                                *ngIf=\"user.email !== event.host\"\n                            >\n                                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                                <div class=\"text-sm flex-1 w-px\">\n                                    <div>{{ user?.name }}</div>\n                                    <div\n                                        class=\"opacity-60 truncate w-full\"\n                                        [title]=\"user.email\"\n                                    >\n                                        {{ user.email }}\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        class=\"print:hidden\"\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        print || show_order[order.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"raw_body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"raw_body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8 print:hidden\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8 print:hidden\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        print || show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white print:hidden\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"printEvent()\">\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">print</app-icon>\n                        <div i18n>Print event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public raw_body = '';\n    public print = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request',\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    private _local_tz = getTimezoneOffsetString(\n        Intl.DateTimeFormat().resolvedOptions().timeZone,\n    );\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        const tz_offset = getTimezoneOffsetString(tz);\n        return tz_offset === this._local_tz ? '' : tz_offset;\n    }\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0,\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0,\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0,\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n    ) {\n        const doc = new DOMParser().parseFromString(\n            this.event.body,\n            'text/html',\n        );\n        this.raw_body = (doc.body.textContent || '').trim();\n        console.log('Body:', this.raw_body);\n        this._load().then();\n        console.log('Timezone:', this.timezone);\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        return this.formattedTime();\n    }\n\n    public get period_tz() {\n        return this.formattedTime(this.tz);\n    }\n\n    private _date: DatePipe = new DatePipe('en');\n\n    public formattedTime(tz?: string) {\n        const date = this.event.date;\n        const date_end = this.event.date_end;\n        const all_day = this.event.all_day;\n        const tz_format = this._date.transform(date, 'z', tz);\n        const start_date = this._date.transform(date, 'MMM d', tz);\n        const start_time = this._date.transform(date, this.time_format, tz);\n        const end_date = this._date.transform(date_end, 'MMM d', tz);\n        const end_time = this._date.transform(date_end, this.time_format, tz);\n        const is_multiday = this.event?.duration > 24 * 60;\n\n        if (is_multiday) {\n            return `${start_date}${all_day ? '' : ', ' + start_time} - ${end_date}${all_day ? '' : ', ' + end_time}`;\n        } else if (all_day) {\n            return 'All Day';\n        }\n        return `${start_time} - ${end_time} ${'(' + tz_format + ')'}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email,\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id),\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        const doc = new DOMParser().parseFromString(\n            this.event.body,\n            'text/html',\n        );\n        this.raw_body = (doc.body.textContent || '').trim();\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id,\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n        });\n    }\n\n    public printEvent() {\n        this.print = true;\n        setTimeout(() => {\n            window.print();\n            setTimeout(() => (this.print = false), 100);\n        }, 300);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _changed = new BehaviorSubject<number>(0);\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}'),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get options_value() {\n        return this._options.getValue();\n    }\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = this._org.building_list.pipe(\n        switchMap((list) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, 'room_booking_rules').toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_region.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            const use_region = this._settings.get('app.use_region');\n            if (!zone_ids?.length) {\n                zone_ids = [\n                    (use_region\n                        ? this._org.region?.id\n                        : this._org.building?.id) || this._org.building?.id,\n                ];\n            }\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([]))),\n                ),\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features)))),\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces',\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_),\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length)),\n        ),\n        shareReplay(1),\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings',\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i)),\n                            ),\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                }),\n            );\n        }),\n        shareReplay(1),\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n        this._changed,\n    ]).pipe(\n        debounceTime(300),\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules[this._org.building?.id] || [],\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    let booking_list = bookings[idx] || [];\n                    if (this.last_success?.system?.id === _.id) {\n                        booking_list = [...booking_list, this.last_success];\n                    }\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        booking_list.filter((_) => _.ical_uid !== ical_uid),\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(500),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules[this._org.building?.id] || [],\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration],\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules[this._org.building?.id] || [],\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => []),\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1),\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            }),\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this.timeout('set_view', () => this._view.next(value), 50);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        }),\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id],\n                ) || [],\n            ),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email,\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000,\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id],\n                ) || [],\n            ),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest({ ..._, event }),\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}',\n        );\n        if (form_data.id && form_data.id !== this._event.getValue()?.id) {\n            showEvent(form_data.id).subscribe((event) => {\n                this._event.next(event);\n                this._assets.setOptions({\n                    ignore: flatten(\n                        event.linked_bookings?.map(\n                            (_) => _.asset_ids || [_.asset_id],\n                        ) || [],\n                    ),\n                });\n            });\n        }\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : '',\n        );\n    }\n\n    public postForm(\n        force: boolean = false,\n        ignore_space_check: string[] = [],\n        ignore_owner: boolean = false,\n    ) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form,\n                    ).join(', ')}]`,\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let value = this._form.getRawValue();\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = value;\n            let spaces = form.get('resources')?.value || [];\n            if (ignore_space_check.length) {\n                spaces = spaces.filter(\n                    (_) =>\n                        !ignore_space_check.includes(_.email) &&\n                        !ignore_space_check.includes(_.id),\n                );\n            }\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n                value = this._form.getRawValue();\n            }\n            let changed_times = false;\n            let changed_spaces = spaces.some(\n                (s) => !event.resources?.find((_) => _.id === s.id),\n            );\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || '',\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            spaces = form.get('resources')?.value || [];\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource'),\n                );\n                spaces.push(space);\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email',\n            );\n            if (!spaces.length && attendees.find((_) => _.is_external)) {\n                this._loading.next('');\n                const message =\n                    'External attendees require a space to be booked';\n                reject(message);\n                throw message;\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner && !ignore_owner) query.calendar = host || creator;\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`,\n                    );\n                    if (overflow?.setup) {\n                        setup = Math.max(setup, overflow.setup);\n                    }\n                    if (overflow?.breakdown) {\n                        breakdown = Math.max(breakdown, overflow.breakdown);\n                    }\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n                (value as any).setup_time = value.setup_time || setup;\n                (value as any).breakdown_time =\n                    value.breakdown_time || breakdown;\n            }\n            const processed_assets = (assets || []).map((_) =>\n                new AssetRequest(_).toJSON(),\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query,\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected,\n            );\n            let creating_assets = false;\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {},\n                    ).toPromise();\n                    console.warn(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time',\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                } else if (creating_assets) {\n                    notifyError(\n                        `Unable to update all asset requests for event.\\n${e}`,\n                    );\n                    return;\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any,\n                ).catch(on_error);\n            }\n\n            if (assets?.length || event.extension_data.assets?.length) {\n                creating_assets = true;\n                const requests = await validateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: unique([\n                            this._org.organisation.id,\n                            this._org.region?.id,\n                            this._org.building?.id,\n                            ...spaces[0]?.zones,\n                        ]).filter((_) => !!_),\n                        reset_state: changed_times,\n                    },\n                    assets,\n                    changed_spaces || changed_times,\n                ).catch(on_error);\n                if (!requests) throw 'Unable to validate asset requests';\n                await requests();\n                creating_assets = false;\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result),\n            );\n            this.setView('success');\n            this.timeout('post_finshed', () => this._changed.next(Date.now()));\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>,\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any),\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string,\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration],\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore,\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`,\n                ),\n            ]),\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get images() {\n        return this.extension_data.images || [];\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get view_access() {\n        return this.extension_data.view_access || 'PRIVATE';\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    }),\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30),\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            (data as any).host_email ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email',\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1,\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host,\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000,\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000,\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_),\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                  ? 'external'\n                  : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any),\n        );\n        const linked_assets = this.linked_bookings\n            .filter((_) => _.booking_type === 'asset-request')\n            .map((_) => _.extension_data?.request)\n            .filter((_) => !!_);\n        const asset_requests =\n            (linked_assets.length\n                ? linked_assets\n                : this.extension_data.assets) || [];\n        this.extension_data.images =\n            this.extension_data.images || data.images || [];\n        this.extension_data.assets = asset_requests.map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any),\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end,\n        );\n    }\n\n    _valid_asset_cache = [];\n    _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id,\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                          ? 'rejected'\n                          : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email',\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null }),\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null }),\n        );\n        obj.system_id = this.system?.id;\n        for (const key of [\n            'catering',\n            'date',\n            'date_end',\n            'duration',\n            'status',\n            'linked_bookings',\n            '_valid_asset_cache',\n            '_valid_cache_expiry',\n            'type',\n        ]) {\n            if (key in obj) delete obj[key];\n        }\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams,\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([])),\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams,\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item)),\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch',\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON(),\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams,\n) => {\n    const id = data.update_master\n        ? data.recurring_event_id || data.id\n        : data.id;\n    delete (data as any)?.status;\n    return id ? updateEvent(id, { ...data, id }, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        },\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {},\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`,\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function addEventGuest(\n    id: string,\n    guest: GuestUser,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString(q);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/attendee${query ? '?' + query : ''}`,\n        guest,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function removeEventGuest(\n    id: string,\n    guest: GuestUser,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/attendee/${encodeURIComponent(guest.email)}${query ? '?' + query : ''}`,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {},\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {},\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata,\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0],\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id,\n                    ),\n            );\n            for (const space of ignore_check) {\n                if (!id_list.includes(space.id)) continue;\n                const availability = space.availability.filter(\n                    (i) =>\n                        !(\n                            i.date === ignore_period[0] &&\n                            i.duration === ignore_period[1]\n                        ),\n                );\n                short_list[id_list.indexOf(space.id)] = !availability.find(\n                    (i) => i.status !== 'free',\n                );\n            }\n            return short_list;\n        }),\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\nimport { setDefaultCreator } from './event.class';\nimport { currentUser, current_user } from 'libs/common/src/lib/user-state';\nimport { first } from 'rxjs/operators';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        SharedSpacesModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {\n    public async ngOnInit() {\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        setDefaultCreator(currentUser());\n    }\n}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { CalendarEvent } from './event.class';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 min-h-28 w-full bg-base-200 overflow-hidden border-b border-base-200\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                    <p *ngIf=\"!raw_description.trim()\" class=\"opacity-30\">\n                        No description\n                    </p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div *ngIf=\"is_onsite && has_space\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div *ngIf=\"is_onsite && !has_space\" class=\"opacity-30\">\n                        Room to be confirmed\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full min-w-56 w-1/2 max-w-[20rem] bg-base-200 overflow-hidden border-r border-base-200\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30 text-left\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-3\">{{ raw_description }}</p>\n                            <p\n                                *ngIf=\"!raw_description.trim()\"\n                                class=\"opacity-30\"\n                            >\n                                No description\n                            </p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition:\n                    box-shadow 300ms,\n                    border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: CalendarEvent;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    public get is_onsite() {\n        return this.event?.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event?.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar,\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email,\n        );\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { event: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { CalendarEvent } from './event.class';\nimport {\n    addEventGuest,\n    checkinEventGuest,\n    removeEventGuest,\n} from './events.fn';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"event.extension_data?.images?.length\"\n                    auth\n                    [source]=\"event.extension_data?.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button\n                icon\n                mat-dialog-close\n                class=\"absolute top-1 right-1 overflow-hidden\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-30 z-0\"></div>\n                <app-icon class=\"z-10\">close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ event.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"event.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            Event by\n                            {{ event.organiser?.name || event.host }}\n                        </div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ event.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ event.date | date: time_format }} -\n                                {{\n                                    event.date + event.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ event.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            event-details\n                            [innerHTML]=\"body | sanitize\"\n                        ></span>\n                        <span\n                            *ngIf=\"!raw_description.trim()\"\n                            class=\"opacity-30\"\n                        >\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                        <div class=\"border border-base-300 w-full\">\n                            <button\n                                matRipple\n                                class=\"relative w-full h-40 bg-base-200\"\n                                (click)=\"viewLocation()\"\n                            >\n                                <interactive-map\n                                    *ngIf=\"!showing_map\"\n                                    [src]=\"level?.map_id\"\n                                    [features]=\"features\"\n                                    [styles]=\"styles\"\n                                ></interactive-map>\n                            </button>\n                            <div class=\"p-4 space-y-2\">\n                                <div *ngIf=\"is_onsite && has_space\">\n                                    {{\n                                        (system_id | space | async)\n                                            ?.display_name\n                                    }}\n                                </div>\n                                <div\n                                    *ngIf=\"is_onsite && !has_space\"\n                                    class=\"opacity-30\"\n                                >\n                                    Room to be confirmed\n                                </div>\n                                <div class=\"opacity-30 text-sm !mt-0\">\n                                    <span *ngIf=\"building && level\">\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }},\n                                        {{ level?.display_name || level?.name }}\n                                    </span>\n                                    <span\n                                        *ngIf=\"!building || !level\"\n                                        class=\"opacity-30\"\n                                    >\n                                        No location set for this event\n                                    </span>\n                                </div>\n                                <a\n                                    *ngIf=\"is_online\"\n                                    class=\"opacity-30 mt-4\"\n                                    [class.underline]=\"event.meeting_url\"\n                                    [href]=\"event.meeting_url\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {{\n                                        is_onsite\n                                            ? 'Can be attended online'\n                                            : 'Remote Event'\n                                    }}\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [show_host]=\"false\"\n                    [list]=\"event.attendees\"\n                    [host]=\"event.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public event: CalendarEvent = this._data.event;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n    public raw_description = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.event as any).featured || this.event.extension_data?.featured\n        );\n    }\n\n    public get is_onsite() {\n        return this.event.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get body() {\n        if (this.is_online) return this.event.body;\n        let body = this.event.body;\n        const remove_blocks = [\n            `<div style=\"margin-bottom:24px; overflow:hidden; white-space:nowrap\">________________________________________________________________________________</div>`,\n            `<p>________________________________________________________________________________</p>`,\n        ];\n        for (const block of remove_blocks) {\n            const first = body.indexOf(block);\n            const last = body.lastIndexOf(block);\n            body = body.substring(0, first) + body.substring(last);\n        }\n        for (const block of remove_blocks) {\n            body = body.replace(block, '');\n        }\n        return body;\n    }\n\n    public get attendance() {\n        return (\n            this.event.attendees?.filter((_: any) => _.checked_in)?.length || 0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.space?.id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.event.attendees?.find((_) => _.email === user.email);\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { event: CalendarEvent; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>,\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar,\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email,\n        );\n        const map_id = (this.event.extension_data as any)?.map_id;\n        const id = this.space?.map_id || map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        const zones = (this.space?.zones as any) || [];\n        this.level = this._org.levelWithID(zones);\n        this.building =\n            this._org.buildings.find((_) => zones.includes(_.id)) ||\n            this._org.building;\n        this.locate = map_id || '';\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return (doc.body.textContent || '').trim();\n    }\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        if (this.is_interested && user) {\n            await removeEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = (this.event.attendees || []).filter(\n                (_: any) => _.email !== user.email,\n            );\n        } else {\n            user = await addEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email',\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await addEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email',\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinEventGuest(this.event.id, user.email, !this.is_going, {\n            system_id: this.event.system?.id,\n        }).toPromise();\n        const guest = this.event.attendees.find((_) => _.email === user.email);\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>,\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n            ical_uid: this._event?.ical_uid,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query,\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    LOCAL_TIMEZONE,\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { time } from 'console';\nimport { share } from 'rxjs/operators';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService,\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required],\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' }),\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || '',\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || '',\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false,\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n        attendance_type: new FormControl(\n            event.extension_data?.attendance_type || 'ONSITE',\n        ),\n        timezone: new FormControl(event.timezone || LOCAL_TIMEZONE),\n        shared_event: new FormControl(\n            event.extension_data?.shared_event || false,\n        ),\n        view_access: new FormControl(\n            event.extension_data?.view_access || 'PRIVATE',\n        ),\n        images: new FormControl(event.extension_data?.images || []),\n        featured: new FormControl(event.extension_data?.featured || false),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email),\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false },\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' },\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false },\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date,\n                    ),\n                },\n                { emitEvent: false },\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false },\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date()),\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end,\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n              ? requestable\n                  ? 'Available by Request'\n                  : 'Available'\n              : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n              ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n              : free_tomorrow\n                ? 'Unavailable today'\n                : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number },\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources?.find(\n                (space) => space.email === filter_options.space,\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            }),\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        map(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: `explore-icon`,\n    template: `\n        <div\n            class=\"flex items-center justify-center h-8 w-8 shadow rounded-full border border-base-200\"\n            [style.background-color]=\"color\"\n            [style.color]=\"text_color\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-xl\"></app-icon>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                align-items: end;\n                justify-content: end;\n            }\n        `,\n    ],\n})\nexport class ExploreIconComponent {\n    public readonly icon = this._details.icon || { content: 'done' };\n    public readonly color = this._details.color || 'var(--in)';\n    public readonly text_color = this._details.text_color || 'var(--inc)';\n    constructor(\n        @Inject(MAP_FEATURE_DATA)\n        private _details: {\n            icon?: ApplicationIcon;\n            color?: string;\n            text_color?: string;\n        },\n    ) {}\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._explore.level,\n        this._explore.options,\n        this._org.active_building,\n    ]).pipe(\n        map(([lvl, { is_public }]) => {\n            if (!lvl || is_public) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem] no-subscript\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem] no-subscript\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <interactive-map\n            [src]=\"url | async\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n            [focus]=\"locate\"\n            [options]=\"{ controls: true }\"\n        ></interactive-map>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public locate = '';\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('parking_poll', this._parking.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.locate = id;\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { ParkingSpace } from 'libs/bookings/src/lib/parking.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\ninterface ParkingSpaceExtended extends ParkingSpace {\n    user: string;\n    status: string;\n    plate_number: string;\n}\n\n@Component({\n    selector: 'explore-parking-info',\n    template: `\n        <div\n            class=\"absolute bg-base-300 p-2 rounded-lg !rounded-tl-none shadow top-1/2 left-1/2 text-left\"\n            [class.!bg-error]=\"status === 'busy'\"\n            [class.!text-error-content]=\"status === 'busy'\"\n            [class.!bg-warning]=\"status === 'reserved'\"\n            [class.!text-warning-content]=\"status === 'reserved'\"\n            [class.!bg-success]=\"status === 'free'\"\n            [class.!text-success-content]=\"status === 'free'\"\n        >\n            <div class=\"absolute top-0.5 left-0.5 triangle\"></div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col leading-tight min-w-24 pl-1\">\n                    <div class=\"whitespace-nowrap\">{{ name }}</div>\n                    <div class=\"capitalize text-sm font-medium\">\n                        {{ status }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-col relative h-full px-2 rounded bg-base-100 text-base-content shadow leading-tight\"\n                    *ngIf=\"is_concierge && plate_number\"\n                >\n                    <div\n                        class=\"text-[0.625rem] w-full text-center pt-1 whitespace-nowrap font-medium\"\n                    >\n                        Plate Number\n                    </div>\n                    <div class=\"font-mono pb-1 w-full text-center uppercase\">\n                        {{ plate_number || 'ABC3' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .triangle {\n                width: 0px;\n                height: 0px;\n                border-style: solid;\n                border-width: 0.5rem 0.5rem 0 0;\n                border-color: currentColor transparent transparent transparent;\n                transform: rotate(0deg);\n            }\n        `,\n    ],\n})\nexport class ExploreParkingInfoComponent {\n    public readonly status =\n        this._data.assigned_to === this._data.user && this._data.user\n            ? 'reserved'\n            : this._data.status;\n    public readonly user = this._data.user;\n    public readonly name = this._data.name;\n    public readonly map_id = this._data.map_id;\n    public readonly plate_number = this._data.plate_number;\n\n    public get is_concierge() {\n        return this._settings.app_name.toLowerCase().includes('concierge');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _data: ParkingSpaceExtended,\n        private _element: ElementRef<HTMLDivElement>,\n        private _settings: SettingsService,\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { StaffUser } from '@placeos/users';\nimport { PlaceZone, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    setHours,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ParkingService } from 'libs/bookings/src/lib/parking.service';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n    zone?: PlaceZone;\n    groups?: string[];\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n    public on_book: (ParkingSpace) => Promise<void> = null;\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking'))),\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now()),\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now()),\n                      ),\n                      type: 'parking',\n                      zones: this._settings.get('app.use_region')\n                          ? bld?.parent_id\n                          : bld?.id,\n                      rejected: false,\n                  }),\n        ),\n        shareReplay(1),\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly user_events = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            }),\n        ),\n        shareReplay(1),\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id }),\n                            ),\n                        ),\n                    ),\n                ),\n            ),\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1),\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id)),\n    );\n\n    private _users: Record<string, string> = {};\n    private _plate_numbers: Record<string, string> = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n        this._parking.users,\n    ]).pipe(\n        map(([events, spaces, users]) => {\n            const available = spaces.filter((_) => {\n                const event = events.find(\n                    (e) => e.asset_id === _.id && !e.rejected,\n                );\n                const assigned = `${\n                    event?.user_email || _.assigned_to || ''\n                }`.toLowerCase();\n                const user = users.find(\n                    (u) => u.email.toLowerCase() === assigned.toLowerCase(),\n                );\n                this._users[_.id] = assigned;\n                this._plate_numbers[_.id] =\n                    event?.extension_data?.plate_number ||\n                    user?.plate_number ||\n                    undefined;\n                return !event;\n            });\n            this._updateParkingSpaces(spaces, available);\n            return available;\n        }),\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _parking: ParkingService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n        this.subscription('spaces', this.available_spaces.subscribe());\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n    }\n\n    public startPolling() {\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n        this._poll.next(Date.now());\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private async _updateParkingSpaces(\n        spaces: ParkingSpace[],\n        available: ParkingSpace[],\n    ) {\n        const styles = {};\n        const features = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        let options = this._options.getValue();\n        const assigned_space = await this._parking.assigned_space\n            .pipe(take(1))\n            .toPromise();\n        const deny_parking_access = await this._parking.deny_parking_access\n            .pipe(take(1))\n            .toPromise();\n        const booked_space = await this._parking.booked_space\n            .pipe(take(1))\n            .toPromise();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const is_assigned = !!space.assigned_to;\n            const id = space.map_id || space.id;\n            const status = is_assigned\n                ? can_book\n                    ? 'pending'\n                    : 'busy'\n                : can_book\n                  ? 'free'\n                  : 'busy';\n            styles[`#${id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                location: `${id}`,\n                content: ExploreParkingInfoComponent,\n                z_index: 20,\n                hover: true,\n                data: {\n                    ...space,\n                    user: this._users[space.id],\n                    plate_number: this._plate_numbers[space.id],\n                    status:\n                        status === 'pending' && is_assigned\n                            ? 'reserved'\n                            : status,\n                },\n            });\n            if (!can_book) continue;\n            const book_fn = async () => {\n                if (this.on_book) {\n                    await this.on_book(space);\n                    this._poll.next(Date.now());\n                    return;\n                }\n                if (deny_parking_access) {\n                    return notifyError(\n                        `Your user account has been denied parking access to ${\n                            space.zone?.display_name || space.zone?.name\n                        }.`,\n                    );\n                }\n                if (assigned_space) {\n                    return notifyError(\n                        `You are already assigned to parking space \"${\n                            space.name || space.id\n                        }\".`,\n                    );\n                }\n                if (booked_space?.find((_) => _.id === space.id)) {\n                    return notifyError(\n                        `You already have a parking space booked for the selected time.`,\n                    );\n                }\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`,\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`,\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                options = this._options.getValue();\n                let user = options.host || currentUser();\n                const user_email = user?.email;\n                const zone =\n                    this._org.levelWithID([\n                        space.zone_id || (space as any).zone,\n                    ]) || this._state.active_level;\n                const date =\n                    !options.date || isSameDay(options.date, Date.now())\n                        ? startOfMinute(Date.now()).valueOf()\n                        : setHours(options.date, 8).valueOf();\n                debugger;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: 11 * 60,\n                    all_day: true,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: [\n                        this._org.organisation.id,\n                        this._org.region?.id,\n                        zone.parent_id,\n                        zone.id,\n                    ],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    if (e === 'User cancelled') throw e;\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`,\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`,\n                );\n                this.timeout('poll', () => this._poll.next(Date.now()), 1000);\n            };\n            actions.push({\n                id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : [],\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setFeatures('parking', features);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null,\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90,\n                ),\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setFilter($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (focus)=\"cancelClear()\"\n                (blur)=\"clear()\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0 : 5\"\n                    [value]=\"option.name\"\n                    (click)=\"select(option)\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public clear() {\n        this.timeout('clear', () => {\n            this.show = false;\n            this.search_str = '';\n            this.setFilter('');\n        });\n    }\n\n    public cancelClear() {\n        this.clearTimeout('clear');\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300,\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                  ? 'locate'\n                  : 'user';\n        query[type] = item.id;\n        if (type === 'locate') {\n            query.name = item.name;\n            query.zone = item.zone;\n        }\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n        this.focusInput();\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface PointOfInterest {\n    id: string;\n    name: string;\n    level_id: string;\n    location: string | [number, number];\n    short_link_id: string;\n    qr_code?: string;\n    qr_link?: string;\n    can_search?: boolean;\n}\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n    /** ID of the zone that the item is located */\n    zone?: string;\n}\n\nconst TYPES = ['space', 'contact', 'feature', 'user'];\n\nfunction typeIndex(item: SearchResult): number {\n    return TYPES.indexOf(item.is_role ? 'contact' : item.type);\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1),\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[])),\n                  )\n                : of([] as StaffUser[]),\n        ),\n        shareReplay(1),\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any,\n                                          ),\n                                      } as any),\n                              ),\n                      ),\n                  )\n                : of([]),\n        ),\n        catchError(() => []),\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([]),\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    }) as SearchResult,\n            );\n        }),\n        shareReplay(1),\n    );\n\n    private _map_features: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'map_features',\n                }).pipe(catchError(() => of({ details: [] }))),\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.map_features;\n                    if (!metadata) continue;\n                    const feature_list =\n                        metadata.details instanceof Array\n                            ? metadata.details\n                            : [];\n                    for (const feature of feature_list) {\n                        list.push({\n                            id: feature.id,\n                            type: 'feature',\n                            name: feature.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            }),\n        );\n\n    private _poi_metadata = this._org.initialised.pipe(\n        filter((_) => _),\n        switchMap(() =>\n            showMetadata(this._org.organisation.id, 'points-of-interest').pipe(\n                catchError((_) => of({ details: {} })),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    private _poi_list = combineLatest([\n        this._org.active_building,\n        this._poi_metadata,\n    ]).pipe(\n        filter(([bld]) => !!bld.id),\n        map(([bld, metadata]) => {\n            const mapping = metadata.details || {};\n            const levels = this._org.levelsForBuilding(bld);\n            const list: PointOfInterest[] = flatten(\n                levels.map((lvl) => mapping[lvl.id] || []),\n            );\n            return list.filter((_) => _.can_search);\n        }),\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._poi_list.pipe(\n            map((poi_list) => {\n                return poi_list.map(\n                    (item) =>\n                        ({\n                            id: item.id || item.location,\n                            type: 'feature',\n                            name: item.name,\n                            description: '',\n                            zone: item.level_id,\n                        }) as SearchResult,\n                );\n            }),\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._map_features,\n        this._maps_people_search,\n        this._points_of_interest,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n                points_of_interest,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search),\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    }) as any,\n                            ),\n                        ),\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search),\n                    ),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                    ...points_of_interest.filter((_) =>\n                        _.name.toLowerCase().includes(search),\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                }) as any,\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search),\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                ];\n                results.sort(\n                    (a, b) =>\n                        typeIndex(a) - typeIndex(b) ||\n                        a.name.localeCompare(b.name),\n                );\n                return results;\n            },\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1),\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data),\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService,\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices',\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: Record<string, CalendarEvent[]> = {};\n    private _statuses: Record<string, string> = {};\n    private _presence: Record<string, boolean> = {};\n    private _panning = true;\n    private _last_action = '';\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] })),\n                ),\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1),\n        );\n\n    private _bind = combineLatest([\n        this._state.spaces,\n        this._state.options,\n    ]).pipe(\n        filter(([_, { is_public }]) => !is_public),\n        map(([list]) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this.unsubWith('c-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d),\n                        ),\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d),\n                        ),\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n                binding = mod.binding('presence');\n                this.subscription(\n                    `c-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handlePresenceChange(list, space, d),\n                        ),\n                );\n                this.subscription(`c-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        }),\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning && this._last_action === 'down') return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules,\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.',\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`,\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            },\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[],\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100,\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        if (space.bookable) this._statuses[space.id] = status || 'free';\n        else delete this._statuses[space.id];\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100,\n        );\n    }\n\n    public handlePresenceChange(\n        spaces: Space[],\n        space: Space,\n        presence: boolean,\n    ) {\n        this._presence[space.id] = presence;\n        this.timeout('update_icons', () => this._updateIcons(spaces), 100);\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            if (!this._statuses[space.id]) continue;\n            const status = this._statuses[space.id];\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id] || 'not-bookable',\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private _updateIcons(spaces: Space[]) {\n        if (!this._settings.get('app.show_presence_indicators')) return;\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                content: ExploreIconComponent,\n                data: {\n                    icon: {\n                        class: 'material-symbols-rounded',\n                        content: 'sensor_occupied',\n                    },\n                    color: this._presence[space.id] ? 'var(--su)' : 'var(--bc)',\n                    text_color: this._presence[space.id]\n                        ? 'var(--suc)'\n                        : 'var(--b1)',\n                },\n                z_index: 98,\n            } as ViewerFeature);\n        }\n        this._state.setFeatures('spaces-presence', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300,\n                        );\n                        this._last_action = 'down';\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this.bookSpace(space);\n                        this._last_action = 'up';\n                    },\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50,\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    is_public: boolean;\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        is_public: false,\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, initialised]) => initialised),\n        switchMap(([level]) =>\n            querySystems({\n                zone_id: level?.id || this._org.organisation.id,\n                limit: 50,\n            }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[])),\n            ),\n        ),\n        shareReplay(1),\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || ''),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key) ||\n                    (key === 'zones-canvas' &&\n                        options.disable?.includes('zones'))\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        }),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        }),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        }),\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        }),\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id,\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles',\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: Partial<MapOptions>) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            is_public: false,\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n\n    public has(\n        type: 'style' | 'feature' | 'action' | 'label',\n        id: string,\n        exclude: string[] = [],\n    ): boolean {\n        if (type === 'style') {\n            const styles_map = this._styles.getValue();\n            for (const group in styles_map) {\n                if (exclude.includes(group)) continue;\n                const styles = styles_map[group];\n                if (id in styles || `#${id}` in styles) return true;\n            }\n        } else if (type === 'feature') {\n            const feature_map = this._features.getValue();\n            for (const group in feature_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of feature_map[group]) {\n                    if (feature.location === id) return true;\n                }\n            }\n        } else if (type === 'action') {\n            const actions_map = this._actions.getValue();\n            for (const group in actions_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of actions_map[group]) {\n                    if (feature.id === id) return true;\n                }\n            }\n        } else if (type === 'label') {\n            const labels_map = this._labels.getValue();\n            for (const group in labels_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of labels_map[group]) {\n                    if (feature.location === id) return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`,\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`,\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ]),\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l)),\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        }),\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise(),\n            ),\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                  ? 'free'\n                  : filled < 0.75\n                    ? 'pending'\n                    : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                if (\n                    this._state.has('style', zone_id, ['zones', 'zones-styles'])\n                ) {\n                    features.push({\n                        location: zone_id,\n                        content: ExploreIconComponent,\n                        data: {\n                            icon: { content: 'pin_drop' },\n                        },\n                        full_size: true,\n                        z_index: 98,\n                    } as ViewerFeature);\n                } else {\n                    style_map[`#${zone_id}`] = {\n                        fill: colour,\n                        opacity: 0.6,\n                    };\n                }\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        },\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n    ExploreParkingInfoComponent,\n    ExploreIconComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base space-x-2 p-2\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                decrease\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-error text-error rounded h-10 w-10\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div\n                value\n                class=\"relative p-1 flex items-center justify-center w-16 h-10 rounded border border-base-300\"\n            >\n                <span *ngIf=\"!focused\">\n                    {{ (render_fn ? render_fn(value) : value) || '0' }}\n                </span>\n                <input\n                    type=\"text\"\n                    class=\"absolute inset-0 opacity-0 focus:opacity-100 p-2\"\n                    [(ngModel)]=\"value\"\n                    (focus)=\"focused = true\"\n                    (blur)=\"setValue(+value); focused = false\"\n                    limitInput\n                />\n            </div>\n            <button\n                increase\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-success text-success rounded h-10 w-10\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 999;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n    public focused = false;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        if (new_value < this.min) new_value = this.min;\n        if (new_value > this.max) new_value = this.max;\n        if ((new_value / this.step) % 1 !== 0) {\n            new_value =\n                Math.round(new_value * (1 / this.step)) / (1 / this.step);\n        }\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0]?.id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34]?.id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day?.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[14%] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { getTimezoneOffsetString } from '@placeos/common';\nimport { DatePipe } from '@angular/common';\n\nexport enum TimezoneDiffRange {\n    Both,\n    Start,\n    End,\n}\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <div\n                class=\"flex flex-col px-4 py-2 flex-1 truncate w-1/2 text-left leading-tight\"\n            >\n                <div class=\"font-normal text-base\">\n                    @if (date) {\n                        {{ date | date: date_format }}\n                    } @else {\n                        <span class=\"opacity-30\">No Date Selected</span>\n                    }\n                </div>\n                <div class=\"text-xs opacity-30 truncate\" *ngIf=\"timezone && tz\">\n                    <span *ngIf=\"range !== 2\">{{ start_of_day }}</span>\n                    <span *ngIf=\"range === 0\"> - </span>\n                    <span *ngIf=\"range !== 1\">{{ end_of_day }}</span>\n                </div>\n            </div>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    @Input() public use_24hr = false;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    @Input() public timezone: string = '';\n    @Input() public range: TimezoneDiffRange = TimezoneDiffRange.Both;\n    /** Currently selected date */\n    public date: number;\n\n    public readonly now = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get date_format() {\n        return this.short ? 'MMM d, yyyy' : 'MMMM d, yyyy';\n    }\n\n    public get time_format() {\n        return this.use_24hr ? 'HH : mm' : 'h : mm a';\n    }\n\n    private _date_pipe = new DatePipe('en');\n\n    public get start_of_day() {\n        const start = startOfDay(this.date).valueOf();\n        const format = `MMM d, ${this.time_format}${this.range === 1 ? ' (z)' : ''}`;\n        return this._date_pipe.transform(start, format, this.tz);\n    }\n\n    public get end_of_day() {\n        const end = endOfDay(this.date).valueOf();\n        const format = `MMM d, ${this.time_format}${this.range === 1 ? ' (z)' : ''}`;\n        return this._date_pipe.transform(end, format, this.tz);\n    }\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    private _local_tz = getTimezoneOffsetString(\n        Intl.DateTimeFormat().resolvedOptions().timeZone,\n    );\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        const tz_offset = getTimezoneOffsetString(tz);\n        return tz_offset === this._local_tz ? '' : tz_offset;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    isAfter,\n    isBefore,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: `date-range-calendar`,\n    template: `\n        <div class=\"flex items-center justify-between\">\n            <div month class=\"font-medium px-2\">\n                {{ month | date: 'MMMM yyyy' }}\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button icon matRipple (click)=\"previousMonth()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextMonth()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            class=\"grid grid-cols-7 grid-rows-7 gap-1 w-[17.25rem] h-[17.25rem]\"\n        >\n            <div\n                class=\"col-span-full grid grid-cols-7 border-b border-base-200\"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60\"\n                >\n                    {{ weekday | date: 'EEE' }}\n                </div>\n            </div>\n            <button\n                *ngFor=\"let day of month_days; trackBy: trackByFn\"\n                class=\"relative h-9 w-9 hover:bg-base-200 rounded-full\"\n                [class.text-secondary-content]=\"day.is_start || day.is_end\"\n                [disabled]=\"day.disabled\"\n                (click)=\"selectDate(day.id)\"\n                (mouseenter)=\"setHoveredDate(day.id)\"\n            >\n                <div\n                    *ngIf=\"day.is_selected && !day.is_start && !day.is_end\"\n                    class=\"absolute inset-y-0 -inset-x-0.5 border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start && end_after_start\"\n                    class=\"absolute inset-y-0 -right-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_end && end_after_start\"\n                    class=\"absolute inset-y-0 -left-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start || day.is_end\"\n                    class=\"absolute inset-0 flex items-center justify-center bg-secondary rounded-full z-10\"\n                ></div>\n                <div\n                    matRipple\n                    class=\"absolute inset-0 flex items-center justify-center rounded-full z-20\"\n                    [class.opacity-30]=\"!day.is_month\"\n                >\n                    {{ day.id | date: 'd' }}\n                </div>\n                <div\n                    *ngIf=\"day.is_today\"\n                    class=\"absolute -inset-[3px] flex items-center justify-center border border-secondary rounded-full z-10\"\n                ></div>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DateRangeCalendarComponent {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public offset_weekday: number = 0;\n    /** Start date of the selected range */\n    @Input() public start: number;\n    /** End date of the selected range */\n    @Input() public end: number;\n    /** Month to display the calendar for */\n    @Input() public month = startOfDay(Date.now()).valueOf();\n    /** Emitter for when the start date changes */\n    @Output() public startChange = new EventEmitter<number>();\n    /** Emitter for when the end date changes */\n    @Output() public endChange = new EventEmitter<number>();\n\n    public hovered_date = null;\n\n    public weekdays = [];\n    public month_days = [];\n\n    public get end_after_start() {\n        return (\n            this.end &&\n            this.end > this.start &&\n            !isSameDay(this.end, this.start)\n        );\n    }\n\n    public ngOnInit() {\n        this._setWeekdays();\n        this._setMonthDays();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this._setWeekdays();\n            this._setMonthDays();\n        }\n        if (changes.start) {\n            this._setMonthDays();\n            this.month = this.start || Date.now();\n        }\n        if (changes.month) {\n            this._setMonthDays();\n        }\n        if (changes.end) this._setMonthDays();\n    }\n\n    public selectDate(date: number) {\n        if (!this.start || date < this.start) {\n            this.start = date;\n            this.startChange.emit(date);\n        } else {\n            this.end = date;\n            this.endChange.emit(date);\n        }\n        this._setMonthDays();\n    }\n\n    public setHoveredDate(date: number) {\n        if (!this.start) return;\n        this.end = date;\n        this._setMonthDays();\n    }\n\n    public trackByFn(index: number, day: any) {\n        return day.id;\n    }\n\n    public nextMonth() {\n        this.month = addMonths(this.month, 1).valueOf();\n        this._setMonthDays();\n    }\n\n    public previousMonth() {\n        this.month = addMonths(this.month, -1).valueOf();\n        this._setMonthDays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                disabled:\n                    (this.from_date && isBefore(date, this.from_date)) ||\n                    (this.to_date && isAfter(date, this.to_date)),\n                is_today: isSameDay(date, Date.now()),\n                is_start: isSameDay(date, this.start),\n                is_end: isSameDay(date, this.end),\n                is_month: isSameMonth(date, this.month),\n                is_selected:\n                    this.end &&\n                    date >= startOfDay(this.start).valueOf() &&\n                    date <= endOfDay(this.end).valueOf(),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { Component, ContentChild, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'date-range-field',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center rounded px-4 py-2 border border-neutral hover:border-base-content focus:outline-2 outline-base-content space-x-2 min-w-max\"\n            type=\"button\"\n            role=\"date-picker\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n        >\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ start_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <div>&ndash;</div>\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ end_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <app-icon class=\"text-2xl\">today</app-icon>\n        </button>\n        <div class=\"hidden\">\n            <ng-content select=\"input[startDate]\"></ng-content>\n            <ng-content select=\"input[endDate]\"></ng-content>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18.25rem] rounded bg-base-100 px-2 py-4\">\n                <date-range-calendar\n                    [month]=\"start_date?.control?.value || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (startChange)=\"setStartDate($event)\"\n                    (endChange)=\"setEndDate($event)\"\n                ></date-range-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DateRangeFieldComponent extends AsyncHandler {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean = false;\n    @Input() public short = false;\n\n    public readonly now = Date.now();\n\n    @ContentChild('startDate', { read: NgControl })\n    public start_date?: NgControl;\n    @ContentChild('endDate', { read: NgControl }) public end_date?: NgControl;\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    public setStartDate(date: number) {\n        if (!this.start_date) return;\n        this.start_date.control.setValue(date);\n    }\n\n    public setEndDate(date: number) {\n        this._tooltip?.close();\n        if (!this.end_date) return;\n        this.end_date.control.setValue(date);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { getTimezoneOffsetString } from '@placeos/common';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full px-2\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <div\n                class=\"flex flex-col leading-tight px-2 text-left flex-1 w-1/2\"\n            >\n                <div class=\"truncate\">\n                    {{\n                        selected?.date\n                            ? (selected?.date\n                                  | date\n                                      : (selected.id >= 24 * 60\n                                            ? 'mediumDate'\n                                            : time_format)) + ' ('\n                            : ''\n                    }}{{ selected?.name }}{{ selected?.date ? ')' : '' }}\n                </div>\n                <div class=\"text-xs opacity-30 truncate\" *ngIf=\"timezone && tz\">\n                    {{ selected?.date | date: time_format + ' (z)' : tz }}\n                </div>\n            </div>\n            <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\" class=\"max-h-[15rem] min-w-[18rem] \">\n            <button\n                mat-menu-item\n                class=\"text-left\"\n                *ngFor=\"let option of duration_options\"\n                (click)=\"setValue(option.id)\"\n            >\n                <div class=\" flex items-center justify-between\">\n                    <ng-container *ngIf=\"!force\">\n                        <div class=\"flex flex-col leading-tight\">\n                            <div class=\"truncate\">\n                                {{\n                                    option.date\n                                        ? (option.date\n                                              | date\n                                                  : (option.id >= 24 * 60\n                                                        ? 'mediumDate'\n                                                        : time_format)) + ' ('\n                                        : ''\n                                }}{{ option.name }}{{ option.date ? ')' : '' }}\n                            </div>\n                            <div\n                                class=\"text-xs opacity-30 truncate\"\n                                *ngIf=\"timezone && tz\"\n                            >\n                                {{\n                                    option.date\n                                        | date: time_format + ' (z)' : tz\n                                }}\n                            </div>\n                        </div>\n                    </ng-container>\n                    <div>{{ force }}</div>\n                    <app-icon\n                        *ngIf=\"selected?.id === option.id\"\n                        class=\"text-2xl ml-2\"\n                    >\n                        done\n                    </app-icon>\n                </div>\n            </button>\n        </mat-menu>\n        <mat-error><ng-content></ng-content></mat-error>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n    /** Force the display duration value */\n    @Input() public force: string;\n    /** Whether to use 24 hour time when formatting displayed time */\n    @Input() public use_24hr = false;\n    /** Display extra information for displayed times for timezone */\n    @Input() public timezone: string = '';\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public get time_format() {\n        return this.use_24hr ? 'HH : mm' : 'h : mm a';\n    }\n\n    public get selected() {\n        return this.duration_options.find((_) => _.id === this.duration);\n    }\n\n    private _local_tz = getTimezoneOffsetString(\n        Intl.DateTimeFormat().resolvedOptions().timeZone,\n    );\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        const tz_offset = getTimezoneOffsetString(tz);\n        return tz_offset === this._local_tz ? '' : tz_offset;\n    }\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step,\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step,\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                          ? `${formatDuration({\n                                days: Math.floor(time / (24 * 60)),\n                            })}`\n                          : `${formatDuration({\n                                hours: Math.floor(time / 60),\n                                minutes: time % 60,\n                            })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration,\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\nimport { DateRangeFieldComponent } from './date-range-field.component';\nimport { DateRangeCalendarComponent } from './date-range-calendar.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DateRangeFieldComponent,\n    DateRangeCalendarComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ImageViewerComponent } from 'libs/components/src/lib/image-viewer.component';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    #file_input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n    @ViewChild('file_input') private _file_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        this.timeout(\n            'init_view_space',\n            () => {\n                const box = this._list_el.nativeElement.getBoundingClientRect();\n                this.view_space = Math.floor(box.width / 152);\n            },\n            100\n        );\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {\n        this._dialog.open(ImageViewerComponent, { data: url });\n    }\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                    this._file_input.nativeElement.value = '';\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: string[]) {\n        this.list = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new StaffUser();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id,\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, uploadFile } from '@placeos/common';\nimport Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container class=\"absolute inset-0\">\n            <div #editor class=\"h-full\"></div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                position: relative;\n                min-height: 8rem;\n                margin-bottom: 4rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n    @Input() public images_allowed = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: Quill;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string,\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string,\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.images_allowed) {\n            this.timeout('init', () => this._initialiseEditor());\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.timeout('init', () => this._initialiseEditor());\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        this.timeout('write', () => {\n            if (this._editor) {\n                const delta = this._editor.clipboard.convert({ html: value });\n                this._editor.setContents(delta, 'silent');\n            } else {\n                this.timeout('write', () => this.writeValue(value));\n            }\n        });\n    }\n\n    private _initialiseEditor() {\n        if (\n            !this._editor_el?.nativeElement ||\n            !this._container_el?.nativeElement\n        ) {\n            return this.timeout('init', () => this._initialiseEditor());\n        }\n        const toolbarOptions = [\n            [{ font: [] }],\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\n            ['bold', 'italic', 'underline'], // toggled buttons\n\n            [{ list: 'ordered' }, { list: 'bullet' }, { list: 'check' }],\n            [{ align: [] }],\n        ];\n        if (this.images_allowed) {\n            toolbarOptions.push(['image', 'link']);\n        }\n        if (this._editor) {\n            this.unsub('changes');\n            this._editor_el.nativeElement.innerHTML = '';\n            delete this._editor;\n        }\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: {\n                    container: toolbarOptions,\n                    handlers: {\n                        image: () => this._embedImage(),\n                        link: () => this._embedAttachment(),\n                    },\n                },\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn),\n        );\n    }\n\n    private _embedImage() {\n        if (!this._editor) return;\n        const range = this._editor.getSelection();\n        if (!range) return;\n        const { index } = range;\n        // Create a File input element\n        var file_input = document.createElement('input');\n        file_input.setAttribute('type', 'file');\n        file_input.setAttribute('accept', 'image/*');\n        file_input.click();\n\n        file_input.onchange = () => {\n            var file = file_input.files[0];\n            uploadFile(file, true).subscribe(({ link, progress }) => {\n                if (!link || progress !== 100) return;\n                this._editor.insertEmbed(index, 'image', link);\n            });\n        };\n    }\n\n    private _embedAttachment() {\n        if (!this._editor) return;\n        const range = this._editor.getSelection();\n        if (!range) return;\n        const { index } = range;\n        // Create a File input element\n        var file_input = document.createElement('input');\n        file_input.setAttribute('type', 'file');\n        file_input.click();\n\n        file_input.onchange = () => {\n            var file = file_input.files[0];\n            uploadFile(file, true).subscribe(({ link, progress }) => {\n                if (!link || progress !== 100) return;\n                this._editor.insertText(range.index, file.name, 'link', link);\n                this._editor.setSelection(range.index + file.name.length);\n            });\n        };\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\nexport interface SupportRequestType {\n    name: string;\n    email: string;\n}\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"support_request_types?.length\"\n                >\n                    <label i18n>Issue Type</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Issue Type\"\n                            formControlName=\"issue_type\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of support_request_types\"\n                                [value]=\"type?.name || type\"\n                            >\n                                {{ type.name || type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n>\n                        Issue Description<span>*</span>\n                    </label>\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        issue_type: new FormControl(''),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get support_request_types(): SupportRequestType[] {\n        return this._settings.get('app.support_issue_types') || [];\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.',\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images, issue_type } =\n                this.form.value;\n            const support_email =\n                this.support_request_types.find(\n                    (type) => type.name === issue_type,\n                )?.email || this.support_email;\n            await mod.execute('send_mail', [\n                support_email,\n                `Support Ticket from Workplace Application${\n                    issue_type ? ' - ' + issue_type : ''\n                }`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    '',\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>',\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport {\n    AsyncHandler,\n    getTimezoneOffsetString,\n    Identity,\n} from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full px-2\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <div\n                class=\"flex flex-col leading-tight px-2 text-left flex-1 w-1/2\"\n            >\n                <div class=\"truncate\">\n                    {{ active_time | date: time_format }}\n                </div>\n                <div class=\"text-xs opacity-30 truncate\" *ngIf=\"timezone && tz\">\n                    {{ active_time | date: time_format + ' (z)' : tz }}\n                </div>\n            </div>\n            <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\" class=\"max-h-[15rem] min-w-[18rem]\">\n            <button\n                mat-menu-item\n                *ngIf=\"force_time\"\n                [value]=\"force_time\"\n                class=\"text-left\"\n                (click)=\"setValue(force_time)\"\n            >\n                <div class=\" flex items-center justify-between\">\n                    <div class=\"flex flex-col leading-tight\">\n                        <div class=\"\">\n                            {{ force_time | date: time_format }}\n                        </div>\n                        <div class=\"text-xs opacity-30\" *ngIf=\"timezone && tz\">\n                            {{ force_time | date: time_format + ' (z)' : tz }}\n                        </div>\n                    </div>\n                    <app-icon\n                        *ngIf=\"active_time === force_time\"\n                        class=\"text-2xl ml-2\"\n                    >\n                        done\n                    </app-icon>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngFor=\"let option of time_options\"\n                [value]=\"option.id\"\n                class=\"text-left\"\n                (click)=\"setValue(option.id)\"\n            >\n                <div class=\" flex items-center justify-between\">\n                    <div class=\"flex flex-col leading-tight\">\n                        <div class=\"\">\n                            {{ option.date | date: time_format }}\n                            {{ extra_info_fn(option.date) }}\n                        </div>\n                        <div class=\"text-xs opacity-30\" *ngIf=\"timezone && tz\">\n                            {{ option.date | date: time_format + ' (z)' : tz }}\n                        </div>\n                    </div>\n                    <app-icon\n                        *ngIf=\"active_time === option.date\"\n                        class=\"text-2xl ml-2\"\n                    >\n                        done\n                    </app-icon>\n                </div>\n            </button>\n        </mat-menu>\n        <mat-error><ng-content></ng-content></mat-error>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    @Input() public timezone: string = '';\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n\n    public active_time: number = Date.now();\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public get time_format() {\n        return this.use_24hr ? 'HH : mm' : 'h : mm a';\n    }\n\n    private _local_tz = getTimezoneOffsetString(\n        Intl.DateTimeFormat().resolvedOptions().timeZone,\n    );\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        const tz_offset = getTimezoneOffsetString(tz);\n        return tz_offset === this._local_tz ? '' : tz_offset;\n    }\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step,\n        );\n        this.timeout('hide', () => (this.show_select = false));\n        this.active_time =\n            this._time_options.find((_) => _.id === format(this.date, 'HH:mm'))\n                ?.date || this.active_time;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step || changes.from) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step,\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm'),\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`),\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] }),\n            );\n            this._onChange(date.valueOf());\n        }\n\n        const time = this.force_time || this.time;\n        const date = startOfMinute(\n            set(this.date, { hours: +time[0], minutes: +time[1] }),\n        );\n        this.active_time =\n            this._time_options.find((_) => _.id === time)?.date || date;\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step,\n        );\n        const time = this.force_time || this.time;\n        this.active_time =\n            this._time_options.find((_) => _.id === time)?.date || date;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step,\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    }),\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15,\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step as any });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst ACCEPTED_FILE_TYPES = ['text/csv', 'text/plain'];\nconst DENIED_FILE_TYPES = [\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input() public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file: File = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                if (\n                    !ACCEPTED_FILE_TYPES.includes(file.type) ||\n                    DENIED_FILE_TYPES.includes(file.type)\n                ) {\n                    notifyError('Only CSV files are supported');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n            <input\n                #input\n                matInput\n                keyboard\n                name=\"user-search\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event || '')\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"placeholder || 'Search for user...'\"\n                [matAutocomplete]=\"auto\"\n                (keyup.enter)=\"\n                    validate && validate(search_str) ? setValue(search_str) : ''\n                \"\n                (blur)=\"resetSearchString()\"\n                (focus)=\"cancelReset()\"\n            />\n            <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n            <mat-spinner *ngIf=\"loading\" matSuffix diameter=\"16\"></mat-spinner>\n        </mat-form-field>\n        <mat-autocomplete\n            #auto=\"matAutocomplete\"\n            (optionSelected)=\"setValue($event.option.value)\"\n        >\n            <mat-option\n                *ngFor=\"let option of user_list\"\n                (click)=\"setValue(option); blurInput()\"\n            >\n                <div class=\"leading-tight\">{{ option.name }}</div>\n                <div class=\"text-xs opacity-60\">\n                    {{ option.email }}\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"search_str && validate && validate(search_str)\"\n                class=\"relative pointer-events-none\"\n            >\n                <div\n                    class=\"absolute inset-0 px-4 pointer-events-auto\"\n                    (mousedown)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (touchstart)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (click)=\"\n                        setValue(search_str);\n                        $event.stopPropagation();\n                        $event.preventDefault()\n                    \"\n                >\n                    <div class=\"pointer-events-none\" i18n>\n                        Add external attendee \"{{ search_str }}\"\n                    </div>\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"!user_list?.length && (search_str || error)\"\n                [disabled]=\"!empty_fn\"\n                (click)=\"empty_fn()\"\n            >\n                {{ search_str ? 'No users found.' : '' }} {{ error }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = [\n    'desk',\n    'parking',\n    'asset-request',\n    'visitor',\n    'locker',\n    'group-event',\n];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(300).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        attendees: [],\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        permission: type === 'group-event' ? 'OPEN' : 'PRIVATE',\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            }\n            const user = {\n                id: _.body.id,\n                name: _.body.name,\n                email: _.body.email,\n                checked_in: false,\n            };\n            event.attendees.push(user);\n            return user;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/guests/:email/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            const guest = event.attendees.find(\n                (_) => _.email === decodeURIComponent(email)\n            );\n            if (!guest) {\n                throw {\n                    status: 404,\n                    message: `Unable to find guest with email ${email}`,\n                };\n            }\n            guest.checked_in = _.query_params.state === 'true';\n            return guest;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee/:email',\n        metadata: {},\n        method: 'DELETE',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            event.attendees = event.attendees.filter(\n                (_) => _.email !== decodeURIComponent(email)\n            );\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { addMinutes, getUnixTime, setHours, startOfDay } from 'date-fns';\n\nlet EVENT_TIME = setHours(startOfDay(Date.now()), 7);\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return getUnixTime(next);\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n          ? event_status[0]\n          : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1),\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                      ? 'declined'\n                      : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    }),\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Demo User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { getUnixTime, subMinutes } from 'date-fns';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: getUnixTime(Date.now()),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: getUnixTime(\n                        subMinutes(Date.now(), predictableRandomInt(60))\n                    ),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: getUnixTime(\n                        subMinutes(Date.now(), predictableRandomInt(60))\n                    ),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => [],\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => ({}),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** Identifier of building in relation to mapping */\n    public readonly map_id: string;\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.map_id = raw_data.map_id || '';\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceMetadata,\n    PlaceZone,\n    authority,\n    isFixedDevice,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n} from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { AsyncHandler, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings,\n        ),\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay(1),\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id || this.buildings[0]?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        if (!this._service.get('dont_load_metadata')) {\n            this.loadBuildingData(bld).then(() =>\n                this._updateSettingOverrides(),\n            );\n        }\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id,\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(\n        private _service: SettingsService,\n        private _router: Router,\n    ) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(\n                filter(([_, bld]) => !!bld),\n                debounceTime(300),\n            )\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id,\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    /**\n     * Get list of levels for the given region\n     * @param region Region to list levels for\n     */\n    public levelsForRegion(region: Region = this.region): BuildingLevel[] {\n        const bld_list = this.buildingsForRegion(region);\n        return this.levels.filter(\n            (lvl) =>\n                lvl.parent_id &&\n                bld_list.find((bld) => bld.id === lvl.parent_id),\n        );\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || ''),\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || ''),\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id,\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id,\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone,\n                ) || org_list[0];\n\n            const load_metadata = !this._service.get('dont_load_metadata');\n            const bindings: Record<string, any> = (\n                await (\n                    load_metadata\n                        ? showMetadata(org.id, 'bindings')\n                        : of({ details: {} })\n                ).toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([])),\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const load_metadata = !this._service.get('dont_load_metadata');\n        const settings_request = load_metadata\n            ? showMetadata(region.id, this.app_key)\n            : of(new PlaceMetadata());\n        const bindings_request = load_metadata\n            ? showMetadata(region.id, 'bindings')\n            : of(new PlaceMetadata());\n        const [settings, bindings, buildings]: any = await Promise.all([\n            settings_request.pipe(map((_) => _?.details)).toPromise(),\n            bindings_request.pipe(map((_) => _?.details)).toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id'),\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id,\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        catchError(() => of({ data: {} as any })),\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None,\n                                    ) || { settings_string: '' },\n                                );\n                            } catch {\n                                return {};\n                            }\n                        }),\n                    )\n                    .toPromise(),\n            ]);\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        let level_list = await queryZones({\n            tags: 'level',\n            authority_id: authority().id,\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        level_list = level_list.filter((_) => _.parent_id);\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || ''),\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const load_metadata = !this._service.get('dont_load_metadata');\n        if (load_metadata) {\n            const app_settings = (\n                await showMetadata(\n                    this._organisation?.id,\n                    this.app_key,\n                ).toPromise()\n            )?.details;\n            const global_settings = (\n                await showMetadata(\n                    this._organisation?.id,\n                    'settings',\n                ).toPromise()\n            )?.details;\n            this._settings = [global_settings, app_settings];\n        }\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2),\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2),\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id),\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id,\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        setTimeout(\n            () =>\n                (this._service.overrides = [\n                    this.buildingSettings(this.building?.id),\n                    this.regionSettings(this.region?.id),\n                    ...this._settings,\n                ]),\n            300,\n        );\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Address of the region */\n    public readonly address: string;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n        this.address = _data.address || '';\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                    [hide_levels]=\"view !== 'list'\"\n                    [viewing_map]=\"view === 'map'\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:flex-col sm:max-w-[20rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div filter-item zone *ngIf=\"location\">\n                {{ location }}\n            </div>\n            <div filter-item date>\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids),\n            ),\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport {\n    flatten,\n    MapsPeopleService,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { addDays, endOfDay, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                            [timezone]=\"timezone\"\n                            [range]=\"multiday ? 1 : 0\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                            [timezone]=\"timezone\"\n                            [range]=\"2\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section\n                favs\n                class=\"space-y-2 pb-4\"\n                *ngIf=\"!viewing_map || !(using_mapspeople | async)\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"\n                    (features | async)?.length &&\n                    (!viewing_map || !(using_mapspeople | async))\n                \"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    @Input() public hide_levels: boolean;\n    @Input() public viewing_map: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public readonly regions = this._org.region_list;\n\n    public readonly using_mapspeople = this._mapspeople.available$;\n\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features)))),\n        ),\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180,\n            ),\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _mapspeople: MapsPeopleService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setRegion(region: Region) {\n        this._org.region = region;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            })),\n        ),\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            })),\n        ),\n    );\n\n    public readonly styles = combineLatest([\n        this._event_form.spaces,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([spaces, free_spaces]) =>\n            spaces.reduce((styles, space) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_spaces.find((_) => _.id === space.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${space.map_id || space.id}`] = {\n                    fill:\n                        colours[`space-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {}),\n        ),\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this._event_form.options.subscribe(({ zone_ids }) => {\n                const level = this._org.levelWithID(zone_ids);\n                if (level) this.level = level;\n            }),\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_ids: [level?.id] });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\nconst ATTEMPT_COUNT: Record<string, number> = {};\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\nsetInterval(() => {\n    for (const id in ATTEMPT_COUNT) {\n        ATTEMPT_COUNT[id] = ATTEMPT_COUNT[id] - 1;\n        if (ATTEMPT_COUNT[id] <= 0) {\n            delete ATTEMPT_COUNT[id];\n        }\n    }\n}, 10 * 1000);\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (ATTEMPT_COUNT[space_id]) return EMPTY_SPACE;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({\n                in: space_id,\n                zone_id: this._org?.organisation.id,\n            }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string): Observable<Space[]> {\n    if (!id) return of([]);\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({\n        q,\n        fields: [\n            'id',\n            'name',\n            'email',\n            'username',\n            'organisation',\n            'department',\n        ].join(','),\n    });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n              ? 'declined'\n              : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    blocks: WorktimeBlock[];\n}\n\nexport interface WorktimeBlock {\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public work_preference(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        if (this.work_overrides[date_string]?.blocks?.length) {\n            for (const block of this.work_overrides[date_string].blocks) {\n                const start = block.start_time;\n                const end = block.end_time;\n                if (\n                    start <= date.getHours() + date.getMinutes() / 60 &&\n                    end >= date.getHours() + date.getMinutes() / 60\n                ) {\n                    return block;\n                }\n            }\n        }\n        for (const pref of this.work_preferences) {\n            if (pref.day_of_week === day && pref.blocks?.length) {\n                for (const block of pref.blocks) {\n                    if (\n                        block.start_time <=\n                            date.getHours() + date.getMinutes() / 60 &&\n                        block.end_time >=\n                            date.getHours() + date.getMinutes() / 60\n                    ) {\n                        return block;\n                    }\n                }\n            }\n        }\n    }\n\n    public location_time(datetime: number = Date.now()) {\n        return this.work_preference(datetime)?.location || 'wfo';\n    }\n\n    public get location_name() {\n        return this.location_name_time();\n    }\n\n    public location_name_time(datetime: number = Date.now()) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public outsideHours(datetime: number = Date.now()) {\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        return location.includes('w') && !in_hours;\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number = Date.now()) {\n        const block = this.work_preference(datetime);\n        return !!block;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, notifyError, reloadUserData } from '@placeos/common';\nimport { addDays, set, startOfMinute, startOfWeek } from 'date-fns';\nimport { WorktimeBlock, WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <header class=\"relative flex items-center justify-between\">\n            <h2 class=\"font-medium text-xl\">Working Location Settings</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"bg-base-200\"\n                *ngIf=\"!loading\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"relative flex flex-col rounded w-[40rem] max-w-full p-4 space-y-2 max-h-[65vh] overflow-auto\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <h3>Working Days</h3>\n            <div\n                class=\"flex items-center justify-between w-full pb-4 space-x-2\"\n            >\n                <mat-checkbox\n                    *ngFor=\"let day of days\"\n                    [(ngModel)]=\"weekdays_enabled[day.getDay()]\"\n                    (ngModelChange)=\"$event && initialiseDay(day.getDay())\"\n                >\n                    {{ day | date: 'EEE' }}\n                </mat-checkbox>\n            </div>\n            <h3>Work Hours</h3>\n            <ng-container *ngIf=\"has_working_days; else empty_state\">\n                <ng-container *ngFor=\"let day of days\">\n                    <ng-container *ngIf=\"weekdays_enabled[day.getDay()]\">\n                        <div\n                            class=\"flex w-full space-x-2 hover:bg-base-200 rounded px-2 pt-1\"\n                        >\n                            <label class=\"w-12 min-w-0 px-2 pt-3\">\n                                {{ day | date: 'EEE' }}\n                            </label>\n                            <div class=\"flex-1 w-1/2\">\n                                <div\n                                    class=\"flex items-center space-x-2\"\n                                    *ngFor=\"\n                                        let block of settings[day.getDay()]\n                                            .blocks;\n                                        let i = index\n                                    \"\n                                >\n                                    <a-time-field\n                                        [ngModel]=\"timeFrom(block.start_time)\"\n                                        (ngModelChange)=\"\n                                            setStartTime(\n                                                block,\n                                                day.getDay(),\n                                                $event\n                                            )\n                                        \"\n                                        [from]=\"\n                                            timeFrom(\n                                                (i > 0\n                                                    ? settings[day.getDay()]\n                                                          .blocks[i - 1]\n                                                          ?.end_time\n                                                    : 0) || 0\n                                            )\n                                        \"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    ></a-time-field>\n                                    <a-time-field\n                                        [ngModel]=\"timeFrom(block.end_time)\"\n                                        (ngModelChange)=\"\n                                            setEndTime(\n                                                block,\n                                                day.getDay(),\n                                                $event\n                                            )\n                                        \"\n                                        [from]=\"\n                                            timeFrom(block.start_time + 0.25)\n                                        \"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    ></a-time-field>\n                                    <mat-form-field\n                                        appearance=\"outline\"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    >\n                                        <mat-select\n                                            [(ngModel)]=\"block.location\"\n                                        >\n                                            <mat-option\n                                                *ngFor=\"let type of options\"\n                                                [value]=\"type.id\"\n                                            >\n                                                {{ type.name }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [disabled]=\"\n                                            settings[day.getDay()].blocks\n                                                .length > 2\n                                        \"\n                                        (click)=\"\n                                            addBlock(settings[day.getDay()], i)\n                                        \"\n                                    >\n                                        <app-icon>add</app-icon>\n                                    </button>\n                                    <button\n                                        icon\n                                        matRipple\n                                        class=\"text-error\"\n                                        [class.opacity-0]=\"i === 0\"\n                                        [class.pointer-events-none]=\"i === 0\"\n                                        (click)=\"\n                                            removeBlock(\n                                                settings[day.getDay()],\n                                                i\n                                            )\n                                        \"\n                                    >\n                                        <app-icon>delete</app-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n            <ng-template #empty_state>\n                <div\n                    class=\"flex flex-col items-center justify-center px-8 py-16 space-y-4\"\n                >\n                    <img src=\"assets/icons/no-results.svg\" class=\"m-auto\" />\n                    <p class=\"opacity-30\">\n                        No work days are currently set for this user\n                    </p>\n                </div>\n            </ng-template>\n        </main>\n        <footer\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">\n                    Saving changes to work location settings...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Office' },\n        { id: 'wfh', name: 'Home' },\n        { id: 'aol', name: 'Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays_enabled: Record<number, boolean> = {};\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n\n    public get has_working_days() {\n        return Object.keys(this.weekdays_enabled).some(\n            (day) => this.weekdays_enabled[day],\n        );\n    }\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).getTime();\n    }\n\n    constructor(private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = [\n            ...(user.work_preferences || []).map((_) => ({\n                ..._,\n                blocks: [...(_?.blocks || [])],\n            })),\n        ];\n        for (const day of this.settings) {\n            if (day.blocks.length)\n                this.weekdays_enabled[day.day_of_week] = true;\n        }\n    }\n\n    public timeFrom(hours: number) {\n        return startOfMinute(\n            set(addDays(new Date(), 1), {\n                hours: Math.floor(hours),\n                minutes: (hours * 60) % 60,\n            }),\n        ).getTime();\n    }\n\n    public fromTime(time: number) {\n        const date = new Date(time);\n        return date.getHours() + date.getMinutes() / 60;\n    }\n\n    public initialiseDay(day: number) {\n        if (!this.settings[day])\n            this.settings[day] = { day_of_week: day as any, blocks: [] };\n        if (!this.settings[day].blocks) this.settings[day].blocks = [];\n        if (this.settings[day].blocks.length === 0) {\n            this.addBlock(this.settings[day], 0);\n        }\n    }\n\n    public addBlock(pref: WorktimePreference, index: number) {\n        pref.blocks.splice(index + 1, 0, {\n            start_time: 9,\n            end_time: 17,\n            location: 'wfo',\n        });\n        this.cleanupBlocks(pref);\n    }\n\n    public removeBlock(pref: WorktimePreference, index: number) {\n        if (pref.blocks.length <= 1) return;\n        pref.blocks.splice(index, 1);\n    }\n\n    public setEndTime(block: WorktimeBlock, day: number, time: number) {\n        setTimeout(() => {\n            block.end_time = this.fromTime(time);\n            this.cleanupBlocks(this.settings[day]);\n        }, 50);\n    }\n\n    public setStartTime(block: WorktimeBlock, day: number, time: number) {\n        setTimeout(() => {\n            block.start_time = this.fromTime(time);\n            this.cleanupBlocks(this.settings[day]);\n        }, 50);\n    }\n\n    public cleanupBlocks(pref: WorktimePreference) {\n        if (!pref?.blocks?.length) return;\n        for (let i = 0; i < pref.blocks.length; i++) {\n            const block = pref.blocks[i];\n            if (i > 0) {\n                if (block.start_time < pref.blocks[i - 1].end_time) {\n                    block.start_time = pref.blocks[i - 1].end_time;\n                }\n            }\n            if (block.end_time <= block.start_time) {\n                block.end_time = block.start_time + 1;\n            }\n        }\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const user = await showUser('current').toPromise();\n        const new_settings = new Array(7)\n            .fill(0)\n            .map((_, idx) => ({ day_of_week: idx, blocks: [] }));\n        for (const day of this.days) {\n            const day_of_week = day.getDay();\n            if (this.weekdays_enabled[day_of_week]) {\n                new_settings[day_of_week] = {\n                    day_of_week: day_of_week,\n                    blocks: this.settings[day_of_week].blocks,\n                };\n            }\n        }\n        console.log('Update user...');\n        await updateUser(user.id, {\n            ...user,\n            groups: user.groups.filter((_) => !_.startsWith('placeos_')),\n            work_preferences: new_settings,\n        } as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError('Unable to save user work preferences.');\n                throw e;\n            });\n        console.log('Updated user');\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            reloadUserData();\n            console.log('Close WFH Modal');\n            this._dialog_ref.close();\n        }\n    }\n}\n"],"x_google_ignoreList":[]}