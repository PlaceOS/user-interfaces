{"version":3,"file":"main.js","mappings":"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I,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKjK,EAAUgK,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAGhK,EAAUqK,GAAG,EAAErK,EAAUuK,GAAG,EAAEvK,EAAUsK,GAAG,GA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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","_r7","ctx_r6","date","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","duration","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","ctx_r3","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","ɵɵsanitizeUrl","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","_r6","user_r9","ɵɵi18n","MeetingFlowConfirmComponent_section_25_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r11","MeetingFlowConfirmComponent_section_26_ng_container_6_Template","_event_form","_sheet_ref","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_section_25_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_button_28_Template","all_day","spaces_1","date_fns_1","_toggleType","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","_objectSpread","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","_ref18","system_id","mod","execute","Booking","valueOf","locker_id","locker_name","extension_data","bookings","_ref20","_ref21","p","l","_ref22","_ref23","filters","_filters$shown_types","_filters$shown_types2","parse","interval","document","visibilityState","stopPolling","clearInterval","setAsDeleted","push","clear","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","AssetListFieldComponent_div_1_Template","toggleFav","active","activeChange","fav","AssetDetailsComponent","_images","changes","_this$item","_this$item$assets","ɵɵNgOnChangesFeature","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetStateService","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","MAT_DIALOG_DATA","setSelected","AssetSelectModalComponent_button_14_Template","isSelected","count","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","queryGroupAvailability","localeCompare","AssetCategory","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","identifier","other_data","purchase_order_id","purchase_price","end_of_life_date","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","purchaseOrder","order_number","invoice_number","purchase_date","depreciation_start_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","_i","_groups","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","order","updateAssetPurchaseOrder","queryAvailableAssets","_ref5","booking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","filtered","removeBooking","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","asset_type_id","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","purchase_order_number","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","products","showGroupFull","categories","purchase_orders","_loop2","updateAssetRequestsForResource","_x2","_x3","_x4","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","start","addMinutes","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","_c2","_r14","_r16","_booking","hide_map","ts","booking_start","booking_end","_this$booking9","_this$booking10","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","viewLocation","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_47_Template","BookingDetailsModalComponent_button_48_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_URLS","_confirmPost","_payments","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","restrictions","showMetadata","available_resources","merge","timer","getRawValue","zone_id","restriction","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$assets","_booking$extension_da","_value$user","_value$user2","_value$user2$id","_value","_value$user3","_value$user4","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","booked_by_email","saveBooking","user_id","department","approved","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","group_name","_asset$zone4","_asset$zone5","t1","_getNearbyResources","t2","t3","idx","organisation","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_ref11","_this5","_callee5","_this5$_settings$get","allowed_bookings","_ref13","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x5","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","rejected","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","event_id","checked_out_at","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","booker","emitEvent","disable","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","showBooking","response_type","approveBooking","rejectBooking","checkinBookingAttendee","GuestUser","queryResourceAvailability","ignore","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r2","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_5_0","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_5_Template","feat_r18","_r20","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","end_date","tmp_8_0","tmp_15_0","tmp_17_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_r8","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r29","ctx_r28","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r35","ctx_r34","onDone","ctx_r36","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","locker","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","available","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","_lockers","lockers_banks$","banks","locker_bank_id","locker_bank","LockersService","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_14_0","tmp_16_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r18","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","lockers$","bank_list","level_id","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","zone_ids","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","level_list","lvl","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_11_0","tmp_13_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","hidden","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","tags","unit_price","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","item_r15","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","CateringOrderItemComponent","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r25","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","_r37","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","helpers_1","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","setHours","stringToMinutes","trigger","transition","opacity","animate","str","_timer","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","formatRecurrence","pattern","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","json","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","start1","end1","start2","end2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_disable_logging","notify","message","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","notifyWarn","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","breakdown","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","_idleFor","time_ms","startListening","idleFor","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","nativeElement","authority","ElementRef","Renderer2","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","clipboard_1","paginator_1","table_1","portal_1","core_3","icon_component_1","interactive_map_component_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","debug_console_component_1","scrolling_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","useValue","NgIf","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","DebugConsoleComponent","NgForOf","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","row_r9","CustomTableComponent_ng_container_1_div_3_ng_template_2_ng_container_0_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r19","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","Observable","viewQuery","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","CustomTooltipData","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","show","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","RedirectComponent","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent","parts","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_ngOnChanges","ngOnChanges","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r17","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","_c22","EventDetailsModalComponent_div_72_div_3_Template","show_attendees","_this$event$system","_this$event2$ext","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_div_76_Template","event_link_modal_component_1","helpers_2","asset_utilities_1","_newForm","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","filterSpacesFromRules","booking_rules","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","availability_method","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","resetForm","_event$extension_data","_event$extension_data2","catering_charge_code","EventLinkModalComponent","_this4$event","_form$get","_form$get2","_event$extension_data3","_ref19","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","ical_uid","_form$getRawValue","recurrence","is_owner","_pattern","recurring","checkSelectedSpacesAreAvailable","calendar","old_system","host_override","_makeBooking2","toJSON","_checkSelectedSpacesAreAvailable","exclude","space_ids","exclude_range","has_actioned","_default_user","_data$from_bookings","event_start","event_end","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","recurring_master_id","from_bookings","master","mailbox","range_start","range_end","days_of_week","attachments","eventStatus","is_external","_this$recurrence","_this$system","EVENTS_ENDPOINT","createEvent","updateEvent","method","showEvent","removeEvent","approveEvent","rejectEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","_b$resources","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","blocks","blk","getNextFreeTimeSlot","addSeconds","startOfMinute","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","addToDate","rulesForSpace","rulemap","_step4","_iterator4","_rulemap$zone","_step5","_iterator5","ruleset","checkRulesMatch","conditions","_host$groups","is_before","is_after","min_length","max_length","_rulesForSpace","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data4","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","_save","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","_desk_bookings","Desk","_bind","processBindingChange","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","actives","current_state","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this5$_options$getVa","_this5$_options$getVa2","_user","_yield$_this5$_setBoo","_setBookingTime","custom","setActions","_setBookingTime2","until","SetDatetimeModalComponent","ExploreStateService","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","locker_status","map_status","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","pair_r2","ExploreMapViewComponent_div_16_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","map_styles","positions","map_positions","map_actions","map_labels","_options$disable","toggleZones","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_this$_org$levelWithI","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","locations","pos","priority","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","updateZoom","updateCenter","ExploreMapViewComponent_div_16_Template","tmp_7_0","show_legend","existing_event","week_events","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","queryUsers","authority_id","searchStaff","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","openEventLinkModal","bookSpace","_positions","_styles","_actions","_labels","_message","limit","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","coordinates","properties","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","slide_toggle_1","overlay_1","bookings_module_1","MatSlideToggleModule","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","render_fn","FieldDateAdapter","_core_2$NativeDateAda","displayFormat","NativeDateAdapter","FIELD_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_super2","_from","_to","addYears","old_date","new_date","getHours","getMinutes","formatISO","DateAdapter","useClass","MAT_DATE_FORMATS","ɵɵreference","option_r2","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","_this$duration_option","DurationFieldComponent_mat_option_4_Template","user_search_field_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","calendar_fn_1","user_r2","HostSelectFieldComponent","zip","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","cloud_uploads_1","blobUtil","url_r7","copyLink","viewImage","removeImage","progress","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","uploadFile","observer","arrayBuffer","upload_details","formatted_size","humanReadableByteCount","upload","blob","arrayBufferToBlob","upload_list","uploadFiles","file_name","takeWhile","access_url","complete","readAsArrayBuffer","ImageListFieldComponent","_uploadImages","_clipboard","upload_ids","_upload_list","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploadImages","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","recurrence_modal_component_1","formattedValue","RecurrenceFieldComponent","getDay","RecurrenceModalComponent","day_of_week","setSimple","RecurrenceFieldComponent_mat_option_15_Template","openCustomRecurrenceModal","occurrences","ends_key","toggleDayOfWeek","Quill","RichTextInputComponent","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","_container_el","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","SpaceListFieldComponent","NewSpaceSelectModalComponent","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","barcode","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","request","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","query_params","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateMockDeskMetadata","generateParkingSpaces","PARKING_SPACES","assignee","assigned_name","map_regions","DESK_FEATURES","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","connected","input_list","output_list","env_sources","available_outputs","source","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display3","Display4","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","visible","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","_data$bookable","PlaceZone","Organisation","organisation_class_1","_regions","_active_region","_buildings","_active_building","_levels","region_list","active_region","region","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","_this$building2","_updateSettingOverrides","_this$region","regions","_this$building3","_this$building4","_this$_organisation","orgs","_this$_buildings$getV","loadOrganisation","loadRegions","loadBuildings","loadLevels","loadSettings","_loadOrganisation","org_list","_yield$toPromise","queryZones","_auth$config","org_zone","_loadRegions","_this$_organisation2","_yield$toPromise2","_loadBuildings","_this$_organisation3","_yield$toPromise3","_yield$toPromise4","_loadLevels","curr","_loadSettings","_yield$toPromise5","_this$_organisation4","_yield$toPromise6","_this$_organisation5","app_settings","_yield$toPromise7","_yield$toPromise8","t7","t8","t9","t11","t10","t12","t13","_initialiseActiveBuilding","_this6$building3","geolocation","getCurrentPosition","_this6$building","_position$coords","coords","latitude","longitude","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this6$building2","_step6","_iterator6","_step7","tz_start","_iterator7","_this$building5","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","SpaceSelectItemComponent_div_0_div_6_Template","SpaceSelectItemComponent_div_0_button_7_Template","by_request","SpaceSelectItemComponent","SpaceSelectItemComponent_div_0_Template","SpaceSelectItemComponent_ng_template_1_Template","bld_r10","SpaceSelectModalComponent_mat_form_field_9_mat_option_2_Template","type_r14","SpaceSelectModalComponent_mat_form_field_10_mat_option_2_Template","space_types","_r23","space_r19","spaceSelected","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_a_space_select_item_1_Template","space_map","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_Template","SpaceSelectModalComponent_ng_container_12_ng_container_1_Template","space_r27","SpaceSelectModalComponent_div_13_ng_container_1_a_space_select_item_1_Template","SpaceSelectModalComponent_div_13_ng_container_1_Template","show_selected","SpaceSelectModalComponent","SpaceSelectModalComponent_mat_form_field_9_Template","SpaceSelectModalComponent_mat_form_field_10_Template","SpaceSelectModalComponent_ng_container_12_Template","SpaceSelectModalComponent_div_13_Template","SpaceSelectModalComponent_footer_14_Template","SpaceSelectModalComponent_ng_template_15_Template","SpaceSelectModalComponent_ng_template_17_Template","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r5","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_div_22_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r11","feat_r13","feature_display","SpaceFiltersComponent_section_48_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_48_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_section_48_Template","SpaceFiltersComponent_div_50_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","public","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","user_r4","today","current_hour","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","updateWidth","updateScroll","container_size","user_list_size","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_21_Template","FindAvailabilityModalComponent_div_23_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_2_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","preferred_beverage","accepted_terms_conditions","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","wfh_settings_modal_component_1","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","WFHSettingsModalComponent","MatCheckbox","i12","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field formControlName=\"assets\"></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            [src]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    *ngIf=\"space?.images?.length > 0\"\n                    src=\" space.images \"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: 'shortTime') +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: 'h:mm a (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Booking, queryBookings } from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return of([]);\n            const mod = getModule(system_id, 'Lockers');\n            return mod.execute('lockers_allocated_to_me').catch((_) => []);\n        }),\n        map((_) =>\n            _.map(\n                (i) =>\n                    new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        asset_id: i.locker_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    })\n            )\n        ),\n        catchError(() => of([])),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval(\n            'poll',\n            () => {\n                document.visibilityState === 'visible'\n                    ? this._poll.next(Date.now())\n                    : '';\n            },\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [src]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) return;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public _images: string[] = [];\n\n    public get images() {\n        return this._images || [];\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._images = flatten(\n                this.item?.assets?.map(({ images }) => images) || []\n            );\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { Asset, AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [src]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { AssetGroupPipe, updateAssetGroupList } from './asset-group.pipe';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([this._options]).pipe(\n        switchMap((options) =>\n            queryGroupAvailability(options as any).pipe(\n                catchError(() => of([] as AssetGroup[]))\n            )\n        ),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.name.toLowerCase().includes(s) ||\n                    _.description.toLowerCase().includes(s)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    depreciation_start_date: number;\n    depreciation_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    category?: AssetCategory;\n    assets?: Asset[];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    images: string[] = [];\n    purchase_order_id: string = '';\n    purchase_price: number = 0;\n    end_of_life_date: number = 0;\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_id: new FormControl(category.parent_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    purchaseOrder: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(purchaseOrder.id),\n        order_number: new FormControl(purchaseOrder.order_number || '', [\n            Validators.required,\n        ]),\n        invoice_number: new FormControl(purchaseOrder.invoice_number || ''),\n        purchase_date: new FormControl(purchaseOrder.purchase_date || 0, [\n            Validators.required,\n        ]),\n        depreciation_start_date: new FormControl(\n            purchaseOrder.depreciation_start_date || 0,\n            [Validators.required]\n        ),\n        depreciation_end_date: new FormControl(\n            purchaseOrder.depreciation_end_date || 0,\n            [Validators.required]\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        images: new FormControl(asset.images || []),\n        purchase_order_id: new FormControl(asset.purchase_order_id, [\n            Validators.required,\n        ]),\n        purchase_price: new FormControl(asset.purchase_price || 0, [\n            Validators.required,\n        ]),\n        end_of_life_date: new FormControl(0),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === asset.type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: asset.type_id,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { ca } from 'date-fns/locale';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(asset: Partial<Asset>[]) {\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        asset.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query), queryAssets(query)]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) => asset.type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport function showGroupFull(id: string) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ type_id: id }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            console.log('Product Data:', categories, assets, purchase_orders);\n            console.log('Product:', product);\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(query: BookingsQueryParams) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) => !bookings.find((booking) => booking.id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(query: BookingsQueryParams) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) => asset.type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    parent_id: string,\n    { date, duration, host }: { date: number; duration: number; host: string },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === parent_id &&\n            old_assets.find((_) => _.id === item.id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets.map((item) =>\n            createBooking(\n                new Booking({\n                    date,\n                    duration,\n                    user_email: host,\n                    id: item.id,\n                    asset_name: (item as any).name,\n                    extension_data: { parent_id },\n                })\n            ).toPromise()\n        )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"!auto_checkin\"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <!-- <button mat-menu-item mat-dialog-close class=\"flex items-center space-x-2 text-base\" (click)=\"edit.emit()\">\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button> -->\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(\n            this.booking.id,\n            !this.booking.checked_in\n        ).toPromise();\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id: this._booking.extension_data.map_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = [\n    'book/desks',\n    'book/parking',\n    'book/new-desks',\n    'book/new-parking',\n];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = this.options.pipe(\n        debounceTime(300),\n        distinctUntilKeyChanged('type'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this.form.getRawValue() || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                value,\n                this._options.getValue().type\n            );\n        }\n        if (value.duration >= 12 * 60 || value.all_day) {\n            this.form.patchValue({\n                date: set(value.date, { hours: 11, minutes: 59 }).valueOf(),\n                duration: 12 * 60,\n            });\n            value = this.form.getRawValue();\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                `${value.booked_by_email}|${value.date}`,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            );\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !!this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                console.log('Error', e);\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            await this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>) {\n    return post(`${BOOKINGS_ENDPOINT}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone as any as BuildingLevel),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n\n                            >Building<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                formControlName=\"date\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: user,\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            console.log('Banks', banks, resources);\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$ = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.level_list.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l;\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [src]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"active = !active\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, AsyncHandler } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: 'shortTime' }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list.filter((order) => checkOrder(order, this._filters.getValue()))\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event).toPromise();\n        this._poll.next(Date.now());\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${encodeURIComponent(map[key])}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && await cache.checkForUpdate()) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!await cache.activateUpdate()) return;\n        notifyInfo('Newer version of the application is available', 'Refresh', () =>\n            location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push(['DTSTART', `${new Date(event.date).toISOString()}`]);\n    chunks.push([\n        'DTEND',\n        `${addMinutes(event.date, event.duration ?? 60).toISOString()}`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'outlook'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    breakdown: 15,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n        console.log('User Interaction');\n    }\n\n    public async idleFor(time_ms: number) {\n        const stop = this.startListening();\n        await this.idle_time.pipe(first((t) => t >= time_ms)).toPromise();\n        stop();\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"f786ac3\",\n    \"hash\": \"f786ac3\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"f786ac3\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1685325781752\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard  {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table [dataSource]=\"data_source\" matSort>\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column] }}</ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10 border-b border-gray-300 dark:border-neutral-400\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 border-b border-gray-200 dark:border-neutral-500\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (token()) {\n                    this.loading = false;\n                    this.clearInterval('has_token');\n                }\n            },\n            1000\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [src]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">{{ item.name }}</h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n        console.log('Data:', this._data);\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img class=\"h-full w-full\" [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ event?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"event.system?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div class=\"opacity-60\">{{ event.host }}</div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"edit.emit(space)\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit event</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"remove.emit()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div i18n>Delete event</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (c, i) => (c += i.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (c, i) => (c += i.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (c, i) =>\n            (c +=\n                i.response_status === 'tentative' ||\n                i.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    differenceInDays,\n    endOfDay,\n    getUnixTime,\n    isBefore,\n    startOfDay,\n} from 'date-fns';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { filterSpacesFromRules } from './helpers';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nconst BOOKING_URLS = [\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(zone_ids.map((id) => requestSpacesForZone(id)));\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, all_day } = this._form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            list = filterSpacesFromRules(\n                list,\n                { date, duration, space: null, host: currentUser() },\n                this._org.building.booking_rules\n            );\n            return (list || [])\n                .filter((_, idx) =>\n                    periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    )\n                )\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                if (all_day) {\n                    date = startOfDay(date).valueOf();\n                    duration = 24 * 60 - 1;\n                }\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterSpacesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                space: null,\n                                host: currentUser(),\n                            },\n                            this._org.building.booking_rules\n                        );\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff < 14\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering }) => {\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(event: CalendarEvent = new CalendarEvent()) {\n        console.error('New Form:', event);\n        this._event.next(event);\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event,\n            ...event.extension_data,\n            date:\n                !event.id && isBefore(event.date || 0, Date.now())\n                    ? Date.now()\n                    : event.date,\n            host: event?.host || currentUser().email,\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!this._form) this.newForm();\n        this._form.patchValue({\n            ...JSON.parse(sessionStorage.getItem('PLACEOS.event_form') || '{}'),\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            let asset_list = [];\n            if (assets?.length || event.extension_data.assets?.length) {\n                asset_list = await updateAssetRequestsForResource(\n                    `${host}|${date}`,\n                    { date, duration, host },\n                    assets,\n                    event.extension_data.assets\n                );\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            console.log(\n                'Payments:',\n                this._payments.payment_module,\n                spaces.length\n            );\n            if (this._payments.payment_module && spaces.length) {\n                console.log('Make Payment...');\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n                console.log('Payment success.', receipt);\n            }\n            const d = value.all_day\n                ? startOfDay(value.date).valueOf()\n                : value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: asset_list,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        const space_ids = (\n            await Promise.all(\n                spaces.map((_) => this._space_pipe.transform(_.id || _.email))\n            )\n        ).map((_) => _.id);\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        const availability_method = this.has_calendar\n            ? querySpaceAvailability\n            : queryResourceAvailability;\n        let availability: boolean[] = await availability_method(\n            spaces.map((_) => _.id),\n            date,\n            duration,\n            ignore\n        ).toPromise();\n        if (!availability.every((_) => _))\n            throw `${\n                availability.filter((_) => _).length\n            } space(s) are not available at the selected time`;\n        return true;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week,\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(endOfDay(this.recurrence.end)),\n            };\n            delete obj.recurrence.days_of_week;\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id ? updateEvent(data.id, data, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    _.filter(\n                        (b) =>\n                            b.resources?.find((s) => s.id === id) &&\n                            b.id !== ignore &&\n                            b.ical_uid !== ignore\n                    ).length === 0\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes,\n    addSeconds,\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_master_id: new FormControl(event.recurring_master_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) =>\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null)\n    );\n    form.get('date').valueChanges.subscribe(() =>\n        form.get('duration').updateValueAndValidity()\n    );\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._options,\n        this._poll,\n    ]).pipe(\n        filter(([lvl]) => !!lvl),\n        debounceTime(600),\n        switchMap(([lvl, { date }]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(date || Date.now())),\n                period_end: getUnixTime(addMinutes(date || Date.now(), 60)),\n                type: 'desk',\n                zones: lvl.id,\n            }).pipe(catchError(() => of([] as Booking[])))\n        ),\n        tap((l) => {\n            this._users = {};\n            this._departments = {};\n            l.forEach((b) => {\n                const departments =\n                    this._settings.get('app.department_map') || {};\n                this._users[b.asset_id] = b.user_name;\n                this._departments[b.asset_id] =\n                    departments[b.extension_data.department] || '';\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence && !is_checked_in\n                        ? has_signs\n                            ? 'signs-of-life'\n                            : 'free'\n                        : !has_presence && !is_checked_in\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) => {\n                const actives = _.filter(\n                    (e) =>\n                        !(\n                            e.rejected ||\n                            e.deleted ||\n                            e.extension_data.current_state === 'ended' ||\n                            e.is_done\n                        )\n                );\n                this._in_use.next(actives.map((i) => i.asset_id));\n                this._checked_in.next(\n                    actives.filter((e) => e.checked_in).map((i) => i.asset_id)\n                );\n            })\n        );\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n        if (options.date) this._poll.next(Date.now());\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe(({ value }) =>\n                        this._status.next(\n                            value?.filter((_) => _.location === 'locker') || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            console.log('Features:', features);\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        console.log('ExploreLockersService');\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        console.error(_);\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        console.log('Spaces:', spaces, available);\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    getModule,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of, timer } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) => (q?.length > 2 ? this.search_fn(q) : of([]))),\n        catchError(() => [])\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                console.log('Data:', data);\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map((u) => ({\n                            id: u.email,\n                            type: (u as any).type || 'contact',\n                            name: u.name,\n                            description: u.email,\n                        }))\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        let sys_id: any = this._org.binding('location_services');\n        if (!sys_id) return;\n        const mod = getModule(sys_id, 'LocationServices');\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            *ngIf=\"space.images[0]\"\n                            [src]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (this._statuses[space.id] !== 'free' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {\n        console.log('Data:', this._data);\n    }\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        {{\n                            option.date\n                                ? (option.date\n                                      | date\n                                          : (option.id >= 24 * 60\n                                                ? 'mediumDate'\n                                                : 'h : mm a')) + ' ('\n                                : ''\n                        }}{{ option.name }}{{ option.date ? ')' : '' }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                placeholder=\"Select host\"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User) {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) {\n            this.item = currentUser();\n        }\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    humanReadableByteCount,\n    Upload,\n    uploadFiles,\n} from '@placeos/cloud-uploads';\nimport { AsyncHandler, notifyInfo, randomInt, unique } from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(file: File): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload: null,\n            };\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            upload_details.upload = upload;\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe(\n                    (state) => {\n                        if (upload.access_url)\n                            upload_details.link = upload.access_url;\n                        upload_details.progress = state.progress;\n                        observer.next(upload_details);\n                        if (state.status === 'error')\n                            observer.error({\n                                ...upload_details,\n                                error: state.error,\n                            });\n                        if (state.status === 'complete') observer.complete();\n                    },\n                    (e) => (upload_details.error = e)\n                );\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [style.background-image]=\"'url(' + url + ')'\"\n            >\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeItem(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(private _clipboard: Clipboard) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file).subscribe(update_fn, update_fn, () => {\n                this._updateUploadHistory();\n            });\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addYears } from 'date-fns';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    Last {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option>\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formattedValue() }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            this.value.start = this.date;\n            if (!this.value.pattern) {\n                this.value.days_of_week = [new Date(this.date).getDay()];\n            }\n        }\n    }\n\n    public readonly formattedValue = () => formatRecurrence(this.value);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            if (data) this.setValue({ ...data, _pattern: 'custom_display' });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 3).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"monthly\">\n                            month{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\">Repeat on</h2>\n            <div class=\"flex items-center space-x-2 mb-4\" name=\"repeat-on\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button value=\"never\">Never</mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button btn class=\"w-32\" matRipple [mat-dialog-close]=\"data\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 13,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [src]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces: Space[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        const ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: Space[]) => {\n            if (!spaces) spaces = ref.componentInstance.selected;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Space[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity, timeFormatString } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{ option.date | date: 'h : mm a' }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        images: [],\n        purchase_order_id: `purchase-order-${i}`,\n        purchase_price: 100,\n        end_of_life_date: getUnixTime(Date.now() + 1000000000),\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        depreciation_start_date: getUnixTime(Date.now()),\n        depreciation_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Display',\n            inputs: ['Display_1'],\n            help: 'laptop-help',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Display 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Display 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display3: {\n        name: 'Display 3',\n        type: 'Display',\n        source: 'PC2',\n        mod: 'Display_3',\n    },\n    Display4: {\n        name: 'Display 4',\n        type: 'Display',\n        mod: 'Display_4',\n    },\n    Display5: {\n        name: 'Display 5',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createAreaManagementModule, MockLocationServicesModule } from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)]\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone } from '@placeos/ts-client';\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (key in data && !(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const { id, name, bookable, groups, features } = this;\n        return {\n            id,\n            name,\n            bookable,\n            groups,\n            features,\n        };\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this._updateSettingOverrides();\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld?.id);\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (this._regions.getValue().length) {\n            this._buildings.next(\n                flatten(\n                    await Promise.all(\n                        this._regions\n                            .getValue()\n                            .map((_) => this.loadBuildings(_.id))\n                    )\n                )\n            );\n        } else {\n            this._buildings.next(await this.loadBuildings());\n        }\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        await this.loadSettings();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        const regions = [];\n        for (const item of list) {\n            const bindings: Record<string, any> = (\n                await showMetadata(item.id, 'bindings').toPromise()\n            )?.details;\n            regions.push(new Building({ ...item, bindings }));\n        }\n        this._regions.next(regions);\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const buildings = [];\n        for (const bld of building_list) {\n            const bindings: Record<string, any> = (\n                await showMetadata(bld.id, 'bindings').toPromise()\n            )?.details;\n            const booking_rules: Record<string, any> = (\n                await showMetadata(bld.id, 'booking_rules').toPromise()\n            )?.details;\n            buildings.push(new Building({ ...bld, bindings, booking_rules }));\n        }\n        return buildings;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list\n            .filter(\n                (lvl) =>\n                    !!this.buildings.find((bld) => bld.id === lvl.parent_id)\n            )\n            .map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_name = `${(\n            this._service.app_name || 'workplace'\n        ).toLowerCase()}_app`;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, app_name).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        const regions = this.regions;\n        for (const item of regions) {\n            this._region_settings[item.id] = (\n                await showMetadata(item.id, app_name).toPromise()\n            )?.details;\n        }\n        const buildings = this.buildings;\n        for (const bld of buildings) {\n            this._building_settings[bld.id] = (\n                await showMetadata(bld.id, app_name).toPromise()\n            )?.details;\n        }\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = localStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        } else {\n            const timezone = this.timezone;\n            for (const bld of this.buildings) {\n                if (bld.timezone === timezone) {\n                    this.building = bld;\n                    break;\n                }\n            }\n            if (this.building) return;\n            const tz_start = timezone.split('/')[0];\n            for (const bld of this.buildings) {\n                if (bld.timezone.startsWith(tz_start)) {\n                    this.building = bld;\n                    break;\n                }\n            }\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3).fill(0).map(i => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true\n                }\n            }\n        }\n    };\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button\n                btn\n                matRipple\n                class=\"w-32\"\n                [class.request]=\"space.by_request\"\n            >\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button icon mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button btn matRipple (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends AsyncHandler {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceCalendarAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {\n        console.log('Pin:', _data.display_name, this.active, this.selected);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) => {\n            console.log(\n                'Data:',\n                this.selected,\n                this.active,\n                l.map((_) => _.id)\n            );\n            return l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }));\n        })\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh]\"\n            (window:resize)=\"updateWidth()\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                #container\n                class=\"flex flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-auto divide-x divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n                (scroll)=\"updateScroll()\"\n            >\n                <div\n                    users\n                    class=\"sticky left-0 min-h-full bg-white dark:bg-neutral-700 border-r border-gray-300 dark:border-neutral-500 z-30\"\n                >\n                    <div\n                        header\n                        class=\"h-10 w-[6rem] border-b border-gray-300 dark:border-neutral-500\"\n                    ></div>\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"user\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[user.email]\n                                    : []\n                            \"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                </div>\n                <div\n                    [attr.hour]=\"i\"\n                    class=\"min-w-[5rem] bg-gray-50 dark:bg-neutral-600 min-h-full pointer-events-none\"\n                    [attr.disabled]=\"today && i < current_hour\"\n                    *ngFor=\"let h of hours; let i = index\"\n                >\n                    <div\n                        header\n                        class=\"h-10 border-b border-gray-300 dark:border-neutral-500 p-2\"\n                    >\n                        {{ i % 12 ? i % 12 : '12' }}{{ i >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div\n                    selection\n                    class=\"absolute top-10 bottom-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                    [style.left]=\"selection_left + 'rem'\"\n                    [style.width]=\"selection_width + 'rem'\"\n                    (mousedown)=\"startMovePeriod($event)\"\n                    (touchstart)=\"startMovePeriod($event)\"\n                >\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                    ></div>\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                        (mousedown)=\"startMoveDuration($event)\"\n                        (touchstart)=\"startMoveDuration($event)\"\n                    ></div>\n                    <div\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ duration | duration }}\n                    </div>\n                    <div\n                        *ngIf=\"move_time\"\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ date | date: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [disabled='true'] {\n                background: rgba(0, 0, 0, 0.05) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset = 0;\n    public width = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n\n    public readonly availability = this.users.pipe(\n        debounceTime(300),\n        switchMap((users) => {\n            if (!users.length) return of([]);\n            return queryUserFreeBusy({\n                calendars: [this.host.email, ...users.map((_) => _.email)].join(\n                    ','\n                ),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5 + 6;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.updateWidth();\n                this.updateScroll();\n            },\n            300\n        );\n    }\n\n    public updateWidth() {\n        const container_size =\n            this._container_el.nativeElement.getBoundingClientRect().width;\n        const user_list_size = this._container_el.nativeElement\n            .querySelector('[users]')\n            .getBoundingClientRect().width;\n        this.width = Math.floor(container_size - user_list_size);\n        this._move_size =\n            this._container_el.nativeElement\n                .querySelector('[hour]')\n                .getBoundingClientRect().width * 24;\n    }\n\n    public updateScroll() {\n        this.offset = this._container_el.nativeElement.scrollLeft;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 0;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"overflow-hidden relative border-b border-gray-300 dark:border-neutral-500 h-full pointer-events-none\"\n            [style.width]=\"width + 'px'\"\n        >\n            <div\n                class=\"absolute w-[120rem] h-full inset-y-0\"\n                [style.left]=\"-offset + 'px'\"\n            >\n                <div\n                    event\n                    *ngFor=\"let event of availability\"\n                    class=\"absolute inset-y-0 bg-primary text-white p-2 overflow-hidden border border-white rounded\"\n                    [style.left]=\"event.start + '%'\"\n                    [style.width]=\"event.size + '%'\"\n                >\n                    <div class=\"text-xs\">Unavailable</div>\n                    <div class=\"text-xs max-w-full\">\n                        {{ event.date | date: 'shortTime' }} -\n                        {{\n                            event.date.valueOf() + event.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n    @Input() public offset = 0;\n    @Input() public width = 0;\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.extension_data?.status || data.status || 'pending';\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { showGuest } from \"./guests.fn\";\nimport { showStaff } from \"./staff.fn\";\nimport { User } from \"./user.class\";\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user'\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(({ id, email }) => id === user_id || email === user_id);\n        if (user) return user;\n        user = await showStaff(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}