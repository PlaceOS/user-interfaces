{"version":3,"file":"default-libs_explore_src_index_ts.js","mappings":"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","names":["i0","ctx_r1","resource","name","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","ctx_r3","form","patchValue","date","ctx_r0","host","book_until","value","_c0","tmp_6_0","get","SetDatetimeModalComponent","constructor","_data","this","FormGroup","user","FormControl","duration","until","t","MAT_DIALOG_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","ctx_r2","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","AsyncHandler","_settings","formatDistanceToNow","_details","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","super","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","subscription","zoom$","subscribe","_","loadUser","_this","_asyncToGenerator","mod","getModule","system","details","execute","catch","assigned_to","MAP_FEATURE_DATA","i1","features","attrs","i18n_1","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r1","ExploreDesksService","_state","_org","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","restrictions","active_building","pipe","switchMap","showMetadata","building","id","catchError","of","map","Array","shareReplay","desk_list","level","lvl","i","j","Desk","zone","e","_bind","unsubWith","system_id","binding","listen","d","processBindingChange","bind","_state_change","combineLatest","desks","in_use","presence","checked_in","signs","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","filter","assets","find","start","end","now","processDesks","init","initialised","first","toPromise","setOptions","enable_booking","options","next","getValue","devices","v","location","asset_id","at_location","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","updateStatus","style_map","colours","desk_id","fill","DEFAULT_COLOURS","setStyles","list","device","x","map_width","y","map_height","push","track_id","coordinates_from","content","z_index","data","setFeatures","_this2","actions","ExploreDeskInfoComponent","full_size","no_scale","status","book_fn","_ref","notifyError","groups","length","currentUser","newForm","_setBookingTime","custom","user_email","email","asset_name","description","booking_type","zones","parent_id","confirmPost","notifySuccess","apply","arguments","action","callback","setActions","_this3","endOfDay","addDays","open","afterClosed","i2","i3","i4","i5","Yz7","factory","ɵfac","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","_angular_core__WEBPACK_IMPORTED_MODULE_1__","i18n_0"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore-zoom-control.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { catchError, first, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport {\n    AssetRestriction,\n    BookingFormService,\n} from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this._org.active_building.pipe(\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.restrictions,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs, restrictions]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                const restriction_list = restrictions.filter((_) =>\n                    _.assets.includes(id)\n                );\n                const is_restricted = restriction_list.find(\n                    ({ start, end }) => Date.now() >= start && Date.now() < end\n                );\n                this._statuses[id] =\n                    bookable && !is_restricted\n                        ? !is_used && !has_presence && !is_checked_in\n                            ? has_signs\n                                ? 'signs-of-life'\n                                : 'free'\n                            : !has_presence && !is_checked_in\n                            ? 'pending'\n                            : 'busy'\n                        : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('restrictions', this.restrictions.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        this._in_use.next(\n            desks.map(\n                (v) => v.location === 'booking' && (v.map_id || v.asset_id)\n            )\n        );\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n"],"x_google_ignoreList":[]}