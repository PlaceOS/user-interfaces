{"version":3,"file":"default-libs_explore_src_index_ts.js","mappings":"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","names":["i0","ctx_r1","resource","name","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r1","form","patchValue","date","host","book_until","value","_c0","use_24hr_time","tmp_8_0","get","SetDatetimeModalComponent","this","_settings","constructor","_data","FormGroup","user","FormControl","duration","until","static","t","MAT_DIALOG_DATA","i1","core","VBU","selectors","decls","vars","consts","template","rf","ctx","SetDatetimeModalComponent_main_6_Template","ctx_r2","mac","manufacturer","os","ssid","username","type","_r2","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","AsyncHandler","formatDistanceToNow","_details","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","super","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","subscription","zoom$","subscribe","_","loadUser","_this","_asyncToGenerator","mod","getModule","system","details","execute","catch","assigned_to","MAP_FEATURE_DATA","features","attrs","i18n_0","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","device_tooltip_r4","ExploreDesksService","_state","_org","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","booking_rules","active_building","pipe","filter","bld","switchMap","showMetadata","id","catchError","of","map","Array","shareReplay","desk_list","level","debounceTime","lvl","i","j","Desk","zone","e","_bind","combineLatest","options","is_public","system_id","binding","listen","d","processBindingChange","bind","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","zones","tap","bookings","next","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","toPromise","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","init","_this2","initialised","first","setOptions","enable_booking","getValue","devices","v","location","at_location","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","updateStatus","style_map","colours","desk_id","fill","DEFAULT_COLOURS","setStyles","list","device","x","map_width","y","map_height","push","track_id","coordinates_from","content","z_index","data","setFeatures","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","can_book","book_fn","_ref2","notifyError","groups","length","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","forEach","event","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i2","i3","i4","i5","jDH","factory","ɵfac","SharedExploreModule","$C","G2t","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","_angular_core__WEBPACK_IMPORTED_MODULE_1__","MapLocation","building"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        map(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[]}