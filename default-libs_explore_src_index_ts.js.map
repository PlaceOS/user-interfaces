{"version":3,"file":"default-libs_explore_src_index_ts.js","mappings":"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","names":["i0","ctx_r1","resource","name","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","ctx_r3","form","patchValue","date","ctx_r0","host","book_until","value","_c0","use_24hr_time","tmp_7_0","get","SetDatetimeModalComponent","this","_settings","constructor","_data","FormGroup","user","FormControl","duration","until","static","t","MAT_DIALOG_DATA","i1","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","ctx_r2","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","AsyncHandler","formatDistanceToNow","_details","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","super","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","subscription","zoom$","subscribe","_","loadUser","_this","_asyncToGenerator","mod","getModule","system","details","execute","catch","assigned_to","MAP_FEATURE_DATA","features","attrs","i18n_1","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r1","ExploreDesksService","_state","_org","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","booking_rules","active_building","pipe","filter","bld","switchMap","showMetadata","id","catchError","of","map","Array","shareReplay","desk_list","level","debounceTime","lvl","i","j","Desk","zone","e","_bind","tap","system_id","binding","listen","d","processBindingChange","bind","_booking_list","combineLatest","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","zones","bookings","next","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","toPromise","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","init","_this2","initialised","first","setOptions","enable_booking","options","getValue","devices","v","location","at_location","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","updateStatus","style_map","colours","desk_id","fill","DEFAULT_COLOURS","setStyles","list","device","x","map_width","y","map_height","push","track_id","coordinates_from","content","z_index","data","setFeatures","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","book_fn","_ref2","notifyError","groups","length","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i2","i3","i4","i5","Yz7","factory","ɵfac","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","_angular_core__WEBPACK_IMPORTED_MODULE_1__","i18n_0"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore-zoom-control.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n"],"x_google_ignoreList":[]}