{"version":3,"file":"default-libs_explore_src_index_ts.js","mappings":"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","names":["i0","ExploreMapControlComponent","AsyncHandler","constructor","_org","_state","_router","_route","super","this","active_buildings","active_building","active_levels","level","lvl","setFeatures","timeout","navigate","relativeTo","queryParams","zone","id","bld","building","ngOnInit","_this","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","setLevel","get","core","selectors","$localize","ExploreSensorInfoComponent","_details","temp","humidity","MAP_FEATURE_DATA","ExploreZonesService","_settings","map","_statuses","system_id","binding","getModule","listen","d","parseData","bind","init","zone_metadata","Promise","all","levels","showMetadata","areas","details","area","capacity","hide_label","label_location","draw_polygon","properties","coordinates","geometry","_capacity","_location","length","getCenterPoint","_draw","_points","updateStatus","_bind","data","value","labels","features","filled","count","area_id","content","temperature","people_count","people_count_sum","queue_size","counter","push","location","z_index","_features","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","track_id","MapPolygonComponent","color","points","fill","opacity","setStyles","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","factory","SetDatetimeModalComponent","_data","host","FormGroup","user","FormControl","date","duration","until","MAT_DIALOG_DATA","ExploreDeskInfoComponent","_element","map_id","name","start","end","status","department","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","available_until","EMPTY","ExploreDeviceInfoComponent","hide_fields","last_seen","formatDistanceToNow","addSuffix","diameter","variance","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","mac","manufacturer","os","ssid","toFixed","bg_color","zoom$","loadUser","username","mod","system","execute","catch","assigned_to","ctx","ExploreDesksService","_bookings","_dialog","BehaviorSubject","combineLatest","_poll","switchMap","queryBookings","period_start","getUnixTime","startOfMinute","period_end","addMinutes","type","zones","tap","l","_users","_departments","forEach","b","departments","asset_id","user_name","extension_data","shareReplay","i","Array","j","Desk","catchError","e","unsubWith","processBindingChange","desk_list","_in_use","_presence","_checked_in","_signs_of_life","_options","desks","in_use","presence","checked_in","signs","bookable","is_used","some","has_presence","has_signs","is_checked_in","processDesks","setOptions","enable_booking","_state_change","startPolling","delay","_desk_bookings","actives","filter","rejected","deleted","current_state","is_done","next","interval","valueOf","stopPolling","clearInterval","options","getValue","devices","v","includes","at_location","signs_of_life","desk","staff_name","processDevices","desk_id","list","device","map_width","map_height","coordinates_from","actions","full_size","no_scale","book_fn","_this2","notifyError","newForm","_setBookingTime","form","custom","patchValue","asset_name","description","currentUser","booking_type","parent_id","confirmPost","notifySuccess","action","callback","setActions","_this3","endOfDay","addDays","now","open","afterClosed","ExploreParkingService","startOfDay","asObservable","tags","email","forkJoin","s","flatten","events","spaces","find","week_events","availability","day","day_events","isSameDay","available_spaces","available","_updateParkingSpaces","console","log","styles","space","can_book","ExploreLockerBankModalComponent","bank","lockers","ExploreLockerBankInfoComponent","in_use_count","openBankModal","ExploreLockersService","_lockers","_explore","filtered_lockers$","sys_id","of","_status","lockers_banks$","lockers$","locker_banks","map_status","banks","unique","level_id","bank_lockers","bank_id","locker","locker_id","allocated","bank_info","locker_count","in_use_percent","locker_status","ExploreMapViewComponent","toggleZones","enabled","take","disable","show_legend","legend","_s","_desks","_zones","_parking","_spaces","_space_pipe","map_url","map_styles","map_positions","map_features","map_actions","map_labels","message","o","reset","locateSpace","showStaff","locateUser","error","_locateFeature","updateZoom","setPositions","positions","center","updateCenter","has_coordinates","parts","split","feature","parseFloat","MapPinComponent","transform","levelWithID","display_name","locate_details","_this4","module","priority","locations","MapLocation","sort","a","indexOf","pos","MapRadiusComponent","radius","ExploreSpacesService","SpacePipe","ExploreSearchService","_emergency_contacts","_filter","debounceTime","_loading","q","search_fn","querySystems","organisation","Space","_space_search","_user_search","users","contacts","search","toLowerCase","results","u","localeCompare","queryUsers","authority_id","authority","searchStaff","search_results","contacts_map","setFilter","str","ExploreSearchComponent","checkClick","event","_el","contains","target","show","_input_el","blur","_search","loading","Object","select","showSearch","focus","closeSearch","search_str","item","query","SharedExploreModule","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","ExploreZoomControlComponent","min","max","_angular_core__WEBPACK_IMPORTED_MODULE_2__"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore-zoom-control.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: string;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\">\n            <div class=\"flex items-center space-x-2 whitespace-nowrap pr-2\" *ngIf=\"temp\">\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div class=\"flex items-center space-x-2 whitespace-nowrap pr-2\" *ngIf=\"humidity\">\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div *ngIf=\"temp > 82\" class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\">\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n        }\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    catchError,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(new Date())),\n                period_end: getUnixTime(addMinutes(new Date(), 60)),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        ),\n        tap((l) => {\n            this._users = {};\n            this._departments = {};\n            l.forEach((b) => {\n                const departments =\n                    this._settings.get('app.department_map') || {};\n                this._users[b.asset_id] = b.user_name;\n                this._departments[b.asset_id] =\n                    departments[b.extension_data.department] || '';\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence && !is_checked_in\n                        ? has_signs\n                            ? 'signs-of-life'\n                            : 'free'\n                        : !has_presence && !is_checked_in\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) => {\n                const actives = _.filter(\n                    (e) =>\n                        !(\n                            e.rejected ||\n                            e.deleted ||\n                            e.extension_data.current_state === 'ended' ||\n                            e.is_done\n                        )\n                );\n                this._in_use.next(actives.map((i) => i.asset_id));\n                this._checked_in.next(\n                    actives.filter((e) => e.checked_in).map((i) => i.asset_id)\n                );\n            })\n        );\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Record<string, any>[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free')\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                const { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false\n                );\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user: user || options.host || currentUser(),\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        console.log('Spaces:', spaces, available);\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this._status.next(\n                            d.filter((_) => _.location === 'locker')\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            console.log('Features:', features);\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        console.log('ExploreLockersService');\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        console.error(_);\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    authority,\n    getModule,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) => (q?.length > 2 ? this.search_fn(q) : of([]))),\n        catchError(() => [])\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._filter,\n    ]).pipe(\n        map(([spaces, users, contacts, filter]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map((u) => ({\n                            id: u.email,\n                            type: (u as any).type || 'contact',\n                            name: u.name,\n                            description: u.email,\n                        }))\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        let sys_id: any = this._org.binding('location_services');\n        if (!sys_id) return;\n        const mod = getModule(sys_id, 'LocationServices');\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div class=\"flex items-center leading-tight\">\n                        <div class=\"flex-1 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n"],"x_google_ignoreList":[]}