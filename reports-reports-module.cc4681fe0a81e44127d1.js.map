{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInCalendarDays/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInDays/index.js","./src/app/reports/reports-state.service.ts","./src/app/reports/reports.utilities.ts","./src/app/reports/reports-options.component.ts","./src/app/reports/reports.component.ts","./src/app/reports/report-spaces.component.ts","./src/app/reports/report-desks.component.ts","./src/app/reports/reports.module.ts"],"names":["MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","startOfDayLeft","startOfDay","startOfDayRight","timestampLeft","getTime","getTimezoneOffsetInMilliseconds","timestampRight","Math","round","compareLocalAsc","dateLeft","dateRight","diff","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","ReportsStateService","_org","_generate","Subject","_loading","BehaviorSubject","_active_bookings","_options","start","Date","end","_bookings_list","this","pipe","debounceTime","switchMap","_","console","log","options","getValue","next","type","zones","length","of","valueOf","endOfDay","filter","z","join","query","period_start","floor","period_end","zone_ids","catchError","map","shareReplay","loading","asObservable","bookings","counts","filters","Promise","all","name","m","details","toPromise","list","forEach","id","count","stats","combineLatest","util_period","total_users","reduce","c","i","attendees","total_capacity","system","capacity","utilisation","duration","occupancy","avg_length","efficiency","events","generateReportForBookings","total","Object","keys","generateReportForDeskBookings","subscribe","opts","abs","toDate","sign","difference","setDate","isLastDayNotFull","result","differenceInDays","includes","levelsForBuilding","building","lvl","format","bkn","toJSON","server_names","ReportsOptionsComponent","_state","_route","super","types","type_list","levels","active_levels","generateReport","downloadReport","setStartDate","date","setOptions","setEndDate","setZones","initialised","first","subscription","queryParamMap","params","has","get","split","level","levelWithID","buildings","find","bld","parent_id","ReportsComponent","ReportSpacesComponent","total_count","formatDuration","minutes","toFixed","ROUTES","path","component","children","ReportDesksComponent","day_list","dates","isBefore","s","e","push","free","approved","addDays","redirectTo","ReportsModule","forChild"],"mappings":"iWAGIA,EAAsB,MAoCX,SAASC,EAAyBC,EAAeC,GAC9D,OAAAC,EAAA,GAAa,EAAGC,WAChB,IAAIC,EAAiB,OAAAC,EAAA,GAAWL,GAC5BM,EAAkB,OAAAD,EAAA,GAAWJ,GAC7BM,EAAgBH,EAAeI,UAAY,OAAAC,EAAA,GAAgCL,GAC3EM,EAAiBJ,EAAgBE,UAAY,OAAAC,EAAA,GAAgCH,GAIjF,OAAOK,KAAKC,OAAOL,EAAgBG,GAAkBZ,GCzCvD,SAASe,EAAgBC,EAAUC,GACjC,IAAIC,EAAOF,EAASG,cAAgBF,EAAUE,eAAiBH,EAASI,WAAaH,EAAUG,YAAcJ,EAASK,UAAYJ,EAAUI,WAAaL,EAASM,WAAaL,EAAUK,YAAcN,EAASO,aAAeN,EAAUM,cAAgBP,EAASQ,aAAeP,EAAUO,cAAgBR,EAASS,kBAAoBR,EAAUQ,kBAElV,OAAIP,EAAO,GACD,EACCA,EAAO,EACT,EAEAA,E,wICoBJ,Y,MAAMQ,EA2GT,YAAoBC,GAAA,KAAAA,OA1GZ,KAAAC,UAAY,IAAIC,EAAA,EAChB,KAAAC,SAAW,IAAIC,EAAA,EAAwB,IACvC,KAAAC,iBAAmB,IAAID,EAAA,EAC3B,IAGI,KAAAE,SAAW,IAAIF,EAAA,EAA+B,CAClDG,MAAO,IAAIC,KACXC,IAAK,IAAID,OAGL,KAAAE,eAAiBC,KAAKV,UAAUW,KACpC,OAAAC,EAAA,GAAa,KACb,OAAAC,EAAA,GAAWC,I,MACPC,QAAQC,IAAI,UAAWF,GACvB,MAAMG,EAAUP,KAAKL,SAASa,WAE9B,GADAR,KAAKR,SAASiB,KAAK,+BACdF,aAAO,EAAPA,EAASG,SAAuB,QAAf,EAACH,aAAO,EAAPA,EAASI,aAAK,eAAEC,QAAQ,OAAO,OAAAC,EAAA,GAAG,IACzD,MAAMjB,EAAQ,OAAA3B,EAAA,IACVsC,aAAO,EAAPA,EAASX,OAAQ,IAAIC,KAAKU,EAAQX,OAAS,IAAIC,MACjDiB,UACIhB,EAAM,OAAAiB,EAAA,IACRR,aAAO,EAAPA,EAAST,KAAM,IAAID,KAAKU,EAAQT,KAAOF,GACzCkB,UACIH,GAAQJ,aAAO,EAAPA,EAASI,OACjBJ,EAAQI,MAAMK,OAAQC,GAAY,QAANA,GAAaC,KAAK,KAC9C,GACAC,EAAQ,CACVC,aAAc7C,KAAK8C,MAAMzB,EAAQ,KACjC0B,WAAY/C,KAAK8C,MAAMvB,EAAM,MAEjC,MAAwB,UAAjBS,EAAQG,KACT,YAAc,OAAD,wBACNS,GAAK,CACRR,MAAOA,EACPD,KAAM,UAEV,YAAY,OAAD,wBAAMS,GAAK,CAAEI,SAAUZ,OAE5C,OAAAa,EAAA,GAAYpB,GAAM,IAClB,OAAAqB,EAAA,GAAKrB,IACDJ,KAAKR,SAASiB,KAAK,KACdL,aAAC,EAADA,EAAGQ,SACJ,YAAY,kDAEhBZ,KAAKN,iBAAiBe,KAAKL,GAAK,IACzBA,IAEX,OAAAsB,EAAA,MAGY,KAAAC,QAAU3B,KAAKR,SAASoC,eAExB,KAAArB,QAAUP,KAAKL,SAASiC,eAExB,KAAAC,SAAW7B,KAAKN,iBAAiBkC,eAEjC,KAAAE,OAAS9B,KAAKL,SAASM,KACnC,OAAAC,EAAA,GAAa,KACb,OAAAC,EAAA,GAAW4B,IACP,MAAMpB,GAASoB,EAAQpB,OAAS,IAAIK,OAC/BC,IAAkB,IAAPA,GAAkB,QAANA,GAE5B,OAAOe,QAAQC,IACXtB,EAAMc,IAAKR,GACP,YAAaA,EAAG,CACZiB,KAAM,UAELjC,KAAK,OAAAwB,EAAA,GAAKU,GAAM,CAAClB,EAAGkB,EAAEC,QAAQxB,UAC9ByB,gBAIjB,OAAAb,EAAA,GAAYpB,GAAM,IAClB,OAAAqB,EAAA,GAAKa,IACD,MAAMb,EAAuB,GAG7B,OAFAzB,KAAKN,iBAAiBe,KAAK,IAC3B6B,EAAKC,QAAQ,EAAEC,EAAIC,KAAYhB,EAAIe,GAAMC,GAClChB,IAEX,OAAAC,EAAA,MAGY,KAAAgB,MAA6B,OAAAC,EAAA,GAAc,CACvD3C,KAAK8B,OACL9B,KAAK6B,WACN5B,KACC,OAAAwB,EAAA,GAAI,EAAEK,EAAQQ,KACHA,EAAK,aAAc,IC5G/B,SAAmCT,EAA2Be,EAAsB,GACvF,MAAMC,EAAchB,EAASiB,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAEC,UAAUrC,OAAQ,GAChEsC,EAAiBrB,EAASiB,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAEG,OAAOC,SAAU,GAClEC,EAAcxB,EAASiB,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAEM,SAAU,IAAoB,GAAdV,GAC9DW,EAAYV,EAAcK,EAChC,MAAO,CACHT,MAAOZ,EAASjB,OAChB4C,WACI3B,EAASiB,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAEM,SAAU,GAAKzB,EAASjB,OAC5D6C,YAAaJ,EAAcE,GAAa,EACxCV,cACAK,iBACAK,YACAF,cACAK,OAAQ7B,GD+FE8B,CACIrB,EACgB,EAAhBtC,KAAKsD,UC3HpB,SAAuCzB,EAAqBe,EAAsB,EAAGd,EAA0B,IAClHzB,QAAQC,IAAI,UAAWwB,GACvB,MAAM8B,EAAQC,OAAOC,KAAKhC,GAAQgB,OAAO,CAACC,EAAGC,IAAMD,GAAKjB,EAAOkB,IAAM,GAAI,GAEzE,MAAO,CACHY,QACAnB,MAAOZ,EAASjB,OAChByC,YAJgBxB,EAASjB,OAASgD,EAKlCF,OAAQ7B,GDqHEkC,CACKzB,GAAsB,GACvBtC,KAAKsD,SACLxB,KAWd9B,KAAKD,eAAeiE,UAAW5D,GAAMA,GANzC,eACI,MAAM6D,EAAOjE,KAAKL,SAASa,WAC3B,OAAOjC,KAAK2F,IDlEL,SAA0BtG,EAAeC,GACtD,OAAAC,EAAA,GAAa,EAAGC,WAChB,IAAIW,EAAW,OAAAyF,EAAA,GAAOvG,GAClBe,EAAY,OAAAwF,EAAA,GAAOtG,GACnBuG,EAAO3F,EAAgBC,EAAUC,GACjC0F,EAAa9F,KAAK2F,IAAIvG,EAAyBe,EAAUC,IAC7DD,EAAS4F,QAAQ5F,EAASK,UAAYqF,EAAOC,GAG7C,IAAIE,EAAmB9F,EAAgBC,EAAUC,MAAgByF,EAC7DI,EAASJ,GAAQC,EAAaE,GAElC,OAAkB,IAAXC,EAAe,EAAIA,ECsDJC,CAAiBR,EAAKrE,MAAOqE,EAAKnE,MAO/C,iBACHO,QAAQC,IAAI,UACZN,KAAKV,UAAUmB,MAAK,IAAIZ,MAAOiB,WAG5B,WAAWP,G,mBACG,QAAjB,EAAIA,EAAQI,aAAK,eAAE+D,SAAS,QACxBnE,EAAQI,MAAQ,CACZ,SACGX,KAAKX,KACHsF,kBAAkB3E,KAAKX,KAAKuF,UAC5BnD,IAAKoD,GAAQA,EAAIrC,KAG1BjC,EAAQI,QACuB,QADlB,EACW,QADX,EACbX,KAAKL,SAASa,kBAAU,eAAEG,aAAK,eAAE+D,SAAS,UAE1CnE,EAAQI,MAAQ,KAGH,QAAb,EAAAJ,EAAQX,aAAK,eAAEkB,cACmB,QADZ,EAClBd,KAAKL,SAASa,WAAWZ,aAAK,eAAEkB,aACzB,QAAX,EAAAP,EAAQT,WAAG,eAAEgB,cAA0C,QAAnC,EAAOd,KAAKL,SAASa,WAAWV,WAAG,eAAEgB,YAG7Dd,KAAKL,SAASc,KAAK,OAAD,wBAAMT,KAAKL,SAASa,YAAeD,IAGlD,iBACH,MAAMA,EAAUP,KAAKL,SAASa,WACxBqB,EAAsB7B,KAAKN,iBAAiBc,WAClD,YACI,UAAUD,EAAQG,QAAQ,OAAAoE,EAAA,GACtBvE,EAAQX,MACR,iBACC,OAAAkF,EAAA,GAAOvE,EAAQT,IAAK,oBACzB,YACI+B,EAASJ,IAAKsD,IACV,MAAM3C,EAAU2C,EAAIC,SAGpB,cAFO5C,EAAQzB,aACRyB,EAAQ6C,aACR7C,O,6CAxJdhD,GAAmB,Y,yBAAnBA,EAAmB,QAAnBA,EAAmB,qBAFhB,S,GAET,G,qGEhBS,wBAII,QACJ,Q,yBAHI,mBAEA,8C,qBA+BR,yB,KAAqC,oB,sBACrC,YAA8B,0BAAe,QAuClD,Y,MAAM8F,UAAgC,IAgCzC,YACYC,EACA9F,EACA+F,GAERC,QAJQ,KAAAF,SACA,KAAA9F,OACA,KAAA+F,SAjCL,KAAAzE,MAAkB,GAET,KAAA2E,MAAoB,CAChC,CAAE9C,GAAI,WAAYN,KAAM,YACxB,CAAEM,GAAI,WAAYN,KAAM,YACxB,CAAEM,GAAI,YAAaN,KAAM,cAGtB,KAAAqD,UAAsBvF,KAAKsF,MAAM7D,IAAKuB,GAAM,GAAGA,EAAER,IAExC,KAAAgD,OAASxF,KAAKX,KAAKoG,cAEnB,KAAA9D,QAAU3B,KAAKmF,OAAOxD,QAEtB,KAAAE,SAAW7B,KAAKmF,OAAOtD,SAEvB,KAAAtB,QAAUP,KAAKmF,OAAO5E,QAEtB,KAAAmF,eAAiB,IAAM1F,KAAKmF,OAAOO,iBAEnC,KAAAC,eAAiB,IAAM3F,KAAKmF,OAAOQ,iBAEnC,KAAAC,aAAgBC,GAC5B7F,KAAKmF,OAAOW,WAAW,CAAElG,MAAO,IAAIC,KAAKgG,KAE7B,KAAAE,WAAcF,GAC1B7F,KAAKmF,OAAOW,WAAW,CAAEhG,IAAK,IAAID,KAAKgG,KAE3B,KAAAG,SAAYrF,GAAUX,KAAKmF,OAAOW,WAAW,CAAEnF,UAUlD,W,yDACHX,KAAKX,KAAK4G,YAAYhG,KAAK,OAAAiG,EAAA,GAAO9F,GAAMA,IAAIiC,YAClDrC,KAAKmG,aACD,cACAnG,KAAKoF,OAAOgB,cAAcpC,UAAWqC,IACjC,GAAIA,EAAOC,IAAI,YAAa,CACxB,MAAM3F,EAAQ0F,EAAOE,IAAI,YAAYC,MAAM,KAC3C,GAAI7F,EAAMC,OAAQ,CACd,MAAM6F,EAAQzG,KAAKX,KAAKqH,YAAY/F,GACpC,IAAK8F,EACD,OAEJzG,KAAKX,KAAKuF,SAAW5E,KAAKX,KAAKsH,UAAUC,KACpCC,GAAQA,EAAIrE,KAAOiE,EAAMK,WAE9B9G,KAAKgG,SAASrF,Y,6CAvDzBuE,GAAuB,8B,uBAAvBA,EAAuB,2lB,GAAA,MAnF5B,2BACI,uBAGI,yCAAiB,EAAAc,SAAA,M,gBAGjB,uBAAwB,qBAAU,OAClC,6B,gBAMJ,OACJ,OACA,2BACI,iCACI,kBAGI,2CAA0B,EAAAJ,aAAA,GAAuB,M,iBAHrD,OAMA,mBAGI,2CAA0B,EAAAG,WAAA,GAAqB,M,iBAHnD,OAMJ,OACA,mCAIA,wCACJ,OACA,qBAII,gCAAS,EAAAL,oB,iBAET,gC,iBACA,sB,iBACJ,OACA,qBAII,gCAAS,EAAAC,oB,iBAET,aAAG,2BAAe,OACtB,Q,sDAlDQ,oEAMsB,4CAQJ,8BAGd,qEAMA,mEAOJ,sBAOJ,iDAGc,2CACV,4CAKJ,yE,qwBAkCL,G,2BCtEA,Y,MAAMoB,G,6CAAAA,I,uBAAAA,EAAgB,uOAnBrB,oBACA,iBACI,0BACA,gBACI,wBACJ,OACJ,S,8MAaD,G,8FCdK,QACI,gBAGI,gBACI,aAAI,yBAAc,OAClB,YAAG,Q,gBAAgC,OACvC,OACA,gBACI,aAAI,mCAAuB,OAC3B,aAAG,S,iBAAoC,OAC3C,OACJ,OACA,iBAGI,iBAGI,cAAI,8BAAkB,OACtB,aAAG,S,iBAAgC,OACvC,OACA,iBAGI,iBACI,iBAGI,cAAI,2BAAe,OACnB,aAAG,S,iBAAgC,OACvC,OACA,iBAGI,cAAI,0BAAc,OAClB,aAAG,S,iBAAmC,OAC1C,OACJ,OACA,cAAI,qBAAS,OACb,aAAG,S,iBAA+B,OACtC,OACA,kBAGI,cAAI,uBAAW,OACf,aAAG,S,iBAAiC,OACxC,OACJ,OACJ,Q,qBA3Ce,yCAIA,8CAUA,iDAUQ,2CAMA,8CAIR,gDAMA,mD,yBA/CnB,QACI,iC,gBAkDJ,Q,8BAlDmB,6CAA2B,e,sBAoD1C,iBACI,yBACA,eAAU,iCAAsB,OACpC,Q,MAFiB,6B,uBAKjB,iBACI,eACI,gEACJ,OACJ,QAeL,a,MAAMC,EAwBT,YAAoB7B,GAAA,KAAAA,SAvBJ,KAAA8B,YAAcjH,KAAKmF,OAAOzC,MAAMzC,KAC5C,OAAAwB,EAAA,GAAKuB,GAAMA,EAAEP,OAAS,IAEV,KAAAe,WAAaxD,KAAKmF,OAAOzC,MAAMzC,KAC3C,OAAAwB,EAAA,GAAKuB,GAAM,OAAAkE,EAAA,GAAe,CAAEC,QAASnE,EAAEQ,YAAc,MAEzC,KAAAC,WAAazD,KAAKmF,OAAOzC,MAAMzC,KAC3C,OAAAwB,EAAA,GAAKuB,IAA6B,KAArBA,EAAES,YAAc,IAAU2D,QAAQ,KAEnC,KAAAvE,YAAc7C,KAAKmF,OAAOzC,MAAMzC,KAC5C,OAAAwB,EAAA,GAAKuB,GAAMA,EAAEH,aAAe,IAEhB,KAAAK,eAAiBlD,KAAKmF,OAAOzC,MAAMzC,KAC/C,OAAAwB,EAAA,GAAKuB,GAAMA,EAAEE,gBAAkB,IAEnB,KAAAK,UAAYvD,KAAKmF,OAAOzC,MAAMzC,KAC1C,OAAAwB,EAAA,GAAKuB,IAA4B,KAApBA,EAAEO,WAAa,IAAU6D,QAAQ,KAElC,KAAA/D,YAAcrD,KAAKmF,OAAOzC,MAAMzC,KAC5C,OAAAwB,EAAA,GAAKuB,IAA8B,KAAtBA,EAAEK,aAAe,IAAU+D,QAAQ,KAEpC,KAAAzF,QAAU3B,KAAKmF,OAAOxD,QAI/B,WACH3B,KAAKmF,OAAOW,WAAW,CAAEpF,KAAM,Y,6CA3B1BsG,GAAqB,U,uBAArBA,EAAqB,u+B,GAAA,MA9E1B,+B,gBAoDA,wCAMA,0C,qBA1De,kCAA0B,gB,mOA8E1C,G,qFC9CiB,iBAKI,gBACI,Q,eACJ,OACA,gBAAuB,QAA4C,OACnE,gBAAuB,QAAwB,OAC/C,gBAAuB,QAAqB,OAC5C,iBAAuB,SAAuB,OAClD,Q,yBANQ,kDAEmB,+CACA,4BACA,yBACA,oC,0BAjCvC,QACI,gBAGI,gBACI,aAAI,yBAAc,OAClB,YAAG,Q,gBAAgC,OACvC,OACA,gBACI,aAAI,uBAAW,OACf,aAAG,S,iBAAiC,OACxC,OACJ,OACA,iBACI,iBACI,iBAAuB,gBAAI,OAC3B,iBAAuB,sBAAU,OACjC,iBAAuB,6BAAiB,OACxC,iBAAuB,0BAAc,OACrC,iBAAuB,uBAAW,OACtC,OACA,iBACI,0B,iBAaJ,OACJ,OACJ,Q,qBA/Be,yCAIA,iDAekB,gD,0BA1BrC,QACI,iC,gBAsCJ,Q,8BAtCmB,6CAA2B,e,uBAwC1C,iBACI,yBACA,eAAU,iCAAsB,OACpC,Q,MAFiB,6B,uBAKjB,iBACI,eACI,gEACJ,OACJ,QCvDZ,MAAMK,GAAkB,CACpB,CACIC,KAAM,GACNC,UAAW,EACXC,SAAU,CACN,CAAEF,KAAM,SAAUC,UAAW,IAC7B,CAAED,KAAM,QAASC,UDgEtB,M,MAAME,EA6CT,YAAoBtC,GAAA,KAAAA,SA5CJ,KAAA8B,YAAcjH,KAAKmF,OAAOzC,MAAMzC,KAC5C,OAAAwB,EAAA,GAAKuB,GAAMA,EAAEP,OAAS,IAEV,KAAAY,YAAcrD,KAAKmF,OAAOzC,MAAMzC,KAC5C,OAAAwB,EAAA,GAAKuB,IAA8B,KAAtBA,EAAEK,aAAe,IAAU+D,QAAQ,KAEpC,KAAAzF,QAAU3B,KAAKmF,OAAOxD,QAEtB,KAAA+F,SAAW,OAAA/E,EAAA,GAAc,CACrC3C,KAAKmF,OAAO5E,QACZP,KAAKmF,OAAOzC,QACbzC,KACC,OAAAwB,EAAA,GAAI,EAAElB,EAASmC,MACX,MAAM,MAAE9C,EAAK,IAAEE,GAAQS,EACvB,IAAIsF,EAAOjG,EACX,MAAM+H,EAAQ,GACd,KAAO,OAAAC,GAAA,GAAS/B,EAAM/F,IAAM,CACxB,MAAM+H,EAAI,OAAA5J,EAAA,GAAW4H,GAAM/E,UACrBgH,EAAI,OAAA/G,EAAA,GAAS8G,GAAG/G,UAChB4C,EAAoBhB,EAAMgB,OAAO1C,OAAQ+D,GAC3C,YACI8C,EACAC,EACA/C,EAAIc,KACJd,EAAIc,KAAsB,GAAfd,EAAIzB,SAAgB,MAGvCqE,EAAMI,KAAK,CACPlC,KAAMgC,EACNjE,MAAOlB,EAAMkB,MACboE,KAAMtF,EAAMkB,MAAQF,EAAO9C,OAC3BqH,SAAUvE,EAAOZ,OACb,CAACC,EAAG+E,IAAM/E,GAAK+E,EAAEG,SAAW,EAAI,GAChC,GAEJxF,MAAOiB,EAAO9C,OACdyC,aAAeK,EAAO9C,OAAS8B,EAAMkB,MAAS,KAAKwD,QAAQ,KAE/DvB,EAAO,OAAAqC,GAAA,GAAQrC,EAAM,GAEzB,OAAO8B,KAMR,WACH3H,KAAKmF,OAAOW,WAAW,CAAEpF,KAAM,W,6CAhD1B+G,GAAoB,U,uBAApBA,EAAoB,2tB,GAAA,MAlEzB,gC,gBAwCA,yCAMA,0C,qBA9Ce,kCAA0B,gB,2OAkE1C,IC/DK,CAAEH,KAAM,KAAMa,WAAY,YAqB/B,a,MAAMC,G,8BAAAA,I,oDAAAA,IAAa,SATb,CACL,IACA,IACA,IACA,IACA,IACA,IAAaC,SAAShB,Q,GAGvB","file":"reports-reports-module.cc4681fe0a81e44127d1.js","sourcesContent":["import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import { Injectable } from '@angular/core';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Booking, queryBookings } from '@user-interfaces/bookings';\nimport {\n    downloadFile,\n    HashMap,\n    jsonToCsv,\n    notifyError,\n} from '@user-interfaces/common';\nimport { CalendarEvent, queryEvents } from '@user-interfaces/events';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { differenceInDays, endOfDay, format, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport {\n    generateReportForBookings,\n    generateReportForDeskBookings,\n} from './reports.utilities';\n\nexport interface ReportOptions {\n    type?: 'desks' | 'events';\n    start?: number | Date;\n    end?: number | Date;\n    zones?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsStateService {\n    private _generate = new Subject<number>();\n    private _loading = new BehaviorSubject<string>('');\n    private _active_bookings = new BehaviorSubject<(CalendarEvent | Booking)[]>(\n        []\n    );\n\n    private _options = new BehaviorSubject<ReportOptions>({\n        start: new Date(),\n        end: new Date(),\n    });\n\n    private _bookings_list = this._generate.pipe(\n        debounceTime(500),\n        switchMap((_) => {\n            console.log('Report:', _);\n            const options = this._options.getValue();\n            this._loading.next('Loading report details...');\n            if (!options?.type && !options?.zones?.length) return of([]);\n            const start = startOfDay(\n                options?.start ? new Date(options.start) : new Date()\n            ).valueOf();\n            const end = endOfDay(\n                options?.end ? new Date(options.end) : start\n            ).valueOf();\n            const zones = options?.zones\n                ? options.zones.filter((z) => z !== 'All').join(',')\n                : '';\n            const query = {\n                period_start: Math.floor(start / 1000),\n                period_end: Math.floor(end / 1000),\n            };\n            return options.type === 'desks'\n                ? queryBookings({\n                      ...query,\n                      zones: zones,\n                      type: 'desk',\n                  })\n                : queryEvents({ ...query, zone_ids: zones });\n        }),\n        catchError((_) => []),\n        map((_) => {\n            this._loading.next('');\n            if (!_?.length) {\n                notifyError('No bookings for the selected levels and period');\n            }\n            this._active_bookings.next(_ || []);\n            return _;\n        }),\n        shareReplay()\n    );\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly options = this._options.asObservable();\n\n    public readonly bookings = this._active_bookings.asObservable();\n\n    public readonly counts = this._options.pipe(\n        debounceTime(500),\n        switchMap((filters) => {\n            const zones = (filters.zones || []).filter(\n                (z: any) => z !== -1 && z !== 'All'\n            );\n            return Promise.all(\n                zones.map((z) =>\n                    showMetadata(z, {\n                        name: 'desks',\n                    })\n                        .pipe(map((m) => [z, m.details.length]))\n                        .toPromise()\n                )\n            );\n        }),\n        catchError((_) => []),\n        map((list: [string, number][]) => {\n            const map: HashMap<number> = {};\n            this._active_bookings.next([]);\n            list.forEach(([id, count]) => (map[id] = count));\n            return map;\n        }),\n        shareReplay()\n    );\n\n    public readonly stats: Observable<HashMap> = combineLatest([\n        this.counts,\n        this.bookings,\n    ]).pipe(\n        map(([counts, list]) => {\n            return list[0] instanceof CalendarEvent\n                ? generateReportForBookings(\n                      list as CalendarEvent[],\n                      this.duration * 8\n                  )\n                : generateReportForDeskBookings(\n                      (list as Booking[]) || [],\n                      this.duration,\n                      counts\n                  );\n        })\n    );\n\n    public get duration() {\n        const opts = this._options.getValue();\n        return Math.abs(differenceInDays(opts.start, opts.end));\n    }\n\n    constructor(private _org: OrganisationService) {\n        this._bookings_list.subscribe((_) => _);\n    }\n\n    public generateReport() {\n        console.log('Report');\n        this._generate.next(new Date().valueOf());\n    }\n\n    public setOptions(options: ReportOptions) {\n        if (options.zones?.includes('All')) {\n            options.zones = [\n                'All',\n                ...this._org\n                    .levelsForBuilding(this._org.building)\n                    .map((lvl) => lvl.id),\n            ];\n        } else if (\n            options.zones &&\n            this._options.getValue()?.zones?.includes('All')\n        ) {\n            options.zones = [];\n        }\n        if (\n            options.start?.valueOf() ===\n                this._options.getValue().start?.valueOf() ||\n            options.end?.valueOf() === this._options.getValue().end?.valueOf()\n        )\n            return;\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public downloadReport() {\n        const options = this._options.getValue();\n        const bookings: HashMap[] = this._active_bookings.getValue();\n        downloadFile(\n            `report+${options.type}+${format(\n                options.start,\n                'yyyy-MM-dd'\n            )}+${format(options.end, 'yyyy-MM-dd')}.csv`,\n            jsonToCsv(\n                bookings.map((bkn) => {\n                    const details = bkn.toJSON();\n                    delete details.zones;\n                    delete details.server_names;\n                    return details;\n                })\n            )\n        );\n    }\n}\n","import { Booking } from '@user-interfaces/bookings';\nimport { HashMap } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nexport function generateReportForDeskBookings(bookings: Booking[], util_period: number = 1, counts: HashMap<number> = {}) {\n    console.log('Counts:', counts);\n    const total = Object.keys(counts).reduce((c, i) => c + (counts[i] || 0), 0);\n    const utilisation = bookings.length / total;\n    return {\n        total,\n        count: bookings.length,\n        utilisation,\n        events: bookings\n    };\n}\n\nexport function generateReportForBookings(bookings: CalendarEvent[], util_period: number = 8) {\n    const total_users = bookings.reduce((c, i) => c + i.attendees.length, 0);\n    const total_capacity = bookings.reduce((c, i) => c + i.system.capacity, 0);\n    const utilisation = bookings.reduce((c, i) => c + i.duration, 0) / (util_period * 60);\n    const occupancy = total_users / total_capacity;\n    return {\n        count: bookings.length,\n        avg_length:\n            bookings.reduce((c, i) => c + i.duration, 0) / bookings.length,\n        efficiency: (utilisation + occupancy) / 2,\n        total_users,\n        total_capacity,\n        occupancy,\n        utilisation,\n        events: bookings\n    };\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, Identity } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { ReportsStateService } from './reports-state.service';\n\n@Component({\n    selector: 'reports-options',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-48\">\n            <mat-select\n                multiple\n                [ngModel]=\"(options | async)?.zones\"\n                (ngModelChange)=\"setZones($event)\"\n                placeholder=\"Select Levels...\"\n            >\n                <mat-option value=\"All\">All Levels</mat-option>\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"w-64\">\n            <mat-date-range-input [rangePicker]=\"picker\">\n                <input\n                    matStartDate\n                    [ngModel]=\"(options | async)?.start\"\n                    (ngModelChange)=\"$event ? setStartDate($event) : ''\"\n                    placeholder=\"Start date\"\n                />\n                <input\n                    matEndDate\n                    [ngModel]=\"(options | async)?.end\"\n                    (ngModelChange)=\"$event ? setEndDate($event) : ''\"\n                    placeholder=\"End date\"\n                />\n            </mat-date-range-input>\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-date-range-picker #picker></mat-date-range-picker>\n        </mat-form-field>\n        <button\n            mat-button\n            class=\"ml-4\"\n            [disabled]=\"!!(loading | async)\"\n            (click)=\"generateReport()\"\n        >\n            <mat-spinner *ngIf=\"loading | async\" [diameter]=\"32\"></mat-spinner>\n            <p *ngIf=\"!(loading | async)\">Generate Report</p>\n        </button>\n        <button\n            mat-button\n            class=\"ml-4\"\n            [disabled]=\"!(bookings | async)?.length\"\n            (click)=\"downloadReport()\"\n        >\n            <p>Download Report</p>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n            }\n\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em;\n            }\n        `,\n    ],\n})\nexport class ReportsOptionsComponent extends BaseClass {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly loading = this._state.loading;\n\n    public readonly bookings = this._state.bookings;\n\n    public readonly options = this._state.options;\n\n    public readonly generateReport = () => this._state.generateReport();\n\n    public readonly downloadReport = () => this._state.downloadReport();\n\n    public readonly setStartDate = (date) =>\n        this._state.setOptions({ start: new Date(date) });\n\n    public readonly setEndDate = (date) =>\n        this._state.setOptions({ end: new Date(date) });\n\n    public readonly setZones = (zones) => this._state.setOptions({ zones });\n\n    constructor(\n        private _state: ReportsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.setZones(zones);\n                    }\n                }\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-reports]',\n    template: `\n        <sidebar class=\"h-full\"></sidebar>\n        <main class=\"relative overflow-hidden flex flex-col flex-1 w-1/2 h-full\">\n            <reports-options></reports-options>\n            <div class=\"flex-1 h-1/2 w-full overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class ReportsComponent {}\n","import { Component } from '@angular/core';\nimport { formatDuration } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { ReportsStateService } from './reports-state.service';\n\n@Component({\n    selector: '[report-spaces]',\n    template: `\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ng-container *ngIf=\"total_count | async; else empty_state\">\n                <div\n                    class=\"m-4 p-4 rounded bg-white shadow flex justify-center items-center space-x-2\"\n                >\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Total Bookings</h3>\n                        <p>{{ (total_count | async) || 0 }}</p>\n                    </div>\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Average Bookings Length</h3>\n                        <p>{{ (avg_length | async) || 'None' }}</p>\n                    </div>\n                </div>\n                <div\n                    class=\"m-4 p-4 rounded flex justify-center items-center space-x-4 text-center\"\n                >\n                    <div\n                        class=\"flex flex-col items-center justify-center bg-primary text-white shadow rounded p-4 w-48 h-48\"\n                    >\n                        <h3>Overall Efficiency</h3>\n                        <p>{{ (efficiency | async) || 0 }}%</p>\n                    </div>\n                    <div\n                        class=\"flex flex-col items-center bg-primary text-white border-4 border-primary shadow overflow-hidden rounded pb-4 w-48 h-48\"\n                    >\n                        <div class=\"flex divide-x-4 divide-primary mb-4\">\n                            <div\n                                class=\"flex flex-col items-center justify-center flex-1 bg-gray-200 text-black\"\n                            >\n                                <h3>Total Attendees</h3>\n                                <p>{{ (total_users | async) || 0 }}</p>\n                            </div>\n                            <div\n                                class=\"flex flex-col items-center justify-center flex-1 bg-gray-200 text-black\"\n                            >\n                                <h3>Total Capacity</h3>\n                                <p>{{ (total_capacity | async) || 0 }}</p>\n                            </div>\n                        </div>\n                        <h3>Occupancy</h3>\n                        <p>{{ (occupancy | async) || 0 }}%</p>\n                    </div>\n                    <div\n                        class=\"flex flex-col items-center justify-center bg-primary text-white rounded p-4 w-48 h-48\"\n                    >\n                        <h3>Utilisation</h3>\n                        <p>{{ (utilisation | async) || 0 }}%</p>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n                <p simple>Loading report data...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <p simple>\n                    Select levels and time period to generate a report.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            h3 {\n                font-weight: 500;\n            }\n\n            p:not([simple]) {\n                font-size: 1.75rem;\n            }\n        `,\n    ],\n})\nexport class ReportSpacesComponent {\n    public readonly total_count = this._state.stats.pipe(\n        map((i) => i.count || 0)\n    );\n    public readonly avg_length = this._state.stats.pipe(\n        map((i) => formatDuration({ minutes: i.avg_length || 0 }))\n    );\n    public readonly efficiency = this._state.stats.pipe(\n        map((i) => ((i.efficiency || 0) * 100).toFixed(1))\n    );\n    public readonly total_users = this._state.stats.pipe(\n        map((i) => i.total_users || 0)\n    );\n    public readonly total_capacity = this._state.stats.pipe(\n        map((i) => i.total_capacity || 0)\n    );\n    public readonly occupancy = this._state.stats.pipe(\n        map((i) => ((i.occupancy || 0) * 100).toFixed(1))\n    );\n    public readonly utilisation = this._state.stats.pipe(\n        map((i) => ((i.utilisation || 0) * 100).toFixed(1))\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: ReportsStateService) {}\n\n    public ngOnInit() {\n        this._state.setOptions({ type: 'events' });\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@user-interfaces/bookings';\nimport { timePeriodsIntersect } from '@user-interfaces/common';\nimport {\n    addDays,\n    endOfDay,\n    formatDuration,\n    isBefore,\n    startOfDay,\n} from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ReportsStateService } from './reports-state.service';\n\n@Component({\n    selector: '[report-desks]',\n    template: `\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ng-container *ngIf=\"total_count | async; else empty_state\">\n                <div\n                    class=\"m-4 p-4 rounded bg-white shadow flex justify-center items-center space-x-2\"\n                >\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Total Bookings</h3>\n                        <p>{{ (total_count | async) || 0 }}</p>\n                    </div>\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Utilisation</h3>\n                        <p>{{ (utilisation | async) || 0 }}%</p>\n                    </div>\n                </div>\n                <div class=\"m-4 rounded bg-white shadow \">\n                    <div table-head class=\"flex items-center font-medium border-b border-gray-200\">\n                        <div class=\"w-1/3 p-4\">Date</div>\n                        <div class=\"w-1/6 p-4\">Free Desks</div>\n                        <div class=\"w-1/6 p-4\">Approved Bookings</div>\n                        <div class=\"w-1/6 p-4\">Total Requests</div>\n                        <div class=\"w-1/6 p-4\">Utilisation</div>\n                    </div>\n                    <div table-body>\n                        <div\n                            table-row\n                            class=\"flex items-center border-b border-gray-200\"\n                            *ngFor=\"let date of day_list | async\"\n                        >\n                            <div class=\"w-1/3 p-4\">\n                                {{ date.date | date: 'longDate' }}\n                            </div>\n                            <div class=\"w-1/6 p-4\">{{ date.free || 0 }} / {{ date.total || 0 }}</div>\n                            <div class=\"w-1/6 p-4\">{{ date.approved || 0 }}</div>\n                            <div class=\"w-1/6 p-4\">{{ date.count || 0 }}</div>\n                            <div class=\"w-1/6 p-4\">{{ date.utilisation }}%</div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n                <p simple>Loading report data...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <p simple>\n                    Select levels and time period to generate a report.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            h3 {\n                font-weight: 500;\n            }\n\n            p:not([simple]) {\n                font-size: 1.75rem;\n            }\n        `,\n    ],\n})\nexport class ReportDesksComponent {\n    public readonly total_count = this._state.stats.pipe(\n        map((i) => i.count || 0)\n    );\n    public readonly utilisation = this._state.stats.pipe(\n        map((i) => ((i.utilisation || 0) * 100).toFixed(1))\n    );\n    public readonly loading = this._state.loading;\n\n    public readonly day_list = combineLatest([\n        this._state.options,\n        this._state.stats,\n    ]).pipe(\n        map(([options, stats]) => {\n            const { start, end } = options;\n            let date = start;\n            const dates = [];\n            while (isBefore(date, end)) {\n                const s = startOfDay(date).valueOf();\n                const e = endOfDay(s).valueOf();\n                const events: Booking[] = stats.events.filter((bkn) =>\n                    timePeriodsIntersect(\n                        s,\n                        e,\n                        bkn.date,\n                        bkn.date + bkn.duration * 60 * 1000\n                    )\n                );\n                dates.push({\n                    date: s,\n                    total: stats.total,\n                    free: stats.total - events.length,\n                    approved: events.reduce(\n                        (c, e) => c + (e.approved ? 1 : 0),\n                        0\n                    ),\n                    count: events.length,\n                    utilisation: ((events.length / stats.total) * 100).toFixed(1)\n                });\n                date = addDays(date, 1);\n            }\n            return dates;\n        })\n    );\n\n    constructor(private _state: ReportsStateService) {}\n\n    public ngOnInit() {\n        this._state.setOptions({ type: 'desks' });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedSpacesModule } from '@user-interfaces/spaces';\nimport { SharedUsersModule } from '@user-interfaces/users';\nimport { ReportsOptionsComponent } from './reports-options.component';\nimport { ReportSpacesComponent } from './report-spaces.component';\nimport { ReportDesksComponent } from './report-desks.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: ReportsComponent,\n        children: [\n            { path: 'spaces', component: ReportSpacesComponent },\n            { path: 'desks', component: ReportDesksComponent },\n            { path: '**', redirectTo: 'desks' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        ReportsComponent,\n        ReportsOptionsComponent,\n        ReportSpacesComponent,\n        ReportDesksComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class ReportsModule {}\n"],"sourceRoot":"webpack:///"}