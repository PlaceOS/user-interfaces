{"version":3,"file":"apps_concierge_src_app_events_events_module_ts.js","mappings":"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","names":["EventsComponent","static","this","t","core","VBU","selectors","attrs","_c0","decls","vars","consts","template","rf","ctx","i0","EventStateService","AsyncHandler","changed","timeout","_changed","next","Date","now","period","_options","getValue","calendar","_settings","get","constructor","_org","_dialog","_router","super","BehaviorSubject","_loading","_poll","event_list","combineLatest","active_building","pipe","filter","bld","debounceTime","switchMap","_","options","queryEvents","period_start","getUnixTime","startOfDay","date","period_end","endOfDay","end","calendars","map","list","extension_data","shared_event","sort","a","b","tap","shareReplay","asObservable","loading","startPolling","delay","interval","document","hasFocus","stopPolling","clearInterval","setOptions","value","viewEvent","event","_this","ref","open","GroupEventDetailsModalComponent","data","concierge","subscription","id","componentInstance","edit","subscribe","navigate","remove","_asyncToGenerator","removeEvent","close","_this2","result","openConfirmModal","title","content","icon","confirm_text","reason","toPromise","catch","e","notifyError","notifySuccess","i1","i2","i3","i4","jDH","factory","ɵfac","providedIn","item_r1","images","EventListingComponent_ng_template_4_img_9_Template","length","ctx_r1","time_format","duration","tmp_15_0","linked_event","system_id","zones","address","EventListingComponent_ng_template_6_span_5_Template","tmp_10_0","room","item_r3","email","display_name","tmp_11_0","EventListingComponent_ng_template_8_span_4_Template","item_r4","item_r5","attendees","user_email","host","EventListingComponent_ng_template_10_ng_template_2_Template","view_attendees_r6","checkedInList","item_r7","EventListingComponent_ng_template_12_ng_template_2_Template","view_attendees_r8","checkedInCount","EventListingComponent_ng_template_14_div_0_Template","data_r9","item_r10","state","row_r12","_r11","row","menu_r13","_c9","EventListingComponent","item","resources","find","_state","console","log","user","checked_in","EventListingComponent_ng_template_4_Template","EventListingComponent_ng_template_6_Template","EventListingComponent_ng_template_8_Template","EventListingComponent_ng_template_10_Template","EventListingComponent_ng_template_12_Template","EventListingComponent_ng_template_14_Template","EventListingComponent_ng_template_16_Template","EventListingComponent_ng_template_18_Template","_c8","event_template_r14","_c1","level_template_r15","_c2","room_template_r16","_c3","interested_template_r17","_c4","attending_template_r18","_c5","status_template_r20","_c6","published_template_r19","_c7","actions_template_r21","hour_r1","i_r2","date_r3","event_r5","_r4","$implicit","ctx_r5","EventWeekViewComponent_div_12_button_1_ng_template_6_Template","offset","event_card_r7","now_offset","EventWeekViewComponent_div_12_button_1_Template","EventWeekViewComponent_div_12_div_3_Template","i_r9","event_day_map","dateString","date_r8","isCurrentDay","EventWeekViewComponent","format","startOfMinute","valueOf","getHours","getMinutes","days","Array","fill","idx","hours","start","push","startWith","ngOnInit","addDays","features","EventWeekViewComponent_div_7_Template","EventWeekViewComponent_div_10_Template","EventWeekViewComponent_div_11_Template","EventWeekViewComponent_div_12_Template","weekday_r1","event_r3","_r2","ctx_r3","EventMonthViewComponent_div_3_button_4_ng_template_6_Template","event_card_r5","menu_r7","day_r6","event_r9","_r8","EventMonthViewComponent_div_3_button_4_Template","EventMonthViewComponent_div_3_button_7_Template","EventMonthViewComponent_div_3_button_11_Template","is_month","is_today","EventMonthViewComponent","offset_weekday","month","weekdays","month_days","_setMonthDays","_setWeekdays","startOfWeek","startOfMonth","weekStartsOn","from","keys","i","isSameDay","isSameMonth","EventMonthViewComponent_div_2_Template","EventMonthViewComponent_div_3_Template","EventCalendarComponent","_route","setPeriod","relativeTo","queryParams","queryParamsHandling","nextPeriod","take","range","addWeeks","addMonths","previousPeriod","EventCalendarComponent_span_2_Template","_r1","EventCalendarComponent_event_week_view_24_Template","EventCalendarComponent_ng_template_26_Template","tmp_2_0","month_calendar_r3","range_r1","display","EventsListComponent","has_calendar","distinctUntilChanged","view","period_list","_generatePeriods","_initPeriod","queryParamMap","q","has","setPeriodType","parseInt","selected_range","setView","type","set_route","periods","period_type","subMonths","amount","end_date","week_offset","index","findIndex","$event","EventsListComponent_mat_option_33_Template","EventsListComponent_div_35_Template","EventsListComponent_event_calendar_36_Template","EventsListComponent_div_37_Template","tag_r3","removeTag","_r5","form","patchValue","date_end","getRawValue","controls","disabled","use_24hr","tmp_13_0","duration_info","tz_r6","building_r8","name","level_r9","room_r10","_r7","setBuilding","EventManageComponent_div_0_ng_container_90_mat_option_5_Template","setLevel","EventManageComponent_div_0_ng_container_90_mat_option_13_Template","resource","EventManageComponent_div_0_ng_container_90_mat_option_24_Template","building_zone","building_list","level_zone","active_levels","available_spaces","EventManageComponent_div_0_mat_chip_row_28_Template","addTag","view_access","EventManageComponent_div_0_div_58_Template","EventManageComponent_div_0_mat_option_68_Template","EventManageComponent_div_0_mat_option_69_Template","attendance_type","EventManageComponent_div_0_ng_container_90_Template","save","tag_list","chipList_r11","separators","start_date","all_day","auto_r12","filtered_timezones","timezones","EMPTY","EventManageComponent","tags","max_duration","level","buildings","parent_id","building","levelWithID","_form_state","options_value","zone_ids","ENTER","COMMA","SPACE","time","diff","differenceInMinutes","formatDuration","Math","floor","minutes","initialised","first","location","organiser","currentUser","paramMap","_ref","params","booking","showEvent","newForm","StaffUser","_x","apply","arguments","_updateTimezoneList","valueChanges","new_zones","unique","organisation","input","chipInput","inputElement","feature_list","trim","setValue","existing_tag","indexOf","splice","markAllAsTouched","valid","getInvalidFields","space","SpacePipe","transform","Space","res","postForm","timezone","TIMEZONES_IANA","toLowerCase","includes","i5","i18n_0","$localize","EventManageComponent_div_0_Template","EventManageComponent_ng_template_1_Template","load_state_r13","ROUTES","path","component","children","redirectTo","EventsModule","$C","G2t","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedBookingsModule","SharedEventsModule","FormFieldsModule","RouterModule","forChild","MapLocation","_data","position","map_id","asset_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/events/events.component.ts","./apps/concierge/src/app/events/event-state.service.ts","./apps/concierge/src/app/events/event-listing.component.ts","./apps/concierge/src/app/events/event-week-view.component.ts","./apps/concierge/src/app/events/event-month-view.component.ts","./apps/concierge/src/app/events/event-calendar.component.ts","./apps/concierge/src/app/events/events-list.component.ts","./node_modules/date-fns/subMonths.mjs","./apps/concierge/src/app/events/event-manage.component.ts","./apps/concierge/src/app/events/events.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-events]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"relative flex flex-col flex-1 w-1/2 h-full\">\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class EventsComponent {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    GroupEventDetailsModalComponent,\n    queryEvents,\n    removeEvent,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nexport interface GroupEventOptions {\n    period: 'week' | 'month';\n    date?: number;\n    end?: number;\n    zone_ids?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<GroupEventOptions>({\n        period: 'week',\n    });\n    private _loading = new BehaviorSubject<string>('');\n    private _poll = new BehaviorSubject(0);\n    private _changed = new BehaviorSubject(0);\n\n    public readonly event_list = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._changed,\n        this._poll,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        debounceTime(310),\n        switchMap(([_, options]) => {\n            this._loading.next('Loading event list...');\n            return queryEvents({\n                period_start: getUnixTime(startOfDay(options.date)),\n                period_end: getUnixTime(\n                    endOfDay(options.end || options.date || Date.now()),\n                ),\n                calendars: this.calendar,\n            });\n        }),\n        map((list) =>\n            list\n                .filter((_) => _.extension_data?.shared_event)\n                .sort((a, b) => a.date - b.date),\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public changed() {\n        this.timeout('changed', () => this._changed.next(Date.now()), 100);\n    }\n\n    public get period() {\n        return this._options.getValue()?.period;\n    }\n\n    public get calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n    ) {\n        super();\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval(\n            'poll',\n            () => (document.hasFocus() ? this._poll.next(Date.now()) : ''),\n            delay,\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<GroupEventOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n\n    public viewEvent(event: CalendarEvent) {\n        const ref = this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { event, concierge: true },\n        });\n        this.subscription(\n            `edit:${event.id}`,\n            ref.componentInstance.edit.subscribe(() => {\n                this._router.navigate([\n                    '/entertainment',\n                    'events',\n                    'manage',\n                    event.id,\n                ]);\n            }),\n        );\n        this.subscription(\n            `remove:${event.id}`,\n            ref.componentInstance.remove.subscribe(async () => {\n                await this.removeEvent(event);\n                ref.close();\n            }),\n        );\n    }\n\n    public async removeEvent(event: CalendarEvent) {\n        const result = await openConfirmModal(\n            {\n                title: 'Delete Event',\n                content: `Are you sure you want to delete the event \"${event.title}\"?`,\n                icon: { content: 'delete' },\n                confirm_text: 'Delete',\n            },\n            this._dialog,\n        );\n        if (result.reason !== 'done') return;\n        result.loading('Deleting event...');\n        await removeEvent(event.id, {\n            calendar: this.calendar,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(e);\n                result.close();\n                throw e;\n            });\n        result.close();\n        notifySuccess('Successfully deleted event.');\n        this._changed.next(Date.now());\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { EventStateService } from './event-state.service';\nimport { User } from '@placeos/users';\nimport { tap } from 'rxjs/operators';\nimport { CalendarEvent } from '@placeos/events';\n\n@Component({\n    selector: 'event-listing',\n    template: `\n        <mat-progress-bar\n            class=\"w-full\"\n            [class.opacity-0]=\"!(loading | async)\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[72rem] w-full block text-sm\"\n            [data]=\"event_list\"\n            empty_message=\"No group events for selected period\"\n            [columns]=\"[\n                { key: 'date', name: 'Event', content: event_template },\n                {\n                    key: 'level',\n                    name: 'Level',\n                    content: level_template,\n                    size: '8rem',\n                    sortable: false,\n                },\n                {\n                    key: 'room',\n                    name: 'Room',\n                    content: room_template,\n                    size: '12rem',\n                    sortable: false,\n                },\n                {\n                    key: 'interested',\n                    name: 'Interested',\n                    content: interested_template,\n                    size: '6rem',\n                    sortable: false,\n                },\n                {\n                    key: 'attending',\n                    name: 'Attending',\n                    content: attending_template,\n                    size: '6rem',\n                    sortable: false,\n                },\n                {\n                    key: 'state',\n                    name: 'Status',\n                    content: status_template,\n                    size: '8.5rem',\n                },\n                {\n                    key: 'access',\n                    name: 'Published',\n                    content: published_template,\n                    size: '6rem',\n                    sortable: false,\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: actions_template,\n                    size: '4rem',\n                    sortable: false,\n                },\n            ]\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <div class=\"w-full h-20\"></div>\n        <ng-template #event_template let-item=\"row\">\n            <div class=\"flex items-center space-x-2 px-3 py-2\">\n                <div date class=\"flex flex-col items-center leading-tight w-8\">\n                    <div\n                        month\n                        class=\"text-sm font-medium relative top-0.5 opacity-60\"\n                    >\n                        {{ item.date | date: 'MMM' }}\n                    </div>\n                    <div day class=\"text-2xl font-light relative -top-0.5\">\n                        {{ item.date | date: 'd' }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center justify-center h-12 w-12 rounded overflow-hidden bg-base-200 border border-base-200\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length\"\n                        auth\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full min-w-full object-cover\"\n                    />\n                </div>\n                <div details class=\"flex flex-col\">\n                    <div class=\"text-sm\">{{ item.title }}</div>\n                    <div class=\"text-xs opacity-40\">\n                        {{ item.date | date: 'EEEE, ' + time_format }} &ndash;\n                        {{\n                            item.date + item.duration * 60 * 1000\n                                | date: time_format + ' (z)'\n                        }}\n                    </div>\n                    <div class=\"text-xs\">\n                        {{\n                            (\n                                (item.linked_event?.system_id | space | async)\n                                    ?.zones | building\n                            )?.address\n                        }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #level_template let-item=\"row\">\n            <div class=\"p-4\">\n                {{\n                    ((room(item)?.email | space | async)?.zones | level)\n                        ?.display_name\n                }}\n                <span *ngIf=\"!room(item)?.email\" class=\"opacity-30\">\n                    No Level\n                </span>\n            </div>\n        </ng-template>\n        <ng-template #room_template let-item=\"row\">\n            <div class=\"p-4\">\n                {{ (room(item)?.email | space | async)?.display_name }}\n                <span *ngIf=\"!room(item)?.email\" class=\"opacity-30\">\n                    No Room\n                </span>\n            </div>\n        </ng-template>\n        <ng-template #interested_template let-item=\"row\">\n            <button\n                icon\n                matRipple\n                customTooltip\n                [content]=\"view_attendees\"\n                class=\"rounded h-12 w-12 mx-auto\"\n                [disabled]=\"!item.attendees?.length\"\n            >\n                {{ item.attendees?.length || 0 }}\n            </button>\n            <ng-template #view_attendees>\n                <div\n                    class=\"relative w-[20rem] h-[28rem] overflow-auto bg-white rounded shadow\"\n                >\n                    <attendee-list\n                        [list]=\"item.attendees\"\n                        [host]=\"item.user_email || item.host\"\n                        [hide_close]=\"true\"\n                        [custom_title]=\"'Interested'\"\n                    ></attendee-list>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #attending_template let-item=\"row\">\n            <button\n                icon\n                matRipple\n                customTooltip\n                [content]=\"view_attendees\"\n                class=\"rounded h-12 w-12 mx-auto\"\n                [disabled]=\"!checkedInCount(item.attendees)\"\n            >\n                {{ checkedInCount(item.attendees) }}\n            </button>\n            <ng-template #view_attendees>\n                <div\n                    class=\"relative w-[20rem] h-[28rem] overflow-auto bg-white rounded shadow\"\n                >\n                    <attendee-list\n                        [list]=\"checkedInList(item.attendees)\"\n                        [host]=\"item.user_email || item.host\"\n                        [hide_close]=\"true\"\n                    ></attendee-list>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #published_template let-data=\"data\">\n            <div\n                *ngIf=\"data === 'OPEN' || data === 'open'\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-item=\"row\">\n            <div class=\"p-4\">\n                <div\n                    class=\"px-4 py-1 rounded-full\"\n                    [class.bg-success]=\"\n                        item.state !== 'done' &&\n                        item.state !== 'in_progress' &&\n                        item.state !== 'started'\n                    \"\n                    [class.text-success-content]=\"\n                        item.state !== 'done' &&\n                        item.state !== 'in_progress' &&\n                        item.state !== 'started'\n                    \"\n                    [class.bg-warning]=\"\n                        item.state === 'in_progress' || item.state === 'started'\n                    \"\n                    [class.text-warning-content]=\"\n                        item.state === 'in_progress' || item.state === 'started'\n                    \"\n                    [class.bg-base-200]=\"item.state === 'done'\"\n                    [class.text-base-content]=\"item.state === 'done'\"\n                >\n                    {{\n                        item.state === 'done'\n                            ? 'Done'\n                            : item.state === 'in_progress' ||\n                                item.state === 'started'\n                              ? 'In Progress'\n                              : 'Active'\n                    }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button\n                icon\n                matRipple\n                class=\"h-12 w-12 rounded mx-2\"\n                [matMenuTriggerFor]=\"menu\"\n                [disabled]=\"row.state === 'done'\"\n            >\n                <app-icon>more_vert</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item [disabled]=\"true\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">\n                            confirmation_number\n                        </app-icon>\n                        <div class=\"mr-2\">Promote Event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"viewEvent(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">visibility</app-icon>\n                        <div class=\"mr-2\">View Event</div>\n                    </div>\n                </button>\n                <a\n                    mat-menu-item\n                    [routerLink]=\"[\n                        '/entertainment',\n                        'events',\n                        'manage',\n                        row?.id,\n                    ]\"\n                >\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">edit</app-icon>\n                        <div class=\"mr-2\">Edit Event</div>\n                    </div>\n                </a>\n                <button mat-menu-item [disabled]=\"true\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">content_copy</app-icon>\n                        <div class=\"mr-2\">Copy URL</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"removeEvent(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div class=\"mr-2\">Delete Event</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class EventListingComponent {\n    public readonly loading = this._state.loading;\n    public readonly event_list = this._state.event_list.pipe(\n        tap((_) => console.log('Event List:', _)),\n    );\n\n    public readonly viewEvent = (event: any) => this._state.viewEvent(event);\n    public readonly removeEvent = (event: any) =>\n        this._state.removeEvent(event);\n\n    public room(item: CalendarEvent) {\n        return item.resources.find((_) => _.email !== this._state.calendar);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: EventStateService,\n    ) {}\n\n    public checkedInCount(attendees: User[]) {\n        if (!attendees?.length) return 0;\n        return attendees.filter((user: User) => user.checked_in).length;\n    }\n\n    public checkedInList(attendees: User[]) {\n        if (!attendees?.length) return [];\n        return attendees.filter((user: User) => user.checked_in);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { addDays, format, startOfMinute } from 'date-fns';\nimport { map, shareReplay, startWith } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\n\nimport { EventStateService } from './event-state.service';\n\n@Component({\n    selector: 'event-week-view',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto flex\">\n            <div\n                class=\"sticky left-0 w-24 min-h-full flex flex-col items-end z-20 bg-base-100\"\n            >\n                <div\n                    header\n                    class=\"sticky top-0 h-16 min-h-16 flex justify-end z-10\"\n                >\n                    <div class=\"bg-base-100 pt-6 h-10\">\n                        <div class=\"opacity-30 text-xs px-2\">\n                            {{ now | date: 'zzzz' }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    *ngFor=\"let hour of hours; let i = index\"\n                    class=\"relative min-h-10 w-full flex-1 bg-base-100\"\n                >\n                    <div\n                        hour\n                        class=\"absolute top-0 right-1 -translate-y-1/2 whitespace-nowrap text-xs opacity-60\"\n                    >\n                        {{ hour }} {{ i >= 12 ? 'PM' : 'AM' }}\n                    </div>\n                </div>\n            </div>\n            <div class=\"relative min-w-[84rem] min-h-full z-10\">\n                <div\n                    header\n                    class=\"sticky flex top-0 h-16 min-h-16 border-b border-base-200 bg-base-100 z-10\"\n                >\n                    <div\n                        *ngFor=\"let date of days\"\n                        date\n                        class=\"flex flex-col items-center justify-center p-4 min-w-48 flex-1 border-r border-base-200\"\n                    >\n                        <div class=\"text-sm opacity-60\">\n                            {{ date | date: 'EEEE' }}\n                        </div>\n                        <div>{{ date | date: 'd' }}</div>\n                    </div>\n                </div>\n                <div\n                    *ngFor=\"let hour of hours; let i = index\"\n                    class=\"relative flex min-h-10 min-w-[84rem] flex-1 border-x border-b border-base-200 pointer-events-none\"\n                ></div>\n                <div\n                    *ngFor=\"let date of days; let i = index\"\n                    date\n                    class=\"absolute top-16 left-0 w-[calc(100%/7)] h-[60rem] flex-1 border-r border-base-200 pointer-events-none\"\n                    [style.transform]=\"'translateX(' + i * 100 + '%)'\"\n                >\n                    <button\n                        *ngFor=\"\n                            let event of (event_day_map | async)[\n                                dateString(date)\n                            ] || []\n                        \"\n                        matRipple\n                        class=\"absolute inset-x-1 bg-base-100 rounded border border-base-200 hover:border-info shadow pl-3 pr-2 py-1 overflow-hidden pointer-events-auto\"\n                        [style.top]=\"event.offset * 100 + '%'\"\n                        [style.height]=\"event.length * 100 + '%'\"\n                        (click)=\"viewEvent(event)\"\n                    >\n                        <div\n                            class=\"absolute left-0 inset-y-0 bg-info w-1.5\"\n                        ></div>\n                        <div class=\"text-sm opacity-60 h-full text-left\">\n                            {{ event.date | date: 'shortTime' }} &mdash;\n                            {{ event.title }}\n                        </div>\n                        <div\n                            class=\"absolute inset-0\"\n                            customTooltip\n                            [content]=\"event_card\"\n                            xPosition=\"center\"\n                            yPosition=\"bottom\"\n                            [hover]=\"true\"\n                        ></div>\n                        <ng-template #event_card>\n                            <div class=\"p-2 pointer-events-none\">\n                                <group-event-card\n                                    [event]=\"event\"\n                                ></group-event-card>\n                            </div>\n                        </ng-template>\n                    </button>\n                    <div\n                        now\n                        *ngIf=\"isCurrentDay(date)\"\n                        class=\"absolute inset-x-0 h-0 border-y-2 border-base-content\"\n                        [style.top]=\"now_offset * 100 + '%'\"\n                    >\n                        <div\n                            class=\"absolute left-0 top-0 -translate-x-1/2 -translate-y-1/2 h-4 w-4 rounded-full bg-base-content\"\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class EventWeekViewComponent extends AsyncHandler {\n    public days = new Array(7).fill(0).map((_, idx) => idx + 1);\n    public readonly hours = new Array(24)\n        .fill(0)\n        .map((_, idx) => (idx % 12 ? idx % 12 : 12));\n    public readonly event_list = this._state.event_list;\n    public readonly event_day_map = this.event_list.pipe(\n        map((list) => {\n            const map = {};\n            for (const event of list) {\n                const date = format(event.date, 'yyyy-MM-dd');\n                if (!map[date]) map[date] = [];\n                const start = new Date(event.date);\n                map[date].push({\n                    ...event,\n                    offset:\n                        (start.getHours() * 60 + start.getMinutes()) /\n                        (24 * 60),\n                    length: event.duration / (24 * 60),\n                });\n            }\n            return map;\n        }),\n        startWith({}),\n        shareReplay(1)\n    );\n\n    public readonly viewEvent = (event: any) => this._state.viewEvent(event);\n\n    public dateString(date: number) {\n        if (!date) return '';\n        return format(date, 'yyyy-MM-dd');\n    }\n\n    public isCurrentDay(date: number) {\n        if (!date) return false;\n        return format(Date.now(), 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd');\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).valueOf();\n    }\n\n    public get now_offset() {\n        const now = new Date(this.now);\n        return (now.getHours() * 60 + now.getMinutes()) / (24 * 60);\n    }\n\n    constructor(\n        private _state: EventStateService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'date',\n            this._state.options.subscribe(({ date }) => {\n                if (!date) return;\n                this.days = this.days.map((_, idx) =>\n                    addDays(date, idx).valueOf()\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventStateService } from './event-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    format,\n    addDays,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\nimport { map, shareReplay, startWith } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'event-month-view',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto\">\n            <div\n                class=\"grid grid-cols-7 min-w-full w-[80rem] min-h-full h-[56rem] m-2 border-b border-base-200 \"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60 p-2 h-12\"\n                >\n                    {{ weekday | date: 'EEEE' }}\n                </div>\n                <div\n                    monthday\n                    *ngFor=\"let day of month_days\"\n                    class=\"relative border border-base-200 flex flex-col space-y-1\"\n                >\n                    <div\n                        class=\"rounded-full w-8 h-8 flex items-center justify-center mt-1 ml-1\"\n                        [class.opacity-30]=\"!day.is_month\"\n                        [class.bg-secondary]=\"day.is_today\"\n                        [class.text-secondary-content]=\"day.is_today\"\n                    >\n                        {{ day.id | date: 'd' }}\n                    </div>\n                    <button\n                        matRipple\n                        *ngFor=\"\n                            let event of (event_day_map | async)[\n                                dateString(day.id)\n                            ] || [] | slice: 0:3\n                        \"\n                        (click)=\"viewEvent(event)\"\n                        class=\"relative w-[calc(100%-0.5rem)] h-7 bg-base-100 rounded border border-base-200 hover:border-info shadow pl-3 pr-2 py-1 overflow-hidden mx-1\"\n                    >\n                        <div\n                            class=\"absolute left-0 inset-y-0 bg-info w-1.5\"\n                        ></div>\n                        <div\n                            class=\"text-sm opacity-60 h-full text-left truncate\"\n                        >\n                            {{ event.date | date: 'shortTime' }} &mdash;\n                            {{ event.title }}\n                        </div>\n                        <div\n                            class=\"absolute inset-0\"\n                            customTooltip\n                            [content]=\"event_card\"\n                            xPosition=\"center\"\n                            yPosition=\"bottom\"\n                            [hover]=\"true\"\n                        ></div>\n                        <ng-template #event_card>\n                            <div class=\"p-2 pointer-events-none\">\n                                <group-event-card\n                                    [event]=\"event\"\n                                ></group-event-card>\n                            </div>\n                        </ng-template>\n                    </button>\n                    <button\n                        matRipple\n                        *ngIf=\"\n                            ((event_day_map | async)[dateString(day.id)] || [])\n                                .length > 3\n                        \"\n                        matTooltip=\"More events\"\n                        class=\"relative w-[calc(100%-0.5rem)] h-7 rounded pl-3 pr-2 py-1 overflow-hidden mx-1 underline text-sm\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        {{\n                            ((event_day_map | async)[dateString(day.id)] || [])\n                                .length - 3\n                        }}\n                        more event(s)\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"\n                                let event of (event_day_map | async)[\n                                    dateString(day.id)\n                                ] || [] | slice: 3\n                            \"\n                            (click)=\"viewEvent(event)\"\n                        >\n                            <div class=\"flex items-center space-x-4\">\n                                <div class=\"flex-1\">{{ event.title }}</div>\n                                <div\n                                    class=\"text-xs opacity-60 py-1 px-2 rounded bg-base-200 text-base-content\"\n                                >\n                                    {{ event.date | date: 'shortTime' }}\n                                </div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-rows: 3rem repeat(6, minmax(0, 1fr));\n            }\n        `,\n    ],\n})\nexport class EventMonthViewComponent extends AsyncHandler {\n    public month = startOfDay(Date.now()).valueOf();\n    public weekdays = [];\n\n    public month_days = [];\n    public readonly event_list = this._state.event_list;\n    public readonly event_day_map = this.event_list.pipe(\n        map((list) => {\n            const map = {};\n            for (const event of list) {\n                const date = format(event.date, 'yyyy-MM-dd');\n                if (!map[date]) map[date] = [];\n                const start = new Date(event.date);\n                map[date].push({\n                    ...event,\n                    offset:\n                        (start.getHours() * 60 + start.getMinutes()) /\n                        (24 * 60),\n                    length: event.duration / (24 * 60),\n                });\n            }\n            return map;\n        }),\n        startWith({}),\n        shareReplay(1)\n    );\n\n    public readonly viewEvent = (event: any) => this._state.viewEvent(event);\n\n    public dateString(date: number) {\n        if (!date) return '';\n        return format(date, 'yyyy-MM-dd');\n    }\n\n    public get offset_weekday() {\n        return this._settings.get('app.week_start') || 0;\n    }\n\n    constructor(\n        private _state: EventStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'date',\n            this._state.options.subscribe(({ date }) => {\n                this.month = date;\n                this._setMonthDays();\n                this._setWeekdays();\n            })\n        );\n        this._setMonthDays();\n        this._setWeekdays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                is_today: isSameDay(date, Date.now()),\n                is_month: isSameMonth(date, this.month),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { EventStateService } from './event-state.service';\nimport { map, shareReplay, take } from 'rxjs/operators';\nimport { addMonths, addWeeks, format } from 'date-fns';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'event-calendar',\n    template: `\n        <div class=\"flex items-center border-y border-base-200 w-full\">\n            <div class=\"flex-1 px-2 py-4\">\n                <span *ngIf=\"is_today | async\" class=\"text-info text-xs\">{{\n                    (period | async) === 'week' ? 'This Week' : 'This Month'\n                }}</span>\n            </div>\n            <div class=\"flex-2 flex items-center justify-center space-x-2\">\n                <div class=\"font-medium pl-4\">\n                    {{ (options | async)?.date | date: 'MMM yyyy' }}\n                </div>\n                <button icon matRipple (click)=\"previousPeriod()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextPeriod()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n            <div class=\"flex-1 flex items-center justify-end space-x-2 py-2\">\n                <button\n                    btn\n                    matRipple\n                    class=\"rounded-3xl\"\n                    [class.inverse]=\"(period | async) !== 'week'\"\n                    (click)=\"setPeriod('week')\"\n                >\n                    Week\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"rounded-3xl\"\n                    [class.inverse]=\"(period | async) !== 'month'\"\n                    (click)=\"setPeriod('month')\"\n                >\n                    Month\n                </button>\n            </div>\n        </div>\n        <div class=\"w-full h-4\"></div>\n        <div class=\"relative flex-1 h-1/2 w-full overflow-auto\">\n            <event-week-view\n                *ngIf=\"(period | async) !== 'month'; else month_calendar\"\n            ></event-week-view>\n            <ng-template #month_calendar>\n                <event-month-view></event-month-view>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class EventCalendarComponent {\n    public readonly period = this._state.options.pipe(map((_) => _.period));\n\n    public readonly options = this._state.options;\n    public readonly is_today = this.options.pipe(\n        map((_) => _.date <= Date.now() && _.end > Date.now())\n    );\n    public readonly event_list = this._state.event_list;\n    public readonly event_day_map = this.event_list.pipe(\n        map((list) => {\n            const map = {};\n            for (const event of list) {\n                const date = format(event.date, 'yyyy-MM-dd');\n                if (!map[date]) map[date] = [];\n                map[date].push(event);\n            }\n            return map;\n        }),\n        shareReplay(1)\n    );\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: EventStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {}\n\n    public setPeriod(period: 'week' | 'month') {\n        this._state.setOptions({ period });\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { period },\n            queryParamsHandling: 'merge',\n        });\n    }\n\n    public async nextPeriod() {\n        const { date, period } = await this.options.pipe(take(1)).toPromise();\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: {\n                range:\n                    period === 'week'\n                        ? addWeeks(date, 1).valueOf()\n                        : addMonths(date, 1).valueOf(),\n            },\n            queryParamsHandling: 'merge',\n        });\n    }\n\n    public async previousPeriod() {\n        const { date, period } = await this.options.pipe(take(1)).toPromise();\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: {\n                range:\n                    period === 'week'\n                        ? addWeeks(date, -1).valueOf()\n                        : addMonths(date, -1).valueOf(),\n            },\n            queryParamsHandling: 'merge',\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventStateService } from './event-state.service';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    startOfMonth,\n    startOfWeek,\n    format,\n    addWeeks,\n    subMonths,\n} from 'date-fns';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-event-list',\n    template: `\n        <div class=\"absolute inset-0 flex flex-col\">\n            <div class=\"flex items-center justify-between p-8\">\n                <h2 class=\"text-2xl font-medium\">Events</h2>\n                <a\n                    btn\n                    matRipple\n                    [routerLink]=\"['/entertainment', 'events', 'manage']\"\n                >\n                    <div class=\"ml-2\">Create Event</div>\n                    <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                </a>\n            </div>\n            <div filters class=\"flex items-center px-8 space-x-2 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    class=\"rounded-3xl\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"setView('list')\"\n                >\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-xl\">list</app-icon>\n                        <div class=\"pr-2\">List</div>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"rounded-3xl\"\n                    [class.inverse]=\"view !== 'calendar'\"\n                    (click)=\"setView('calendar')\"\n                >\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-xl\">event</app-icon>\n                        <div class=\"pr-2\">Calendar</div>\n                    </div>\n                </button>\n                <div class=\"h-full px-2\">\n                    <div class=\"w-px h-full bg-base-300\"></div>\n                </div>\n                <mat-form-field appearance=\"outline\" class=\"w-32 no-subscript\">\n                    <mat-select\n                        [ngModel]=\"period | async\"\n                        (ngModelChange)=\"setPeriodType($event)\"\n                    >\n                        <mat-option value=\"week\">Week</mat-option>\n                        <mat-option value=\"month\">Month</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"w-64 no-subscript\">\n                    <mat-select\n                        [(ngModel)]=\"selected_range\"\n                        (ngModelChange)=\"setPeriod($event)\"\n                    >\n                        <mat-option\n                            [value]=\"range.id\"\n                            *ngFor=\"let range of period_list\"\n                        >\n                            {{ range.display }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"h-1/2 flex-1 w-full px-8 overflow-y-auto relative\">\n                <div\n                    class=\"w-full min-h-full overflow-x-auto\"\n                    *ngIf=\"view === 'list'\"\n                >\n                    <event-listing class=\"block\"></event-listing>\n                </div>\n                <event-calendar\n                    *ngIf=\"view === 'calendar'\"\n                    [period]=\"period | async\"\n                ></event-calendar>\n            </div>\n        </div>\n        <div\n            *ngIf=\"!has_calendar\"\n            class=\"absolute inset-0 flex items-center justify-center z-50\"\n        >\n            <div class=\"absolute inset-0 bg-base-100 opacity-80\"></div>\n            <p class=\"opacity-60 text-lg max-w-[32rem]\">\n                A shared calendar is required to view and manage group events.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                flex: 1;\n            }\n        `,\n    ],\n})\nexport class EventsListComponent extends AsyncHandler {\n    public readonly period = this._state.options.pipe(\n        map((_) => _.period),\n        distinctUntilChanged()\n    );\n\n    public view: 'list' | 'calendar' = 'list';\n    public period_list = [];\n    public selected_range: number;\n\n    public get has_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: EventStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription('poll_events', this._state.startPolling());\n        this.subscription(\n            'period',\n            this.period.subscribe(() => {\n                this._generatePeriods();\n                this._initPeriod();\n            })\n        );\n        this._generatePeriods();\n        this._initPeriod();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((q) => {\n                if (q.has('view')) {\n                    this.view = q.get('view') as 'list' | 'calendar';\n                }\n                if (q.has('period') && q.get('period') !== this._state.period) {\n                    this.setPeriodType(\n                        q.get('period') as 'week' | 'month',\n                        false\n                    );\n                }\n                this._generatePeriods();\n\n                if (q.has('range')) {\n                    this.timeout('update', () => {\n                        const id = parseInt(q.get('range'), 10);\n                        const item = this.period_list.find(\n                            (_) => id >= _.start && id < _.end\n                        ) ||\n                            this.period_list[0] || {\n                                start: id,\n                                end:\n                                    this._state.period === 'week'\n                                        ? addWeeks(id, 1).valueOf()\n                                        : addMonths(id, 1).valueOf(),\n                            };\n                        this.selected_range = item.id || id;\n                        this._state.setOptions({\n                            date: item.start,\n                            end: item.end,\n                        });\n                        this.setPeriod(this.selected_range);\n                    });\n                }\n            })\n        );\n    }\n\n    public setView(view: 'list' | 'calendar') {\n        this.view = view;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { view: view },\n            queryParamsHandling: 'merge',\n        });\n    }\n\n    public setPeriodType(type: 'week' | 'month', set_route = true) {\n        this._state.setOptions({ period: type });\n        if (set_route) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { period: type },\n                queryParamsHandling: 'merge',\n            });\n        }\n    }\n\n    public setPeriod(id: number) {\n        this.timeout('set_period', () => {\n            const item =\n                this.period_list.find((_) => id >= _.start && id < _.end) ||\n                this.period_list[0];\n            if (!item) return;\n            this.selected_range = item.id;\n            const { start, end } = item;\n            this._state.setOptions({ date: start, end });\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { range: id },\n                queryParamsHandling: 'merge',\n            });\n        });\n    }\n\n    private _generatePeriods() {\n        this.timeout('generate_periods', async () => {\n            const periods = [];\n            const period_type = await this.period.pipe(take(1)).toPromise();\n            let date = subMonths(Date.now(), 6).valueOf();\n            const end_date = addMonths(Date.now(), 6).valueOf();\n            const week_offset = this._settings.get('app.week_start') || 0;\n            if (period_type === 'month') {\n                date = startOfMonth(date).valueOf();\n            } else if (period_type === 'week') {\n                date = startOfWeek(date, {\n                    weekStartsOn: week_offset,\n                }).valueOf();\n            }\n            while (date < end_date) {\n                if (period_type === 'week') {\n                    const end = endOfDay(addDays(date, 6)).valueOf();\n                    periods.push({\n                        id: date,\n                        start: date,\n                        end,\n                        display: `${format(date, 'EEE, do MMM')} – ${format(\n                            end,\n                            'do MMM'\n                        )}`,\n                    });\n                    date = addDays(date, 7).valueOf();\n                } else if (period_type === 'month') {\n                    const end = addDays(addMonths(date, 1), -1).valueOf();\n                    periods.push({\n                        id: date,\n                        start: date,\n                        end,\n                        display: `${format(date, 'MMMM yyyy')}`,\n                    });\n                    date = addMonths(date, 1).valueOf();\n                } else break;\n            }\n            this.period_list = periods;\n        });\n    }\n\n    private _initPeriod() {\n        this.timeout(\n            'update',\n            () => {\n                if (this.period_list.length) {\n                    let index = this.period_list.findIndex(\n                        (_) => _.start <= Date.now() && _.end >= Date.now()\n                    );\n                    if (index < 0) index = 0;\n                    this.setPeriod(this.period_list[index].id);\n                    this.selected_range = this.period_list[index].id;\n                }\n            },\n            350\n        );\n    }\n}\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component } from '@angular/core';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    BookingFormService,\n    removeBooking,\n    showBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    SettingsService,\n    TIMEZONES_IANA,\n    currentUser,\n    getInvalidFields,\n    notifyError,\n    randomString,\n    unique,\n} from '@placeos/common';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { first, startWith, take } from 'rxjs/operators';\nimport { EventStateService } from './event-state.service';\nimport {\n    differenceInMinutes,\n    format,\n    formatDuration,\n    startOfDay,\n} from 'date-fns';\nimport {\n    CalendarEvent,\n    EventFormService,\n    removeEvent,\n    showEvent,\n} from '@placeos/events';\nimport { StaffUser, User } from '@placeos/users';\nimport { Space, SpacePipe } from '@placeos/spaces';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'app-event-manage',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 overflow-auto\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <a\n                icon\n                matRipple\n                class=\"sticky top-2 right-2 ml-auto\"\n                [routerLink]=\"['/entertainment', 'events']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n            <form\n                class=\"flex flex-col w-[40rem] max-w-full mx-auto px-4\"\n                [formGroup]=\"form\"\n            >\n                <h3 class=\"py-4 text-2xl font-medium\">\n                    {{ form.value.id ? 'Edit' : 'New' }} Group Event\n                </h3>\n                <section class=\"flex flex-col space-y-2\">\n                    <label for=\"title\">Event Title<span>*</span></label>\n                    <ng-container>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Team Meeting\"\n                            />\n                            <mat-error>\n                                {{ 'FORM.TITLE_ERROR' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                        <label for=\"host\">Organiser<span>*</span></label>\n                        <a-user-search-field\n                            class=\"block mb-4\"\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></a-user-search-field>\n                        <label for=\"tags\">Tags</label>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"no-subscript\"\n                        >\n                            <mat-chip-grid #chipList aria-label=\"Event Tags\">\n                                <mat-chip-row\n                                    *ngFor=\"let tag of tag_list\"\n                                    [selectable]=\"true\"\n                                    [removable]=\"true\"\n                                    (removed)=\"removeTag(tag)\"\n                                >\n                                    {{ tag }}\n                                    <app-icon matChipRemove>close</app-icon>\n                                </mat-chip-row>\n                                <input\n                                    placeholder=\"Add new tags relevant to this event...\"\n                                    [matChipInputFor]=\"chipList\"\n                                    [matChipInputSeparatorKeyCodes]=\"separators\"\n                                    [matChipInputAddOnBlur]=\"true\"\n                                    (matChipInputTokenEnd)=\"addTag($event)\"\n                                />\n                            </mat-chip-grid>\n                        </mat-form-field>\n                        <div class=\"py-4 flex items-center space-x-8\">\n                            <mat-checkbox formControlName=\"featured\">\n                                Featured\n                            </mat-checkbox>\n                            <mat-checkbox\n                                [ngModel]=\"form.value.view_access === 'OPEN'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        view_access: $event\n                                            ? 'OPEN'\n                                            : 'PRIVATE',\n                                    })\n                                \"\n                            >\n                                Publish\n                            </mat-checkbox>\n                        </div>\n                    </ng-container>\n                    <!-- END BASIC DETAILS -->\n                    <div class=\"w-full h-px bg-base-200\"></div>\n                    <h3 class=\"py-4 text-2xl font-medium\">Date and Time</h3>\n                    <ng-container>\n                        <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                            <div class=\"flex-1 min-w-[256px] relative\">\n                                <label for=\"date\">\n                                    {{ 'FORM.DATE' | translate }}<span>*</span>\n                                </label>\n                                <a-date-field\n                                    name=\"date\"\n                                    formControlName=\"date\"\n                                    [to]=\"end_date\"\n                                >\n                                    {{ 'FORM.DATE_ERROR' | translate }}\n                                </a-date-field>\n                            </div>\n                            <div class=\"flex-1 min-w-[256px] relative\">\n                                <label for=\"date\">\n                                    {{ 'FORM.END_DATE' | translate\n                                    }}<span>*</span>\n                                </label>\n                                <a-date-field\n                                    name=\"date\"\n                                    formControlName=\"date_end\"\n                                    [from]=\"start_date\"\n                                    [to]=\"end_date\"\n                                >\n                                    {{ 'FORM.DATE_ERROR' | translate }}\n                                </a-date-field>\n                            </div>\n                        </div>\n                        <div\n                            class=\"flex items-center space-x-2\"\n                            *ngIf=\"!form.value.all_day\"\n                        >\n                            <div class=\"flex-1 w-1/3\">\n                                <label for=\"start-time\">\n                                    {{ 'FORM.START_TIME' | translate }}\n                                    <span>*</span>\n                                </label>\n                                <a-time-field\n                                    name=\"start-time\"\n                                    [ngModel]=\"form.getRawValue().date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [disabled]=\"form.controls.date.disabled\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    [use_24hr]=\"use_24hr\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex-1 w-1/3\">\n                                <label for=\"end-time\">\n                                    {{ 'FORM.END_TIME' | translate\n                                    }}<span>*</span>\n                                </label>\n                                <a-time-field\n                                    name=\"end-time\"\n                                    [ngModel]=\"\n                                        form.value.date_end ||\n                                        form.value.date +\n                                            form.value.duration * 60 * 1000\n                                    \"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date_end: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    [from]=\"\n                                        form?.getRawValue()?.date +\n                                        30 * 60 * 1000\n                                    \"\n                                    [use_24hr]=\"use_24hr\"\n                                    [extra_info_fn]=\"duration_info\"\n                                ></a-time-field>\n                            </div>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                                Timezone:\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <app-icon matPrefix class=\"text-2xl\">\n                                    search\n                                </app-icon>\n                                <input\n                                    matInput\n                                    formControlName=\"timezone\"\n                                    placeholder=\"Timezone\"\n                                    [matAutocomplete]=\"auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let tz of filtered_timezones\"\n                                    [value]=\"tz\"\n                                >\n                                    {{ tz }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!timezones.length\"\n                                    [disabled]=\"true\"\n                                >\n                                    No matching timezones\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                    </ng-container>\n                    <!-- END DATE TIME -->\n                    <div class=\"w-full h-px bg-base-200\"></div>\n                    <h3 class=\"py-4 text-2xl font-medium\">Location</h3>\n                    <ng-container>\n                        <div class=\"flex items-center space-x-2 pb-2\">\n                            <button\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [class.inverse]=\"false\"\n                                [class.inverse]=\"\n                                    form.value.attendance_type !== 'ONSITE'\n                                \"\n                                (click)=\"\n                                    form.patchValue({\n                                        attendance_type: 'ONSITE',\n                                    })\n                                \"\n                            >\n                                <app-icon class=\"text-2xl\">domain</app-icon>\n                                <div class=\"mx-2\">On Premise</div>\n                            </button>\n                            <button\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [class.inverse]=\"\n                                    form.value.attendance_type !== 'ONLINE'\n                                \"\n                                (click)=\"\n                                    form.patchValue({\n                                        attendance_type: 'ONLINE',\n                                    })\n                                \"\n                            >\n                                <app-icon class=\"text-2xl\">laptop_mac</app-icon>\n                                <div class=\"mx-2\">Online Only</div>\n                            </button>\n                            <button\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [class.inverse]=\"\n                                    form.value.attendance_type !== 'ANY'\n                                \"\n                                (click)=\"\n                                    form.patchValue({ attendance_type: 'ANY' })\n                                \"\n                            >\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div class=\"mx-2\">Both</div>\n                            </button>\n                        </div>\n                        <ng-container\n                            *ngIf=\"form.value.attendance_type !== 'ONLINE'\"\n                        >\n                            <label for=\"location\">Building Location</label>\n                            <mat-form-field appearance=\"outline\">\n                                <mat-select\n                                    [ngModel]=\"building_zone\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    (ngModelChange)=\"setBuilding($event)\"\n                                    placeholder=\"Select Building\"\n                                >\n                                    <mat-option\n                                        *ngFor=\"\n                                            let building of building_list\n                                                | async\n                                        \"\n                                        [value]=\"building\"\n                                    >\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <div class=\"flex space-x-2\">\n                                <div class=\"flex flex-col flex-[2]\">\n                                    <label for=\"level\">Level</label>\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-select\n                                            [ngModel]=\"level_zone\"\n                                            [ngModelOptions]=\"{\n                                                standalone: true,\n                                            }\"\n                                            (ngModelChange)=\"setLevel($event)\"\n                                            placeholder=\"Select Level\"\n                                        >\n                                            <mat-option\n                                                *ngFor=\"\n                                                    let level of active_levels\n                                                        | async\n                                                \"\n                                                [value]=\"level\"\n                                            >\n                                                {{\n                                                    level.display_name ||\n                                                        level.name\n                                                }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"flex flex-col flex-[3]\">\n                                    <label for=\"level\">Room</label>\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-select\n                                            [(ngModel)]=\"resource\"\n                                            [ngModelOptions]=\"{\n                                                standalone: true,\n                                            }\"\n                                            [disabled]=\"\n                                                (available_spaces | async)\n                                                    ?.length === 0\n                                            \"\n                                            placeholder=\"Select Room\"\n                                        >\n                                            <mat-option><i>None</i></mat-option>\n                                            <mat-option\n                                                *ngFor=\"\n                                                    let room of available_spaces\n                                                        | async\n                                                \"\n                                                [value]=\"room.email\"\n                                            >\n                                                {{\n                                                    room.display_name ||\n                                                        room.name\n                                                }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                    <!-- END LOCATION -->\n                    <div class=\"w-full h-px bg-base-200\"></div>\n                    <h3 class=\"py-4 text-2xl font-medium\">Event Information</h3>\n                    <ng-container>\n                        <label for=\"title\">Event Description</label>\n                        <rich-text-input\n                            formControlName=\"body\"\n                        ></rich-text-input>\n                        <label for=\"tags\">Images</label>\n                        <image-list-field\n                            formControlName=\"images\"\n                        ></image-list-field>\n                    </ng-container>\n                </section>\n                <div\n                    class=\"flex justify-end space-x-2 sticky bottom-0 w-full bg-base-100 py-4\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"inverse w-32\"\n                        [routerLink]=\"['/entertainment', 'events']\"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4\"\n            >\n                <mat-spinner diameter=\"48\"></mat-spinner>\n                <p>Saving event...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class EventManageComponent extends AsyncHandler {\n    public loading = false;\n    public timezones: string[] = [];\n    public resource: string;\n    public filtered_timezones: string[] = [];\n\n    public readonly form = this._form_state.form;\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n    public readonly building_list = this._org.building_list;\n    public readonly active_levels = this._org.active_levels;\n    public readonly available_spaces = this._form_state.available_spaces;\n\n    public get tag_list() {\n        return this.form.getRawValue().tags || EMPTY;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get building_zone() {\n        const level = this.level_zone;\n        const building = this._org.buildings.find(\n            (b) => b.id === level?.parent_id,\n        );\n        return building || this._org.building;\n    }\n\n    public get level_zone() {\n        const zones = this._form_state.options_value.zone_ids || [];\n        const level = this._org.levelWithID(zones);\n        return level;\n    }\n\n    public readonly duration_info = (time: number) => {\n        const date = this.form.getRawValue().date;\n        if (format(date, 'yyyy-MM-dd') !== format(time, 'yyyy-MM-dd'))\n            return '';\n        const diff = differenceInMinutes(time, date);\n        return ` (${formatDuration({\n            hours: Math.floor(diff / 60),\n            minutes: diff % 60,\n        })})`;\n    };\n\n    constructor(\n        private _form_state: EventFormService,\n        private _state: EventStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.form.patchValue({\n            location:\n                this._org.building.address || this._org.building.display_name,\n            organiser: currentUser(),\n            attendance_type: 'ONSITE',\n            shared_event: true,\n        });\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(async (params) => {\n                if (params.has('id')) {\n                    const booking = await showEvent(params.get('id'), {\n                        calendar: this._state.calendar,\n                    }).toPromise();\n                    if (!booking)\n                        return this._router.navigate([\n                            '/entertainment',\n                            'events',\n                        ]);\n                    this._form_state.newForm(booking);\n                    console.log('Event:', booking.extension_data?.tags);\n                    this.resource = booking.resources.find(\n                        (_) => _.email !== this._state.calendar,\n                    )?.email;\n                    console.log('Resource:', this.resource);\n                    this.form.patchValue({\n                        tags: booking.extension_data?.tags || [],\n                        organiser: new StaffUser({\n                            id: booking.organiser?.id,\n                            email: booking.host,\n                            name: booking.organiser?.name,\n                        }),\n                        resources: booking.resources.filter(\n                            (_) => _.email !== this._state.calendar,\n                        ),\n                    });\n                }\n            }),\n        );\n        this._updateTimezoneList();\n        this.subscription(\n            'tz-change',\n            this.form.valueChanges.subscribe(() => this._updateTimezoneList()),\n        );\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setLevel(level: BuildingLevel) {\n        const new_zones = unique([\n            this._org.organisation.id,\n            this._org.building.parent_id,\n            this._org.building.id,\n            level.id,\n        ]);\n        this._form_state.setOptions({ zone_ids: [level.id] });\n    }\n\n    /**\n     * Add a feature to the list of features for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const input = event.chipInput.inputElement;\n        const value = event.value;\n        const feature_list = this.tag_list;\n        if ((value || '').trim()) {\n            feature_list.push(value);\n            this.form.controls.tags.setValue(feature_list);\n        }\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Feature to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(this.form)}]`,\n            );\n        }\n        this.loading = true;\n        let resources = this.form.getRawValue().resources;\n        const space = await new SpacePipe().transform(this._state.calendar);\n        resources.push(\n            space ||\n                new Space({\n                    id: this._state.calendar,\n                    email: this._state.calendar,\n                }),\n        );\n        if (this.resource) {\n            const resource = await new SpacePipe().transform(this.resource);\n            resources.push(resource);\n        }\n        console.log('Resources:', resources);\n        resources = unique(resources, 'email');\n        this.form.patchValue({ resources, host: this._state.calendar });\n        const date = this.form.getRawValue().date;\n        const res = await this._form_state\n            .postForm(false, [this._state.calendar], true)\n            .catch((e) => notifyError(e));\n        this._state.changed();\n        this.loading = false;\n        if (res) {\n            this._router.navigate(['/entertainment', 'events'], {\n                queryParams: { range: startOfDay(date).valueOf() },\n            });\n        }\n    }\n\n    private _updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase()),\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { EventsListComponent } from './events-list.component';\nimport { EventManageComponent } from './event-manage.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { EventListingComponent } from './event-listing.component';\nimport { EventWeekViewComponent } from './event-week-view.component';\nimport { EventMonthViewComponent } from './event-month-view.component';\nimport { EventCalendarComponent } from './event-calendar.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: EventsComponent,\n        children: [{ path: '', component: EventsListComponent }],\n    },\n    { path: 'manage', component: EventManageComponent },\n    { path: 'manage/:id', component: EventManageComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        EventsComponent,\n        EventsListComponent,\n        EventManageComponent,\n        EventListingComponent,\n        EventCalendarComponent,\n        EventWeekViewComponent,\n        EventMonthViewComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        FormFieldsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class EventsModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[7]}