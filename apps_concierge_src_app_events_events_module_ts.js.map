{"version":3,"file":"apps_concierge_src_app_events_events_module_ts.js","mappings":"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","names":["EventsComponent","static","this","t","core","Xpm","selectors","attrs","_c0","decls","vars","consts","template","rf","ctx","i0","item_r12","date","title","ctx_r0","time_format","duration","location","tmp_4_0","resources","email","zones","address","tmp_0_0","item_r13","display_name","item_r14","item_r15","attendees","length","item_r16","state","_r18","EventsListComponent","_settings","constructor","event_list","CalendarEvent","addMinutes","Date","valueOf","i1","EventsListComponent_ng_template_12_Template","EventsListComponent_ng_template_14_Template","EventsListComponent_ng_template_16_Template","EventsListComponent_ng_template_18_Template","EventsListComponent_ng_template_20_Template","EventsListComponent_ng_template_22_Template","_c1","_c2","_c3","_c4","_r1","_r3","_r5","_r7","_r9","_r11","tag_r2","_r4","$implicit","ctx_r3","removeTag","EMPTY","EventManageComponent","tag_list","form","controls","tags","value","_event_form","separators","ENTER","COMMA","SPACE","addTag","event","input","feature_list","trim","push","setValue","existing_tag","index","indexOf","splice","EventManageComponent_mat_chip_row_46_Template","$event","_r0","ROUTES","path","component","children","redirectTo","EventsModule","oAB","cJS","CommonModule","FormsModule","UIModule","SharedSpacesModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/events/events.component.ts","./apps/concierge/src/app/events/events-list.component.ts","./apps/concierge/src/app/events/event-manage.component.ts","./apps/concierge/src/app/events/events.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-events]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"relative flex flex-col flex-1 w-1/2 h-full\">\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class EventsComponent {}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addMinutes } from 'date-fns';\n\n@Component({\n    selector: 'app-event-list',\n    template: `\n        <div class=\"w-full h-full flex flex-col\">\n            <div class=\"flex items-center justify-between p-8\">\n                <h2 class=\"text-2xl font-medium\">Events</h2>\n                <a\n                    btn\n                    matRipple\n                    [routerLink]=\"['/entertainment', 'events', 'manage']\"\n                >\n                    <div class=\"ml-2\">Create Event</div>\n                    <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                </a>\n            </div>\n            <div filters class=\"\"></div>\n            <div class=\"h-1/2 flex-1 w-full px-8 overflow-auto\">\n                <custom-table\n                    class=\"min-w-[64rem] block\"\n                    [dataSource]=\"event_list\"\n                    [columns]=\"[\n                        'events',\n                        'level',\n                        'room',\n                        'attending',\n                        'status',\n                        'actions'\n                    ]\"\n                    [display_column]=\"[\n                        'Event',\n                        'Level',\n                        'Room',\n                        'Attending',\n                        'Status',\n                        ' '\n                    ]\"\n                    [column_size]=\"['20r', '10r', '10r', '8r', '8r', 'flex']\"\n                    [template]=\"{\n                        events: event_template,\n                        level: level_template,\n                        room: room_template,\n                        attending: attending_template,\n                        status: status_template,\n                        actions: actions_template\n                    }\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #event_template let-item=\"row\">\n            <div class=\"flex items-center space-x-2\">\n                <div date class=\"flex flex-col items-center leading-tight\">\n                    <div month class=\"text-sm font-medium relative top-0.5\">\n                        {{ item.date | date: 'MMM' }}\n                    </div>\n                    <div day class=\"text-2xl font-light relative -top-0.5\">\n                        {{ item.date | date: 'd' }}\n                    </div>\n                </div>\n                <div\n                    class=\"h-12 w-12 rounded overflow-hidden bg-base-200\"\n                ></div>\n                <div details class=\"flex flex-col\">\n                    <div class=\"text-sm\">{{ item.title }}</div>\n                    <div class=\"text-xs opacity-40\">\n                        {{ item.date | date: 'EEEE, ' + time_format }} &ndash;\n                        {{\n                            item.date + item.duration * 60 * 1000\n                                | date: time_format + ' z'\n                        }}\n                    </div>\n                    <div class=\"text-xs\">\n                        {{\n                            item.location ||\n                                (\n                                    (item.resources[0]?.email | space | async)\n                                        ?.zones | building\n                                )?.address\n                        }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #level_template let-item=\"row\">\n            {{\n                ((item.resources[0]?.email | space | async)?.zones | level)\n                    ?.display_name\n            }}\n        </ng-template>\n        <ng-template #room_template let-item=\"row\">\n            {{ (item.resources[0]?.email | space | async)?.display_name }}\n        </ng-template>\n        <ng-template #attending_template let-item=\"row\">\n            {{ item.attendees?.length || 1 }}\n        </ng-template>\n        <ng-template #status_template let-item=\"row\">\n            <div\n                class=\"px-4 py-1 rounded-full\"\n                [class.text-white]=\"\n                    item.state !== 'done' && item.state !== 'in_progress'\n                \"\n                [class.bg-success]=\"\n                    item.state !== 'done' && item.state !== 'in_progress'\n                \"\n                [class.bg-warning]=\"item.state === 'in_progress'\"\n                [class.bg-base-200]=\"item.state === 'done'\"\n            >\n                {{\n                    item.state === 'done'\n                        ? 'Done'\n                        : item.state === 'in_progress'\n                        ? 'In Progress'\n                        : 'Active'\n                }}\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-item=\"row\">\n            <div class=\"w-full flex items-center justify-end space-x-2\">\n                <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item>Promote Event</button>\n                <button mat-menu-item>View</button>\n                <button mat-menu-item>Edit</button>\n                <button mat-menu-item>Copy URL</button>\n                <button mat-menu-item>Delete</button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                flex: 1;\n            }\n        `,\n    ],\n})\nexport class EventsListComponent {\n    public event_list = [\n        new CalendarEvent({\n            title: 'Test Event',\n            date: addMinutes(new Date(), -15).valueOf(),\n            resources: [{ email: 'testroom1@0cbfs.onmicrosoft.com' } as any],\n        }),\n    ];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component } from '@angular/core';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { EventFormService } from '@placeos/events';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'app-event-manage',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100 overflow-auto\">\n            <a\n                icon\n                matRipple\n                class=\"absolute top-2 right-2\"\n                [routerLink]=\"['/entertainment', 'events']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n            <form\n                class=\"flex flex-col w-[40rem] max-w-full mx-auto px-4\"\n                [formGroup]=\"form\"\n            >\n                <h3 class=\"py-4 text-2xl font-medium\">New Event</h3>\n                <section class=\"flex flex-col space-y-2\">\n                    <label for=\"title\">Event Title<span>*</span></label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"e.g. Team Meeting\"\n                        />\n                        <mat-error>\n                            {{ 'FORM.TITLE_ERROR' | translate }}\n                        </mat-error>\n                    </mat-form-field>\n                    <label for=\"organiser\">Organiser<span>*</span></label>\n                    <a-user-search-field\n                        class=\"block\"\n                        name=\"organiser\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                    <div class=\"flex space-x-4\">\n                        <div class=\"space-y-2 flex-1\">\n                            <label for=\"type\">Type<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <mat-select\n                                    name=\"type\"\n                                    placeholder=\"Please select\"\n                                    formControlName=\"event_type\"\n                                >\n                                    <mat-option>None</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"space-y-2 flex-1\">\n                            <label for=\"category\">Category<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <mat-select\n                                    name=\"category\"\n                                    placeholder=\"Please select\"\n                                    formControlName=\"category\"\n                                >\n                                    <mat-option>None</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <label for=\"tags\">Tags</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-chip-grid #chipList aria-label=\"Event Tags\">\n                            <mat-chip-row\n                                *ngFor=\"let tag of tag_list\"\n                                [selectable]=\"true\"\n                                [removable]=\"true\"\n                                (removed)=\"removeTag(tag)\"\n                            >\n                                {{ tag }}\n                                <app-icon matChipRemove>close</app-icon>\n                            </mat-chip-row>\n                            <input\n                                placeholder=\"New feature...\"\n                                [matChipInputFor]=\"chipList\"\n                                [matChipInputSeparatorKeyCodes]=\"separators\"\n                                [matChipInputAddOnBlur]=\"true\"\n                                (matChipInputTokenEnd)=\"addTag($event)\"\n                            />\n                        </mat-chip-grid>\n                    </mat-form-field>\n                </section>\n            </form>\n        </div>\n    `,\n    styles: [``],\n})\nexport class EventManageComponent {\n    public readonly form = this._event_form.form;\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    public get tag_list() {\n        return this.form.controls.tags.value || EMPTY;\n    }\n\n    constructor(private _event_form: EventFormService) {}\n\n    /**\n     * Add a feature to the list of features for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const input = event.input;\n        const value = event.value;\n        const feature_list = this.tag_list;\n        if ((value || '').trim()) {\n            feature_list.push(value);\n            this.form.controls.tags.setValue(feature_list);\n        }\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Feature to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { EventsListComponent } from './events-list.component';\nimport { EventManageComponent } from './event-manage.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: EventsComponent,\n        children: [{ path: '', component: EventsListComponent }],\n    },\n    { path: 'manage', component: EventManageComponent },\n    { path: 'manage/:id', component: EventManageComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [EventsComponent, EventsListComponent, EventManageComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class EventsModule {}\n"],"x_google_ignoreList":[]}