{"version":3,"sources":["./node_modules/@angular/material/fesm2015/tabs.js","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering.module.ts","./apps/concierge/src/app/catering/catering-topbar.component.ts","./apps/concierge/src/app/catering/catering.component.ts","./apps/concierge/src/app/catering/catering.module.ts"],"names":["MatTab_ng_template_0_Template","rf","ctx","_c0","MatTabBody_ng_template_2_Template","_c1","a0","animationDuration","_c2","a1","value","params","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","restoredCtx","i_r5","index","ctx_r11","_r0","_handleClick","$event","_tabFocusChanged","ctx_r1","selectedIndex","_getTabLabelId","disabled","disableRipple","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","MatTabGroup_mat_tab_body_5_Template","_r17","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r14","i_r15","ctx_r3","content","position","origin","_c5","_c6","_c7","_c8","_MAT_INK_BAR_POSITIONER","providedIn","factory","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","_animationMode","this","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","positions","inkBar","ɵfac","t","ɵdir","type","selectors","hostAttrs","hostVars","hostBindings","MAT_TAB_CONTENT","MAT_TAB_LABEL","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","super","_contentPortal","_stateChanges","Subject","isActive","_templateLabel","_setTemplateLabelInput","changes","hasOwnProperty","next","complete","_explicitContent","_implicitContent","ɵcmp","contentQueries","dirIndex","_t","first","viewQuery","inputs","exportAs","features","ngContentSelectors","decls","vars","template","encapsulation","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","_leavingSub","ngOnInit","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","ngOnDestroy","unsubscribe","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","outputs","elementRef","_portalHost","consts","_onTranslateTabStarted","directives","styles","data","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","dynamicHeight","_dynamicHeight","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","forEach","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","_allTabs","reset","filter","notifyOnChanges","destroy","_tabHeader","_alignInkBarToSelectedTab","merge","map","Math","min","max","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","focusIndex","idx","focusOrigin","MatTabGroup","animationMode","color","provide","useExisting","_focusChanged","MatTabHeader","MatTabLabelWrapper","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","focus","passiveEventListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","_keyManager","updateActiveItem","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","of","resize","realign","updatePagination","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","_itemSelected","onKeydown","textContent","_currentTextContent","run","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","direction","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","timer","maxScrollDistance","distance","_MatTabHeaderBase","viewportRuler","ngZone","platform","_disableRipple","preventDefault","_handlePaginatorClick","_handleKeydown","_onContentChanges","MatTabsModule","ɵmod","ɵinj","imports","RULE_TYPES","id","name","CateringConfigModalComponent","_data","loading","rule_types","rulesets","config","set","rules","JSON","stringify","floor","random","parse","e","reason","metadata","saveChanges","CateringItemModalComponent","separators","item","categories","form","controls","tags","description","category","unit_price","markAsDirty","input","tag_list","trim","push","setValue","existing_tag","indexOf","splice","CateringItemOptionModalComponent","option","types","group","multiple","new_option","parent","options","concat","cateringItemAvailable","is_available","rule","includes","space","zones","matches","condition","date","Date","isAfter","setHours","isBefore","duration","ext","CateringOrderModalComponent","menu_items$","menu","list","cat","order","charge_code","subscription","valueChanges","state","timeout","getCateringConfig","level","parent_id","choose_options","old_item","items","find","itm","reduce","c","o","opt","selectOptions","new_item","addItem","quantity","amount","sort","a","b","localeCompare","join","markAllAsTouched","valid","CateringOrderOptionsModalComponent","option_state","groups","group_list","saveOptions","CateringStateService","_org","_dialog","_menu","BehaviorSubject","_loading","_currency","asObservable","currency","active_building","bld","getCateringForZone","getValue","ref","open","_","details","race","componentInstance","toPromise","afterClosed","findIndex","updateMenu","building","close","title","icon","class","updateConfig","zone_id","Array","match","CateringMenuItemComponent","_catering","show_options","addOption","editOption","removeOption","deleteOption","editItem","removeItem","deleteItem","CateringMenuComponent","shown_tab","tab_menu","menu_map","CateringOrderItemComponent","active","CATERING_STATUSES","colour","CateringOrdersService","_poll","_filters","orders","combineLatest","debounceTime","switchMap","filters","start","getUnixTime","startOfDay","now","end","endOfDay","zone_ids","period_start","period_end","events","tap","shareReplay","filtered","s","search","toLowerCase","checkOrder","delay","interval","valueOf","clearInterval","status","updated_order","catering","CateringOrderComponent","_orders","show_items","statuses","updateStatus","CateringOrderListComponent","order_list","startPolling","stopPolling","undefined","SharedCateringModule","CateringTopbarComponent","_route","_router","setDate","levels","active_levels","updateZones","z","navigate","relativeTo","queryParams","editConfig","initialised","queryParamMap","has","get","split","levelWithID","buildings","paramMap","page","zone","lvl","CateringComponent","ROUTES","path","component","CateringModule"],"mappings":"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","file":"apps_concierge_src_app_catering_catering_module_ts.js","sourcesContent":["import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const i_r5 = restoredCtx.index; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._tabFocusChanged($event, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatTabLabel_BaseFactory; return function MatTabLabel_Factory(t) { return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel); }; }();\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => tab._closestTabGroup === this));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        if (focusOrigin) {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour', number]\n    | ['min_length' | 'max_length' | 'is_before' | 'is_after' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour' },\n    { id: 'before_hour', name: 'Before Hour' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Before Time' },\n    { id: 'is_after', name: 'Is After Time' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n]\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center\">\n            <button\n                mat-button\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 3.5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex px-2 h-14 space-x-2\"\n                        *ngFor=\"let rule of set.rules\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button (click)=\"saveChanges()\">Save Changes</button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n\n            main {\n                width: 32em;\n                padding: 0.5em 1em 1em;\n            }\n\n            main button.mat-button {\n                margin: 0 auto 0.5em;\n                min-width: 12em;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringItem } from './catering-item.class';\n\nimport { DialogEvent, randomInt } from '@placeos/common';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.category\">\n                <label\n                    for=\"category\"\n                    [class.error]=\"\n                        form.controls.category.invalid &&\n                        form.controls.category.touched\n                    \"\n                >\n                    Category<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"category\"\n                        placeholder=\"Category\"\n                        formControlName=\"category\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Category is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-list #chipList aria-label=\"Item Tags\">\n                        <mat-chip\n                            *ngFor=\"let tag of tag_list\"\n                            [selectable]=\"true\"\n                            [removable]=\"true\"\n                            (removed)=\"removeTag(tag)\"\n                        >\n                            {{ tag }}\n                            <app-icon\n                                matChipRemove\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'close'\n                                }\"\n                            ></app-icon>\n                        </mat-chip>\n                        <input\n                            name=\"tags\"\n                            placeholder=\"Zone tags...\"\n                            i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separators\"\n                            [matChipInputAddOnBlur]=\"true\"\n                            (matChipInputTokenEnd)=\"addTag($event)\"\n                        />\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name || '', [Validators.required]),\n            description: new FormControl(this.item.description || ''),\n            category: new FormControl(this.item.category || '', [\n                Validators.required,\n            ]),\n            unit_price: new FormControl(this.item.unit_price, [\n                Validators.required,\n            ]),\n            tags: new FormControl(this.item.tags || []),\n        });\n    }\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>\n                {{ option.id ? 'Edit' : 'Add' }} Item Option\n            </h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemOptionModalComponent implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.option.name || '', [\n                Validators.required,\n            ]),\n            group: new FormControl(this.option.group || '', [\n                Validators.required,\n            ]),\n            unit_price: new FormControl(this.option.unit_price),\n            multiple: new FormControl(!!this.option.multiple, []),\n        });\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { isAfter, setHours, isBefore } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseClass, DialogEvent, HashMap, unique } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches++;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories | async\">\n                        <mat-tab\n                            *ngIf=\"((menu_items$ | async) || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-50\"\n                                    *ngFor=\"\n                                        let item of ((menu_items$ | async) ||\n                                            {})[cat]\n                                    \"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"info no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{ item.unit_price / 100 | currency }}\n                                    </div>\n                                    <button\n                                        mat-icon-button\n                                        (click)=\"addItem(item)\"\n                                    >\n                                        <app-icon\n                                            [icon]=\"{\n                                                class: 'material-icons',\n                                                content: 'add'\n                                            }\"\n                                        ></app-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer *ngIf=\"!loading\">\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button mat-button class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    mat-button\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    mat-button\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save mat-button (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n            <div class=\"charge-code\" [formGroup]=\"form\">\n                <input\n                    formControlName=\"charge_code\"\n                    [class.error]=\"\n                        form.controls.charge_code.touched &&\n                        form.controls.charge_code.invalid\n                    \"\n                    placeholder=\"Charge Code*\"\n                    required\n                />\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 24em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n\n                &:focus {\n                    border: none;\n                    border-top: 2px solid var(--primary);\n                    border-bottom: 2px solid var(--primary);\n                    box-shadow: none;\n                }\n\n                &.error::placeholder {\n                    color: rgba(var(--error), 0.45);\n                }\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent extends BaseClass implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /**  */\n    public readonly form: FormGroup;\n    /** List of menu items to show */\n    public readonly menu_items$: Observable<HashMap<CateringItem[]>>;\n    /** List of categories for the active menu */\n    public get categories(): Observable<string[]> {\n        return this._data.menu.pipe(\n            map((list) => unique(list.map((item) => item.category)))\n        );\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n        this.menu_items$ = this._data.menu.pipe(\n            map((list) => {\n                const categories = unique(list.map((item) => item.category));\n                const map = {};\n                for (const cat of categories) {\n                    map[cat] = list.filter(\n                        (item) =>\n                            item.category === cat &&\n                            cateringItemAvailable(\n                                item,\n                                this.rules as any,\n                                this.order.event\n                            )\n                    );\n                }\n                return map;\n            })\n        );\n        this.order = new CateringOrder(this._data.order);\n        this.form = new FormGroup({\n            charge_code: new FormControl(this.order.charge_code, [\n                Validators.required,\n            ]),\n        });\n        this.subscription(\n            'charge_code',\n            this.form.controls.charge_code.valueChanges.subscribe(\n                (value) =>\n                    (this.order = new CateringOrder({\n                        ...this.order,\n                        charge_code: value,\n                    }))\n            )\n        );\n        this.subscription(\n            'loading',\n            this._data.loading.subscribe(\n                (state) => (this.loading = state ? 'Loading menu...' : '')\n            )\n        );\n        this.loading = 'Loading menu...';\n        this.timeout('loading', () => (this.loading = ''), 1000);\n    }\n\n    public async ngOnInit() {\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            i !== old_item &&\n                            i.options.length === old_item.options.length\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                item.options.length ===\n                    item.options.reduce(\n                        (c, o) =>\n                            c +\n                            (itm.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter((i) => i.id !== item.id)\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            this.event.emit({\n                reason: 'done',\n                metadata: { order: this.order },\n            });\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    options: CateringOption[];\n}\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                None\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{ opt.unit_price / 100 | currency }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer>\n            <button mat-button (click)=\"saveOptions()\">Save</button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { updateMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, flatten, openConfirmModal, unique } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends BaseClass {\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(bld.currency || 'USD');\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (\n            await showMetadata(zone_id, { name: 'catering' }).toPromise()\n        ).details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, { name: 'catering_config' }).toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n            <div class=\"flex items-center p-2 flex-1\">\n                <div class=\"flex-1\">\n                    <div>{{ item.name }}</div>\n                    <div class=\"text-xs text-dark-fade\">\n                        {{ item.category }}\n                    </div>\n                </div>\n                <div\n                    class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                >\n                    {{ item.unit_price / 100 | currency: (symbol | async) }}\n                </div>\n            </div>\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                <app-icon>more_vert</app-icon>\n            </button>\n            <button\n                mat-icon-button\n                [disabled]=\"!item.options.length\"\n                (click)=\"show_options = !show_options\"\n            >\n                <app-icon>expand_more</app-icon>\n            </button>\n        </div>\n        <div\n            options\n            *ngIf=\"item\"\n            class=\"bg-gray-100 overflow-hidden\"\n            [style.height]=\"\n                show_options ? item.options.length * 3.5 + 'rem' : '0'\n            \"\n        >\n            <div\n                class=\"flex p-2 items-center border-none border-t border-solid border-gray-300\"\n                *ngFor=\"let option of item.options\"\n            >\n                <div class=\"flex-1 px-2\">\n                    <div class=\"text\">{{ option.name }}</div>\n                    <div class=\"text-xs text-dark-fade\">{{ option.group }}</div>\n                </div>\n                <button\n                    edit\n                    mat-icon-button\n                    class=\"mx-2\"\n                    (click)=\"editOption(option)\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    remove\n                    mat-icon-button\n                    class=\"mx-2\"\n                    (click)=\"removeOption(option)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                class=\"flex items-center\"\n                (click)=\"addOption()\"\n            >\n                <app-icon>add</app-icon>\n                <div class=\"ml-2\">Add Option</div>\n            </button>\n            <button\n                mat-menu-item\n                class=\"flex items-center\"\n                (click)=\"editItem()\"\n            >\n                <app-icon>edit</app-icon>\n                <div class=\"ml-2\">Edit Item</div>\n            </button>\n            <button\n                mat-menu-item\n                class=\"flex items-center\"\n                (click)=\"removeItem()\"\n            >\n                <app-icon>delete</app-icon>\n                <div class=\"ml-2\">Remove Item</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                background-color: #fff;\n                border: 1px solid #ccc;\n                border-radius: 0.25rem;\n                overflow: hidden;\n                width: 768px;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab *ngFor=\"let group of categories\" [label]=\"group\">\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <div class=\"w-20 text-right\">\n            <div name=\"item-bar\" class=\"bg-gray-300\"></div>\n        </div>\n        <div class=\"w-12 mr-4\">\n            <button\n                mat-icon-button\n                class=\"border border-gray-300 border-dashed text-2xl text-dark-fade\"\n                [class.bg-success]=\"active\"\n                [class.text-white]=\"active\"\n                [class.border-solid]=\"active\"\n            >\n                <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n            </button>\n        </div>\n        <div class=\"flex-1 border-b border-gray-300 border-solid py-4\">\n            {{ item?.name }}\n        </div>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n\n            [name='item-bar'] {\n                height: 2px;\n                margin-left: auto;\n                margin-right: 1rem;\n                width: calc(50% - 0.9375rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { BaseClass, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends BaseClass {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(filters.date || Date.now()));\n            const end = getUnixTime(endOfDay(filters.date || Date.now()));\n            return queryEvents({\n                zone_ids: (filters.zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list.filter((order) => checkOrder(order, this._filters.getValue()))\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public updateStatus(order: CateringOrder, status: CateringOrderStatus) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const event = new CalendarEvent({\n            ...order.event,\n            catering: [\n                ...order.event.ext('catering').filter((o) => o.id !== order.id),\n                updated_order,\n            ].map((i) => new CateringOrder({ ...i })),\n        });\n        return saveEvent(event);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 bg-gray-100\"\n            [class.shown]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div class=\"w-20 flex items-center justify-center\">\n                <div\n                    class=\"rounded-full bg-gray-300  p-2 text-2xl text-dark-fade flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div class=\"w-24\">{{ order.deliver_at | date: 'shortTime' }}</div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-24\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button mat-icon-button (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <div\n                name=\"bar\"\n                class=\"absolute top-0 bg-gray-300\"\n                [style.height]=\"3.125 * order.items.length - 1 + 'rem'\"\n            ></div>\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            .shown {\n                background-color: #eee;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = (s) =>\n        this._orders.updateStatus(this.order, s);\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-24\">Charge Code</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block text-dark-fade\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { ComponentsModule } from '@placeos/components';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        ComponentsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringOrdersService, CateringStateService } from '@placeos/catering';\n\n@Component({\n    selector: 'catering-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option *ngFor=\"let level of levels | async\" [value]=\"level.id\">\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <button *ngIf=\"page === 'menu'\" mat-button (click)=\"addItem()\">Add Item</button>\n        <button *ngIf=\"page === 'menu'\" mat-button (click)=\"editConfig()\">Edit Config</button>\n        <div class=\"flex-1 w-2\"></div>\n        <!-- <searchbar class=\"mr-2\"></searchbar> -->\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: .5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class CateringTopbarComponent extends BaseClass {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** Currently active page */\n    public page: string;\n    /** Set filtered date */\n    public readonly setDate = (date) => (this._orders.filters = { ...this._orders.filters, date });\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._orders.filters = { ...this._orders.filters, zones: [z] };\n    };\n\n    public readonly addItem = () => this._catering.addItem();\n    public readonly editConfig = () => this._catering.editConfig();\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _catering: CateringStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(\n                (params) => (this.page = params.has('view') ? params.get('view') : '')\n            )\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) => levels.find((lvl) => lvl.id === zone));\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\n\n\n@Component({\n    selector: '[app-catering]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col\">\n            <catering-topbar class=\"relative z-10\"></catering-topbar>\n            <ng-container [ngSwitch]=\"page\">\n                <catering-order-list\n                    *ngSwitchCase=\"'orders'\"\n                    class=\"flex-1\"\n                ></catering-order-list>\n                <catering-menu *ngSwitchCase=\"'menu'\" class=\"flex-1\"></catering-menu>\n                <div *ngSwitchDefault class=\"flex flex-1 items-center justify-center\">\n                    <a\n                        matRipple\n                        class=\"rounded flex flex-col items-center bg-white shadow text-black\"\n                        [routerLink]=\"['/catering', 'menu']\"\n                    >\n                        <div\n                            name=\"img\"\n                            class=\"relative w-full flex flex-1 items-center justify-center text-2xl text-white bg-center bg-cover\"\n                            [style.background-image]=\"'url(assets/menus.jpg)'\"\n                        >\n                            <div class=\"absolute inset-0 bg-black opacity-60 z-0\"></div>\n                            <span class=\"z-10\">Menus and Pricing</span>\n                        </div>\n                        <div\n                            class=\"p-2 h-14 w-full text-sm text-center flex items-center justify-center\"\n                        >\n                            View and Edit Menus and Pricing\n                        </div>\n                    </a>\n                    <a\n                        matRipple\n                        class=\"rounded flex flex-col items-center bg-white shadow text-black\"\n                        [routerLink]=\"['/catering', 'orders']\"\n                    >\n                        <div\n                            name=\"img\"\n                            class=\"relative w-full flex flex-1 items-center justify-center text-2xl text-white bg-center bg-cover\"\n                            [style.background-image]=\"'url(assets/orders.jpg)'\"\n                        >\n                            <div class=\"absolute inset-0 bg-black opacity-60 z-0\"></div>\n                            <span class=\"z-10\">Today's Orders</span>\n                        </div>\n                        <div\n                            class=\"p-2 h-14 w-full text-sm text-center flex items-center justify-center\"\n                        >\n                            View Catering Orders and their statuses upon arrival\n                        </div>\n                    </a>\n                </div>\n            </ng-container>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            a {\n                width: 28rem;\n                height: 16rem;\n                margin-left: 0.5rem;\n                text-decoration: none;\n                transition: background 200ms;\n            }\n\n            a:hover {\n                background-color: #00000001 !important;\n            }\n\n            a:first-child {\n                margin: 0;\n            }\n        `,\n    ],\n})\nexport class CateringComponent extends BaseClass {\n    /** Page being displayed */\n    public page: string;\n\n    constructor(private _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(\n                (params) => (this.page = params.has('view') ? params.get('view') : '')\n            )\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { CateringComponent } from './catering.component';\nimport { CateringTopbarComponent } from './catering-topbar.component';\nimport { SharedCateringModule } from '@placeos/catering';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':view', component: CateringComponent },\n];\n\n@NgModule({\n    declarations: [CateringComponent, CateringTopbarComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        MatTabsModule,\n        MatChipsModule,\n        SharedCateringModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class CateringModule {}\n"],"sourceRoot":"webpack:///"}