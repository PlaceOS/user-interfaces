{"version":3,"file":"apps_workplace_src_app_events_group-events_module_ts.js","mappings":"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","names":["GroupEventsStateService","constructor","_org","_settings","this","_options","BehaviorSubject","date","Date","now","_filters","categories","tags","_tag_list","filters","asObservable","events","combineLatest","active_building","pipe","filter","building","switchMap","options","queryBookings","period_start","getUnixTime","startOfDay","Math","max","period_end","endOfDay","end","type","zones","get","parent_id","id","map","list","_","permission","sort","a","b","tap","old_tags","getValue","event","flat","next","unique","shareReplay","filtered_events","tag_list","toLowerCase","event_tags","every","tag","includes","date_end","setOptions","value","setFilters","static","t","i0","i1","i2","core","jDH","factory","Éµfac","providedIn","range_r1","display","tag_r3","_r2","$implicit","ctx_r3","toggleTag","tmp_3_0","GroupEventsSidebarComponent_div_19_button_3_Template","GroupEventsSidebarComponent","AsyncHandler","_state","super","period","period_list","ngOnInit","subscription","subscribe","_generatePeriods","length","setPeriod","selected_range","_this","_asyncToGenerator","take","toPromise","setPeriodFromDate","start","find","periods","period_type","end_date","addDays","valueOf","week_offset","startOfMonth","startOfWeek","weekStartsOn","push","format","addMonths","VBU","selectors","features","decls","vars","consts","template","rf","ctx","$event","GroupEventsSidebarComponent_mat_option_11_Template","GroupEventsSidebarComponent_div_19_Template","tmp_5_0","tag_r2","_r1","ctx_r2","removeTag","GroupEventsFiltersListComponent","this_period","abs","differenceInDays","GroupEventsFiltersListComponent_div_13_Template","tmp_1_0","tmp_2_0","_c0","ctx_r0","featured","GroupEventsComponent_ng_container_7_group_event_card_2_Template","events_without_featured","GroupEventsComponent","event_list","extension_data","attrs","GroupEventsComponent_group_event_card_5_Template","GroupEventsComponent_ng_container_7_Template","GroupEventsComponent_ng_template_9_Template","no_events_r3","ROUTES","path","component","GroupEventsModule","$C","G2t","CommonModule","FormsModule","SharedComponentModule","SharedBookingsModule","FormFieldsModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/events/group-events-state.service.ts","./apps/workplace/src/app/events/group-events-sidebar.component.ts","./apps/workplace/src/app/events/group-events-filters-list.component.ts","./apps/workplace/src/app/events/group-events.component.ts","./apps/workplace/src/app/events/group-events.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { queryBookings } from '@placeos/bookings';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap, tap } from 'rxjs/operators';\n\nexport interface GroupEventOptions {\n    date: number;\n    end?: number;\n}\n\nexport interface GroupEventFilters {\n    categories: string[];\n    tags: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GroupEventsStateService {\n    private _options = new BehaviorSubject<GroupEventOptions>({\n        date: Date.now(),\n    });\n    private _filters = new BehaviorSubject<GroupEventFilters>({\n        categories: [],\n        tags: [],\n    });\n    private _tag_list = new BehaviorSubject<string[]>([]);\n\n    public readonly filters = this._filters.asObservable();\n    public readonly tags = this._tag_list.asObservable();\n\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        filter(([building]) => !!building),\n        switchMap(([building, options]) =>\n            queryBookings({\n                period_start: getUnixTime(\n                    startOfDay(Math.max(Date.now(), options.date))\n                ),\n                period_end: getUnixTime(endOfDay(options.end || options.date)),\n                type: 'group-event',\n                zones: this._settings.get('app.use_region')\n                    ? building.parent_id\n                    : building.id,\n            })\n        ),\n        map((list) =>\n            list\n                .filter((_) => _.permission !== 'PRIVATE')\n                .sort((a, b) => a.date - b.date)\n        ),\n        tap((list) => {\n            const old_tags = this._tag_list.getValue();\n            const tags = list.map((event) => event.tags).flat();\n            this._tag_list.next(unique([...old_tags, ...tags]));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_events = combineLatest([\n        this.events,\n        this._filters,\n    ]).pipe(\n        map(([list, { tags }]) => {\n            const tag_list = tags.map((_) => _.toLowerCase());\n            return list.filter((event) => {\n                const event_tags = event.tags.map((_) => _.toLowerCase());\n                return (\n                    tag_list.every((tag) => event_tags.includes(tag)) &&\n                    event.date_end > Date.now()\n                );\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly options = this._options.asObservable();\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(options: Partial<GroupEventOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n\n    public setFilters(filters: Partial<GroupEventFilters>) {\n        this._filters.next({ ...this._filters.value, ...filters });\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    format,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\nimport { GroupEventsStateService } from './group-events-state.service';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    selector: `group-events-sidebar`,\n    template: `\n        <div class=\"flex flex-col bg-base-100 w-[18rem] h-full\">\n            <div class=\"flex items-center space-x-2 p-2\">\n                <button\n                    btn\n                    matRipple\n                    class=\"flex-1 rounded-3xl\"\n                    [class.inverse]=\"(period | async) !== 'week'\"\n                    (click)=\"period.next('week')\"\n                >\n                    Week\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"flex-1 rounded-3xl\"\n                    [class.inverse]=\"(period | async) !== 'month'\"\n                    (click)=\"period.next('month')\"\n                >\n                    Month\n                </button>\n            </div>\n            <div class=\"flex flex-col items-center space-y-2 pb-2 px-2\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"selected_range\"\n                        (ngModelChange)=\"setPeriod($event)\"\n                        placeholder=\"Select Period\"\n                    >\n                        <mat-option\n                            [value]=\"range.id\"\n                            *ngFor=\"let range of period_list\"\n                        >\n                            {{ range.display }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <hr class=\"border-base-200 w-[calc(100%-1rem)] mx-auto\" />\n            <date-calendar\n                [ngModel]=\"(options | async).date\"\n                (ngModelChange)=\"setPeriodFromDate($event)\"\n            ></date-calendar>\n            <hr class=\"border-base-200 w-[calc(100%-1rem)] mx-auto\" />\n            <div class=\"flex flex-col flex-1 overflow-auto\">\n                <h2 class=\"text-lg font-medium p-4\">Filters</h2>\n                <div\n                    class=\"flex flex-col space-y-2 px-4\"\n                    *ngIf=\"(tags | async)?.length\"\n                >\n                    <h3>Tags</h3>\n                    <button\n                        matRipple\n                        class=\"flex items-center rounded w-full text-left\"\n                        *ngFor=\"let tag of tags | async\"\n                        (click)=\"toggleTag(tag)\"\n                    >\n                        <mat-checkbox\n                            [ngModel]=\"(filters | async)?.tags?.includes(tag)\"\n                        >\n                            {{ tag }}\n                        </mat-checkbox>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventsSidebarComponent extends AsyncHandler {\n    public period = new BehaviorSubject<'week' | 'month'>('week');\n    public period_list = [];\n    public selected_range: number;\n    public readonly options = this._state.options;\n    public readonly filters = this._state.filters;\n    public readonly tags = this._state.tags;\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: GroupEventsStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'period',\n            this.period.subscribe(() => {\n                this._generatePeriods();\n                if (this.period_list.length) {\n                    this.setPeriod(this.period_list[0].id);\n                    this.selected_range = this.period_list[0].id;\n                }\n            })\n        );\n        this._generatePeriods();\n        if (this.period_list.length) {\n            this.setPeriod(this.period_list[0].id);\n            this.selected_range = this.period_list[0].id;\n        }\n    }\n\n    public async toggleTag(tag: string) {\n        const tags = (await this.filters.pipe(take(1)).toPromise())?.tags || [];\n        if (tags.includes(tag)) {\n            this._state.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        } else {\n            this._state.setFilters({ tags: [...tags, tag] });\n        }\n    }\n\n    public setPeriodFromDate(date: number) {\n        for (const period of this.period_list) {\n            if (date >= period.start && date <= period.end) {\n                this.selected_range = period.id;\n                this.setPeriod(period.id);\n                return;\n            }\n        }\n    }\n\n    public setPeriod(id: string) {\n        const { start, end } = this.period_list.find((_) => _.id === id);\n        this._state.setOptions({ date: start, end });\n    }\n\n    private _generatePeriods() {\n        const periods = [];\n        const period_type = this.period.value;\n        let date = Date.now();\n        const end_date = addDays(date, 12 * 30).valueOf();\n        const week_offset = this._settings.get('app.week_start') || 0;\n        if (period_type === 'month') {\n            date = startOfMonth(date).valueOf();\n        } else if (period_type === 'week') {\n            date = startOfWeek(date, { weekStartsOn: week_offset }).valueOf();\n        }\n        while (date < end_date) {\n            if (period_type === 'week') {\n                const end = endOfDay(addDays(date, 6)).valueOf();\n                periods.push({\n                    id: date,\n                    start: date,\n                    end,\n                    display: `${format(\n                        Math.max(Date.now(), date),\n                        'EEE, do MMM'\n                    )} â ${format(end, 'do MMM')}`,\n                });\n                date = addDays(date, 7).valueOf();\n            } else if (period_type === 'month') {\n                const end = endOfDay(addDays(addMonths(date, 1), -1)).valueOf();\n                periods.push({\n                    id: date,\n                    start: date,\n                    end,\n                    display: `${format(date, 'MMMM yyyy')}`,\n                });\n                date = addMonths(date, 1).valueOf();\n            } else break;\n        }\n        this.period_list = periods;\n    }\n}\n","import { Component } from '@angular/core';\nimport { GroupEventsStateService } from './group-events-state.service';\nimport { differenceInDays, endOfDay, startOfDay } from 'date-fns';\nimport { map, take, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'group-events-filters-list',\n    template: `\n        <div\n            class=\"my-2 w-[63rem] max-w-full mx-auto border border-base-300 p-4 bg-base-100 rounded\"\n        >\n            <div class=\"flex items-center justify-between space-x-2 mb-4\">\n                <div>\n                    {{ (this_period | async) ? 'This' : 'Upcoming' }}\n                    {{ (period | async) === 'week' ? 'Week' : 'Month' }}\n                </div>\n            </div>\n            <div class=\"flex flex-wrap\">\n                <div\n                    class=\"flex items-center px-4 py-3 rounded-3xl border border-base-400 m-1 text-sm\"\n                >\n                    {{ (options | async)?.date | date: 'MMM d, y' }}\n                    &ndash;\n                    {{ (options | async)?.end | date: 'MMM d, y' }}\n                </div>\n                <div\n                    class=\"flex items-center pl-4 pr-1 rounded-3xl border border-base-400 m-1\"\n                    *ngFor=\"let tag of (filters | async)?.tags || []\"\n                >\n                    <div class=\"mr-2 flex-1 text-sm\">{{ tag }}</div>\n                    <button icon matRipple (click)=\"removeTag(tag)\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventsFiltersListComponent {\n    public readonly options = this._state.options;\n    public readonly filters = this._state.filters;\n    public readonly this_period = this._state.options.pipe(\n        map(({ date, end }) => {\n            return (\n                Date.now() >= startOfDay(date).valueOf() &&\n                Date.now() < endOfDay(end || date).valueOf()\n            );\n        })\n    );\n    public readonly period = this._state.options.pipe(\n        map(({ date, end }) =>\n            Math.abs(differenceInDays(date, end || Date.now())) > 7\n                ? 'month'\n                : 'week'\n        )\n    );\n\n    constructor(private _state: GroupEventsStateService) {}\n\n    public async removeTag(tag: string) {\n        const tags = (await this.filters.pipe(take(1)).toPromise())?.tags || [];\n        this._state.setFilters({ tags: tags.filter((_) => _ !== tag) });\n    }\n}\n","import { Component } from '@angular/core';\nimport { GroupEventsStateService } from './group-events-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { addDays, endOfDay, startOfDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[group-events]',\n    template: `\n        <topbar></topbar>\n        <main class=\"flex flex-1 h-1/2 bg-base-200\">\n            <group-events-sidebar></group-events-sidebar>\n            <div class=\"w-1/2 flex-1 h-full overflow-auto p-4\">\n                <group-events-filters-list></group-events-filters-list>\n                <group-event-card\n                    *ngIf=\"featured | async\"\n                    [event]=\"featured | async\"\n                    [featured]=\"true\"\n                    class=\"my-2 mx-auto w-[64rem] max-w-full\"\n                ></group-event-card>\n                <ng-container\n                    *ngIf=\"(event_list | async)?.length; else no_events\"\n                >\n                    <div\n                        class=\"flex flex-wrap mt-2 w-[64rem] max-w-full mx-auto\"\n                    >\n                        <group-event-card\n                            *ngFor=\"\n                                let event of events_without_featured | async\n                            \"\n                            [event]=\"event\"\n                            class=\"m-2\"\n                        ></group-event-card>\n                    </div>\n                </ng-container>\n                <ng-template #no_events>\n                    <div\n                        class=\"flex flex-col items-center justify-center w-full h-full space-y-2\"\n                    >\n                        <img src=\"assets/icons/no-results.svg\" class=\"w-32\" />\n                        <div class=\"font-medium\">\n                            No events for the selected time period\n                        </div>\n                        <div class=\"opacity-30\">\n                            Expand you search or try again\n                        </div>\n                    </div>\n                </ng-template>\n            </div>\n        </main>\n        <footer-menu></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n\n            .top {\n                background-color: #007ac8;\n            }\n        `,\n    ],\n})\nexport class GroupEventsComponent extends AsyncHandler {\n    public readonly event_list = this._state.filtered_events;\n    public readonly featured = this.event_list.pipe(\n        map((_) => _.find((_: any) => _.extension_data?.featured || _.featured))\n    );\n    public readonly events_without_featured = combineLatest([\n        this.event_list,\n        this.featured,\n    ]).pipe(\n        map(([list, featured]) =>\n            list.filter((_: any) => _.id !== featured?.id)\n        )\n    );\n\n    constructor(private _state: GroupEventsStateService) {\n        super();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { GroupEventsComponent } from './group-events.component';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { GroupEventsSidebarComponent } from './group-events-sidebar.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { GroupEventsFiltersListComponent } from './group-events-filters-list.component';\n\nconst ROUTES: Route[] = [{ path: '', component: GroupEventsComponent }];\n\n@NgModule({\n    declarations: [\n        GroupEventsComponent,\n        GroupEventsSidebarComponent,\n        GroupEventsFiltersListComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        SharedComponentModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class GroupEventsModule {}\n"],"x_google_ignoreList":[]}