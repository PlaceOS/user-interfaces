{"version":3,"sources":["./src/app/visitors/visitors-state.service.ts","./src/app/visitors/visitors-topbar.component.ts","./src/app/visitors/visitor-details.component.ts","./src/app/visitors/visitor-event.component.ts","./src/app/visitors/visitor-listings.component.ts","./src/app/visitors/visitors.component.ts","./src/app/visitors/visitors.module.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/endOfWeek/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/endOfDay/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/startOfWeek/index.js"],"names":["VisitorsStateService","_events","super","_filters","BehaviorSubject","_search","_loading","loading","this","asObservable","filters","events","combineLatest","pipe","debounceTime","switchMap","details","next","date","Date","start","show_week","startOfWeek","startOfDay","valueOf","end","endOfWeek","endOfDay","query","period_start","Math","floor","period_end","zone_ids","zones","join","map","list","getValue","all_bookings","filter","event","has_visitors","attendees","length","shareReplay","filtered_events","search","toLowerCase","find","user","name","includes","email","delay","interval","setFilters","clearInterval","new_user","checkInGuest","id","system_id","system","resources","state","catch","e","organiser","new_attendees","sort","a","b","organizer","localeCompare","guests","is_external","checked_in","Error","Promise","all","VisitorsTopbarComponent","_state","_org","_route","_router","levels","active_levels","setDate","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","initialised","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","get","split","level","levelWithID","building","buildings","bld","parent_id","zone","lvl","push","VisitorDetailsComponent","eventChange","checkin","checkGuestIn","visitor","emit","toggleRemote","remote_list","remote","new_item","toJSON","console","log","update","statusText","message","checkout","checkGuestOut","VisitorEventComponent","matches","checkinGuests","checkAllGuestsIn","checkoutGuests","checkAllGuestsOut","reduce","c","u","updateMatches","VisitorListingsComponent","bookings","index","undefined","ROUTES","path","component","VisitorsComponent","startPolling","stopPolling","VisitorsModule","forChild","dirtyDate","dirtyOptions","arguments","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","diff","getDate","setHours"],"mappings":"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","file":"visitors-visitors-module.92d7554d396900ee9a29.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    BaseClass,\n    notifyError,\n    notifySuccess,\n    unique,\n} from '@user-interfaces/common';\nimport { CalendarEvent, EventsService } from '@user-interfaces/events';\nimport { User } from '@user-interfaces/users';\nimport { endOfDay, endOfWeek, startOfDay, startOfWeek } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, switchMap } from 'rxjs/operators';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    show_week?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends BaseClass {\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly events = combineLatest([this._filters]).pipe(\n        debounceTime(500),\n        switchMap((details) => {\n            this._loading.next(true);\n            const [filters] = details;\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = (filters.show_week ? startOfWeek(date) : startOfDay(date)).valueOf();\n            const end = (filters.show_week ? endOfWeek(date) : endOfDay(date)).valueOf();\n            return this._events.query({\n                period_start: Math.floor(start / 1000),\n                period_end: Math.floor(end / 1000),\n                zone_ids: (filters.zones || []).join(','),\n            });\n        }),\n        map((list) => {\n            this._loading.next(false);\n            return this._filters.getValue().all_bookings ? list : list.filter(\n                (event) => event.has_visitors && event.attendees.length > 1\n            );\n        }),\n        shareReplay()\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._search,\n        this.events,\n    ]).pipe(\n        map((details) => {\n            const [search, events] = details;\n            const filter = search.toLowerCase();\n            return events.filter((event) =>\n                event.attendees.find(\n                    (user) =>\n                        user.name.toLowerCase().includes(filter) ||\n                        user.email.toLowerCase().includes(filter)\n                )\n            );\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    constructor(private _events: EventsService) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval(\n            'poll',\n            () => this.setFilters(this._filters.getValue()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkGuestIn(event: CalendarEvent, user: User) {\n        const new_user = await this._events\n            .checkInGuest(event.id, user.id, {\n                system_id: event.system?.id || event.resources[0]?.id,\n                state: true,\n            })\n            .catch((e) => {\n                notifyError(\n                    `Error checking in ${user.name} for ${event.organiser.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked in ${user.name} for ${event.organiser.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkGuestOut(event: CalendarEvent, user: User) {\n        const new_user = await this._events\n            .checkInGuest(event.id, user.id, {\n                system_id: event.system?.id || event.resources[0]?.id,\n                state: false,\n            })\n            .catch((e) => {\n                notifyError(\n                    `Error checking out ${user.name} from ${event.organiser.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked out ${user.name} from ${event.organiser.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsIn(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && !user.checked_in\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkin');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                this._events.checkInGuest(event.id, user.id, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                    state: true,\n                })\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking in all guests for ${event.organiser.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in all guests for ${event.organiser.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsOut(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && user.checked_in && !user.organizer\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkout');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                this._events.checkInGuest(event.id, user.id, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                    state: false,\n                })\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking out all guests from ${event.organiser.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked out all guests from ${event.organiser.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(filters | async)?.all_bookings\"\n            (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n            ><div class=\"text-xs\">All Bookings</div></mat-slide-toggle\n        >\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(filters | async)?.show_week\"\n            (ngModelChange)=\"setFilters({ show_week: $event })\"\n            ><div class=\"text-xs\">Show Week</div></mat-slide-toggle\n        >\n        <div class=\"flex-1 w-2\"></div>\n        <searchbar class=\"mr-2\" (modelChange)=\"setSearch($event)\"></searchbar>\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: 0.5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends BaseClass implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones })\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { notifyError } from '@user-interfaces/common';\nimport { CalendarEvent, EventsService } from '@user-interfaces/events';\nimport { User } from '@user-interfaces/users';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-details',\n    template: `\n        <div class=\"w-12 text-lg flex justify-center\">\n            <ng-container *ngIf=\"!visitor.organizer; else host_state\">\n                <i\n                    *ngIf=\"!visitor?.checked_in; else checkin_state\"\n                    class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600\"\n                    >face</i\n                >\n            </ng-container>\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n            <ng-template #host_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-blue-600 border-2 border-blue-600 text-white\"\n                    >assignment_ind</i\n                >\n            </ng-template>\n        </div>\n        <div flex class=\"p-2 flex-1\">{{ visitor?.name || visitor?.email }}</div>\n        <div class=\"w-40 p-2 flex items-center justify-end\">\n            <action-icon\n                [matTooltip]=\"remote ? 'Set as In-Person Visitor' : 'Set as Remote Visitior'\"\n                [loading]=\"loading === 'remote'\"\n                className=\"material-icons\"\n                [content]=\"remote ? 'tap_and_play' : 'business'\"\n                (click)=\"toggleRemote()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"visitor?.checked_in ? 'success' : ''\"\n                className=\"material-icons\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                className=\"material-icons\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + visitor?.email\"\n                mat-icon-button\n                [matTooltip]=\"visitor?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon className=\"material-icons\">email</app-icon>\n            </a>\n        </div>\n        <div class=\"w-16 p-2\"></div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                padding: 0 0.5rem;\n            }\n\n            :host > div {\n                display: flex;\n                align-items: center;\n                height: 100%;\n                border-bottom: 1px solid #ccc;\n                height: 3.5rem;\n            }\n\n            :host > div:first-child {\n                border: none;\n            }\n\n            .invisible {\n                opacity: 0;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class VisitorDetailsComponent {\n    @Input() public event: CalendarEvent;\n    @Input() public visitor: User;\n    @Output() public eventChange = new EventEmitter<CalendarEvent>();\n\n    public show_attendees: boolean;\n    public loading: string;\n\n    public readonly checkin = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkGuestIn(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly toggleRemote = async () => {\n        this.loading = 'remote';\n        const remote_list = this.event.remote.filter(e => e !== this.visitor.email);\n        if (!this.remote) {\n            remote_list.push(this.visitor.email);\n        }\n        const new_item = new CalendarEvent({ ...(this.event.toJSON()), remote: remote_list }).toJSON();\n        console.log('Remote:', remote_list, new_item)\n        this.event = await this._events\n            .update(this.event.id, new_item, { system_id: this.event.system?.id }, 'patch')\n            .catch((e) => {\n                notifyError(`Error setting visitor status. Error: ${e.statusText || e.message || e}`);\n                return this.event;\n            });\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n    public readonly checkout = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkGuestOut(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public get remote(): boolean {\n        return !!this.event?.remote.find(e => e === this.visitor?.email);\n    }\n\n    constructor(private _state: VisitorsStateService, private _events: EventsService) {}\n}\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { BaseClass } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-event',\n    template: `\n        <div class=\"flex items-center px-2 bg-gray-100\">\n            <div class=\"w-12 text-lg flex justify-center\">\n                <i class=\"p-2 rounded-full material-icons bg-gray-400\" *ngIf=\"event?.status !== 'cancelled' && event?.state !== 'done'\">event</i>\n                <i class=\"p-2 rounded-full material-icons bg-gray-400\" *ngIf=\"event?.status === 'cancelled'\">close</i>\n                <i class=\"p-2 rounded-full material-icons bg-gray-400\" *ngIf=\"event?.state === 'done' && event?.status !== 'cancelled'\">done</i>\n            </div>\n            <div class=\"w-24 p-2\">{{ event?.date | date:(filters | async)?.show_week ? 'MMM d, h:mm a' : 'shortTime' }}</div>\n            <div class=\"w-48 p-2\">\n                {{ event?.organiser?.name || event?.organiser?.email }}\n            </div>\n            <div flex class=\"p-2 flex-1\">{{ event?.title }}</div>\n            <div class=\"w-64 p-2 truncate\">{{ event?.location }}</div>\n            <div class=\"w-32 p-2 flex items-center justify-end\">\n                <action-icon\n                    matTooltip=\"Checkin All Guests\"\n                    [loading]=\"loading === 'checkin'\"\n                    [disabled]=\"guestCount <= 0\"\n                    className=\"material-icons\"\n                    content=\"event_available\"\n                    (click)=\"checkinGuests()\"\n                >\n                </action-icon>\n                <action-icon\n                    matTooltip=\"Checkout All Guests\"\n                    [loading]=\"loading === 'checkout'\"\n                    [disabled]=\"guestCount <= 0\"\n                    className=\"material-icons\"\n                    content=\"event_busy\"\n                    (click)=\"checkoutGuests()\"\n                >\n                </action-icon>\n                <a\n                    mat-icon-button\n                    [href]=\"'mailto:' + event?.organiser?.email\"\n                    matTooltip=\"Email Host\"\n                >\n                    <app-icon className=\"material-icons\">email</app-icon>\n                </a>\n            </div>\n            <div class=\"w-16 p-2\">\n                <button\n                    mat-icon-button\n                    (click)=\"show_attendees = !show_attendees\"\n                    [disabled]=\"!event?.attendees?.length\"\n                    [matTooltip]=\"\n                        show_attendees || has_search\n                            ? 'Hide Attendees'\n                            : 'Show Attendees'\n                    \"\n                >\n                    <app-icon className=\"material-icons\">{{\n                        show_attendees\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            attendees\n            class=\"w-full overflow-hidden relative border-b border-gray-300\"\n            [style.height]=\"\n                !show_attendees && !has_search\n                    ? '0rem'\n                    : event.attendees.length * 3.5 + 'rem'\n            \"\n        >\n            <div\n                bar\n                class=\"absolute top-0 bg-gray-400 z-10\"\n                [style.height]=\"\n                    'calc(' +\n                    ((event.attendees.length - 1) * 3.5 + 1.75) +\n                    'rem + 1px)'\n                \"\n            ></div>\n            <div\n                visitor\n                class=\"relative w-full pl-12 bg-gray-200\"\n                *ngFor=\"let user of event.attendees\"\n            >\n                <div l-bar class=\"absolute bg-gray-400\"></div>\n                <visitor-details\n                    [attr.disabled]=\"!matches[user.email]\"\n                    [visitor]=\"user\"\n                    [(event)]=\"event\"\n                ></visitor-details>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            visitor-details {\n                transition: opacity 200ms;\n            }\n\n            [attendees] {\n                transition: height 200ms;\n            }\n\n            [visitor] {\n                height: 3.5rem;\n            }\n\n            [bar] {\n                width: 2px;\n                left: calc(2rem - 1px);\n            }\n\n            [l-bar] {\n                height: 2px;\n                left: 2rem;\n                top: calc(50% - 1px);\n                width: 1rem;\n            }\n\n            [disabled=\"true\"] {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class VisitorEventComponent extends BaseClass implements OnInit {\n    @Input() public event: CalendarEvent;\n\n    public show_attendees: boolean;\n    public loading: string;\n    public matches: HashMap<boolean> = {};\n    public readonly filters = this._state.filters;\n\n    public readonly checkinGuests = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkAllGuestsIn(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n    public readonly checkoutGuests = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkAllGuestsOut(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n\n    public get guestCount() {\n        return this.event?.attendees.reduce((c, u) => c + (u.is_external && !u.organizer ? 1 : 0), 0) || 0;\n    }\n\n    public get has_search() {\n        return this._state.search;\n    }\n\n    constructor(private _state: VisitorsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('events', this._state.filtered_events.subscribe(() => this.updateMatches()));\n    }\n\n    public updateMatches() {\n        this.matches = {};\n        const filter = (this._state.search || '').toLowerCase();\n        for (const user of this.event.attendees) {\n            this.matches[user.email] =\n                !filter ||\n                user.email.toLowerCase().includes(filter) ||\n                user.name.toLowerCase().includes(filter);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-listings',\n    template: `\n        <div class=\"w-full flex-1 text-sm\">\n            <div\n                class=\"w-full flex items-center bg-white border-b border-gray-500 p-2 font-medium\"\n            >\n                <div class=\"w-12 p-2\"></div>\n                <div class=\"w-24 p-2\">Time</div>\n                <div class=\"w-48 p-2\">Host</div>\n                <div flex class=\"p-2 flex-1\">Title</div>\n                <div class=\"w-64 p-2\">Location</div>\n                <div class=\"w-32 p-2\">Actions</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div class=\"w-full flex-1 overflow-auto\">\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <visitor-event\n                        *ngFor=\"let event of bookings | async; trackBy: trackByFn\"\n                        [event]=\"event\"\n                    ></visitor-event>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no visitors for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorListingsComponent {\n    public readonly bookings = this._state.filtered_events;\n\n    constructor(private _state: VisitorsStateService) { }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, event: CalendarEvent) {\n        return event ? event.id : undefined;\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'app-visitors',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <visitor-listings class=\"w-full flex-1 h-0\"></visitor-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { VisitorListingsComponent } from './visitor-listings.component';\nimport { VisitorEventComponent } from './visitor-event.component';\nimport { VisitorDetailsComponent } from './visitor-details.component';\n\nconst ROUTES: Route[] = [{ path: '', component: VisitorsComponent }];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        VisitorListingsComponent,\n        VisitorEventComponent,\n        VisitorDetailsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"sourceRoot":"webpack:///"}