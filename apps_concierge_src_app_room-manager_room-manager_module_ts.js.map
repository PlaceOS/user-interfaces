{"version":3,"file":"apps_concierge_src_app_room-manager_room-manager_module_ts.js","mappings":"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","names":["i0","level_r21","id","display_name","name","RoomModalComponent_main_4_form_1_div_1_mat_option_6_Template","ctx_r6","form","controls","zone","invalid","touched","levels","RoomModalComponent_main_4_form_1_div_3_mat_error_6_Template","ctx_r7","RoomModalComponent_main_4_form_1_div_4_mat_error_5_Template","ctx_r8","email","RoomModalComponent_main_4_form_1_div_22_mat_error_5_Template","ctx_r11","capacity","feature_r27","_r29","$implicit","ctx_r28","removeFeature","RoomModalComponent_main_4_form_1_div_25_mat_chip_row_6_Template","$event","_r31","ctx_r30","addFeature","ctx_r14","features","feature_list","_r25","separators","tz_r32","RoomModalComponent_main_4_form_1_div_1_Template","RoomModalComponent_main_4_form_1_div_3_Template","RoomModalComponent_main_4_form_1_div_4_Template","RoomModalComponent_main_4_form_1_div_6_Template","RoomModalComponent_main_4_form_1_div_7_Template","RoomModalComponent_main_4_form_1_div_22_Template","RoomModalComponent_main_4_form_1_div_23_Template","RoomModalComponent_main_4_form_1_div_24_Template","RoomModalComponent_main_4_form_1_div_25_Template","RoomModalComponent_main_4_form_1_div_26_Template","RoomModalComponent_main_4_form_1_mat_option_36_Template","RoomModalComponent_main_4_form_1_mat_option_37_Template","RoomModalComponent_main_4_form_1_div_38_Template","ctx_r5","settings_form","bookable","description","map_id","_r16","filtered_timezones","timezones","length","images","RoomModalComponent_main_4_form_1_Template","ctx_r1","_r34","ctx_r33","save","RoomModalComponent","AsyncHandler","this","value","constructor","_data","_dialog_ref","_org","super","loading","active_levels","generateSystemsFormFields","room","FormGroup","setup","FormControl","breakdown","encryption_levels","EncryptionLevel","None","Support","Admin","NeverDisplay","query_fn","_","queryZones","q","pipe","map","resp","data","ENTER","COMMA","SPACE","ngOnInit","_this","_asyncToGenerator","details","showMetadata","organisation","toPromise","overflow","getItemWithKeys","patchValue","ngOnChanges","changes","updateTimezoneList","subscription","valueChanges","subscribe","timezone","filter","toLowerCase","includes","event","input","trim","push","setValue","existing_feature","index","indexOf","splice","TIMEZONES_IANA","_this2","valid","notifyError","getInvalidFields","join","zones","unique","building","parent_id","disableClose","getRawValue","updateMetadata","events","updateSystem","addSystem","close","static","t","MAT_DIALOG_DATA","i1","i2","core","Xpm","selectors","decls","vars","consts","i18n_0","$localize","RoomModalComponent_button_3_Template","RoomModalComponent_main_4_Template","RoomModalComponent_footer_5_Template","RoomModalComponent_ng_template_6_Template","ctx","_r3","RoomManagementService","_dialog","_options","BehaviorSubject","_change","options","asObservable","room_list","combineLatest","active_building","switchMap","bld","querySystems","zone_id","catchError","of","list","levelWithID","sort","a","b","localeCompare","shareReplay","filtered_rooms","search","setFilters","next","getValue","setSearchString","editRoom","PlaceSystem","open","afterClosed","setTimeout","Date","now","Yz7","factory","ɵfac","providedIn","level_r1","RoomManagerTopbarComponent","_manager","_route","_router","filters","setSearch","str","updateZones","navigate","relativeTo","queryParams","newRoom","manageRestrictions","BookingRulesModalComponent","type","initialised","first","queryParamMap","_ref","params","has","new_zone","get","take","level","buildings","find","_x","apply","arguments","lvl","i3","i4","template","rf","RoomManagerTopbarComponent_mat_option_11_Template","tmp_0_0","data_r6","data_r7","row_r8","_r10","row","ctx_r9","RoomListComponent","rooms","RoomListComponent_ng_template_2_Template","RoomListComponent_ng_template_4_Template","RoomListComponent_ng_template_6_Template","_c0","_c1","_c2","_c3","_r2","_r0","_r4","RoomManagerComponent","attrs","ROUTES","path","component","NewRoomManagerComponent","RoomManagerModule","oAB","cJS","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/room-manager/room-modal.component.ts","./apps/concierge/src/app/room-manager/room-management.service.ts","./apps/concierge/src/app/room-manager/room-manager-topbar.component.ts","./apps/concierge/src/app/room-manager/room-list.component.ts","./apps/concierge/src/app/room-manager/room-manager.component.ts","./apps/concierge/src/app/room-manager/room-manager.module.ts","./apps/concierge/src/app/room-manager/new-room-manager.component.ts"],"sourcesContent":["import { Component, Inject, SimpleChanges } from '@angular/core';\nimport { SPACE, ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport {\n    EncryptionLevel,\n    addSystem,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n    updateSystem,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    TIMEZONES_IANA,\n    getInvalidFields,\n    getItemWithKeys,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { Space, generateSystemsFormFields } from '@placeos/spaces';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'room-form-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Room</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.zone\">\n                    <label\n                        for=\"zone\"\n                        [class.error]=\"\n                            form.controls.zone.invalid &&\n                            form.controls.zone.touched\n                        \"\n                        i18n=\"@@zoneLabel\"\n                    >\n                        Level<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"zone\"\n                            placeholder=\"Select Level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>Level is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.name\"\n                    >\n                        <label\n                            for=\"system-name\"\n                            [class.error]=\"\n                                form.controls.name.invalid &&\n                                form.controls.name.touched\n                            \"\n                            i18n=\"@@nameLabel\"\n                        >\n                            Name<span>*</span>:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"system-name\"\n                                placeholder=\"Room Name\"\n                                i18n-placeholder=\"@@systemNamePlaceholder\"\n                                formControlName=\"name\"\n                                required\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.name.invalid\"\n                                i18n=\"@@systemNameError\"\n                                >Room name is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.email\"\n                    >\n                        <label\n                            for=\"system-email\"\n                            [class.error]=\"\n                                form.controls.email.invalid &&\n                                form.controls.email.touched\n                            \"\n                            i18n=\"@@emailLabel\"\n                        >\n                            Email:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"system-email\"\n                                placeholder=\"Room Email\"\n                                i18n-placeholder=\"@@systemEmailPlaceholder\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.email.invalid\"\n                                i18n=\"@@emailError\"\n                                >A valid email is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.display_name\"\n                    >\n                        <label for=\"display-name\" i18n=\"@@displayNameLabel\"\n                            >Display Name:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"display-name\"\n                                placeholder=\"Display Name\"\n                                i18n-placeholder=\"@@displayNamePlaceholder\"\n                                formControlName=\"display_name\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.display_name\"\n                    >\n                        <label for=\"code-name\" i18n=\"@@codeNameLabel\"\n                            >Code:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"code-name\"\n                                placeholder=\"Code\"\n                                i18n-placeholder=\"@@codeNamePlaceholder\"\n                                formControlName=\"code\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\" [formGroup]=\"settings_form\">\n                    <div class=\"flex-1 flex flex-col space-y-2\">\n                        <label for=\"setup\" class=\"flex items-center\">\n                            Default Setup Duration\n                            <app-icon\n                                class=\"ml-2\"\n                                matTooltip=\"Time before a meeting needed for setup and preparation for the upcoming meeting\"\n                            >\n                                info_outline\n                            </app-icon>\n                        </label>\n                        <a-duration-field\n                            name=\"setup\"\n                            formControlName=\"setup\"\n                            [min]=\"0\"\n                        ></a-duration-field>\n                    </div>\n                    <div class=\"flex-1 flex flex-col space-y-2\">\n                        <label for=\"breakdown\" class=\"flex items-center\">\n                            Default Breakdown Duration\n                            <app-icon\n                                class=\"ml-2\"\n                                matTooltip=\"Time after a meeting needed for cleaning and preparation for next meeting\"\n                            >\n                                info_outline\n                            </app-icon>\n                        </label>\n                        <a-duration-field\n                            name=\"breakdown\"\n                            [min]=\"0\"\n                            formControlName=\"breakdown\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.capacity\"\n                    >\n                        <label\n                            for=\"capacity\"\n                            [class.error]=\"\n                                form.controls.capacity.invalid &&\n                                form.controls.capacity.touched\n                            \"\n                            i18n=\"@@capacityLabel\"\n                        >\n                            Capacity:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"capacity\"\n                                type=\"number\"\n                                placeholder=\"Capacity\"\n                                i18n-placeholder=\"@@capacityPlaceholder\"\n                                formControlName=\"capacity\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.capacity.invalid\"\n                                i18n=\"@@capacityError\"\n                            >\n                                A valid positive number is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.bookable\">\n                        <mat-checkbox\n                            name=\"bookable\"\n                            formControlName=\"bookable\"\n                            i18n=\"@@bookableLabel\"\n                        >\n                            Bookable\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                    <label for=\"description\" i18n=\"@@descriptionLabel\"\n                        >Description:</label\n                    >\n                    <mat-form-field appearance=\"outline\">\n                        <textarea\n                            matInput\n                            name=\"description\"\n                            placeholder=\"Description\"\n                            i18n=\"@@descriptionPlaceholder\"\n                            formControlName=\"description\"\n                        ></textarea>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.features\">\n                    <label\n                        [class.error]=\"\n                            form.controls.features.invalid &&\n                            form.controls.features.touched\n                        \"\n                        i18n=\"@@featuresLabel\"\n                    >\n                        Features:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-chip-grid #chipList aria-label=\"Room features\">\n                            <mat-chip-row\n                                *ngFor=\"let feature of feature_list\"\n                                [selectable]=\"true\"\n                                [removable]=\"true\"\n                                (removed)=\"removeFeature(feature)\"\n                            >\n                                {{ feature }}\n                                <app-icon matChipRemove>close</app-icon>\n                            </mat-chip-row>\n                            <input\n                                placeholder=\"New feature...\"\n                                [matChipInputFor]=\"chipList\"\n                                [matChipInputSeparatorKeyCodes]=\"separators\"\n                                [matChipInputAddOnBlur]=\"true\"\n                                (matChipInputTokenEnd)=\"addFeature($event)\"\n                            />\n                        </mat-chip-grid>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.map_id\">\n                    <label for=\"map_id\" i18n=\"@@mapIdLabel\">Map ID:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"map_id\"\n                            i18n-placeholder=\"@@mapIdPlaceholder\"\n                            placeholder=\"Map SVG ID selector e.g. area-01.10-status\"\n                            formControlName=\"map_id\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"timezone\">Timezone</label>\n                    <mat-form-field appearance=\"outline\">\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                        <input\n                            matInput\n                            formControlName=\"timezone\"\n                            placeholder=\"Room timezone\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let tz of filtered_timezones\"\n                            [value]=\"tz\"\n                            >{{ tz }}</mat-option\n                        >\n                        <mat-option *ngIf=\"!timezones.length\" [disabled]=\"true\">\n                            No matching timezones\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                    <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                    <image-list-field\n                        name=\"images\"\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving room...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-checkbox {\n                margin-top: 2.5em;\n                margin-bottom: 1.5em;\n            }\n\n            @media screen and (max-width: 640px) {\n                mat-checkbox {\n                    margin-top: 0;\n                }\n            }\n        `,\n    ],\n})\nexport class RoomModalComponent extends AsyncHandler {\n    public loading = false;\n    public timezones: string[] = [];\n    public filtered_timezones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** Group of form fields used for creating the system */\n    public form = generateSystemsFormFields(this._data.room as any);\n    public settings_form = new FormGroup({\n        setup: new FormControl(0),\n        breakdown: new FormControl(0),\n    });\n    /** Levels of encyption available for the system's settings */\n    public encryption_levels: any[] = [\n        { id: EncryptionLevel.None, name: 'None' },\n        { id: EncryptionLevel.Support, name: 'Support' },\n        { id: EncryptionLevel.Admin, name: 'Admin' },\n        { id: EncryptionLevel.NeverDisplay, name: 'Never Display' },\n    ];\n    /** Function for querying zones */\n    public readonly query_fn = (_: string) =>\n        queryZones({ q: _ }).pipe(map((resp) => resp.data));\n    /** List of separator characters for features */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    public get feature_list(): string[] {\n        return this.form.controls.features.value;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { room: Space },\n        private _dialog_ref: MatDialogRef<RoomModalComponent>,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        const { details } = await showMetadata(\n            this._org.organisation.id,\n            'settings'\n        ).toPromise();\n        const overflow = getItemWithKeys(['events', 'overflow'], details) || {};\n        if (this._data.room.id && overflow[this._data.room.id]) {\n            this.settings_form.patchValue(overflow[this._data.room.id]);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form) {\n            this.updateTimezoneList();\n            this.subscription(\n                'tz-change',\n                this.form.valueChanges.subscribe(\n                    ({ timezone }) =>\n                        (this.filtered_timezones = this.timezones.filter((_) =>\n                            _.toLowerCase().includes(timezone.toLowerCase())\n                        ))\n                )\n            );\n        }\n    }\n\n    /**\n     * Add a feature to the list of features for the item\n     * @param event Input event\n     */\n    public addFeature(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.features) return;\n        const input = event.input;\n        const value = event.value;\n        const feature_list = this.feature_list;\n        if ((value || '').trim()) {\n            feature_list.push(value);\n            this.form.controls.features.setValue(feature_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove feature from the list\n     * @param existing_feature Feature to remove\n     */\n    public removeFeature(existing_feature: string): void {\n        if (!this.form || !this.form.controls.features) return;\n        const feature_list = this.feature_list;\n        const index = feature_list.indexOf(existing_feature);\n\n        if (index >= 0) {\n            feature_list.splice(index, 1);\n            this.form.controls.features.setValue(feature_list);\n        }\n    }\n\n    public updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase())\n        );\n    }\n\n    public async save() {\n        if (!this.form.valid)\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        if (!this.form.value.id) {\n            this.form.patchValue({\n                display_name:\n                    this.form.value.display_name || this.form.value.name,\n                zones: unique([\n                    this._org.organisation.id,\n                    this._org.building.parent_id,\n                    this._org.building.id,\n                    `${this.form.value.zone?.id || this.form.value.zone || ''}`,\n                ]).filter((_) => _),\n            });\n        }\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.getRawValue();\n        const { details } = (await showMetadata(\n            this._org.organisation.id,\n            'settings'\n        ).toPromise()) as any;\n        const overflow = getItemWithKeys(['events', 'overflow'], details) || {};\n        overflow[data.id] = this.settings_form.value;\n        await updateMetadata(this._org.organisation.id, {\n            name: 'settings',\n            details: {\n                ...details,\n                events: { ...(details.events || {}), overflow },\n            },\n            description: '',\n        }).toPromise();\n        await (data.id\n            ? updateSystem(data.id, data)\n            : addSystem(data)\n        ).toPromise();\n        this._dialog_ref.disableClose = false;\n        this._dialog_ref.close(true);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceSystem, querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { RoomModalComponent } from './room-modal.component';\n\nexport interface RoomListOptions {\n    zone?: string;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomManagementService {\n    private _options = new BehaviorSubject<RoomListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly room_list = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            querySystems({ zone_id: bld.id }).pipe(\n                map(({ data }) => data),\n                catchError(() => of([]))\n            )\n        ),\n        map((list) =>\n            list\n                .filter((_) => this._org.levelWithID(_.zones as any))\n                .sort((a, b) => a.name.localeCompare(b.name))\n        ),\n        shareReplay(1)\n    );\n\n    public readonly filtered_rooms = combineLatest([\n        this.room_list,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            if (options.zone) {\n                list = list.filter((_) => _.zones.includes(options.zone));\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<RoomListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editRoom(room: PlaceSystem = new PlaceSystem()) {\n        const ref = this._dialog.open(RoomModalComponent, { data: { room } });\n        ref.afterClosed().subscribe((data) => {\n            if (data) setTimeout(() => this._change.next(Date.now()), 300);\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { RoomManagementService } from './room-management.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, take } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'room-manager-topbar',\n    template: `\n        <div class=\"flex items-center justify-between p-4\">\n            <h2 class=\"text-2xl font-medium\">Room Management</h2>\n            <button btn (click)=\"newRoom()\" class=\"w-32\">New Room</button>\n        </div>\n        <div class=\"flex items-center bg-base-100 h-20 px-4 space-x-2\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(this.filters | async)?.zone\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option [value]=\"building?.id\">All Levels</mat-option>\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <button\n                btn\n                icon\n                matRipple\n                class=\"bg-secondary text-secondary-content rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Room Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n})\nexport class RoomManagerTopbarComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._manager.options;\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._manager.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._manager.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zone) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_id: zone },\n        });\n        this._manager.setFilters({ zone });\n    };\n\n    public readonly newRoom = () => this._manager.editRoom();\n\n    public get building() {\n        return this._org.building;\n    }\n\n    constructor(\n        private _manager: RoomManagementService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'room' },\n        });\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('zone_id')) {\n                    const new_zone = params.get('zone_id');\n                    const { zone } = await this._manager.options\n                        .pipe(take(1))\n                        .toPromise();\n                    if (new_zone && new_zone !== zone) {\n                        const level = this._org.levelWithID([new_zone]);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.setFilters({ zone: new_zone });\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                var zone = levels.find((lvl) => lvl.id === zone);\n                if (!zone && levels.length) zone = levels[0].id;\n                this.updateZones(zone);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\nimport { RoomManagementService } from './room-management.service';\n\n@Component({\n    selector: 'room-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[48rem] w-full h-full\"\n                [dataSource]=\"rooms\"\n                [columns]=\"[\n                    'display_name',\n                    'zones',\n                    'capacity',\n                    'type',\n                    'bookable',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Room Name',\n                    'Level',\n                    'Capacity',\n                    'Room Type',\n                    'Bookable',\n                    ' '\n                ]\"\n                [column_size]=\"['flex', '8r', '6r', '8r', '6r', '3.75r']\"\n                [template]=\"{\n                    bookable: bool_template,\n                    zones: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No rooms for selected level or building\"\n            ></custom-table>\n        </div>\n        <ng-template #level_template let-data=\"data\">\n            {{ (data | level)?.display_name || (data | level)?.name }}\n        </ng-template>\n        <ng-template #bool_template let-data=\"data\">\n            <div\n                [class.bg-error]=\"!data\"\n                [class.bg-success]=\"data\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl text-white mx-auto\"\n            >\n                <app-icon>{{ data ? 'done' : 'close' }}</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button\n                    btn\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Room\"\n                    (click)=\"editRoom(row)\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class RoomListComponent {\n    public readonly rooms = this._manager.filtered_rooms;\n\n    public readonly editRoom = (room) => this._manager.editRoom(room);\n\n    constructor(private _manager: RoomManagementService) {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-room-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex flex-col\">\n            <room-manager-topbar class=\"block w-full\"></room-manager-topbar>\n            <room-list class=\"block w-full relative flex-1 h-1/2\"></room-list>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class RoomManagerComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { RoomManagerComponent } from './room-manager.component';\nimport { RoomManagerTopbarComponent } from './room-manager-topbar.component';\nimport { RoomListComponent } from './room-list.component';\nimport { RoomModalComponent } from './room-modal.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { NewRoomManagerComponent } from './new-room-manager.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: RoomManagerComponent },\n    { path: 'new', component: NewRoomManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewRoomManagerComponent,\n        RoomManagerComponent,\n        RoomManagerTopbarComponent,\n        RoomListComponent,\n        RoomModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class RoomManagerModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-new-room-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <room-manager-topbar class=\"block w-full\"></room-manager-topbar>\n                <room-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></room-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewRoomManagerComponent {}\n"],"x_google_ignoreList":[]}